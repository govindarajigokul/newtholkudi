{"version":3,"file":"default-src_app_shared_resource-policies_create_resource-policy-create_component_ts-src_app_s-cad6cd.js","mappings":"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","sources":["./src/app/shared/resource-policies/create/resource-policy-create.component.ts","./src/app/shared/resource-policies/create/resource-policy-create.component.html","./src/app/shared/resource-policies/edit/resource-policy-edit.component.ts","./src/app/shared/resource-policies/edit/resource-policy-edit.component.html","./src/app/shared/resource-policies/entry/resource-policy-entry.component.ts","./src/app/shared/resource-policies/entry/resource-policy-entry.component.html","./src/app/shared/resource-policies/form/resource-policy-form.component.ts","./src/app/shared/resource-policies/form/resource-policy-form.component.html","./src/app/shared/resource-policies/form/resource-policy-form.model.ts","./src/app/shared/resource-policies/resolvers/resource-policy-target.resolver.ts","./src/app/shared/resource-policies/resolvers/resource-policy.resolver.ts","./src/app/shared/resource-policies/resource-policies.component.ts","./src/app/shared/resource-policies/resource-policies.component.html","./src/app/shared/utils/has-value.pipe.ts"],"sourcesContent":["import {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router,\n} from '@angular/router';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  Observable,\n} from 'rxjs';\nimport {\n  map,\n  take,\n} from 'rxjs/operators';\n\nimport { DSONameService } from '../../../core/breadcrumbs/dso-name.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { ResourcePolicy } from '../../../core/resource-policy/models/resource-policy.model';\nimport { ResourcePolicyDataService } from '../../../core/resource-policy/resource-policy-data.service';\nimport { DSpaceObject } from '../../../core/shared/dspace-object.model';\nimport { getFirstCompletedRemoteData } from '../../../core/shared/operators';\nimport { ITEM_EDIT_AUTHORIZATIONS_PATH } from '../../../item-page/edit-item-page/edit-item-page.routing-paths';\nimport { NotificationsService } from '../../notifications/notifications.service';\nimport {\n  ResourcePolicyEvent,\n  ResourcePolicyFormComponent,\n} from '../form/resource-policy-form.component';\n\n@Component({\n  selector: 'ds-resource-policy-create',\n  templateUrl: './resource-policy-create.component.html',\n  imports: [\n    ResourcePolicyFormComponent,\n    TranslateModule,\n  ],\n  standalone: true,\n})\nexport class ResourcePolicyCreateComponent implements OnInit {\n\n  /**\n   * The name of the resource target of the policy\n   */\n  public targetResourceName: string;\n\n  /**\n   * A boolean representing if a submission creation operation is pending\n   * @type {BehaviorSubject<boolean>}\n   */\n  private processing$ = new BehaviorSubject<boolean>(false);\n\n  /**\n   * The uuid of the resource target of the policy\n   */\n  private targetResourceUUID: string;\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {DSONameService} dsoNameService\n   * @param {NotificationsService} notificationsService\n   * @param {ResourcePolicyDataService} resourcePolicyService\n   * @param {ActivatedRoute} route\n   * @param {Router} router\n   * @param {TranslateService} translate\n   */\n  constructor(\n    private dsoNameService: DSONameService,\n    private notificationsService: NotificationsService,\n    private resourcePolicyService: ResourcePolicyDataService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private translate: TranslateService) {\n  }\n\n  /**\n   * Initialize the component\n   */\n  ngOnInit(): void {\n    this.route.data.pipe(\n      map((data) => data),\n      take(1),\n    ).subscribe((data: any) => {\n      this.targetResourceUUID = (data.resourcePolicyTarget as RemoteData<DSpaceObject>).payload.id;\n      this.targetResourceName = this.dsoNameService.getName((data.resourcePolicyTarget as RemoteData<DSpaceObject>).payload);\n    });\n  }\n\n  /**\n   * Return a boolean representing if an operation is pending\n   *\n   * @return {Observable<boolean>}\n   */\n  isProcessing(): Observable<boolean> {\n    return this.processing$.asObservable();\n  }\n\n  /**\n   * Redirect to the authorizations page\n   */\n  redirectToAuthorizationsPage(): void {\n    this.router.navigate([`../../${ITEM_EDIT_AUTHORIZATIONS_PATH}`], { relativeTo: this.route });\n  }\n\n  /**\n   * Create a new resource policy\n   *\n   * @param event The {{ResourcePolicyEvent}} emitted\n   */\n  createResourcePolicy(event: ResourcePolicyEvent): void {\n    this.processing$.next(true);\n    let response$;\n    if (event.target.type === 'eperson') {\n      response$ = this.resourcePolicyService.create(event.object, this.targetResourceUUID, event.target.uuid);\n    } else {\n      response$ = this.resourcePolicyService.create(event.object, this.targetResourceUUID, null, event.target.uuid);\n    }\n    response$.pipe(\n      getFirstCompletedRemoteData(),\n    ).subscribe((responseRD: RemoteData<ResourcePolicy>) => {\n      this.processing$.next(false);\n      if (responseRD.hasSucceeded) {\n        this.notificationsService.success(null, this.translate.get('resource-policies.create.page.success.content'));\n        this.redirectToAuthorizationsPage();\n      } else {\n        this.notificationsService.error(null, this.translate.get('resource-policies.create.page.failure.content'));\n      }\n    });\n  }\n}\n","<div class=\"container\">\n  <h4 class=\"mb-3\">{{'resource-policies.create.page.heading' | translate}} {{targetResourceName}}</h4>\n\n  <ds-resource-policy-form [isProcessing]=\"isProcessing()\"\n                           (reset)=\"redirectToAuthorizationsPage()\"\n                           (submit)=\"createResourcePolicy($event)\"></ds-resource-policy-form>\n</div>\n","import {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router,\n} from '@angular/router';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  combineLatest as observableCombineLatest,\n  Observable,\n  of,\n} from 'rxjs';\nimport {\n  map,\n  take,\n} from 'rxjs/operators';\n\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { ResourcePolicy } from '../../../core/resource-policy/models/resource-policy.model';\nimport { RESOURCE_POLICY } from '../../../core/resource-policy/models/resource-policy.resource-type';\nimport { ResourcePolicyDataService } from '../../../core/resource-policy/resource-policy-data.service';\nimport { getFirstCompletedRemoteData } from '../../../core/shared/operators';\nimport { ITEM_EDIT_AUTHORIZATIONS_PATH } from '../../../item-page/edit-item-page/edit-item-page.routing-paths';\nimport { NotificationsService } from '../../notifications/notifications.service';\nimport {\n  ResourcePolicyEvent,\n  ResourcePolicyFormComponent,\n} from '../form/resource-policy-form.component';\n\n@Component({\n  selector: 'ds-resource-policy-edit',\n  templateUrl: './resource-policy-edit.component.html',\n  imports: [\n    ResourcePolicyFormComponent,\n    TranslateModule,\n  ],\n  standalone: true,\n})\nexport class ResourcePolicyEditComponent implements OnInit {\n\n  /**\n   * The resource policy object to edit\n   */\n  public resourcePolicy: ResourcePolicy;\n\n  /**\n   * A boolean representing if a submission editing operation is pending\n   * @type {BehaviorSubject<boolean>}\n   */\n  private processing$ = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {NotificationsService} notificationsService\n   * @param {ResourcePolicyDataService} resourcePolicyService\n   * @param {ActivatedRoute} route\n   * @param {Router} router\n   * @param {TranslateService} translate\n   */\n  constructor(\n    private notificationsService: NotificationsService,\n    private resourcePolicyService: ResourcePolicyDataService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private translate: TranslateService) {\n  }\n\n  /**\n   * Initialize the component\n   */\n  ngOnInit(): void {\n    this.route.data.pipe(\n      map((data) => data),\n      take(1),\n    ).subscribe((data: any) => {\n      this.resourcePolicy = (data.resourcePolicy as RemoteData<ResourcePolicy>).payload;\n    });\n  }\n\n  /**\n   * Return a boolean representing if an operation is pending\n   *\n   * @return {Observable<boolean>}\n   */\n  isProcessing(): Observable<boolean> {\n    return this.processing$.asObservable();\n  }\n\n  /**\n   * Redirect to the authorizations page\n   */\n  redirectToAuthorizationsPage() {\n    this.router.navigate([`../../${ITEM_EDIT_AUTHORIZATIONS_PATH}`], { relativeTo: this.route });\n  }\n\n  /**\n   * Update a resource policy\n   *\n   * @param event The {{ResourcePolicyEvent}} emitted\n   */\n  updateResourcePolicy(event: ResourcePolicyEvent) {\n    this.processing$.next(true);\n    const updatedObject = Object.assign({}, event.object, {\n      id: this.resourcePolicy.id,\n      type: RESOURCE_POLICY.value,\n      _links: this.resourcePolicy._links,\n    });\n\n    const updateTargetSucceeded$ = event.updateTarget ? this.resourcePolicyService.updateTarget(\n      this.resourcePolicy.id, this.resourcePolicy._links.self.href, event.target.uuid, event.target.type,\n    ).pipe(\n      getFirstCompletedRemoteData(),\n      map((responseRD) => responseRD && responseRD.hasSucceeded),\n    ) : of(true);\n\n    const updateResourcePolicySucceeded$ = this.resourcePolicyService.update(updatedObject).pipe(\n      getFirstCompletedRemoteData(),\n      map((responseRD) => responseRD && responseRD.hasSucceeded),\n    );\n\n    observableCombineLatest([updateTargetSucceeded$, updateResourcePolicySucceeded$]).subscribe(\n      ([updateTargetSucceeded, updateResourcePolicySucceeded]) => {\n        this.processing$.next(false);\n        if (updateTargetSucceeded && updateResourcePolicySucceeded) {\n          this.notificationsService.success(null, this.translate.get('resource-policies.edit.page.success.content'));\n          this.redirectToAuthorizationsPage();\n        } else if (updateResourcePolicySucceeded) { // everything except target has been updated\n          this.notificationsService.error(null, this.translate.get('resource-policies.edit.page.target-failure.content'));\n        } else if (updateTargetSucceeded) { // only target has been updated\n          this.notificationsService.error(null, this.translate.get('resource-policies.edit.page.other-failure.content'));\n        } else { // nothing has been updated\n          this.notificationsService.error(null, this.translate.get('resource-policies.edit.page.failure.content'));\n        }\n      },\n    );\n  }\n}\n","<div class=\"container\">\n  <h1 class=\"mb-3\">{{'resource-policies.edit.page.heading' | translate}} {{resourcePolicy.id}}</h1>\n\n  <ds-resource-policy-form [resourcePolicy]=\"resourcePolicy\"\n                           [isProcessing]=\"isProcessing()\"\n                           (reset)=\"redirectToAuthorizationsPage()\"\n                           (submit)=\"updateResourcePolicy($event)\"></ds-resource-policy-form>\n</div>\n","/**\n * The contents of this file are subject to the license and copyright\n * detailed in the LICENSE and NOTICE files at the root of the source\n * tree and available online at\n *\n * http://www.dspace.org/license/\n */\nimport {\n  AsyncPipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n  ActivatedRoute,\n  Router,\n} from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { getGroupEditRoute } from '../../../access-control/access-control-routing-paths';\nimport { DSONameService } from '../../../core/breadcrumbs/dso-name.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { GroupDataService } from '../../../core/eperson/group-data.service';\nimport { Group } from '../../../core/eperson/models/group.model';\nimport { ResourcePolicy } from '../../../core/resource-policy/models/resource-policy.model';\nimport { DSpaceObject } from '../../../core/shared/dspace-object.model';\nimport {\n  getAllSucceededRemoteData,\n  getFirstSucceededRemoteDataPayload,\n} from '../../../core/shared/operators';\nimport {\n  dateToString,\n  stringToNgbDateStruct,\n} from '../../date.util';\nimport {\n  hasValue,\n  isNotEmpty,\n} from '../../empty.util';\nimport { HasValuePipe } from '../../utils/has-value.pipe';\n\nexport interface ResourcePolicyCheckboxEntry {\n  id: string;\n  policy: ResourcePolicy;\n  checked: boolean;\n}\n\n@Component({\n  /* eslint-disable @angular-eslint/component-selector */\n  selector: 'tr[ds-resource-policy-entry]',\n  templateUrl: './resource-policy-entry.component.html',\n  imports: [\n    AsyncPipe,\n    TranslateModule,\n    FormsModule,\n    NgIf,\n    HasValuePipe,\n  ],\n  standalone: true,\n})\nexport class ResourcePolicyEntryComponent implements OnInit {\n  @Input()\n  entry: ResourcePolicyCheckboxEntry;\n\n  @Output()\n  public toggleCheckbox: EventEmitter<boolean> = new EventEmitter();\n\n  epersonName$: Observable<string>;\n  groupName$: Observable<string>;\n\n  constructor(\n    protected dsoNameService: DSONameService,\n    protected groupService: GroupDataService,\n    protected route: ActivatedRoute,\n    protected router: Router,\n  ) {\n  }\n\n  public ngOnInit(): void {\n    this.epersonName$ = this.getName$(this.entry.policy.eperson);\n    this.groupName$ = this.getName$(this.entry.policy.group);\n  }\n\n  private getName$(dso$: Observable<RemoteData<DSpaceObject>>): Observable<string> {\n    return dso$.pipe(\n      getAllSucceededRemoteData(),\n      map((rd: RemoteData<DSpaceObject>) => {\n        if (hasValue(rd?.payload)) {\n          return this.dsoNameService.getName(rd.payload);\n        }\n        return undefined;\n      }),\n    );\n  }\n\n  /**\n   * Returns a date in simplified format (YYYY-MM-DD).\n   *\n   * @param date\n   * @return a string with formatted date\n   */\n  formatDate(date: string): string {\n    return isNotEmpty(date) ? dateToString(stringToNgbDateStruct(date)) : '';\n  }\n\n  /**\n   * Redirect to resource policy editing page\n   */\n  redirectToResourcePolicyEditPage(): void {\n    this.router.navigate([`./edit`], {\n      relativeTo: this.route,\n      queryParams: {\n        policyId: this.entry.policy.id,\n      },\n    });\n  }\n\n  /**\n   * Redirect to group edit page\n   */\n  redirectToGroupEditPage(): void {\n    this.groupService.findByHref(this.entry.policy._links.group.href, false).pipe(\n      getFirstSucceededRemoteDataPayload(),\n      map((group: Group) => group.id),\n    ).subscribe((groupUUID) => {\n      void this.router.navigate([getGroupEditRoute(groupUUID)]);\n    });\n  }\n}\n","<td class=\"text-center\">\n  <div class=\"custom-control custom-checkbox\">\n    <input type=\"checkbox\"\n           class=\"custom-control-input\"\n           [id]=\"entry.id\"\n           [ngModel]=\"entry.checked\"\n           (ngModelChange)=\"this.toggleCheckbox.emit($event);\">\n    <label class=\"custom-control-label\" [for]=\"entry.id\">\n      <span class=\"sr-only\">{{(entry.checked ? 'resource-policies.table.headers.deselect' : 'resource-policies.table.headers.select') | translate}}</span>\n    </label>\n  </div>\n</td>\n<th scope=\"row\">\n  {{entry.id}}\n</th>\n<td>{{entry.policy.name}}</td>\n<td>{{entry.policy.policyType}}</td>\n<td>{{entry.policy.action}}</td>\n<td>\n  {{ epersonName$ | async }}\n</td>\n<td>\n  {{ groupName$ | async }}\n</td>\n<td>{{formatDate(entry.policy.startDate)}}</td>\n<td>{{formatDate(entry.policy.endDate)}}</td>\n<td class=\"text-center\">\n\n  <div class=\"btn-group edit-field\">\n    <button class=\"btn btn-outline-primary btn-sm\"\n            [title]=\"'resource-policies.table.headers.edit.policy' | translate\"\n            (click)=\"redirectToResourcePolicyEditPage()\">\n      <i class=\"fas fa-edit fa-fw\" aria-hidden=\"true\"></i>\n    </button>\n    <button *ngIf=\"groupName$ | async | dsHasValue\" class=\"btn btn-outline-primary btn-sm\"\n            [title]=\"'resource-policies.table.headers.edit.group' | translate\"\n            (click)=\"redirectToGroupEditPage()\">\n      <i class=\"fas fa-users fa-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</td>\n","import {\n  AsyncPipe,\n  NgFor,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport {\n  NgbModal,\n  NgbNavChangeEvent,\n  NgbNavModule,\n} from '@ng-bootstrap/ng-bootstrap';\nimport {\n  DynamicDatePickerModel,\n  DynamicFormControlModel,\n  DynamicFormGroupModel,\n  DynamicSelectModel,\n} from '@ng-dynamic-forms/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  combineLatest as observableCombineLatest,\n  Observable,\n  of as observableOf,\n  Subscription,\n} from 'rxjs';\nimport {\n  filter,\n  map,\n  take,\n} from 'rxjs/operators';\n\nimport { DSONameService } from '../../../core/breadcrumbs/dso-name.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { RequestService } from '../../../core/data/request.service';\nimport { EPersonDataService } from '../../../core/eperson/eperson-data.service';\nimport { GroupDataService } from '../../../core/eperson/group-data.service';\nimport { ResourcePolicy } from '../../../core/resource-policy/models/resource-policy.model';\nimport { RESOURCE_POLICY } from '../../../core/resource-policy/models/resource-policy.resource-type';\nimport { DSpaceObject } from '../../../core/shared/dspace-object.model';\nimport { getFirstSucceededRemoteData } from '../../../core/shared/operators';\nimport { BtnDisabledDirective } from '../../btn-disabled.directive';\nimport {\n  dateToISOFormat,\n  stringToNgbDateStruct,\n} from '../../date.util';\nimport {\n  hasValue,\n  hasValueOperator,\n  isEmpty,\n  isNotEmpty,\n} from '../../empty.util';\nimport { EpersonGroupListComponent } from '../../eperson-group-list/eperson-group-list.component';\nimport { DsDynamicInputModel } from '../../form/builder/ds-dynamic-form-ui/models/ds-dynamic-input.model';\nimport { DsDynamicTextAreaModel } from '../../form/builder/ds-dynamic-form-ui/models/ds-dynamic-textarea.model';\nimport { FormComponent } from '../../form/form.component';\nimport { FormService } from '../../form/form.service';\nimport {\n  RESOURCE_POLICY_FORM_ACTION_TYPE_CONFIG,\n  RESOURCE_POLICY_FORM_DATE_GROUP_CONFIG,\n  RESOURCE_POLICY_FORM_DATE_GROUP_LAYOUT,\n  RESOURCE_POLICY_FORM_DESCRIPTION_CONFIG,\n  RESOURCE_POLICY_FORM_END_DATE_CONFIG,\n  RESOURCE_POLICY_FORM_END_DATE_LAYOUT,\n  RESOURCE_POLICY_FORM_NAME_CONFIG,\n  RESOURCE_POLICY_FORM_POLICY_TYPE_CONFIG,\n  RESOURCE_POLICY_FORM_START_DATE_CONFIG,\n  RESOURCE_POLICY_FORM_START_DATE_LAYOUT,\n} from './resource-policy-form.model';\n\nexport interface ResourcePolicyEvent {\n  object: ResourcePolicy;\n  target: {\n    type: string,\n    uuid: string\n  };\n  updateTarget: boolean;\n}\n\n@Component({\n  selector: 'ds-resource-policy-form',\n  templateUrl: './resource-policy-form.component.html',\n  imports: [\n    FormComponent,\n    NgbNavModule,\n    EpersonGroupListComponent,\n    TranslateModule,\n    AsyncPipe,\n    NgIf,\n    NgFor,\n    BtnDisabledDirective,\n  ],\n  standalone: true,\n})\n/**\n * Component that show form for adding/editing a resource policy\n */\nexport class ResourcePolicyFormComponent implements OnInit, OnDestroy {\n\n  /**\n   * If given contains the resource policy to edit\n   * @type {ResourcePolicy}\n   */\n  @Input() resourcePolicy: ResourcePolicy;\n\n  /**\n   * A boolean representing if form submit operation is processing\n   * @type {boolean}\n   */\n  @Input() isProcessing: Observable<boolean> = observableOf(false);\n\n  /**\n   * An event fired when form is canceled.\n   * Event's payload is empty.\n   */\n  @Output() reset: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * An event fired when form is submitted.\n   * Event's payload equals to a new ResourcePolicy.\n   */\n  @Output() submit: EventEmitter<ResourcePolicyEvent> = new EventEmitter<ResourcePolicyEvent>();\n\n  @ViewChild('content') content: ElementRef;\n\n  /**\n   * The form id\n   * @type {string}\n   */\n  public formId: string;\n\n  /**\n   * The form model\n   * @type {DynamicFormControlModel[]}\n   */\n  public formModel: DynamicFormControlModel[];\n\n  /**\n   * The eperson or group that will be granted the permission\n   * @type {DSpaceObject}\n   */\n  public resourcePolicyGrant: DSpaceObject;\n\n  /**\n   * The type of the object that will be grant of the permission. It could be 'eperson' or 'group'\n   * @type {string}\n   */\n  public resourcePolicyGrantType: string;\n\n  /**\n   * The name of the eperson or group that will be granted the permission\n   * @type {BehaviorSubject<string>}\n   */\n  public resourcePolicyTargetName$: BehaviorSubject<string> = new BehaviorSubject('');\n\n  /**\n   * A boolean representing if component is active\n   * @type {boolean}\n   */\n  private isActive: boolean;\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  private subs: Subscription[] = [];\n\n  navActiveId: string;\n\n  resourcePolicyTargetUpdated = false;\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {DSONameService} dsoNameService\n   * @param {EPersonDataService} ePersonService\n   * @param {FormService} formService\n   * @param {GroupDataService} groupService\n   * @param {RequestService} requestService\n   * @param modalService\n   */\n  constructor(\n    private dsoNameService: DSONameService,\n    private ePersonService: EPersonDataService,\n    private formService: FormService,\n    private groupService: GroupDataService,\n    private requestService: RequestService,\n    private modalService: NgbModal,\n  ) {\n  }\n\n  /**\n   * Initialize the component, setting up the form model\n   */\n  ngOnInit(): void {\n    this.isActive = true;\n    this.formId = this.formService.getUniqueId('resource-policy-form');\n    this.formModel = this.buildResourcePolicyForm();\n\n    if (this.isBeingEdited()) {\n      const epersonRD$ = this.ePersonService.findByHref(this.resourcePolicy._links.eperson.href, false).pipe(\n        getFirstSucceededRemoteData(),\n      );\n      const groupRD$ = this.groupService.findByHref(this.resourcePolicy._links.group.href, false).pipe(\n        getFirstSucceededRemoteData(),\n      );\n      const dsoRD$: Observable<RemoteData<DSpaceObject>> = observableCombineLatest([epersonRD$, groupRD$]).pipe(\n        map((rdArr: RemoteData<DSpaceObject>[]) => {\n          return rdArr.find((rd: RemoteData<DSpaceObject>) => isNotEmpty(rd.payload));\n        }),\n        hasValueOperator(),\n      );\n      this.subs.push(\n        dsoRD$.pipe(\n          filter(() => this.isActive),\n        ).subscribe((dsoRD: RemoteData<DSpaceObject>) => {\n          this.resourcePolicyGrant = dsoRD.payload;\n          this.navActiveId = String(dsoRD.payload.type);\n          this.resourcePolicyTargetName$.next(this.getResourcePolicyTargetName());\n        }),\n      );\n    }\n  }\n\n  /**\n   * Method to check if the form status is valid or not\n   *\n   * @return Observable that emits the form status\n   */\n  isFormValid(): Observable<boolean> {\n    return this.formService.isValid(this.formId).pipe(\n      map((isValid: boolean) => isValid && isNotEmpty(this.resourcePolicyGrant)),\n    );\n  }\n\n  /**\n   * Initialize the form model\n   *\n   * @return the form models\n   */\n  private buildResourcePolicyForm(): DynamicFormControlModel[] {\n    const formModel: DynamicFormControlModel[] = [];\n\n    formModel.push(\n      new DsDynamicInputModel(RESOURCE_POLICY_FORM_NAME_CONFIG),\n      new DsDynamicTextAreaModel(RESOURCE_POLICY_FORM_DESCRIPTION_CONFIG),\n      new DynamicSelectModel(RESOURCE_POLICY_FORM_POLICY_TYPE_CONFIG),\n      new DynamicSelectModel(RESOURCE_POLICY_FORM_ACTION_TYPE_CONFIG),\n    );\n\n    const startDateModel = new DynamicDatePickerModel(\n      RESOURCE_POLICY_FORM_START_DATE_CONFIG,\n      RESOURCE_POLICY_FORM_START_DATE_LAYOUT,\n    );\n    const endDateModel = new DynamicDatePickerModel(\n      RESOURCE_POLICY_FORM_END_DATE_CONFIG,\n      RESOURCE_POLICY_FORM_END_DATE_LAYOUT,\n    );\n    const dateGroupConfig = Object.assign({}, RESOURCE_POLICY_FORM_DATE_GROUP_CONFIG, { group: [] });\n    dateGroupConfig.group.push(startDateModel, endDateModel);\n    formModel.push(new DynamicFormGroupModel(dateGroupConfig, RESOURCE_POLICY_FORM_DATE_GROUP_LAYOUT));\n\n    this.initModelsValue(formModel);\n    return formModel;\n  }\n\n  /**\n   * Setting up the form models value\n   *\n   * @return the form models\n   */\n  initModelsValue(formModel: DynamicFormControlModel[]): DynamicFormControlModel[] {\n    if (this.resourcePolicy) {\n      formModel.forEach((model: any) => {\n        if (model.id === 'date') {\n          if (hasValue(this.resourcePolicy.startDate)) {\n            model.get(0).value = stringToNgbDateStruct(this.resourcePolicy.startDate);\n          }\n          if (hasValue(this.resourcePolicy.endDate)) {\n            model.get(1).value = stringToNgbDateStruct(this.resourcePolicy.endDate);\n          }\n        } else {\n          if (this.resourcePolicy.hasOwnProperty(model.id) && this.resourcePolicy[model.id]) {\n            model.value = this.resourcePolicy[model.id];\n          }\n        }\n      });\n    }\n\n    return formModel;\n  }\n\n  /**\n   * Return a boolean representing If is possible to set policy grant\n   *\n   * @return true if is possible, false otherwise\n   */\n  isBeingEdited(): boolean {\n    return !isEmpty(this.resourcePolicy);\n  }\n\n  /**\n   * Return the name of the eperson or group that will be granted the permission\n   *\n   * @return the object name\n   */\n  getResourcePolicyTargetName(): string {\n    return isNotEmpty(this.resourcePolicyGrant) ? this.dsoNameService.getName(this.resourcePolicyGrant) : '';\n  }\n\n  /**\n   * Update reference to the eperson or group that will be granted the permission\n   */\n  updateObjectSelected(object: DSpaceObject, isEPerson: boolean): void {\n    this.resourcePolicyTargetUpdated = true;\n    this.resourcePolicyGrant = object;\n    this.resourcePolicyGrantType = isEPerson ? 'eperson' : 'group';\n    this.resourcePolicyTargetName$.next(this.getResourcePolicyTargetName());\n  }\n\n  /**\n   * Method called on reset\n   * Emit a new reset Event\n   */\n  onReset(): void {\n    this.reset.emit();\n  }\n\n  /**\n   * Method called on submit.\n   * Emit a new submit Event whether the form is valid\n   */\n  onSubmit(): void {\n    this.formService.getFormData(this.formId).pipe(take(1))\n      .subscribe((data) => {\n        const eventPayload: ResourcePolicyEvent = Object.create({});\n        eventPayload.object = this.createResourcePolicyByFormData(data);\n        eventPayload.target = {\n          type: this.resourcePolicyGrantType,\n          uuid: this.resourcePolicyGrant.id,\n        };\n        eventPayload.updateTarget = this.resourcePolicyTargetUpdated;\n        this.submit.emit(eventPayload);\n      });\n  }\n\n  /**\n   * Create e new ResourcePolicy by form data\n   *\n   * @return the new ResourcePolicy object\n   */\n  createResourcePolicyByFormData(data): ResourcePolicy {\n    const resourcePolicy = new ResourcePolicy();\n    resourcePolicy.name = (data.name) ? data.name[0].value : null;\n    resourcePolicy.description = (data.description) ? data.description[0].value : null;\n    resourcePolicy.policyType = (data.policyType) ? data.policyType[0].value : null;\n    resourcePolicy.action = (data.action) ? data.action[0].value : null;\n    resourcePolicy.startDate = (data.date && data.date.start) ? dateToISOFormat(data.date.start[0].value) : null;\n    resourcePolicy.endDate = (data.date && data.date.end) ? dateToISOFormat(data.date.end[0].value) : null;\n    resourcePolicy.type = RESOURCE_POLICY;\n\n    return resourcePolicy;\n  }\n\n  /**\n   * Unsubscribe from all subscriptions\n   */\n  ngOnDestroy(): void {\n    this.isActive = false;\n    this.formModel = null;\n    this.subs\n      .filter((subscription) => hasValue(subscription))\n      .forEach((subscription) => subscription.unsubscribe());\n  }\n\n  onNavChange(changeEvent: NgbNavChangeEvent) {\n    // if a policy is being edited it should not be possible to switch between group and eperson\n    if (this.isBeingEdited())  {\n      changeEvent.preventDefault();\n      this.modalService.open(this.content);\n    }\n  }\n}\n","<div>\n  <ds-form *ngIf=\"formModel\"\n           #formRef=\"formComponent\"\n           [formId]=\"formId\"\n           [formModel]=\"formModel\"\n           [displaySubmit]=\"false\"\n           [displayCancel]=\"false\"></ds-form>\n  <div class=\"container-fluid\">\n    <label for=\"ResourcePolicyObject\">{{'resource-policies.form.eperson-group-list.label' | translate}}</label>\n    <input id=\"ResourcePolicyObject\" class=\"form-control mb-3\" type=\"text\" [value]=\"resourcePolicyTargetName$ | async\">\n    <ul ngbNav #nav=\"ngbNav\" class=\"nav-pills\" [(activeId)]=\"navActiveId\" (navChange)=\"onNavChange($event)\">\n      <li [ngbNavItem]=\"'eperson'\" role=\"presentation\">\n        <a ngbNavLink>{{'resource-policies.form.eperson-group-list.tab.eperson' | translate}}</a>\n        <ng-template ngbNavContent>\n          <ds-eperson-group-list (select)=\"updateObjectSelected($event, true)\"></ds-eperson-group-list>\n        </ng-template>\n      </li>\n      <li [ngbNavItem]=\"'group'\" role=\"presentation\">\n        <a ngbNavLink>{{'resource-policies.form.eperson-group-list.tab.group' | translate}}</a>\n        <ng-template ngbNavContent>\n          <ds-eperson-group-list [isListOfEPerson]=\"false\"\n                                 (select)=\"updateObjectSelected($event, false)\"></ds-eperson-group-list>\n        </ng-template>\n      </li>\n    </ul>\n    <div [ngbNavOutlet]=\"nav\"></div>\n    <div>\n      <hr>\n      <div class=\"form-group row\">\n\n        <div class=\"col text-right\">\n          <button type=\"reset\"\n                  class=\"btn btn-default\"\n                  [dsBtnDisabled]=\"(isProcessing | async)\"\n                  (click)=\"onReset()\">{{'form.cancel' | translate}}</button>\n          <button type=\"button\"\n                  class=\"btn btn-primary\"\n                  [dsBtnDisabled]=\"(isFormValid() | async) !== true || (isProcessing | async)\"\n                  (click)=\"onSubmit()\">\n            <span *ngIf=\"(isProcessing | async)\">\n                  <i class='fas fa-circle-notch fa-spin'></i> {{'submission.workflow.tasks.generic.processing' | translate}}\n                </span>\n            <span *ngIf=\"(isProcessing | async) !== true\">\n                  {{'form.submit' | translate}}\n                </span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<ng-template #content let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">{{ 'resource-policies.form.eperson-group-list.modal.header' | translate }}</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.close()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"d-flex flex-row\">\n      <div class=\"mr-3\">\n        <i class=\"fas fa-info-circle fa-2x text-info\"></i>\n      </div>\n      <div>\n      <p [innerHTML]=\"(navActiveId === 'eperson' ? 'resource-policies.form.eperson-group-list.modal.text1.toGroup' :\n       'resource-policies.form.eperson-group-list.modal.text1.toEPerson') | translate\" class=\"font-weight-bold\"></p>\n      <p [innerHTML]=\"'resource-policies.form.eperson-group-list.modal.text2' | translate\"></p>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"modal.close()\">{{ 'resource-policies.form.eperson-group-list.modal.close' | translate }}</button>\n  </div>\n</ng-template>\n","import {\n  DynamicDatePickerModelConfig,\n  DynamicFormControlLayout,\n  DynamicFormGroupModelConfig,\n  DynamicFormOptionConfig,\n  DynamicSelectModelConfig,\n} from '@ng-dynamic-forms/core';\n\nimport { ActionType } from '../../../core/resource-policy/models/action-type.model';\nimport { PolicyType } from '../../../core/resource-policy/models/policy-type.model';\nimport { DsDynamicInputModelConfig } from '../../form/builder/ds-dynamic-form-ui/models/ds-dynamic-input.model';\nimport { DsDynamicTextAreaModelConfig } from '../../form/builder/ds-dynamic-form-ui/models/ds-dynamic-textarea.model';\n\nconst policyTypeList: DynamicFormOptionConfig<any>[] = [\n  {\n    label: PolicyType.TYPE_SUBMISSION,\n    value: PolicyType.TYPE_SUBMISSION,\n  },\n  {\n    label: PolicyType.TYPE_WORKFLOW,\n    value: PolicyType.TYPE_WORKFLOW,\n  },\n  {\n    label: PolicyType.TYPE_INHERITED,\n    value: PolicyType.TYPE_INHERITED,\n  },\n  {\n    label: PolicyType.TYPE_CUSTOM,\n    value: PolicyType.TYPE_CUSTOM,\n  },\n];\n\nconst policyActionList: DynamicFormOptionConfig<any>[] = [\n  {\n    label: ActionType.READ.toString(),\n    value: ActionType.READ,\n  },\n  {\n    label: ActionType.WRITE.toString(),\n    value: ActionType.WRITE,\n  },\n  {\n    label: ActionType.REMOVE.toString(),\n    value: ActionType.REMOVE,\n  },\n  {\n    label: ActionType.ADMIN.toString(),\n    value: ActionType.ADMIN,\n  },\n  {\n    label: ActionType.DELETE.toString(),\n    value: ActionType.DELETE,\n  },\n  {\n    label: ActionType.WITHDRAWN_READ.toString(),\n    value: ActionType.WITHDRAWN_READ,\n  },\n  {\n    label: ActionType.DEFAULT_BITSTREAM_READ.toString(),\n    value: ActionType.DEFAULT_BITSTREAM_READ,\n  },\n  {\n    label: ActionType.DEFAULT_ITEM_READ.toString(),\n    value: ActionType.DEFAULT_ITEM_READ,\n  },\n];\n\nexport const RESOURCE_POLICY_FORM_NAME_CONFIG: DsDynamicInputModelConfig = {\n  id: 'name',\n  label: 'resource-policies.form.name.label',\n  maxLength: 30,\n  hint: 'resource-policies.form.name.hint',\n  metadataFields: [],\n  repeatable: false,\n  submissionId: '',\n  hasSelectableMetadata: false,\n};\n\nexport const RESOURCE_POLICY_FORM_DESCRIPTION_CONFIG: DsDynamicTextAreaModelConfig = {\n  id: 'description',\n  label: 'resource-policies.form.description.label',\n  metadataFields: [],\n  repeatable: false,\n  rows: 10,\n  submissionId: '',\n  hasSelectableMetadata: false,\n};\n\nexport const RESOURCE_POLICY_FORM_POLICY_TYPE_CONFIG: DynamicSelectModelConfig<any> = {\n  id: 'policyType',\n  label: 'resource-policies.form.policy-type.label',\n  options: policyTypeList,\n  required: true,\n  validators: {\n    required: null,\n  },\n  errorMessages: {\n    required: 'resource-policies.form.policy-type.required',\n  },\n};\n\nexport const RESOURCE_POLICY_FORM_ACTION_TYPE_CONFIG: DynamicSelectModelConfig<any> = {\n  id: 'action',\n  label: 'resource-policies.form.action-type.label',\n  options: policyActionList,\n  required: true,\n  validators: {\n    required: null,\n  },\n  errorMessages: {\n    required: 'resource-policies.form.action-type.required',\n  },\n};\n\nexport const RESOURCE_POLICY_FORM_DATE_GROUP_CONFIG: DynamicFormGroupModelConfig = {\n  id: 'date',\n  group: [],\n};\nexport const RESOURCE_POLICY_FORM_DATE_GROUP_LAYOUT: DynamicFormControlLayout = {\n  element: {\n    control: 'form-row',\n  },\n};\n\nexport const RESOURCE_POLICY_FORM_START_DATE_CONFIG: DynamicDatePickerModelConfig = {\n  id: 'start',\n  label: 'resource-policies.form.date.start.label',\n  placeholder: 'resource-policies.form.date.start.label',\n  inline: false,\n  toggleIcon: 'far fa-calendar-alt',\n};\n\nexport const RESOURCE_POLICY_FORM_START_DATE_LAYOUT: DynamicFormControlLayout = {\n  element: {\n    container: 'p-0',\n    label: 'col-form-label',\n  },\n  grid: {\n    host: 'col-md-6',\n  },\n};\n\nexport const RESOURCE_POLICY_FORM_END_DATE_CONFIG: DynamicDatePickerModelConfig = {\n  id: 'end',\n  label: 'resource-policies.form.date.end.label',\n  placeholder: 'resource-policies.form.date.end.label',\n  inline: false,\n  toggleIcon: 'far fa-calendar-alt',\n};\nexport const RESOURCE_POLICY_FORM_END_DATE_LAYOUT: DynamicFormControlLayout = {\n  element: {\n    container: 'p-0',\n    label: 'col-form-label',\n  },\n  grid: {\n    host: 'col-md-6',\n  },\n};\n","import {\n  inject,\n  Injector,\n} from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport {\n  APP_DATA_SERVICES_MAP,\n  LazyDataServicesMap,\n} from '../../../../config/app-config.interface';\nimport { IdentifiableDataService } from '../../../core/data/base/identifiable-data.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { lazyDataService } from '../../../core/lazy-data-service';\nimport { DSpaceObject } from '../../../core/shared/dspace-object.model';\nimport { getFirstCompletedRemoteData } from '../../../core/shared/operators';\nimport { ResourceType } from '../../../core/shared/resource-type';\nimport { isEmpty } from '../../empty.util';\n\n/**\n * Method for resolving an item based on the parameters in the current route\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param dataServiceMap\n * @param parentInjector\n * @param router\n * @returns Observable<<RemoteData<Item>> Emits the found item based on the parameters in the current route,\n * or an error if something went wrong\n */\nexport const resourcePolicyTargetResolver: ResolveFn<RemoteData<DSpaceObject>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  dataServiceMap: LazyDataServicesMap = inject(APP_DATA_SERVICES_MAP),\n  parentInjector: Injector = inject(Injector),\n  router: Router = inject(Router),\n): Observable<RemoteData<DSpaceObject>> => {\n  const targetType = route.queryParamMap.get('targetType');\n  const policyTargetId = route.queryParamMap.get('policyTargetId');\n\n  if (isEmpty(targetType) || isEmpty(policyTargetId)) {\n    router.navigateByUrl('/404', { skipLocationChange: true });\n  }\n\n  const resourceType: ResourceType = new ResourceType(targetType);\n  const lazyProvider$: Observable<IdentifiableDataService<DSpaceObject>> = lazyDataService(dataServiceMap, resourceType.value, parentInjector);\n\n  return lazyProvider$.pipe(\n    switchMap((dataService: IdentifiableDataService<DSpaceObject>) => {\n      return dataService.findById(policyTargetId);\n    }),\n    getFirstCompletedRemoteData(),\n  );\n};\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { ResourcePolicy } from '../../../core/resource-policy/models/resource-policy.model';\nimport { ResourcePolicyDataService } from '../../../core/resource-policy/resource-policy-data.service';\nimport { getFirstCompletedRemoteData } from '../../../core/shared/operators';\nimport { isEmpty } from '../../empty.util';\nimport { followLink } from '../../utils/follow-link-config.model';\n\n/**\n * Method for resolving an item based on the parameters in the current route\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {Router} router\n * @param {ResourcePolicyDataService} resourcePolicyService\n * @returns Observable<<RemoteData<Item>> Emits the found item based on the parameters in the current route,\n * or an error if something went wrong\n */\nexport const resourcePolicyResolver: ResolveFn<RemoteData<ResourcePolicy>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  router: Router = inject(Router),\n  resourcePolicyService: ResourcePolicyDataService = inject(ResourcePolicyDataService),\n): Observable<RemoteData<ResourcePolicy>> => {\n  const policyId = route.queryParamMap.get('policyId');\n\n  if (isEmpty(policyId)) {\n    router.navigateByUrl('/404', { skipLocationChange: true });\n  }\n\n  return resourcePolicyService.findById(policyId, true, false, followLink('eperson'), followLink('group')).pipe(\n    getFirstCompletedRemoteData(),\n  );\n};\n","import {\n  AsyncPipe,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router,\n} from '@angular/router';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  from as observableFrom,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  concatMap,\n  distinctUntilChanged,\n  filter,\n  map,\n  reduce,\n  scan,\n  take,\n} from 'rxjs/operators';\n\nimport { DSONameService } from '../../core/breadcrumbs/dso-name.service';\nimport { RequestService } from '../../core/data/request.service';\nimport { EPersonDataService } from '../../core/eperson/eperson-data.service';\nimport { GroupDataService } from '../../core/eperson/group-data.service';\nimport { ResourcePolicy } from '../../core/resource-policy/models/resource-policy.model';\nimport { ResourcePolicyDataService } from '../../core/resource-policy/resource-policy-data.service';\nimport { getAllSucceededRemoteData } from '../../core/shared/operators';\nimport { BtnDisabledDirective } from '../btn-disabled.directive';\nimport {\n  hasValue,\n  isEmpty,\n  isNotEmpty,\n} from '../empty.util';\nimport { NotificationsService } from '../notifications/notifications.service';\nimport { followLink } from '../utils/follow-link-config.model';\nimport {\n  ResourcePolicyCheckboxEntry,\n  ResourcePolicyEntryComponent,\n} from './entry/resource-policy-entry.component';\n\n@Component({\n  selector: 'ds-resource-policies',\n  styleUrls: ['./resource-policies.component.scss'],\n  templateUrl: './resource-policies.component.html',\n  imports: [\n    ResourcePolicyEntryComponent,\n    TranslateModule,\n    NgIf,\n    AsyncPipe,\n    NgForOf,\n    BtnDisabledDirective,\n  ],\n  standalone: true,\n})\n/**\n * Component that shows the policies for given resource\n */\nexport class ResourcePoliciesComponent implements OnInit, OnDestroy {\n\n  /**\n   * The resource UUID\n   * @type {string}\n   */\n  @Input() public resourceUUID: string;\n\n  /**\n   * The resource type (e.g. 'item', 'bundle' etc) used as key to build automatically translation label\n   * @type {string}\n   */\n  @Input() public resourceType: string;\n\n  /**\n   * The resource name\n   * @type {string}\n   */\n  @Input() public resourceName: string;\n\n  /**\n   * A boolean representing if component is active\n   * @type {boolean}\n   */\n  private isActive: boolean;\n\n  /**\n   * A boolean representing if a submission delete operation is pending\n   * @type {BehaviorSubject<boolean>}\n   */\n  private processingDelete$ = new BehaviorSubject<boolean>(false);\n\n  /**\n   * The list of policies for given resource\n   * @type {BehaviorSubject<ResourcePolicyCheckboxEntry[]>}\n   */\n  private resourcePoliciesEntries$: BehaviorSubject<ResourcePolicyCheckboxEntry[]> =\n    new BehaviorSubject<ResourcePolicyCheckboxEntry[]>([]);\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  private subs: Subscription[] = [];\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {ChangeDetectorRef} cdr\n   * @param {DSONameService} dsoNameService\n   * @param {EPersonDataService} ePersonService\n   * @param {GroupDataService} groupService\n   * @param {NotificationsService} notificationsService\n   * @param {RequestService} requestService\n   * @param {ResourcePolicyDataService} resourcePolicyService\n   * @param {ActivatedRoute} route\n   * @param {Router} router\n   * @param {TranslateService} translate\n   */\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private dsoNameService: DSONameService,\n    private ePersonService: EPersonDataService,\n    private groupService: GroupDataService,\n    private notificationsService: NotificationsService,\n    private requestService: RequestService,\n    private resourcePolicyService: ResourcePolicyDataService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private translate: TranslateService,\n  ) {\n  }\n\n  /**\n   * Initialize the component, setting up the resource's policies\n   */\n  ngOnInit(): void {\n    this.isActive = true;\n    this.initResourcePolicyList();\n  }\n\n  /**\n   * Check if there are any selected resource's policies to be deleted\n   *\n   * @return {Observable<boolean>}\n   */\n  canDelete(): Observable<boolean> {\n    return observableFrom(this.resourcePoliciesEntries$.value).pipe(\n      filter((entry: ResourcePolicyCheckboxEntry) => entry.checked),\n      reduce((acc: any, value: any) => [...acc, value], []),\n      map((entries: ResourcePolicyCheckboxEntry[]) => isNotEmpty(entries)),\n      distinctUntilChanged(),\n    );\n  }\n\n  /**\n   * Delete the selected resource's policies\n   */\n  deleteSelectedResourcePolicies(): void {\n    this.processingDelete$.next(true);\n    const policiesToDelete: ResourcePolicyCheckboxEntry[] = this.resourcePoliciesEntries$.value\n      .filter((entry: ResourcePolicyCheckboxEntry) => entry.checked);\n    this.subs.push(\n      observableFrom(policiesToDelete).pipe(\n        concatMap((entry: ResourcePolicyCheckboxEntry) => this.resourcePolicyService.delete(entry.policy.id)),\n        scan((acc: any, value: any) => [...acc, value], []),\n        filter((results: boolean[]) => results.length === policiesToDelete.length),\n        take(1),\n      ).subscribe((results: boolean[]) => {\n        const failureResults = results.filter((result: boolean) => !result);\n        if (isEmpty(failureResults)) {\n          this.notificationsService.success(null, this.translate.get('resource-policies.delete.success.content'));\n        } else {\n          this.notificationsService.error(null, this.translate.get('resource-policies.delete.failure.content'));\n        }\n        this.processingDelete$.next(false);\n      }),\n    );\n  }\n\n  /**\n   * Return all resource's policies\n   *\n   * @return an observable that emits all resource's policies\n   */\n  getResourcePolicies(): Observable<ResourcePolicyCheckboxEntry[]> {\n    return this.resourcePoliciesEntries$.asObservable();\n  }\n\n  /**\n   * Initialize the resource's policies list\n   */\n  initResourcePolicyList() {\n    this.subs.push(this.resourcePolicyService.searchByResource(\n      this.resourceUUID, null, false, true,\n      followLink('eperson'), followLink('group'),\n    ).pipe(\n      filter(() => this.isActive),\n      getAllSucceededRemoteData(),\n    ).subscribe((result) => {\n      const entries = result.payload.page.map((policy: ResourcePolicy) => ({\n        id: policy.id,\n        policy: policy,\n        checked: false,\n      }));\n      this.resourcePoliciesEntries$.next(entries);\n      // TODO detectChanges still needed?\n      this.cdr.detectChanges();\n    }));\n  }\n\n  /**\n   * Return a boolean representing if a delete operation is pending\n   *\n   * @return {Observable<boolean>}\n   */\n  isProcessingDelete(): Observable<boolean> {\n    return this.processingDelete$.asObservable();\n  }\n\n  /**\n   * Redirect to resource policy creation page\n   */\n  redirectToResourcePolicyCreatePage(): void {\n    this.router.navigate([`./create`], {\n      relativeTo: this.route,\n      queryParams: {\n        policyTargetId: this.resourceUUID,\n        targetType: this.resourceType,\n      },\n    });\n  }\n\n  /**\n   * Select/unselect all checkbox in the list\n   */\n  selectAllCheckbox(event: any): void {\n    const checked = event.target.checked;\n    this.resourcePoliciesEntries$.value.forEach((entry: ResourcePolicyCheckboxEntry) => entry.checked = checked);\n  }\n\n  /**\n   * Select/unselect checkbox\n   */\n  selectCheckbox(policyEntry: ResourcePolicyCheckboxEntry, checked: boolean) {\n    policyEntry.checked = checked;\n  }\n\n  /**\n   * Unsubscribe from all subscriptions\n   */\n  ngOnDestroy(): void {\n    this.isActive = false;\n    this.resourcePoliciesEntries$ = null;\n    this.subs\n      .filter((subscription) => hasValue(subscription))\n      .forEach((subscription) => subscription.unsubscribe());\n  }\n\n}\n","<div class=\"table-responsive\">\n  <table class=\"table table-striped table-bordered table-hover\">\n    <thead>\n      <tr>\n        <th colspan=\"10\">\n          <div class=\"d-flex justify-content-between align-items-center m-0\">\n            <span>\n              {{ 'resource-policies.table.headers.title.for.' + resourceType | translate }}\n              <span class=\"text-info\"> {{resourceName}} </span>\n              <ng-container *ngIf=\"resourceType !== 'item'\">\n                ({{resourceUUID}})\n              </ng-container>\n            </span>\n            <div class=\"space-children-mr flex-shrink-0\">\n              <button class=\"btn btn-danger p-1\"\n                      [dsBtnDisabled]=\"((canDelete() | async) !== true) || (isProcessingDelete() | async)\"\n                      [title]=\"'resource-policies.delete.btn.title' | translate\"\n                      (click)=\"deleteSelectedResourcePolicies()\">\n                <span *ngIf=\"(isProcessingDelete() | async)\">\n                  <i class='fas fa-circle-notch fa-spin' aria-hidden=\"true\"></i> {{'submission.workflow.tasks.generic.processing' | translate}}\n                </span>\n                <span *ngIf=\"(isProcessingDelete() | async) !== true\">\n                  <i class='fas fa-trash-alt fa-fw' aria-hidden=\"true\"></i>\n                  {{'resource-policies.delete.btn' | translate}}\n                </span>\n              </button>\n              <button class=\"btn btn-success p-1\"\n                      [dsBtnDisabled]=\"(isProcessingDelete() | async)\"\n                      [title]=\"'resource-policies.add.for.' + resourceType | translate\"\n                      (click)=\"redirectToResourcePolicyCreatePage()\">\n                <i class='fas fa-plus' aria-hidden=\"true\"></i>\n                {{'resource-policies.add.button' | translate}}\n              </button>\n            </div>\n          </div>\n        </th>\n      </tr>\n      <tr *ngIf=\"(getResourcePolicies() | async)?.length > 0\" class=\"text-center\">\n        <th>\n          <div class=\"custom-control custom-checkbox\">\n            <input #selectAllBtn type=\"checkbox\"\n                   class=\"custom-control-input\"\n                   [id]=\"'selectAll_' + resourceUUID\"\n                   (change)=\"selectAllCheckbox($event)\">\n            <label class=\"custom-control-label\" [for]=\"'selectAll_' + resourceUUID\">\n              <span class=\"sr-only\">{{(selectAllBtn.checked ? 'resource-policies.table.headers.deselect-all' : 'resource-policies.table.headers.select-all') | translate}}</span>\n            </label>\n          </div>\n        </th>\n        <th>{{'resource-policies.table.headers.id' | translate}}</th>\n        <th>{{'resource-policies.table.headers.name' | translate}}</th>\n        <th>{{'resource-policies.table.headers.policyType' | translate}}</th>\n        <th>{{'resource-policies.table.headers.action' | translate}}</th>\n        <th>{{'resource-policies.table.headers.eperson' | translate}}</th>\n        <th>{{'resource-policies.table.headers.group' | translate}}</th>\n        <th>{{'resource-policies.table.headers.date.start' | translate}}</th>\n        <th>{{'resource-policies.table.headers.date.end' | translate}}</th>\n        <th>{{'resource-policies.table.headers.edit' | translate}}</th>\n      </tr>\n    </thead>\n    <tbody *ngIf=\"(getResourcePolicies() | async)?.length > 0\">\n      <tr ds-resource-policy-entry *ngFor=\"let entry of (getResourcePolicies() | async)\"\n          [entry]=\"entry\"\n          (toggleCheckbox)=\"selectCheckbox(entry, $event)\"\n      ></tr>\n    </tbody>\n  </table>\n</div>\n","import {\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\n\nimport { hasValue } from '../empty.util';\n\n/**\n * Returns true if the passed value is not null or undefined.\n */\n@Pipe({ standalone: true, name: 'dsHasValue' })\nexport class HasValuePipe implements PipeTransform {\n  transform(value: any): boolean {\n    return hasValue(value);\n  }\n}\n"],"names":["ActivatedRoute","Router","TranslateModule","TranslateService","BehaviorSubject","map","take","DSONameService","ResourcePolicyDataService","getFirstCompletedRemoteData","ITEM_EDIT_AUTHORIZATIONS_PATH","NotificationsService","ResourcePolicyFormComponent","ResourcePolicyCreateComponent","constructor","dsoNameService","notificationsService","resourcePolicyService","route","router","translate","processing$","ngOnInit","data","pipe","subscribe","targetResourceUUID","resourcePolicyTarget","payload","id","targetResourceName","getName","isProcessing","asObservable","redirectToAuthorizationsPage","navigate","relativeTo","createResourcePolicy","event","next","response$","target","type","create","object","uuid","responseRD","hasSucceeded","success","get","error","i0","ɵɵdirectiveInject","i1","i2","i3","i4","i5","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ResourcePolicyCreateComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ResourcePolicyCreateComponent_Template_ds_resource_policy_form_reset_4_listener","ResourcePolicyCreateComponent_Template_ds_resource_policy_form_submit_4_listener","$event","ɵɵadvance","ɵɵtextInterpolate2","ɵɵpipeBind1","ɵɵproperty","TranslatePipe","encapsulation","combineLatest","observableCombineLatest","of","RESOURCE_POLICY","ResourcePolicyEditComponent","resourcePolicy","updateResourcePolicy","updatedObject","Object","assign","value","_links","updateTargetSucceeded$","updateTarget","self","href","updateResourcePolicySucceeded$","update","updateTargetSucceeded","updateResourcePolicySucceeded","ResourcePolicyEditComponent_Template","ResourcePolicyEditComponent_Template_ds_resource_policy_form_reset_4_listener","ResourcePolicyEditComponent_Template_ds_resource_policy_form_submit_4_listener","AsyncPipe","NgIf","EventEmitter","FormsModule","getGroupEditRoute","GroupDataService","getAllSucceededRemoteData","getFirstSucceededRemoteDataPayload","dateToString","stringToNgbDateStruct","hasValue","isNotEmpty","HasValuePipe","ResourcePolicyEntryComponent_button_30_Template_button_click_0_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","redirectToGroupEditPage","ɵɵelement","ResourcePolicyEntryComponent","groupService","toggleCheckbox","epersonName$","getName$","entry","policy","eperson","groupName$","group","dso$","rd","undefined","formatDate","date","redirectToResourcePolicyEditPage","queryParams","policyId","findByHref","groupUUID","inputs","outputs","attrs","_c0","ResourcePolicyEntryComponent_Template","ResourcePolicyEntryComponent_Template_input_ngModelChange_2_listener","emit","ResourcePolicyEntryComponent_Template_button_click_27_listener","ɵɵtemplate","ResourcePolicyEntryComponent_button_30_Template","checked","ɵɵtextInterpolate","ɵɵtextInterpolate1","name","policyType","action","startDate","endDate","CheckboxControlValueAccessor","NgControlStatus","NgModel","ElementRef","NgbModal","NgbNavModule","DynamicDatePickerModel","DynamicFormGroupModel","DynamicSelectModel","Observable","observableOf","filter","RequestService","EPersonDataService","ResourcePolicy","getFirstSucceededRemoteData","BtnDisabledDirective","dateToISOFormat","hasValueOperator","isEmpty","EpersonGroupListComponent","DsDynamicInputModel","DsDynamicTextAreaModel","FormComponent","FormService","RESOURCE_POLICY_FORM_ACTION_TYPE_CONFIG","RESOURCE_POLICY_FORM_DATE_GROUP_CONFIG","RESOURCE_POLICY_FORM_DATE_GROUP_LAYOUT","RESOURCE_POLICY_FORM_DESCRIPTION_CONFIG","RESOURCE_POLICY_FORM_END_DATE_CONFIG","RESOURCE_POLICY_FORM_END_DATE_LAYOUT","RESOURCE_POLICY_FORM_NAME_CONFIG","RESOURCE_POLICY_FORM_POLICY_TYPE_CONFIG","RESOURCE_POLICY_FORM_START_DATE_CONFIG","RESOURCE_POLICY_FORM_START_DATE_LAYOUT","formId","formModel","ResourcePolicyFormComponent_ng_template_14_Template_ds_eperson_group_list_select_0_listener","_r3","updateObjectSelected","ResourcePolicyFormComponent_ng_template_19_Template_ds_eperson_group_list_select_0_listener","_r4","ResourcePolicyFormComponent_ng_template_36_Template_button_click_4_listener","modal_r6","_r5","$implicit","close","ResourcePolicyFormComponent_ng_template_36_Template_button_click_17_listener","navActiveId","ɵɵsanitizeHtml","ePersonService","formService","requestService","modalService","reset","submit","resourcePolicyTargetName$","subs","resourcePolicyTargetUpdated","isActive","getUniqueId","buildResourcePolicyForm","isBeingEdited","epersonRD$","groupRD$","dsoRD$","rdArr","find","push","dsoRD","resourcePolicyGrant","String","getResourcePolicyTargetName","isFormValid","isValid","startDateModel","endDateModel","dateGroupConfig","initModelsValue","forEach","model","hasOwnProperty","isEPerson","resourcePolicyGrantType","onReset","onSubmit","getFormData","eventPayload","createResourcePolicyByFormData","description","start","end","ngOnDestroy","subscription","unsubscribe","onNavChange","changeEvent","preventDefault","open","content","i6","viewQuery","ResourcePolicyFormComponent_Query","ResourcePolicyFormComponent_ds_form_1_Template","ɵɵtwoWayListener","ResourcePolicyFormComponent_Template_ul_activeIdChange_8_listener","ɵɵtwoWayBindingSet","ResourcePolicyFormComponent_Template_ul_navChange_8_listener","ResourcePolicyFormComponent_ng_template_14_Template","ResourcePolicyFormComponent_ng_template_19_Template","ResourcePolicyFormComponent_Template_button_click_25_listener","ResourcePolicyFormComponent_Template_button_click_29_listener","ResourcePolicyFormComponent_span_32_Template","ResourcePolicyFormComponent_span_34_Template","ResourcePolicyFormComponent_ng_template_36_Template","ɵɵtemplateRefExtractor","ɵɵtwoWayProperty","nav_r7","NgbNavContent","NgbNav","NgbNavItem","NgbNavLink","NgbNavOutlet","i7","ActionType","PolicyType","policyTypeList","label","TYPE_SUBMISSION","TYPE_WORKFLOW","TYPE_INHERITED","TYPE_CUSTOM","policyActionList","READ","toString","WRITE","REMOVE","ADMIN","DELETE","WITHDRAWN_READ","DEFAULT_BITSTREAM_READ","DEFAULT_ITEM_READ","maxLength","hint","metadataFields","repeatable","submissionId","hasSelectableMetadata","rows","options","required","validators","errorMessages","element","control","placeholder","inline","toggleIcon","container","grid","host","inject","Injector","switchMap","APP_DATA_SERVICES_MAP","lazyDataService","ResourceType","resourcePolicyTargetResolver","state","dataServiceMap","parentInjector","targetType","queryParamMap","policyTargetId","navigateByUrl","skipLocationChange","resourceType","lazyProvider$","dataService","findById","followLink","resourcePolicyResolver","NgForOf","ChangeDetectorRef","from","observableFrom","concatMap","distinctUntilChanged","reduce","scan","ɵɵelementContainerStart","ctx_r0","resourceUUID","ResourcePoliciesComponent_tr_27_Template_input_change_3_listener","_r2","selectAllCheckbox","selectAllBtn_r3","ResourcePoliciesComponent_tbody_29_tr_1_Template_tr_toggleCheckbox_0_listener","entry_r5","selectCheckbox","ResourcePoliciesComponent_tbody_29_tr_1_Template","getResourcePolicies","ResourcePoliciesComponent","cdr","processingDelete$","resourcePoliciesEntries$","initResourcePolicyList","canDelete","acc","entries","deleteSelectedResourcePolicies","policiesToDelete","delete","results","length","failureResults","result","searchByResource","page","detectChanges","isProcessingDelete","redirectToResourcePolicyCreatePage","policyEntry","i8","resourceName","ResourcePoliciesComponent_Template","ResourcePoliciesComponent_ng_container_11_Template","ResourcePoliciesComponent_Template_button_click_13_listener","ResourcePoliciesComponent_span_17_Template","ResourcePoliciesComponent_span_19_Template","ResourcePoliciesComponent_Template_button_click_21_listener","ResourcePoliciesComponent_tr_27_Template","ResourcePoliciesComponent_tbody_29_Template","tmp_10_0","tmp_11_0","styles","transform","pure"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}