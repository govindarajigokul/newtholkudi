{"version":3,"file":"src_app_suggestions-page_suggestions-page-routes_ts.js","mappings":"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","sources":["./src/app/breadcrumbs/breadcrumb/breadcrumb.model.ts","./src/app/core/breadcrumbs/publication-claim-breadcrumb.resolver.ts","./src/app/core/breadcrumbs/publication-claim-breadcrumb.service.ts","./src/app/core/notifications/suggestions/models/suggestion.model.ts","./src/app/notifications/suggestion-actions/suggestion-actions.component.ts","./src/app/notifications/suggestion-actions/suggestion-actions.component.html","./src/app/notifications/suggestion-list-element/suggestion-evidences/suggestion-evidences.component.ts","./src/app/notifications/suggestion-list-element/suggestion-evidences/suggestion-evidences.component.html","./src/app/notifications/suggestion-list-element/suggestion-list-element.component.ts","./src/app/notifications/suggestion-list-element/suggestion-list-element.component.html","./src/app/shared/utils/object-keys-pipe.ts","./src/app/suggestions-page/suggestions-page-routes.ts","./src/app/suggestions-page/suggestions-page.component.ts","./src/app/suggestions-page/suggestions-page.component.html","./src/app/suggestions-page/suggestions-page.resolver.ts","./src/themes/custom/app/shared/object-list/search-result-list-element/item-search-result/item-types/item/item-search-result-list-element.component.ts","./src/app/shared/object-list/search-result-list-element/item-search-result/item-types/item/item-search-result-list-element.component.html"],"sourcesContent":["/**\n * Class representing a single breadcrumb\n */\nexport class Breadcrumb {\n  constructor(\n    /**\n     * The display value of the breadcrumb\n     */\n    public text: string,\n    /**\n     * The optional url of the breadcrumb\n     */\n    public url?: string) {\n  }\n}\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { BreadcrumbConfig } from '../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { PublicationClaimBreadcrumbService } from './publication-claim-breadcrumb.service';\n\nexport const publicationClaimBreadcrumbResolver: ResolveFn<BreadcrumbConfig<string>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  breadcrumbService: PublicationClaimBreadcrumbService = inject(PublicationClaimBreadcrumbService),\n): BreadcrumbConfig<string> => {\n  const targetId = route.paramMap.get('targetId').split(':')[1];\n  return { provider: breadcrumbService, key: targetId };\n};\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  combineLatest,\n  Observable,\n} from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport { AuthorizationDataService } from '../data/feature-authorization/authorization-data.service';\nimport { FeatureID } from '../data/feature-authorization/feature-id';\nimport { ItemDataService } from '../data/item-data.service';\nimport { getFirstCompletedRemoteData } from '../shared/operators';\nimport { BreadcrumbsProviderService } from './breadcrumbsProviderService';\nimport { DSONameService } from './dso-name.service';\n\n/**\n * Service to calculate Publication claims breadcrumbs\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class PublicationClaimBreadcrumbService implements BreadcrumbsProviderService<string> {\n  private ADMIN_PUBLICATION_CLAIMS_PATH = 'admin/notifications/publication-claim';\n  private ADMIN_PUBLICATION_CLAIMS_BREADCRUMB_KEY = 'admin.notifications.publicationclaim.page.title';\n\n  constructor(private dataService: ItemDataService,\n              private dsoNameService: DSONameService,\n              private tranlsateService: TranslateService,\n              protected authorizationService: AuthorizationDataService) {\n  }\n\n\n  /**\n   * Method to calculate the breadcrumbs\n   * @param key The key used to resolve the breadcrumb\n   */\n  getBreadcrumbs(key: string): Observable<Breadcrumb[]> {\n    return combineLatest([this.dataService.findById(key).pipe(getFirstCompletedRemoteData()),this.authorizationService.isAuthorized(FeatureID.AdministratorOf)]).pipe(\n      map(([item, isAdmin]) => {\n        const itemName = this.dsoNameService.getName(item.payload);\n        return isAdmin ? [new Breadcrumb(this.tranlsateService.instant(this.ADMIN_PUBLICATION_CLAIMS_BREADCRUMB_KEY), this.ADMIN_PUBLICATION_CLAIMS_PATH),\n          new Breadcrumb(this.tranlsateService.instant('suggestion.suggestionFor.breadcrumb', { name: itemName }), undefined)] :\n          [new Breadcrumb(this.tranlsateService.instant('suggestion.suggestionFor.breadcrumb', { name: itemName }), undefined)];\n      }),\n    );\n  }\n}\n","import {\n  autoserialize,\n  autoserializeAs,\n  deserialize,\n} from 'cerialize';\n\nimport { typedObject } from '../../../cache/builders/build-decorators';\nimport { CacheableObject } from '../../../cache/cacheable-object.model';\nimport { HALLink } from '../../../shared/hal-link.model';\nimport {\n  MetadataMap,\n  MetadataMapSerializer,\n} from '../../../shared/metadata.models';\nimport { ResourceType } from '../../../shared/resource-type';\nimport { excludeFromEquals } from '../../../utilities/equals.decorators';\nimport { SUGGESTION } from './suggestion-objects.resource-type';\n\n/**\n * The interface representing Suggestion Evidences such as scores (authorScore, datescore)\n */\nexport interface SuggestionEvidences {\n  [sectionId: string]: {\n    score: string;\n    notes: string\n  };\n}\n/**\n * The interface representing the Suggestion Source model\n */\n@typedObject\nexport class Suggestion implements CacheableObject {\n  /**\n   * A string representing the kind of object, e.g. community, item, …\n   */\n  static type = SUGGESTION;\n\n  /**\n   * The Suggestion id\n   */\n  @autoserialize\n  id: string;\n\n  /**\n   * The Suggestion name to display\n   */\n  @autoserialize\n  display: string;\n\n  /**\n   * The Suggestion source to display\n   */\n  @autoserialize\n  source: string;\n\n  /**\n   * The Suggestion external source uri\n   */\n  @autoserialize\n  externalSourceUri: string;\n\n  /**\n   * The Total Score of the suggestion\n   */\n  @autoserialize\n  score: string;\n\n  /**\n   * The total number of suggestions provided by Suggestion Target for\n   */\n  @autoserialize\n  evidences: SuggestionEvidences;\n\n  /**\n   * All metadata of this suggestion object\n   */\n  @excludeFromEquals\n  @autoserializeAs(MetadataMapSerializer)\n  metadata: MetadataMap;\n\n  /**\n   * The type of this ConfigObject\n   */\n  @excludeFromEquals\n  @autoserialize\n  type: ResourceType;\n\n  /**\n   * The links to all related resources returned by the rest api.\n   */\n  @deserialize\n  _links: {\n    self: HALLink,\n    target: HALLink\n  };\n}\n","import { NgIf } from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport {\n  NgbDropdownModule,\n  NgbModal,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { take } from 'rxjs/operators';\n\nimport { Suggestion } from '../../core/notifications/suggestions/models/suggestion.model';\nimport { Collection } from '../../core/shared/collection.model';\nimport { ItemType } from '../../core/shared/item-relationships/item-type.model';\nimport { BtnDisabledDirective } from '../../shared/btn-disabled.directive';\nimport { ThemedCreateItemParentSelectorComponent } from '../../shared/dso-selector/modal-wrappers/create-item-parent-selector/themed-create-item-parent-selector.component';\nimport { EntityDropdownComponent } from '../../shared/entity-dropdown/entity-dropdown.component';\nimport { SuggestionApproveAndImport } from '../suggestion-list-element/suggestion-approve-and-import';\n\n/**\n * Show and trigger the actions to submit for a suggestion\n */\n@Component({\n  selector: 'ds-suggestion-actions',\n  styleUrls: ['./suggestion-actions.component.scss'],\n  templateUrl: './suggestion-actions.component.html',\n  imports: [\n    EntityDropdownComponent,\n    TranslateModule,\n    NgIf,\n    NgbDropdownModule,\n    BtnDisabledDirective,\n  ],\n  standalone: true,\n})\nexport class SuggestionActionsComponent {\n\n  @Input() object: Suggestion;\n\n  @Input() isBulk = false;\n\n  @Input() hasEvidence = false;\n\n  @Input() seeEvidence = false;\n\n  @Input() isCollectionFixed = false;\n\n  /**\n   * The component is used to Delete suggestion\n   */\n  @Output() ignoreSuggestionClicked = new EventEmitter<string>();\n\n  /**\n   * The component is used to approve & import\n   */\n  @Output() approveAndImport = new EventEmitter<SuggestionApproveAndImport>();\n\n  /**\n   * The component is used to approve & import\n   */\n  @Output() seeEvidences = new EventEmitter<boolean>();\n\n  constructor(private modalService: NgbModal) { }\n\n  /**\n   * Method called on clicking the button \"approve & import\", It opens a dialog for\n   * select a collection and it emits an approveAndImport event.\n   */\n  openDialog(entity: ItemType) {\n\n    const modalRef = this.modalService.open(ThemedCreateItemParentSelectorComponent);\n    modalRef.componentInstance.emitOnly = true;\n    modalRef.componentInstance.entityType = entity.label;\n\n    modalRef.componentInstance.select.pipe(take(1))\n      .subscribe((collection: Collection) => {\n        this.approveAndImport.emit({\n          suggestion: this.isBulk ? undefined : this.object,\n          collectionId: collection.id,\n        });\n      });\n  }\n\n  approveAndImportCollectionFixed() {\n    this.approveAndImport.emit({\n      suggestion: this.isBulk ? undefined : this.object,\n      collectionId: null,\n    });\n  }\n\n\n  /**\n   * Delete the suggestion\n   */\n  ignoreSuggestion() {\n    this.ignoreSuggestionClicked.emit(this.isBulk ? undefined : this.object.id);\n  }\n\n  /**\n   * Toggle See Evidence\n   */\n  toggleSeeEvidences() {\n    this.seeEvidences.emit(!this.seeEvidence);\n  }\n\n  ignoreSuggestionLabel(): string {\n    return this.isBulk ? 'suggestion.ignoreSuggestion.bulk' : 'suggestion.ignoreSuggestion' ;\n  }\n\n  approveAndImportLabel(): string {\n    return this.isBulk ? 'suggestion.approveAndImport.bulk' : 'suggestion.approveAndImport';\n  }\n}\n","<div class=\"d-inline\">\n  <div ngbDropdown class=\"d-inline\">\n    <button *ngIf=\"isCollectionFixed; else chooseCollection\" class=\"btn btn-success\" type=\"button\" (click)=\"approveAndImportCollectionFixed()\">\n      <i class=\"fa fa-check\" aria-hidden=\"true\"></i> {{ approveAndImportLabel() | translate}}\n    </button>\n    <ng-template #chooseCollection>\n      <button class=\"btn btn-success\" id=\"dropdownSubmission\" ngbDropdownToggle\n              type=\"button\">\n        <i class=\"fa fa-check\" aria-hidden=\"true\"></i> {{ approveAndImportLabel() | translate}}\n        <span class=\"caret\"></span>\n      </button>\n\n      <div ngbDropdownMenu\n           class=\"dropdown-menu\"\n           id=\"entityControlsDropdownMenu\"\n           aria-labelledby=\"dropdownSubmission\">\n        <ds-entity-dropdown (selectionChange)=\"openDialog($event)\"></ds-entity-dropdown>\n      </div>\n    </ng-template>\n\n  </div>\n  <button (click)=\"ignoreSuggestion()\" class=\"btn btn-danger ml-2\"><i class=\"fa fa-ban\"></i>\n    {{ ignoreSuggestionLabel() | translate}}</button>\n  <button *ngIf=\"!isBulk\" (click)=\"toggleSeeEvidences()\" [dsBtnDisabled]=\"!hasEvidence\" class=\"btn btn-info ml-2\">\n    <i class=\"fa fa-eye\"></i>\n    <ng-container *ngIf=\"!seeEvidence\"> {{ 'suggestion.seeEvidence' | translate}}</ng-container>\n    <ng-container *ngIf=\"seeEvidence\"> {{ 'suggestion.hideEvidence' | translate}}</ng-container>\n  </button>\n</div>\n","import {\n  NgFor,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n} from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { SuggestionEvidences } from '../../../core/notifications/suggestions/models/suggestion.model';\nimport { fadeIn } from '../../../shared/animations/fade';\nimport { ObjectKeysPipe } from '../../../shared/utils/object-keys-pipe';\n\n/**\n * Show suggestion evidences such as score (authorScore, dateScore)\n */\n@Component({\n  selector: 'ds-suggestion-evidences',\n  styleUrls: ['./suggestion-evidences.component.scss'],\n  templateUrl: './suggestion-evidences.component.html',\n  animations: [fadeIn],\n  imports: [\n    TranslateModule,\n    NgIf,\n    NgFor,\n    ObjectKeysPipe,\n  ],\n  standalone: true,\n})\nexport class SuggestionEvidencesComponent {\n\n  @Input() evidences: SuggestionEvidences;\n\n}\n","<div>\n  <div class=\"table-responsive\" *ngIf=\"evidences\">\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>{{'suggestion.evidence.score' | translate}}</th>\n          <th>{{'suggestion.evidence.type' | translate}}</th>\n          <th>{{'suggestion.evidence.notes' | translate}}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let evidence of evidences | dsObjectKeys\">\n          <td>{{evidences[evidence].score}}</td>\n          <td>{{evidence | translate}}</td>\n          <td>{{evidences[evidence].notes}}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { NgIf } from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Suggestion } from 'src/app/core/notifications/suggestions/models/suggestion.model';\n\nimport { ItemSearchResultListElementComponent } from '../../../themes/custom/app/shared/object-list/search-result-list-element/item-search-result/item-types/item/item-search-result-list-element.component';\nimport { Item } from '../../core/shared/item.model';\nimport { fadeIn } from '../../shared/animations/fade';\nimport { isNotEmpty } from '../../shared/empty.util';\nimport { SuggestionActionsComponent } from '../suggestion-actions/suggestion-actions.component';\nimport { SuggestionApproveAndImport } from './suggestion-approve-and-import';\nimport { SuggestionEvidencesComponent } from './suggestion-evidences/suggestion-evidences.component';\n\n/**\n * Show all the suggestions by researcher\n */\n@Component({\n  selector: 'ds-suggestion-list-item',\n  styleUrls: ['./suggestion-list-element.component.scss'],\n  templateUrl: './suggestion-list-element.component.html',\n  animations: [fadeIn],\n  imports: [\n    NgIf,\n    TranslateModule,\n    ItemSearchResultListElementComponent,\n    SuggestionActionsComponent,\n    SuggestionEvidencesComponent,\n  ],\n  standalone: true,\n})\nexport class SuggestionListElementComponent implements OnInit {\n\n  @Input() object: Suggestion;\n\n  @Input() isSelected = false;\n\n  @Input() isCollectionFixed = false;\n\n  public listableObject: any;\n\n  public seeEvidence = false;\n\n  /**\n   * The component is used to Delete suggestion\n   */\n  @Output() ignoreSuggestionClicked = new EventEmitter();\n\n  /**\n   * The component is used to approve & import\n   */\n  @Output() approveAndImport = new EventEmitter();\n\n  /**\n   * New value whether the element is selected\n   */\n  @Output() selected = new EventEmitter<boolean>();\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {NgbModal} modalService\n   */\n  constructor(private modalService: NgbModal) { }\n\n  ngOnInit() {\n    this.listableObject = {\n      indexableObject: Object.assign(new Item(), { id: this.object.id, metadata: this.object.metadata }),\n      hitHighlights: {},\n    };\n  }\n\n  /**\n   * Approve and import the suggestion\n   */\n  onApproveAndImport(event: SuggestionApproveAndImport) {\n    this.approveAndImport.emit(event);\n  }\n\n  /**\n   * Delete the suggestion\n   */\n  onIgnoreSuggestion(suggestionId: string) {\n    this.ignoreSuggestionClicked.emit(suggestionId);\n  }\n\n  /**\n   * Change is selected value.\n   */\n  changeSelected(event) {\n    this.isSelected = event.target.checked;\n    this.selected.next(this.isSelected);\n  }\n\n  /**\n   * See the Evidence\n   */\n  hasEvidences() {\n    return isNotEmpty(this.object.evidences);\n  }\n\n  /**\n   * Set the see evidence variable.\n   */\n  onSeeEvidences(seeEvidence: boolean) {\n    this.seeEvidence = seeEvidence;\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <!-- Bulk Selection Panel -->\n    <div class=\"col-1 text-center align-self-center\">\n      <div class=\"\">\n        <input type=\"checkbox\" class=\"form-check-input\"\n               [checked]=\"isSelected\" (change)=\"changeSelected($event)\"\n               [attr.aria-label]=\"object.display\"/>\n      </div>\n    </div>\n    <!-- Total Score Panel -->\n    <div class=\"col-2 text-center align-self-center\">\n      <div class=\"\">\n        <div><strong> {{'suggestion.totalScore' | translate}}</strong> </div>\n        <span class=\"suggestion-score\">{{ object.score }}</span>\n      </div>\n    </div>\n    <!-- Suggestion Panel -->\n    <div class=\"col\">\n        <!-- Object Preview -->\n        <ds-item-search-result-list-element\n          [showLabel]=\"false\"\n          [showThumbnails]=\"false\"\n          [object]=\"listableObject\"\n          [linkType]=\"0\"\n        ></ds-item-search-result-list-element>\n        <!-- Actions -->\n      <ds-suggestion-actions class=\"parent mt-2\" [hasEvidence]=\"hasEvidences()\"\n                             [seeEvidence]=\"seeEvidence\"\n                             [object]=\"object\"\n                             [isCollectionFixed]=\"isCollectionFixed\"\n                             (approveAndImport)=\"onApproveAndImport($event)\"\n                             (seeEvidences)=\"onSeeEvidences($event)\"\n                             (ignoreSuggestionClicked)=\"onIgnoreSuggestion($event)\"\n      ></ds-suggestion-actions>\n    </div>\n  </div>\n  <!-- Evidences Panel -->\n  <div *ngIf=\"seeEvidence\" class=\"mt-2 row\">\n    <div class=\"col offset-3\">\n      <ds-suggestion-evidences [evidences]=\"object.evidences\"></ds-suggestion-evidences>\n    </div>\n  </div>\n</div>\n<hr>\n","import {\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\n\n@Pipe({\n  name: 'dsObjectKeys',\n  standalone: true,\n})\n/**\n * Pipe for parsing all keys of an object to an array of key-value pairs\n */\nexport class ObjectKeysPipe implements PipeTransform {\n\n  /**\n   * @param value An object\n   * @returns {any} Array with all keys the input object\n   */\n  transform(value): any {\n    const keys = [];\n    Object.keys(value).forEach((k) => keys.push(k));\n    return keys;\n  }\n}\n","import { Route } from '@angular/router';\n\nimport { authenticatedGuard } from '../core/auth/authenticated.guard';\nimport { publicationClaimBreadcrumbResolver } from '../core/breadcrumbs/publication-claim-breadcrumb.resolver';\nimport { SuggestionsPageComponent } from './suggestions-page.component';\nimport { suggestionsPageResolver } from './suggestions-page.resolver';\n\nexport const ROUTES: Route[] = [\n  {\n    path: ':targetId',\n    resolve: {\n      suggestionTargets: suggestionsPageResolver,\n      breadcrumb: publicationClaimBreadcrumbResolver,//i18nBreadcrumbResolver\n    },\n    data: {\n      title: 'admin.notifications.publicationclaim.page.title',\n      breadcrumbKey: 'admin.notifications.publicationclaim',\n      showBreadcrumbsFluid: false,\n    },\n    canActivate: [authenticatedGuard],\n    runGuardsAndResolvers: 'always',\n    component: SuggestionsPageComponent,\n  },\n];\n","import {\n  AsyncPipe,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Data,\n  Router,\n  RouterLink,\n} from '@angular/router';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  Observable,\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\n\nimport { AuthService } from '../core/auth/auth.service';\nimport {\n  SortDirection,\n  SortOptions,\n} from '../core/cache/models/sort-options.model';\nimport { FindListOptions } from '../core/data/find-list-options.model';\nimport { PaginatedList } from '../core/data/paginated-list.model';\nimport { RemoteData } from '../core/data/remote-data';\nimport { Suggestion } from '../core/notifications/suggestions/models/suggestion.model';\nimport { SuggestionTarget } from '../core/notifications/suggestions/models/suggestion-target.model';\nimport { PaginationService } from '../core/pagination/pagination.service';\nimport { redirectOn4xx } from '../core/shared/authorized.operators';\nimport {\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteDataPayload,\n} from '../core/shared/operators';\nimport { WorkspaceItem } from '../core/submission/models/workspaceitem.model';\nimport { WorkspaceitemDataService } from '../core/submission/workspaceitem-data.service';\nimport { SuggestionActionsComponent } from '../notifications/suggestion-actions/suggestion-actions.component';\nimport { SuggestionApproveAndImport } from '../notifications/suggestion-list-element/suggestion-approve-and-import';\nimport { SuggestionListElementComponent } from '../notifications/suggestion-list-element/suggestion-list-element.component';\nimport { SuggestionTargetsStateService } from '../notifications/suggestion-targets/suggestion-targets.state.service';\nimport {\n  SuggestionBulkResult,\n  SuggestionsService,\n} from '../notifications/suggestions.service';\nimport { AlertComponent } from '../shared/alert/alert.component';\nimport { ThemedLoadingComponent } from '../shared/loading/themed-loading.component';\nimport { NotificationsService } from '../shared/notifications/notifications.service';\nimport { PaginationComponent } from '../shared/pagination/pagination.component';\nimport { PaginationComponentOptions } from '../shared/pagination/pagination-component-options.model';\nimport { VarDirective } from '../shared/utils/var.directive';\nimport { getWorkspaceItemEditRoute } from '../workflowitems-edit-page/workflowitems-edit-page-routing-paths';\n\n@Component({\n  selector: 'ds-suggestion-page',\n  templateUrl: './suggestions-page.component.html',\n  styleUrls: ['./suggestions-page.component.scss'],\n  imports: [\n    AsyncPipe,\n    VarDirective,\n    NgIf,\n    RouterLink,\n    TranslateModule,\n    SuggestionActionsComponent,\n    ThemedLoadingComponent,\n    PaginationComponent,\n    SuggestionListElementComponent,\n    NgForOf,\n    AlertComponent,\n  ],\n  standalone: true,\n})\n\n/**\n * Component used to visualize one of the suggestions from the publication claim page or from the notification pop up\n */\n\nexport class SuggestionsPageComponent implements OnInit {\n\n  /**\n   * The pagination configuration\n   */\n  paginationOptions: PaginationComponentOptions = Object.assign(new PaginationComponentOptions(), {\n    id: 'sp',\n    pageSizeOptions: [5, 10, 20, 40, 60],\n  });\n\n  /**\n   * The sorting configuration\n   */\n  paginationSortConfig: SortOptions = new SortOptions('trust', SortDirection.DESC);\n\n  /**\n   * The FindListOptions object\n   */\n  defaultConfig: FindListOptions = Object.assign(new FindListOptions(), { sort: this.paginationSortConfig });\n\n  /**\n   * A boolean representing if results are loading\n   */\n  public processing$ = new BehaviorSubject<boolean>(false);\n\n  /**\n   * A list of remote data objects of suggestions\n   */\n  suggestionsRD$: BehaviorSubject<PaginatedList<Suggestion>> = new BehaviorSubject<PaginatedList<Suggestion>>({} as any);\n\n  targetRD$: Observable<RemoteData<SuggestionTarget>>;\n  targetId$: Observable<string>;\n\n  suggestionTarget: SuggestionTarget;\n  suggestionId: any;\n  suggestionSource: any;\n  researcherName: any;\n  researcherUuid: any;\n\n  selectedSuggestions: { [id: string]: Suggestion } = {};\n  isBulkOperationPending = false;\n\n  constructor(\n    private authService: AuthService,\n    private notificationService: NotificationsService,\n    private paginationService: PaginationService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private suggestionService: SuggestionsService,\n    private suggestionTargetsStateService: SuggestionTargetsStateService,\n    private translateService: TranslateService,\n    private workspaceItemService: WorkspaceitemDataService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.targetRD$ = this.route.data.pipe(\n      map((data: Data) => data.suggestionTargets as RemoteData<SuggestionTarget>),\n      redirectOn4xx(this.router, this.authService),\n    );\n\n    this.targetId$ = this.targetRD$.pipe(\n      getFirstSucceededRemoteDataPayload(),\n      map((target: SuggestionTarget) => target.id),\n    );\n    this.targetRD$.pipe(\n      getFirstSucceededRemoteDataPayload(),\n      tap((suggestionTarget: SuggestionTarget) => {\n        this.suggestionTarget = suggestionTarget;\n        this.suggestionId = suggestionTarget.id;\n        this.researcherName = suggestionTarget.display;\n        this.suggestionSource = suggestionTarget.source;\n        this.researcherUuid = this.suggestionService.getTargetUuid(suggestionTarget);\n      }),\n      switchMap(() => this.updatePage()),\n    ).subscribe();\n\n    this.suggestionTargetsStateService.dispatchMarkUserSuggestionsAsVisitedAction();\n  }\n\n  /**\n   * Called when one of the pagination settings is changed\n   */\n  onPaginationChange() {\n    this.updatePage().subscribe();\n  }\n\n  /**\n   * Update the list of suggestions\n   */\n  updatePage(): Observable<RemoteData<PaginatedList<Suggestion>>> {\n    this.processing$.next(true);\n    const pageConfig$: Observable<FindListOptions> = this.paginationService.getFindListOptions(\n      this.paginationOptions.id,\n      this.defaultConfig,\n    ).pipe(\n      distinctUntilChanged(),\n    );\n\n    return combineLatest([this.targetId$, pageConfig$]).pipe(\n      switchMap(([targetId, config]: [string, FindListOptions]) => {\n        return this.suggestionService.getSuggestions(\n          targetId,\n          config.elementsPerPage,\n          config.currentPage,\n          config.sort,\n        );\n      }),\n      getFirstCompletedRemoteData(),\n      tap((resultsRD: RemoteData<PaginatedList<Suggestion>>) => {\n        this.processing$.next(false);\n        if (resultsRD.hasSucceeded) {\n          this.suggestionsRD$.next(resultsRD.payload);\n        } else {\n          this.suggestionsRD$.next(null);\n        }\n\n        this.suggestionService.clearSuggestionRequests();\n      }),\n    );\n  }\n\n  /**\n   * Used to delete a suggestion.\n   * @suggestionId\n   */\n  ignoreSuggestion(suggestionId) {\n    this.suggestionService.ignoreSuggestion(suggestionId).pipe(\n      tap(() => this.suggestionTargetsStateService.dispatchRefreshUserSuggestionsAction()),\n      switchMap(() => this.updatePage()),\n    ).subscribe();\n  }\n\n  /**\n   * Used to delete all selected suggestions.\n   */\n  ignoreSuggestionAllSelected() {\n    this.isBulkOperationPending = true;\n    this.suggestionService.ignoreSuggestionMultiple(Object.values(this.selectedSuggestions)).pipe(\n      tap((results: SuggestionBulkResult) => {\n        this.suggestionTargetsStateService.dispatchRefreshUserSuggestionsAction();\n        this.isBulkOperationPending = false;\n        this.selectedSuggestions = {};\n        if (results.success > 0) {\n          this.notificationService.success(\n            this.translateService.get('suggestion.ignoreSuggestion.bulk.success',\n              { count: results.success }));\n        }\n        if (results.fails > 0) {\n          this.notificationService.error(\n            this.translateService.get('suggestion.ignoreSuggestion.bulk.error',\n              { count: results.fails }));\n        }\n      }),\n      switchMap(() => this.updatePage()),\n    ).subscribe();\n  }\n\n  /**\n   * Used to approve & import.\n   * @param event contains the suggestion and the target collection\n   */\n  approveAndImport(event: SuggestionApproveAndImport) {\n    this.suggestionService.approveAndImport(this.workspaceItemService, event.suggestion, event.collectionId).pipe(\n      tap((workspaceitem: WorkspaceItem) => {\n        const content = this.translateService.instant('suggestion.approveAndImport.success', { url: getWorkspaceItemEditRoute(workspaceitem.id) });\n        this.notificationService.success('', content, { timeOut:0 }, true);\n        this.suggestionTargetsStateService.dispatchRefreshUserSuggestionsAction();\n      }),\n      switchMap(() => this.updatePage()),\n    ).subscribe();\n  }\n\n  /**\n   * Used to approve & import all selected suggestions.\n   * @param event contains the target collection\n   */\n  approveAndImportAllSelected(event: SuggestionApproveAndImport) {\n    this.isBulkOperationPending = true;\n    this.suggestionService.approveAndImportMultiple(this.workspaceItemService, Object.values(this.selectedSuggestions), event.collectionId).pipe(\n      tap((results: SuggestionBulkResult) => {\n        this.suggestionTargetsStateService.dispatchRefreshUserSuggestionsAction();\n        this.isBulkOperationPending = false;\n        this.selectedSuggestions = {};\n        if (results.success > 0) {\n          this.notificationService.success(\n            this.translateService.get('suggestion.approveAndImport.bulk.success',\n              { count: results.success }));\n        }\n        if (results.fails > 0) {\n          this.notificationService.error(\n            this.translateService.get('suggestion.approveAndImport.bulk.error',\n              { count: results.fails }));\n        }\n      }),\n      switchMap(() => this.updatePage()),\n    ).subscribe();\n  }\n\n  /**\n   * When a specific suggestion is selected.\n   * @param object the suggestions\n   * @param selected the new selected value for the suggestion\n   */\n  onSelected(object: Suggestion, selected: boolean) {\n    if (selected) {\n      this.selectedSuggestions[object.id] = object;\n    } else {\n      delete this.selectedSuggestions[object.id];\n    }\n  }\n\n  /**\n   * When Toggle Select All occurs.\n   * @param suggestions all the visible suggestions inside the page\n   */\n  onToggleSelectAll(suggestions: Suggestion[]) {\n    if ( this.getSelectedSuggestionsCount() > 0) {\n      this.selectedSuggestions = {};\n    } else {\n      suggestions.forEach((suggestion) => {\n        this.selectedSuggestions[suggestion.id] = suggestion;\n      });\n    }\n  }\n\n  /**\n   * The current number of selected suggestions.\n   */\n  getSelectedSuggestionsCount(): number {\n    return Object.keys(this.selectedSuggestions).length;\n  }\n\n  /**\n   * Return true if all the suggestion are configured with the same fixed collection in the configuration.\n   * @param suggestions\n   */\n  isCollectionFixed(suggestions: Suggestion[]): boolean {\n    return this.suggestionService.isCollectionFixed(suggestions);\n  }\n\n  /**\n   * Label to be used to translate the suggestion source.\n   */\n  translateSuggestionSource() {\n    return this.suggestionService.translateSuggestionSource(this.suggestionSource);\n  }\n\n  /**\n   * Label to be used to translate the suggestion type.\n   */\n  translateSuggestionType() {\n    return this.suggestionService.translateSuggestionType(this.suggestionSource);\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n        <ng-container *ngVar=\"(suggestionsRD$ | async) as suggestionsRD\">\n          <ds-loading *ngIf=\"(processing$ | async)\"></ds-loading>\n          <div *ngIf=\"(processing$ | async) !== true && suggestionsRD?.pageInfo?.totalElements > 0\">\n\n            <h1>\n              {{'suggestion.suggestionFor' | translate}}\n              <a target=\"_blank\" [routerLink]=\"['/entities/person/', researcherUuid]\">{{researcherName}}</a>\n              {{'suggestion.from.source' | translate}} {{ translateSuggestionSource() | translate }}\n            </h1>\n\n            <div class=\"mb-3 mt-3\">\n              <button class=\"btn mr-2 btn-light\" (click)=\"onToggleSelectAll(suggestionsRD.page)\">Select / Deselect All</button>\n              <em>({{ getSelectedSuggestionsCount() }})</em>\n              <ds-suggestion-actions *ngIf=\"getSelectedSuggestionsCount() > 0\"\n                                      class=\"m-2\"\n                                     [isBulk]=\"true\"\n                                     [isCollectionFixed]=\"isCollectionFixed(suggestionsRD.page)\"\n                                     (approveAndImport)=\"approveAndImportAllSelected($event)\"\n                                     (ignoreSuggestionClicked)=\"ignoreSuggestionAllSelected()\"></ds-suggestion-actions>\n              <i class='fas fa-circle-notch fa-spin' *ngIf=\"isBulkOperationPending\"></i>\n            </div>\n            <ds-pagination *ngIf=\"(processing$ | async) !== true\"\n                           [paginationOptions]=\"paginationOptions\"\n                           [sortOptions]=\"paginationSortConfig\"\n                           [collectionSize]=\"suggestionsRD?.pageInfo?.totalElements\" [hideGear]=\"false\"\n                           [hidePagerWhenSinglePage]=\"false\" [hidePaginationDetail]=\"false\"\n                           (paginationChange)=\"onPaginationChange()\">\n              <ul class=\"list-unstyled\">\n                <li *ngFor=\"let object of suggestionsRD?.page; let i = index; let last = last\" class=\"mt-4 mb-4\">\n                  <ds-suggestion-list-item\n                    [object]=\"object\"\n                    [isSelected]=\"!!selectedSuggestions[object.id]\"\n                    [isCollectionFixed]=\"isCollectionFixed([object])\"\n                    (ignoreSuggestionClicked)=\"ignoreSuggestion($event)\"\n                    (selected)=\"onSelected(object, $event)\"\n                    (approveAndImport)=\"approveAndImport($event)\"></ds-suggestion-list-item>\n                </li>\n              </ul>\n            </ds-pagination>\n          </div>\n          <ds-alert *ngIf=\"(processing$ | async) !== true && (suggestionsRD?.pageInfo?.totalElements === 0 || !suggestionsRD)\" [type]=\"'alert-info'\">\n            {{'suggestion.count.missing'  | translate}}\n          </ds-alert>\n        </ng-container>\n    </div>\n  </div>\n</div>\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { RemoteData } from '../core/data/remote-data';\nimport { SuggestionTarget } from '../core/notifications/suggestions/models/suggestion-target.model';\nimport { SuggestionTargetDataService } from '../core/notifications/suggestions/target/suggestion-target-data.service';\nimport { getFirstCompletedRemoteData } from '../core/shared/operators';\n\n/**\n * Method for resolving a suggestion target based on the parameters in the current route\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {SuggestionTargetDataService} suggestionsDataService\n * @returns Observable<<RemoteData<Collection>> Emits the found collection based on the parameters in the current route,\n * or an error if something went wrong\n */\nexport const suggestionsPageResolver: ResolveFn<RemoteData<SuggestionTarget>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  suggestionsDataService: SuggestionTargetDataService = inject(SuggestionTargetDataService),\n): Observable<RemoteData<SuggestionTarget>> => {\n  return suggestionsDataService.getTargetById(route.params.targetId).pipe(\n    getFirstCompletedRemoteData(),\n  );\n};\n","import {\n  AsyncPipe,\n  NgClass,\n  NgFor,\n  NgIf,\n} from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\nimport { Context } from '../../../../../../../../../app/core/shared/context.model';\nimport { ViewMode } from '../../../../../../../../../app/core/shared/view-mode.model';\nimport { ThemedBadgesComponent } from '../../../../../../../../../app/shared/object-collection/shared/badges/themed-badges.component';\nimport { ItemSearchResult } from '../../../../../../../../../app/shared/object-collection/shared/item-search-result.model';\nimport { listableObjectComponent } from '../../../../../../../../../app/shared/object-collection/shared/listable-object/listable-object.decorator';\nimport { ItemSearchResultListElementComponent as BaseComponent } from '../../../../../../../../../app/shared/object-list/search-result-list-element/item-search-result/item-types/item/item-search-result-list-element.component';\nimport { TruncatableComponent } from '../../../../../../../../../app/shared/truncatable/truncatable.component';\nimport { TruncatablePartComponent } from '../../../../../../../../../app/shared/truncatable/truncatable-part/truncatable-part.component';\nimport { ThemedThumbnailComponent } from '../../../../../../../../../app/thumbnail/themed-thumbnail.component';\n\n@listableObjectComponent('PublicationSearchResult', ViewMode.ListElement, Context.Any, 'custom')\n@listableObjectComponent(ItemSearchResult, ViewMode.ListElement, Context.Any, 'custom')\n@Component({\n  selector: 'ds-item-search-result-list-element',\n  // styleUrls: ['./item-search-result-list-element.component.scss'],\n  styleUrls: ['../../../../../../../../../app/shared/object-list/search-result-list-element/item-search-result/item-types/item/item-search-result-list-element.component.scss'],\n  // templateUrl: './item-search-result-list-element.component.html',\n  templateUrl: '../../../../../../../../../app/shared/object-list/search-result-list-element/item-search-result/item-types/item/item-search-result-list-element.component.html',\n  standalone: true,\n  imports: [NgIf, RouterLink, ThemedThumbnailComponent, NgClass, ThemedBadgesComponent, TruncatableComponent, TruncatablePartComponent, NgFor, AsyncPipe],\n\n})\nexport class ItemSearchResultListElementComponent extends BaseComponent {\n}\n","<div class=\"row\">\n  <div *ngIf=\"showThumbnails\" class=\"col-3 col-md-2\">\n    <a *ngIf=\"linkType !== linkTypes.None\" [target]=\"(linkType === linkTypes.ExternalLink) ? '_blank' : '_self'\" [attr.rel]=\"(linkType === linkTypes.ExternalLink) ? 'noopener noreferrer' : null\"\n       [routerLink]=\"[itemPageRoute]\" class=\"dont-break-out\">\n    <ds-thumbnail [thumbnail]=\"dso?.thumbnail | async\" [limitWidth]=\"true\">\n    </ds-thumbnail>\n    </a>\n    <span *ngIf=\"linkType === linkTypes.None\" class=\"dont-break-out\">\n    <ds-thumbnail [thumbnail]=\"dso?.thumbnail | async\" [limitWidth]=\"true\">\n    </ds-thumbnail>\n    </span>\n  </div>\n  <div [ngClass]=\"showThumbnails ? 'col-9' : 'col-md-12'\">\n    <div class=\"d-flex\">\n      <ds-badges *ngIf=\"showLabel\" [object]=\"dso\" [context]=\"context\" [showAccessStatus]=\"true\"></ds-badges>\n    </div>\n\n    <ds-truncatable [id]=\"dso.id\" *ngIf=\"object !== undefined && object !== null\">\n      <a *ngIf=\"linkType !== linkTypes.None\" [target]=\"(linkType === linkTypes.ExternalLink) ? '_blank' : '_self'\" [attr.rel]=\"(linkType === linkTypes.ExternalLink) ? 'noopener noreferrer' : null\"\n         [routerLink]=\"[itemPageRoute]\" class=\"lead item-list-title dont-break-out\"\n         [innerHTML]=\"dsoTitle\"></a>\n      <span *ngIf=\"linkType === linkTypes.None\" class=\"lead item-list-title dont-break-out\"\n            [innerHTML]=\"dsoTitle\"></span>\n      <span class=\"text-muted\">\n        <ds-truncatable-part [id]=\"dso.id\" [minLines]=\"1\">\n          <ng-container *ngIf=\"dso.firstMetadataValue('dc.publisher') || dso.firstMetadataValue('dc.date.issued')\">\n            (<span *ngIf=\"dso.firstMetadataValue('dc.publisher')\" class=\"item-list-publisher\" [innerHTML]=\"firstMetadataValue('dc.publisher')\"></span>\n            <span *ngIf=\"dso.firstMetadataValue('dc.publisher') && dso.firstMetadataValue('dc.date.issued')\">, </span>\n          <span *ngIf=\"dso.firstMetadataValue('dc.date.issued')\" class=\"item-list-date\" [innerHTML]=\"firstMetadataValue('dc.date.issued')\"></span>)\n          </ng-container>\n          <span *ngIf=\"dso.allMetadata(['dc.contributor.author', 'dc.creator', 'dc.contributor.*']).length > 0\" class=\"item-list-authors\">\n            <span *ngFor=\"let author of allMetadataValues(['dc.contributor.author', 'dc.creator', 'dc.contributor.*']); let last=last;\">\n                <span [innerHTML]=\"author\"><span [innerHTML]=\"author\"></span></span>\n                <span *ngIf=\"!last\">; </span>\n            </span>\n          </span>\n        </ds-truncatable-part>\n      </span>\n      <div *ngIf=\"dso.firstMetadataValue('dc.description.abstract')\" class=\"item-list-abstract\">\n        <ds-truncatable-part [id]=\"dso.id\" [minLines]=\"3\"><span\n          [innerHTML]=\"firstMetadataValue('dc.description.abstract')\"></span>\n        </ds-truncatable-part>\n      </div>\n    </ds-truncatable>\n  </div>\n</div>\n"],"names":["Breadcrumb","constructor","text","url","inject","PublicationClaimBreadcrumbService","publicationClaimBreadcrumbResolver","route","state","breadcrumbService","targetId","paramMap","get","split","provider","key","TranslateService","combineLatest","map","AuthorizationDataService","FeatureID","ItemDataService","getFirstCompletedRemoteData","DSONameService","dataService","dsoNameService","tranlsateService","authorizationService","ADMIN_PUBLICATION_CLAIMS_PATH","ADMIN_PUBLICATION_CLAIMS_BREADCRUMB_KEY","getBreadcrumbs","findById","pipe","isAuthorized","AdministratorOf","item","isAdmin","itemName","getName","payload","instant","name","undefined","i0","ɵɵinject","i1","i2","i3","i4","factory","ɵfac","providedIn","autoserialize","autoserializeAs","deserialize","typedObject","MetadataMap","MetadataMapSerializer","ResourceType","excludeFromEquals","SUGGESTION","Suggestion","type","__decorate","NgIf","EventEmitter","NgbDropdownModule","NgbModal","TranslateModule","take","BtnDisabledDirective","ThemedCreateItemParentSelectorComponent","EntityDropdownComponent","ɵɵelementStart","ɵɵlistener","SuggestionActionsComponent_button_2_Template_button_click_0_listener","ɵɵrestoreView","_r2","ctx_r2","ɵɵnextContext","ɵɵresetView","approveAndImportCollectionFixed","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","approveAndImportLabel","SuggestionActionsComponent_ng_template_3_Template_ds_entity_dropdown_selectionChange_6_listener","$event","_r4","openDialog","ɵɵelementContainerStart","SuggestionActionsComponent_button_9_Template_button_click_0_listener","_r5","toggleSeeEvidences","ɵɵtemplate","SuggestionActionsComponent_button_9_ng_container_2_Template","SuggestionActionsComponent_button_9_ng_container_3_Template","ɵɵproperty","hasEvidence","seeEvidence","SuggestionActionsComponent","modalService","isBulk","isCollectionFixed","ignoreSuggestionClicked","approveAndImport","seeEvidences","entity","modalRef","open","componentInstance","emitOnly","entityType","label","select","subscribe","collection","emit","suggestion","object","collectionId","id","ignoreSuggestion","ignoreSuggestionLabel","ɵɵdirectiveInject","selectors","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","SuggestionActionsComponent_Template","rf","ctx","SuggestionActionsComponent_button_2_Template","SuggestionActionsComponent_ng_template_3_Template","ɵɵtemplateRefExtractor","SuggestionActionsComponent_Template_button_click_5_listener","_r1","SuggestionActionsComponent_button_9_Template","chooseCollection_r6","TranslatePipe","NgbDropdown","NgbDropdownToggle","NgbDropdownMenu","styles","NgFor","fadeIn","ObjectKeysPipe","ɵɵtextInterpolate","ctx_r1","evidences","evidence_r1","score","notes","SuggestionEvidencesComponent_div_1_tr_14_Template","SuggestionEvidencesComponent","SuggestionEvidencesComponent_Template","SuggestionEvidencesComponent_div_1_Template","data","animation","ItemSearchResultListElementComponent","Item","isNotEmpty","ctx_r0","SuggestionListElementComponent","isSelected","selected","ngOnInit","listableObject","indexableObject","Object","assign","metadata","hitHighlights","onApproveAndImport","event","onIgnoreSuggestion","suggestionId","changeSelected","target","checked","next","hasEvidences","onSeeEvidences","SuggestionListElementComponent_Template","SuggestionListElementComponent_Template_input_change_4_listener","SuggestionListElementComponent_Template_ds_suggestion_actions_approveAndImport_15_listener","SuggestionListElementComponent_Template_ds_suggestion_actions_seeEvidences_15_listener","SuggestionListElementComponent_Template_ds_suggestion_actions_ignoreSuggestionClicked_15_listener","SuggestionListElementComponent_div_16_Template","transform","value","keys","forEach","k","push","pure","authenticatedGuard","SuggestionsPageComponent","suggestionsPageResolver","ROUTES","path","resolve","suggestionTargets","breadcrumb","title","breadcrumbKey","showBreadcrumbsFluid","canActivate","runGuardsAndResolvers","component","AsyncPipe","NgForOf","ActivatedRoute","Router","RouterLink","BehaviorSubject","distinctUntilChanged","switchMap","tap","AuthService","SortDirection","SortOptions","FindListOptions","PaginationService","redirectOn4xx","getFirstSucceededRemoteDataPayload","WorkspaceitemDataService","SuggestionTargetsStateService","SuggestionsService","AlertComponent","ThemedLoadingComponent","NotificationsService","PaginationComponent","PaginationComponentOptions","VarDirective","getWorkspaceItemEditRoute","SuggestionsPageComponent_ng_container_3_div_3_ds_suggestion_actions_14_Template_ds_suggestion_actions_approveAndImport_0_listener","approveAndImportAllSelected","SuggestionsPageComponent_ng_container_3_div_3_ds_suggestion_actions_14_Template_ds_suggestion_actions_ignoreSuggestionClicked_0_listener","ignoreSuggestionAllSelected","suggestionsRD_r2","page","SuggestionsPageComponent_ng_container_3_div_3_ds_pagination_16_li_2_Template_ds_suggestion_list_item_ignoreSuggestionClicked_1_listener","_r6","SuggestionsPageComponent_ng_container_3_div_3_ds_pagination_16_li_2_Template_ds_suggestion_list_item_selected_1_listener","object_r7","$implicit","onSelected","SuggestionsPageComponent_ng_container_3_div_3_ds_pagination_16_li_2_Template_ds_suggestion_list_item_approveAndImport_1_listener","selectedSuggestions","ɵɵpureFunction1","_c1","SuggestionsPageComponent_ng_container_3_div_3_ds_pagination_16_Template_ds_pagination_paginationChange_0_listener","onPaginationChange","SuggestionsPageComponent_ng_container_3_div_3_ds_pagination_16_li_2_Template","paginationOptions","paginationSortConfig","pageInfo","totalElements","SuggestionsPageComponent_ng_container_3_div_3_Template_button_click_10_listener","ngVar","onToggleSelectAll","SuggestionsPageComponent_ng_container_3_div_3_ds_suggestion_actions_14_Template","SuggestionsPageComponent_ng_container_3_div_3_i_15_Template","SuggestionsPageComponent_ng_container_3_div_3_ds_pagination_16_Template","_c0","researcherUuid","researcherName","ɵɵtextInterpolate2","translateSuggestionSource","getSelectedSuggestionsCount","isBulkOperationPending","processing$","SuggestionsPageComponent_ng_container_3_ds_loading_1_Template","SuggestionsPageComponent_ng_container_3_div_3_Template","SuggestionsPageComponent_ng_container_3_ds_alert_5_Template","authService","notificationService","paginationService","router","suggestionService","suggestionTargetsStateService","translateService","workspaceItemService","pageSizeOptions","DESC","defaultConfig","sort","suggestionsRD$","targetRD$","targetId$","suggestionTarget","display","suggestionSource","source","getTargetUuid","updatePage","dispatchMarkUserSuggestionsAsVisitedAction","pageConfig$","getFindListOptions","config","getSuggestions","elementsPerPage","currentPage","resultsRD","hasSucceeded","clearSuggestionRequests","dispatchRefreshUserSuggestionsAction","ignoreSuggestionMultiple","values","results","success","count","fails","error","workspaceitem","content","timeOut","approveAndImportMultiple","suggestions","length","translateSuggestionType","i5","i6","i7","i8","SuggestionsPageComponent_Template","SuggestionsPageComponent_ng_container_3_Template","SuggestionTargetDataService","suggestionsDataService","getTargetById","params","NgClass","Context","ViewMode","ThemedBadgesComponent","ItemSearchResult","listableObjectComponent","BaseComponent","TruncatableComponent","TruncatablePartComponent","ThemedThumbnailComponent","linkType","linkTypes","ExternalLink","itemPageRoute","dso","thumbnail","ItemSearchResultListElementComponent_div_1_a_1_Template","ItemSearchResultListElementComponent_div_1_span_2_Template","None","context","dsoTitle","ɵɵsanitizeHtml","firstMetadataValue","ItemSearchResultListElementComponent_ds_truncatable_5_ng_container_5_span_2_Template","ItemSearchResultListElementComponent_ds_truncatable_5_ng_container_5_span_3_Template","ItemSearchResultListElementComponent_ds_truncatable_5_ng_container_5_span_4_Template","ItemSearchResultListElementComponent_ds_truncatable_5_span_6_span_1_span_3_Template","author_r2","last_r3","ItemSearchResultListElementComponent_ds_truncatable_5_span_6_span_1_Template","allMetadataValues","ɵɵpureFunction0","ItemSearchResultListElementComponent_ds_truncatable_5_a_1_Template","ItemSearchResultListElementComponent_ds_truncatable_5_span_2_Template","ItemSearchResultListElementComponent_ds_truncatable_5_ng_container_5_Template","ItemSearchResultListElementComponent_ds_truncatable_5_span_6_Template","ItemSearchResultListElementComponent_ds_truncatable_5_div_7_Template","allMetadata","t","ɵɵInheritDefinitionFeature","ItemSearchResultListElementComponent_Template","ItemSearchResultListElementComponent_div_1_Template","ItemSearchResultListElementComponent_ds_badges_4_Template","ItemSearchResultListElementComponent_ds_truncatable_5_Template","showThumbnails","showLabel","ListElement","Any"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}