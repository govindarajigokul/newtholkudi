{"version":3,"file":"src_app_submit-page_submit-page-routes_ts.js","mappings":"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","sources":["./src/app/breadcrumbs/breadcrumb/breadcrumb.model.ts","./src/app/core/breadcrumbs/i18n-breadcrumb.resolver.ts","./src/app/core/breadcrumbs/i18n-breadcrumbs.service.ts","./src/app/submission/submit/submission-submit.component.ts","./src/app/submission/submit/themed-submission-submit.component.ts","./src/app/shared/theme-support/themed.component.html","./src/app/submit-page/submit-page-routes.ts","./src/themes/ lazy ^\\.\\/.*\\/app\\/submission\\/submit\\/submission\\-submit\\.component$ namespace object"],"sourcesContent":["/**\n * Class representing a single breadcrumb\n */\nexport class Breadcrumb {\n  constructor(\n    /**\n     * The display value of the breadcrumb\n     */\n    public text: string,\n    /**\n     * The optional url of the breadcrumb\n     */\n    public url?: string) {\n  }\n}\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { BreadcrumbConfig } from '../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { hasNoValue } from '../../shared/empty.util';\nimport { currentPathFromSnapshot } from '../../shared/utils/route.utils';\nimport { I18nBreadcrumbsService } from './i18n-breadcrumbs.service';\n\n/**\n * Method for resolving an I18n breadcrumb configuration object\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {I18nBreadcrumbsService} breadcrumbService\n * @returns BreadcrumbConfig object\n */\nexport const i18nBreadcrumbResolver: ResolveFn<BreadcrumbConfig<string>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  breadcrumbService: I18nBreadcrumbsService = inject(I18nBreadcrumbsService),\n): BreadcrumbConfig<string> => {\n  const key = route.data.breadcrumbKey;\n  if (hasNoValue(key)) {\n    throw new Error('You provided an i18nBreadcrumbResolver for url \\\"' + route.url + '\\\" but no breadcrumbKey in the route\\'s data');\n  }\n  const fullPath = currentPathFromSnapshot(route);\n  return { provider: breadcrumbService, key: key, url: fullPath };\n};\n","import { Injectable } from '@angular/core';\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs';\n\nimport { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport { BreadcrumbsProviderService } from './breadcrumbsProviderService';\n\n/**\n * The postfix for i18n breadcrumbs\n */\nexport const BREADCRUMB_MESSAGE_POSTFIX = '.breadcrumbs';\n\n/**\n * Service to calculate i18n breadcrumbs for a single part of the route\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class I18nBreadcrumbsService implements BreadcrumbsProviderService<string> {\n\n  /**\n   * Method to calculate the breadcrumbs\n   * @param key The key used to resolve the breadcrumb\n   * @param url The url to use as a link for this breadcrumb\n   */\n  getBreadcrumbs(key: string, url: string): Observable<Breadcrumb[]> {\n    return observableOf([new Breadcrumb(key + BREADCRUMB_MESSAGE_POSTFIX, url)]);\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router,\n} from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  Subscription,\n} from 'rxjs';\nimport {\n  debounceTime,\n  switchMap,\n} from 'rxjs/operators';\n\nimport { SubmissionDefinitionsModel } from '../../core/config/models/config-submission-definitions.model';\nimport { ItemDataService } from '../../core/data/item-data.service';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { Item } from '../../core/shared/item.model';\nimport { getAllSucceededRemoteData } from '../../core/shared/operators';\nimport { SubmissionObject } from '../../core/submission/models/submission-object.model';\nimport { WorkspaceitemSectionsObject } from '../../core/submission/models/workspaceitem-sections.model';\nimport {\n  hasValue,\n  isEmpty,\n  isNotEmptyOperator,\n  isNotNull,\n} from '../../shared/empty.util';\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\nimport { SubmissionService } from '../submission.service';\n\n/**\n * This component allows to submit a new workspaceitem.\n */\n@Component({\n  selector: 'ds-base-submission-submit',\n  styleUrls: ['./submission-submit.component.scss'],\n  templateUrl: './submission-submit.component.html',\n  standalone: true,\n})\nexport class SubmissionSubmitComponent implements OnDestroy, OnInit {\n\n  /**\n   * The collection id this submission belonging to\n   * @type {string}\n   */\n  public collectionId: string;\n\n  /**\n   * BehaviorSubject containing the self link to the item for this submission\n   * @private\n   */\n  private itemLink$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n\n  /**\n   * The item for this submission.\n   */\n  public item: Item;\n\n  /**\n   * The collection id input to create a new submission\n   * @type {string}\n   */\n  public collectionParam: string;\n\n  /**\n   * The list of submission's sections\n   * @type {WorkspaceitemSectionsObject}\n   */\n  public sections: WorkspaceitemSectionsObject;\n\n  /**\n   * The submission self url\n   * @type {string}\n   */\n  public selfUrl: string;\n\n  /**\n   * The configuration object that define this submission\n   * @type {SubmissionDefinitionsModel}\n   */\n  public submissionDefinition: SubmissionDefinitionsModel;\n\n  /**\n   * The submission id\n   * @type {string}\n   */\n  public submissionId: string;\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  protected subs: Subscription[] = [];\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {ChangeDetectorRef} changeDetectorRef\n   * @param {NotificationsService} notificationsService\n   * @param {ItemDataService} itemDataService\n   * @param {SubmissionService} submissionService\n   * @param {Router} router\n   * @param {TranslateService} translate\n   * @param {ViewContainerRef} viewContainerRef\n   * @param {ActivatedRoute} route\n   */\n  constructor(private changeDetectorRef: ChangeDetectorRef,\n              private notificationsService: NotificationsService,\n              private router: Router,\n              private itemDataService: ItemDataService,\n              private submissionService: SubmissionService,\n              private translate: TranslateService,\n              private viewContainerRef: ViewContainerRef,\n              private route: ActivatedRoute) {\n    this.route\n      .queryParams\n      .subscribe((params) => {\n        this.collectionParam = (params.collection);\n      });\n  }\n\n  /**\n   * Create workspaceitem on the server and initialize all instance variables\n   */\n  ngOnInit() {\n    // NOTE execute the code on the browser side only, otherwise it is executed twice\n    this.subs.push(\n      this.submissionService.createSubmission(this.collectionParam)\n        .subscribe((submissionObject: SubmissionObject) => {\n          // NOTE new submission is created on the browser side only\n          if (isNotNull(submissionObject)) {\n            if (isEmpty(submissionObject)) {\n              this.notificationsService.info(null, this.translate.get('submission.general.cannot_submit'));\n              this.router.navigate(['/mydspace']);\n            } else {\n              this.router.navigate(['/workspaceitems', submissionObject.id, 'edit'], { replaceUrl: true });\n            }\n          }\n        }),\n      this.itemLink$.pipe(\n        isNotEmptyOperator(),\n        switchMap((itemLink: string) =>\n          this.itemDataService.findByHref(itemLink),\n        ),\n        getAllSucceededRemoteData(),\n        // Multiple sources can update the item in quick succession.\n        // We only want to rerender the form if the item is unchanged for some time\n        debounceTime(300),\n      ).subscribe((itemRd: RemoteData<Item>) => {\n        this.item = itemRd.payload;\n        this.changeDetectorRef.detectChanges();\n      }),\n    );\n  }\n\n  /**\n   * Unsubscribe from all subscriptions\n   */\n  ngOnDestroy() {\n    this.subs\n      .filter((subscription) => hasValue(subscription))\n      .forEach((subscription) => subscription.unsubscribe());\n\n    this.viewContainerRef.clear();\n    this.changeDetectorRef.markForCheck();\n  }\n\n}\n","import { Component } from '@angular/core';\n\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { SubmissionSubmitComponent } from './submission-submit.component';\n\n/**\n * Themed wrapper for SubmissionSubmitComponent\n */\n@Component({\n  selector: 'ds-submission-submit',\n  styleUrls: [],\n  templateUrl: './../../shared/theme-support/themed.component.html',\n  standalone: true,\n  imports: [SubmissionSubmitComponent],\n})\nexport class ThemedSubmissionSubmitComponent extends ThemedComponent<SubmissionSubmitComponent> {\n  protected getComponentName(): string {\n    return 'SubmissionSubmitComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/submission/submit/submission-submit.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./submission-submit.component`);\n  }\n}\n","<ng-template #vcr>\n</ng-template>\n<div #content>\n  <ng-content></ng-content>\n</div>\n","import { Route } from '@angular/router';\n\nimport { authenticatedGuard } from '../core/auth/authenticated.guard';\nimport { i18nBreadcrumbResolver } from '../core/breadcrumbs/i18n-breadcrumb.resolver';\nimport { ThemedSubmissionSubmitComponent } from '../submission/submit/themed-submission-submit.component';\n\nexport const ROUTES: Route[] = [\n  {\n    canActivate: [authenticatedGuard],\n    path: '',\n    pathMatch: 'full',\n    component: ThemedSubmissionSubmitComponent,\n    resolve: {\n      breadcrumb: i18nBreadcrumbResolver,\n    },\n    data: { title: 'submission.submit.title', breadcrumbKey: 'submission.submit' },\n  },\n];\n","var map = {\n\t\"./custom/app/submission/submit/submission-submit.component\": [\n\t\t84297,\n\t\t\"src_themes_custom_app_submission_submit_submission-submit_component_ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 72504;\nmodule.exports = webpackAsyncContext;"],"names":["Breadcrumb","constructor","text","url","inject","hasNoValue","currentPathFromSnapshot","I18nBreadcrumbsService","i18nBreadcrumbResolver","route","state","breadcrumbService","key","data","breadcrumbKey","Error","fullPath","provider","of","observableOf","BREADCRUMB_MESSAGE_POSTFIX","getBreadcrumbs","factory","ɵfac","providedIn","ChangeDetectorRef","ViewContainerRef","ActivatedRoute","Router","TranslateService","BehaviorSubject","debounceTime","switchMap","ItemDataService","getAllSucceededRemoteData","hasValue","isEmpty","isNotEmptyOperator","isNotNull","NotificationsService","SubmissionService","SubmissionSubmitComponent","changeDetectorRef","notificationsService","router","itemDataService","submissionService","translate","viewContainerRef","itemLink$","undefined","subs","queryParams","subscribe","params","collectionParam","collection","ngOnInit","push","createSubmission","submissionObject","info","get","navigate","id","replaceUrl","pipe","itemLink","findByHref","itemRd","item","payload","detectChanges","ngOnDestroy","filter","subscription","forEach","unsubscribe","clear","markForCheck","i0","ɵɵdirectiveInject","i1","i2","i3","i4","i5","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","template","SubmissionSubmitComponent_Template","rf","ctx","styles","ThemedComponent","ThemedSubmissionSubmitComponent","getComponentName","importThemedComponent","themeName","importUnthemedComponent","t","ɵɵInheritDefinitionFeature","ngContentSelectors","_c0","consts","ThemedSubmissionSubmitComponent_Template","ɵɵtemplate","ThemedSubmissionSubmitComponent_ng_template_0_Template","ɵɵtemplateRefExtractor","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","authenticatedGuard","ROUTES","canActivate","path","pathMatch","component","resolve","breadcrumb","title"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}