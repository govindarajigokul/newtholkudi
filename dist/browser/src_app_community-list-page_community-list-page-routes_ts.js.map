{"version":3,"file":"src_app_community-list-page_community-list-page-routes_ts.js","mappings":"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","sources":["./src/app/breadcrumbs/breadcrumb/breadcrumb.model.ts","./src/app/community-list-page/community-list-datasource.ts","./src/app/community-list-page/community-list-page-routes.ts","./src/app/community-list-page/community-list-page.component.ts","./src/app/community-list-page/community-list-page.component.html","./src/app/community-list-page/community-list-service.ts","./src/app/community-list-page/community-list/community-list.component.ts","./src/app/community-list-page/community-list/community-list.component.html","./src/app/community-list-page/community-list/themed-community-list.component.ts","./src/app/shared/theme-support/themed.component.html","./src/app/community-list-page/show-more-flat-node.model.ts","./src/app/community-list-page/themed-community-list-page.component.ts","./src/app/core/breadcrumbs/i18n-breadcrumb.resolver.ts","./src/app/core/breadcrumbs/i18n-breadcrumbs.service.ts","./src/themes/ lazy ^\\.\\/.*\\/app\\/community\\-list\\-page\\/community\\-list\\-page\\.component$ namespace object","./src/themes/ lazy ^\\.\\/.*\\/app\\/community\\-list\\-page\\/community\\-list\\/community\\-list\\.component$ namespace object"],"sourcesContent":["/**\n * Class representing a single breadcrumb\n */\nexport class Breadcrumb {\n  constructor(\n    /**\n     * The display value of the breadcrumb\n     */\n    public text: string,\n    /**\n     * The optional url of the breadcrumb\n     */\n    public url?: string) {\n  }\n}\n","import {\n  CollectionViewer,\n  DataSource,\n} from '@angular/cdk/collections';\nimport {\n  BehaviorSubject,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { FindListOptions } from '../core/data/find-list-options.model';\nimport { hasValue } from '../shared/empty.util';\nimport { CommunityListService } from './community-list-service';\nimport { FlatNode } from './flat-node.model';\n\n/**\n * DataSource object needed by a CDK Tree to render its nodes.\n * The list of FlatNodes that this DataSource object represents gets created in the CommunityListService at\n *    the beginning (initial page-limited top communities) and re-calculated any time the tree state changes\n *    (a node gets expanded or page-limited result become larger by triggering a show more node)\n */\nexport class CommunityListDatasource implements DataSource<FlatNode> {\n\n  private communityList$ = new BehaviorSubject<FlatNode[]>([]);\n  public loading$ = new BehaviorSubject<boolean>(false);\n  private subLoadCommunities: Subscription;\n\n  constructor(private communityListService: CommunityListService) {\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<FlatNode[]> {\n    return this.communityList$.asObservable();\n  }\n\n  loadCommunities(findOptions: FindListOptions, expandedNodes: FlatNode[]) {\n    this.loading$.next(true);\n    if (hasValue(this.subLoadCommunities)) {\n      this.subLoadCommunities.unsubscribe();\n    }\n    this.subLoadCommunities = this.communityListService.loadCommunities(findOptions, expandedNodes).pipe(\n      finalize(() => this.loading$.next(false)),\n    ).subscribe((flatNodes: FlatNode[]) => {\n      this.communityList$.next(flatNodes);\n    });\n  }\n\n  disconnect(collectionViewer: CollectionViewer): void {\n    this.communityList$.complete();\n    this.loading$.complete();\n  }\n\n}\n","import { Route } from '@angular/router';\n\nimport { i18nBreadcrumbResolver } from '../core/breadcrumbs/i18n-breadcrumb.resolver';\nimport { ThemedCommunityListPageComponent } from './themed-community-list-page.component';\n\n/**\n * RouterModule to help navigate to the page with the community list tree\n */\nexport const ROUTES: Route[] = [\n  {\n    path: '',\n    component: ThemedCommunityListPageComponent,\n    pathMatch: 'full',\n    resolve: {\n      breadcrumb: i18nBreadcrumbResolver,\n    },\n    data: { title: 'communityList.tabTitle', breadcrumbKey: 'communityList' },\n  },\n];\n","import { Component } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ThemedCommunityListComponent } from './community-list/themed-community-list.component';\n\n/**\n * Page with title and the community list tree, as described in community-list.component;\n * navigated to with community-list.page.routing.module\n */\n@Component({\n  selector: 'ds-base-community-list-page',\n  templateUrl: './community-list-page.component.html',\n  standalone: true,\n  imports: [ThemedCommunityListComponent, TranslateModule],\n})\nexport class CommunityListPageComponent {\n\n}\n","<div class=\"container\">\n  <h1>{{ 'communityList.title' | translate }}</h1>\n  <ds-community-list></ds-community-list>\n</div>\n","/* eslint-disable max-classes-per-file */\nimport {\n  Inject,\n  Injectable,\n} from '@angular/core';\nimport {\n  createSelector,\n  Store,\n} from '@ngrx/store';\nimport {\n  combineLatest as observableCombineLatest,\n  Observable,\n  of as observableOf,\n} from 'rxjs';\nimport {\n  filter,\n  map,\n  switchMap,\n} from 'rxjs/operators';\nimport {\n  APP_CONFIG,\n  AppConfig,\n} from 'src/config/app-config.interface';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { AppState } from '../app.reducer';\nimport { getCollectionPageRoute } from '../collection-page/collection-page-routing-paths';\nimport { getCommunityPageRoute } from '../community-page/community-page-routing-paths';\nimport { CollectionDataService } from '../core/data/collection-data.service';\nimport { CommunityDataService } from '../core/data/community-data.service';\nimport { FindListOptions } from '../core/data/find-list-options.model';\nimport {\n  buildPaginatedList,\n  PaginatedList,\n} from '../core/data/paginated-list.model';\nimport { RemoteData } from '../core/data/remote-data';\nimport { Collection } from '../core/shared/collection.model';\nimport { Community } from '../core/shared/community.model';\nimport {\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteData,\n} from '../core/shared/operators';\nimport { PageInfo } from '../core/shared/page-info.model';\nimport {\n  hasValue,\n  isNotEmpty,\n} from '../shared/empty.util';\nimport { followLink } from '../shared/utils/follow-link-config.model';\nimport { CommunityListSaveAction } from './community-list.actions';\nimport { CommunityListState } from './community-list.reducer';\nimport { FlatNode } from './flat-node.model';\nimport { ShowMoreFlatNode } from './show-more-flat-node.model';\n\n// Helper method to combine and flatten an array of observables of flatNode arrays\nexport const combineAndFlatten = (obsList: Observable<FlatNode[]>[]): Observable<FlatNode[]> =>\n  observableCombineLatest([...obsList]).pipe(\n    map((matrix: any[][]) => [].concat(...matrix)),\n    filter((arr: any[]) => arr.every((e) => hasValue(e))),\n  );\n\n/**\n * Creates a flatNode from a community or collection\n * @param c               The community or collection this flatNode represents\n * @param isExpandable    Whether or not this node is expandable (true if it has children)\n * @param level           Level indicating how deep in the tree this node should be rendered\n * @param isExpanded      Whether or not this node already is expanded\n * @param parent          Parent of this node (flatNode representing its parent community)\n */\nexport const toFlatNode = (\n  c: Community | Collection,\n  isExpandable: Observable<boolean>,\n  level: number,\n  isExpanded: boolean,\n  parent?: FlatNode,\n): FlatNode => ({\n  isExpandable$: isExpandable,\n  name: c.name,\n  id: c.id,\n  level: level,\n  isExpanded,\n  parent,\n  payload: c,\n  isShowMoreNode: false,\n  route: c instanceof Community ? getCommunityPageRoute(c.id) : getCollectionPageRoute(c.id),\n});\n\n/**\n * Creates a show More flatnode where only the level and parent are of importance\n */\nexport const showMoreFlatNode = (\n  id: string,\n  level: number,\n  parent: FlatNode,\n): FlatNode => ({\n  isExpandable$: observableOf(false),\n  name: 'Show More Flatnode',\n  id: id,\n  level: level,\n  isExpanded: false,\n  parent: parent,\n  payload: new ShowMoreFlatNode(),\n  isShowMoreNode: true,\n});\n\n// Selectors the get the communityList data out of the store\nconst communityListStateSelector = (state: AppState) => state.communityList;\nconst expandedNodesSelector = createSelector(communityListStateSelector, (communityList: CommunityListState) => communityList.expandedNodes);\nconst loadingNodeSelector = createSelector(communityListStateSelector, (communityList: CommunityListState) => communityList.loadingNode);\n\n/**\n * Service class for the community list, responsible for the creating of the flat list used by communityList dataSource\n *  and connection to the store to retrieve and save the state of the community list\n */\n@Injectable({ providedIn: 'root' })\nexport class CommunityListService {\n\n  private pageSize: number;\n\n  constructor(\n    @Inject(APP_CONFIG) protected appConfig: AppConfig,\n    private communityDataService: CommunityDataService,\n    private collectionDataService: CollectionDataService,\n    private store: Store<any>,\n  ) {\n    this.pageSize = appConfig.communityList.pageSize;\n  }\n\n  private configOnePage: FindListOptions = Object.assign(new FindListOptions(), {\n    elementsPerPage: 1,\n  });\n\n  saveCommunityListStateToStore(expandedNodes: FlatNode[], loadingNode: FlatNode): void {\n    this.store.dispatch(new CommunityListSaveAction(expandedNodes, loadingNode));\n  }\n\n  getExpandedNodesFromStore(): Observable<FlatNode[]> {\n    return this.store.select(expandedNodesSelector);\n  }\n\n  getLoadingNodeFromStore(): Observable<FlatNode> {\n    return this.store.select(loadingNodeSelector);\n  }\n\n  /**\n   * Gets all top communities, limited by page, and transforms this in a list of flatNodes.\n   * @param findOptions       FindListOptions\n   * @param expandedNodes     List of expanded nodes; if a node is not expanded its subCommunities and collections need\n   *                            not be added to the list\n   */\n  loadCommunities(findOptions: FindListOptions, expandedNodes: FlatNode[]): Observable<FlatNode[]> {\n    const currentPage = findOptions.currentPage;\n    const topCommunities = [];\n    for (let i = 1; i <= currentPage; i++) {\n      const pagination: FindListOptions = Object.assign({}, findOptions, { currentPage: i });\n      topCommunities.push(this.getTopCommunities(pagination));\n    }\n    const topComs$ = observableCombineLatest([...topCommunities]).pipe(\n      map((coms: PaginatedList<Community>[]) => {\n        const newPages: Community[][] = coms.map((unit: PaginatedList<Community>) => unit.page);\n        const newPage: Community[] = [].concat(...newPages);\n        let newPageInfo = new PageInfo();\n        if (coms && coms.length > 0) {\n          newPageInfo = Object.assign({}, coms[0].pageInfo, { currentPage });\n        }\n        return buildPaginatedList(newPageInfo, newPage);\n      }),\n    );\n    return topComs$.pipe(\n      switchMap((topComs: PaginatedList<Community>) => this.transformListOfCommunities(topComs, 0, null, expandedNodes)),\n      // distinctUntilChanged((a: FlatNode[], b: FlatNode[]) => a.length === b.length)\n    );\n  }\n\n  /**\n   * Puts the initial top level communities in a list to be called upon\n   */\n  private getTopCommunities(options: FindListOptions): Observable<PaginatedList<Community>> {\n    return this.communityDataService.findTop({\n      currentPage: options.currentPage,\n      elementsPerPage: this.pageSize,\n      sort: {\n        field: options.sort.field,\n        direction: options.sort.direction,\n      },\n    },\n    followLink('subcommunities', { findListOptions: this.configOnePage }),\n    followLink('collections', { findListOptions: this.configOnePage }))\n      .pipe(\n        getFirstSucceededRemoteData(),\n        map((results) => results.payload),\n      );\n  }\n\n  /**\n   * Transforms a list of communities to a list of FlatNodes according to the instructions detailed in transformCommunity\n   * @param listOfPaginatedCommunities    Paginated list of communities to be transformed\n   * @param level                         Level the tree is currently at\n   * @param parent                        FlatNode of the parent of this list of communities\n   * @param expandedNodes                 List of expanded nodes; if a node is not expanded its subcommunities and collections need not be added to the list\n   */\n  public transformListOfCommunities(listOfPaginatedCommunities: PaginatedList<Community>,\n    level: number,\n    parent: FlatNode,\n    expandedNodes: FlatNode[]): Observable<FlatNode[]> {\n    if (isNotEmpty(listOfPaginatedCommunities.page)) {\n      let currentPage = listOfPaginatedCommunities.currentPage;\n      if (isNotEmpty(parent)) {\n        currentPage = expandedNodes.find((node: FlatNode) => node.id === parent.id).currentCommunityPage;\n      }\n      let obsList = listOfPaginatedCommunities.page\n        .map((community: Community) => {\n          return this.transformCommunity(community, level, parent, expandedNodes);\n        });\n      if (currentPage < listOfPaginatedCommunities.totalPages && currentPage === listOfPaginatedCommunities.currentPage) {\n        obsList = [...obsList, observableOf([showMoreFlatNode(`community-${uuidv4()}`, level, parent)])];\n      }\n\n      return combineAndFlatten(obsList);\n    } else {\n      return observableOf([]);\n    }\n  }\n\n  /**\n   * Transforms a community in a list of FlatNodes containing firstly a flatnode of the community itself,\n   *      followed by flatNodes of its possible subcommunities and collection\n   * It gets called recursively for each subcommunity to add its subcommunities and collections to the list\n   * Number of subcommunities and collections added, is dependent on the current page the parent is at for respectively subcommunities and collections.\n   * @param community         Community being transformed\n   * @param level             Depth of the community in the list, subcommunities and collections go one level deeper\n   * @param parent            Flatnode of the parent community\n   * @param expandedNodes     List of nodes which are expanded, if node is not expanded, it need not add its page-limited subcommunities or collections\n   */\n  public transformCommunity(community: Community, level: number, parent: FlatNode, expandedNodes: FlatNode[]): Observable<FlatNode[]> {\n    let isExpanded = false;\n    if (isNotEmpty(expandedNodes)) {\n      isExpanded = hasValue(expandedNodes.find((node) => (node.id === community.id)));\n    }\n\n    const isExpandable$ = this.getIsExpandable(community);\n\n    const communityFlatNode = toFlatNode(community, isExpandable$, level, isExpanded, parent);\n\n    let obsList = [observableOf([communityFlatNode])];\n\n    if (isExpanded) {\n      const currentCommunityPage = expandedNodes.find((node: FlatNode) => node.id === community.id).currentCommunityPage;\n      let subcoms = [];\n      for (let i = 1; i <= currentCommunityPage; i++) {\n        const nextSetOfSubcommunitiesPage = this.communityDataService.findByParent(community.uuid, {\n          elementsPerPage: this.pageSize,\n          currentPage: i,\n        },\n        followLink('subcommunities', { findListOptions: this.configOnePage }),\n        followLink('collections', { findListOptions: this.configOnePage }))\n          .pipe(\n            getFirstCompletedRemoteData(),\n            switchMap((rd: RemoteData<PaginatedList<Community>>) => {\n              if (hasValue(rd) && hasValue(rd.payload)) {\n                return this.transformListOfCommunities(rd.payload, level + 1, communityFlatNode, expandedNodes);\n              } else {\n                return observableOf([]);\n              }\n            }),\n          );\n\n        subcoms = [...subcoms, nextSetOfSubcommunitiesPage];\n      }\n\n      obsList = [...obsList, combineAndFlatten(subcoms)];\n\n      const currentCollectionPage = expandedNodes.find((node: FlatNode) => node.id === community.id).currentCollectionPage;\n      let collections = [];\n      for (let i = 1; i <= currentCollectionPage; i++) {\n        const nextSetOfCollectionsPage = this.collectionDataService.findByParent(community.uuid, {\n          elementsPerPage: this.pageSize,\n          currentPage: i,\n        })\n          .pipe(\n            getFirstCompletedRemoteData(),\n            map((rd: RemoteData<PaginatedList<Collection>>) => {\n              if (hasValue(rd) && hasValue(rd.payload)) {\n                let nodes = rd.payload.page\n                  .map((collection: Collection) => toFlatNode(collection, observableOf(false), level + 1, false, communityFlatNode));\n                if (currentCollectionPage < rd.payload.totalPages && currentCollectionPage === rd.payload.currentPage) {\n                  nodes = [...nodes, showMoreFlatNode(`collection-${uuidv4()}`, level + 1, communityFlatNode)];\n                }\n                return nodes;\n              } else {\n                return [];\n              }\n            }),\n          );\n        collections = [...collections, nextSetOfCollectionsPage];\n      }\n      obsList = [...obsList, combineAndFlatten(collections)];\n    }\n\n    return combineAndFlatten(obsList);\n  }\n\n  /**\n   * Checks if a community has subcommunities or collections by querying the respective services with a pageSize = 0\n   *      Returns an observable that combines the result.payload.totalElements of the observables that the\n   *          respective services return when queried\n   * @param community     Community being checked whether it is expandable (if it has subcommunities or collections)\n   */\n  public getIsExpandable(community: Community): Observable<boolean> {\n    const hasSubcoms$ = this.communityDataService.findByParent(community.uuid, this.configOnePage)\n      .pipe(\n        map((rd: RemoteData<PaginatedList<Community>>) => {\n          if (hasValue(rd) && hasValue(rd.payload)) {\n            return rd.payload.totalElements > 0;\n          } else {\n            return false;\n          }\n        }),\n      );\n\n    const hasColls$ = this.collectionDataService.findByParent(community.uuid, this.configOnePage)\n      .pipe(\n        map((rd: RemoteData<PaginatedList<Collection>>) => {\n          if (hasValue(rd) && hasValue(rd.payload)) {\n            return rd.payload.totalElements > 0;\n          } else {\n            return false;\n          }\n        }),\n      );\n\n    return observableCombineLatest(hasSubcoms$, hasColls$).pipe(\n      map(([hasSubcoms, hasColls]: [boolean, boolean]) => hasSubcoms || hasColls),\n    );\n  }\n\n}\n","import {\n  CdkTreeModule,\n  FlatTreeControl,\n} from '@angular/cdk/tree';\nimport {\n  AsyncPipe,\n  NgClass,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { take } from 'rxjs/operators';\n\nimport { DSONameService } from '../../core/breadcrumbs/dso-name.service';\nimport {\n  SortDirection,\n  SortOptions,\n} from '../../core/cache/models/sort-options.model';\nimport { FindListOptions } from '../../core/data/find-list-options.model';\nimport { isEmpty } from '../../shared/empty.util';\nimport { ThemedLoadingComponent } from '../../shared/loading/themed-loading.component';\nimport { TruncatableComponent } from '../../shared/truncatable/truncatable.component';\nimport { TruncatablePartComponent } from '../../shared/truncatable/truncatable-part/truncatable-part.component';\nimport { CommunityListDatasource } from '../community-list-datasource';\nimport { CommunityListService } from '../community-list-service';\nimport { FlatNode } from '../flat-node.model';\n\n/**\n * A tree-structured list of nodes representing the communities, their subCommunities and collections.\n * Initially only the page-restricted top communities are shown.\n * Each node can be expanded to show its children and all children are also page-limited.\n * More pages of a page-limited result can be shown by pressing a show more node/link.\n * Which nodes were expanded is kept in the store, so this persists across pages.\n */\n@Component({\n  selector: 'ds-base-community-list',\n  templateUrl: './community-list.component.html',\n  styleUrls: ['./community-list.component.scss'],\n  standalone: true,\n  imports: [NgIf, ThemedLoadingComponent, CdkTreeModule, NgClass, RouterLink, TruncatableComponent, TruncatablePartComponent, AsyncPipe, TranslateModule],\n})\nexport class CommunityListComponent implements OnInit, OnDestroy {\n\n  private expandedNodes: FlatNode[] = [];\n  public loadingNode: FlatNode;\n\n  treeControl = new FlatTreeControl<FlatNode>(\n    (node: FlatNode) => node.level, (node: FlatNode) => true,\n  );\n  dataSource: CommunityListDatasource;\n  paginationConfig: FindListOptions;\n  trackBy = (index, node: FlatNode) => node.id;\n\n  constructor(\n    protected communityListService: CommunityListService,\n    public dsoNameService: DSONameService,\n  ) {\n    this.paginationConfig = new FindListOptions();\n    this.paginationConfig.elementsPerPage = 2;\n    this.paginationConfig.currentPage = 1;\n    this.paginationConfig.sort = new SortOptions('dc.title', SortDirection.ASC);\n  }\n\n  ngOnInit() {\n    this.dataSource = new CommunityListDatasource(this.communityListService);\n    this.communityListService.getLoadingNodeFromStore().pipe(take(1)).subscribe((result) => {\n      this.loadingNode = result;\n    });\n    this.communityListService.getExpandedNodesFromStore().pipe(take(1)).subscribe((result) => {\n      this.expandedNodes = [...result];\n      this.dataSource.loadCommunities(this.paginationConfig, this.expandedNodes);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.communityListService.saveCommunityListStateToStore(this.expandedNodes, this.loadingNode);\n  }\n\n  /**\n   * Whether this node has children (subcommunities or collections)\n   * @param _\n   * @param node\n   */\n  hasChild(_: number, node: FlatNode) {\n    return node.isExpandable$;\n  }\n\n  /**\n   * Whether this is a show more node that contains no data, but indicates that there is\n   * one or more community or collection.\n   * @param _\n   * @param node\n   */\n  isShowMore(_: number, node: FlatNode) {\n    return node.isShowMoreNode;\n  }\n\n  /**\n   * Toggles the expanded variable of a node, adds it to the expanded nodes list and reloads the tree\n   * so this node is expanded\n   * @param node  Node we want to expand\n   */\n  toggleExpanded(node: FlatNode) {\n    this.loadingNode = node;\n    if (node.isExpanded) {\n      this.expandedNodes = this.expandedNodes.filter((node2) => node2.id !== node.id);\n      node.isExpanded = false;\n    } else {\n      this.expandedNodes.push(node);\n      node.isExpanded = true;\n      if (isEmpty(node.currentCollectionPage)) {\n        node.currentCollectionPage = 1;\n      }\n      if (isEmpty(node.currentCommunityPage)) {\n        node.currentCommunityPage = 1;\n      }\n    }\n    this.dataSource.loadCommunities(this.paginationConfig, this.expandedNodes);\n  }\n\n  /**\n   * Makes sure the next page of a node is added to the tree (top community, sub community of collection)\n   *      > Finds its parent (if not top community) and increases its corresponding collection/subcommunity\n   *      currentPage\n   *      > Reloads tree with new page added to corresponding top community lis, sub community list or\n   *      collection list\n   * @param node  The show more node indicating whether it's an increase in top communities, sub communities\n   *              or collections\n   */\n  getNextPage(node: FlatNode): void {\n    this.loadingNode = node;\n    if (node.parent != null) {\n      if (node.id.startsWith('collection')) {\n        const parentNodeInExpandedNodes = this.expandedNodes.find((node2: FlatNode) => node.parent.id === node2.id);\n        parentNodeInExpandedNodes.currentCollectionPage++;\n      }\n      if (node.id.startsWith('community')) {\n        const parentNodeInExpandedNodes = this.expandedNodes.find((node2: FlatNode) => node.parent.id === node2.id);\n        parentNodeInExpandedNodes.currentCommunityPage++;\n      }\n    } else {\n      this.paginationConfig.currentPage++;\n    }\n    this.dataSource.loadCommunities(this.paginationConfig, this.expandedNodes);\n  }\n\n}\n","<ds-loading *ngIf=\"(dataSource.loading$ | async) && !loadingNode\" class=\"ds-themed-loading\"></ds-loading>\n<cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" [trackBy]=\"trackBy\">\n  <!-- This is the tree node template for show more node -->\n  <cdk-tree-node *cdkTreeNodeDef=\"let node; when: isShowMore\" cdkTreeNodePadding\n                 class=\"example-tree-node show-more-node\">\n    <div class=\"btn-group\">\n      <span aria-hidden=\"true\" class=\"btn btn-default invisible\" cdkTreeNodeToggle>\n        <span class=\"fa fa-chevron-right\"></span>\n      </span>\n      <div class=\"align-middle my-auto\">\n        <button *ngIf=\"(dataSource.loading$ | async) !== true\" (click)=\"getNextPage(node)\"\n           class=\"btn btn-outline-primary btn-sm\" role=\"button\">\n           <i class=\"fas fa-angle-down\"></i> {{ 'communityList.showMore' | translate }}\n        </button>\n        <ds-loading *ngIf=\"node===loadingNode && dataSource.loading$ | async\" class=\"ds-themed-loading\"></ds-loading>\n      </div>\n    </div>\n    <div class=\"text-muted\" cdkTreeNodePadding>\n      <div class=\"d-flex\">\n      </div>\n    </div>\n  </cdk-tree-node>\n  <!-- This is the tree node template for expandable nodes (coms and subcoms with children) -->\n  <cdk-tree-node *cdkTreeNodeDef=\"let node; when: hasChild\" cdkTreeNodePadding\n                 class=\"example-tree-node expandable-node\">\n    <div class=\"btn-group\">\n      <button *ngIf=\"hasChild(null, node) | async\" type=\"button\" class=\"btn btn-default\" cdkTreeNodeToggle\n              [attr.aria-label]=\"(node.isExpanded ? 'communityList.collapse' : 'communityList.expand') | translate:{ name: dsoNameService.getName(node.payload) }\"\n              (click)=\"toggleExpanded(node)\"\n              data-test=\"expand-button\">\n        <span class=\"{{node.isExpanded ? 'fa fa-chevron-down' : 'fa fa-chevron-right'}}\"\n              aria-hidden=\"true\"></span>\n        <span class=\"sr-only\">{{ (node.isExpanded ? 'communityList.collapse' : 'communityList.expand') | translate:{ name: dsoNameService.getName(node.payload) } }}</span>\n      </button>\n      <!--Don't render the button when non-expandable otherwise it's still accessible, instead render this placeholder-->\n      <span *ngIf=\"(hasChild(null, node) | async) !== true\" aria-hidden=\"true\" class=\"btn btn-default invisible\">\n        <span class=\"fa fa-chevron-right\"></span>\n      </span>\n      <div class=\"d-flex flex-row\">\n        <span class=\"d-flex align-middle my-auto\">\n          <a [routerLink]=\"node.route\" class=\"lead\">{{ dsoNameService.getName(node.payload) }}</a>\n          <span class=\"pr-2\">&nbsp;</span>\n          <span *ngIf=\"node.payload.archivedItemsCount >= 0\" class=\"badge badge-pill badge-secondary align-top archived-items-lead my-auto\">{{node.payload.archivedItemsCount}}</span>\n        </span>\n      </div>\n    </div>\n    <ds-truncatable [id]=\"node.id\">\n      <div class=\"text-muted\" cdkTreeNodePadding>\n        <div class=\"d-flex\" *ngIf=\"node.payload.shortDescription\">\n          <span aria-hidden=\"true\" class=\"btn btn-default invisible\">\n            <span class=\"fa fa-chevron-right\"></span>\n          </span>\n          <ds-truncatable-part [id]=\"node.id\" [minLines]=\"3\">\n            <span>{{node.payload.shortDescription}}</span>\n          </ds-truncatable-part>\n        </div>\n      </div>\n    </ds-truncatable>\n    <div class=\"d-flex\" *ngIf=\"node===loadingNode && dataSource.loading$ | async\"\n         cdkTreeNodePadding>\n      <span aria-hidden=\"true\" class=\"btn btn-default invisible\">\n        <span class=\"fa fa-chevron-right\"></span>\n      </span>\n      <ds-loading class=\"ds-themed-loading\"></ds-loading>\n    </div>\n  </cdk-tree-node>\n  <!-- This is the tree node template for leaf nodes (collections and (sub)coms without children) -->\n  <cdk-tree-node *cdkTreeNodeDef=\"let node; when: !(hasChild && isShowMore)\" cdkTreeNodePadding\n                 class=\"example-tree-node childless-node\">\n    <div class=\"btn-group\">\n      <span aria-hidden=\"true\" class=\"btn btn-default invisible\" cdkTreeNodeToggle>\n        <span class=\"fa fa-chevron-right\"></span>\n      </span>\n      <h6 class=\"align-middle my-auto\">\n        <a [routerLink]=\"node.route\" class=\"lead\">{{ dsoNameService.getName(node.payload) }}</a>\n      </h6>\n    </div>\n    <ds-truncatable [id]=\"node.id\">\n      <div class=\"text-muted\" cdkTreeNodePadding>\n        <div class=\"d-flex\" *ngIf=\"node.payload.shortDescription\">\n          <span aria-hidden=\"true\" class=\"btn btn-default invisible\">\n            <span class=\"fa fa-chevron-right\"></span>\n          </span>\n          <ds-truncatable-part [id]=\"node.id\" [minLines]=\"3\">\n            <span>{{node.payload.shortDescription}}</span>\n          </ds-truncatable-part>\n        </div>\n      </div>\n    </ds-truncatable>\n  </cdk-tree-node>\n</cdk-tree>\n","import { Component } from '@angular/core';\n\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { CommunityListComponent } from './community-list.component';\n\n\n@Component({\n  selector: 'ds-community-list',\n  styleUrls: [],\n  templateUrl: '../../shared/theme-support/themed.component.html',\n  standalone: true,\n  imports: [CommunityListComponent],\n})\nexport class ThemedCommunityListComponent extends ThemedComponent<CommunityListComponent> {\n  protected getComponentName(): string {\n    return 'CommunityListComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/community-list-page/community-list/community-list.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./community-list.component`);\n  }\n\n}\n","<ng-template #vcr>\n</ng-template>\n<div #content>\n  <ng-content></ng-content>\n</div>\n","/**\n * The show more links in the community tree are also represented by a flatNode so we know where in\n *  the tree it should be rendered and who its parent is (needed for the action resulting in clicking this link)\n */\nexport class ShowMoreFlatNode {\n}\n","import { Component } from '@angular/core';\n\nimport { ThemedComponent } from '../shared/theme-support/themed.component';\nimport { CommunityListPageComponent } from './community-list-page.component';\n\n/**\n * Themed wrapper for CommunityListPageComponent\n */\n@Component({\n  selector: 'ds-community-list-page',\n  styleUrls: [],\n  templateUrl: '../shared/theme-support/themed.component.html',\n  standalone: true,\n  imports: [CommunityListPageComponent],\n})\nexport class ThemedCommunityListPageComponent extends ThemedComponent<CommunityListPageComponent> {\n  protected getComponentName(): string {\n    return 'CommunityListPageComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../themes/${themeName}/app/community-list-page/community-list-page.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./community-list-page.component`);\n  }\n\n}\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { BreadcrumbConfig } from '../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { hasNoValue } from '../../shared/empty.util';\nimport { currentPathFromSnapshot } from '../../shared/utils/route.utils';\nimport { I18nBreadcrumbsService } from './i18n-breadcrumbs.service';\n\n/**\n * Method for resolving an I18n breadcrumb configuration object\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {I18nBreadcrumbsService} breadcrumbService\n * @returns BreadcrumbConfig object\n */\nexport const i18nBreadcrumbResolver: ResolveFn<BreadcrumbConfig<string>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  breadcrumbService: I18nBreadcrumbsService = inject(I18nBreadcrumbsService),\n): BreadcrumbConfig<string> => {\n  const key = route.data.breadcrumbKey;\n  if (hasNoValue(key)) {\n    throw new Error('You provided an i18nBreadcrumbResolver for url \\\"' + route.url + '\\\" but no breadcrumbKey in the route\\'s data');\n  }\n  const fullPath = currentPathFromSnapshot(route);\n  return { provider: breadcrumbService, key: key, url: fullPath };\n};\n","import { Injectable } from '@angular/core';\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs';\n\nimport { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport { BreadcrumbsProviderService } from './breadcrumbsProviderService';\n\n/**\n * The postfix for i18n breadcrumbs\n */\nexport const BREADCRUMB_MESSAGE_POSTFIX = '.breadcrumbs';\n\n/**\n * Service to calculate i18n breadcrumbs for a single part of the route\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class I18nBreadcrumbsService implements BreadcrumbsProviderService<string> {\n\n  /**\n   * Method to calculate the breadcrumbs\n   * @param key The key used to resolve the breadcrumb\n   * @param url The url to use as a link for this breadcrumb\n   */\n  getBreadcrumbs(key: string, url: string): Observable<Breadcrumb[]> {\n    return observableOf([new Breadcrumb(key + BREADCRUMB_MESSAGE_POSTFIX, url)]);\n  }\n}\n","var map = {\n\t\"./custom/app/community-list-page/community-list-page.component\": [\n\t\t9783,\n\t\t\"src_themes_custom_app_community-list-page_community-list-page_component_ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 24768;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./custom/app/community-list-page/community-list/community-list.component\": [\n\t\t41658,\n\t\t\"src_themes_custom_app_community-list-page_community-list_community-list_component_ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 89367;\nmodule.exports = webpackAsyncContext;"],"names":["Breadcrumb","constructor","text","url","BehaviorSubject","finalize","hasValue","CommunityListDatasource","communityListService","communityList$","loading$","connect","collectionViewer","asObservable","loadCommunities","findOptions","expandedNodes","next","subLoadCommunities","unsubscribe","pipe","subscribe","flatNodes","disconnect","complete","i18nBreadcrumbResolver","ThemedCommunityListPageComponent","ROUTES","path","component","pathMatch","resolve","breadcrumb","data","title","breadcrumbKey","TranslateModule","ThemedCommunityListComponent","CommunityListPageComponent","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","CommunityListPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","i1","TranslatePipe","encapsulation","createSelector","Store","combineLatest","observableCombineLatest","of","observableOf","filter","map","switchMap","APP_CONFIG","v4","uuidv4","getCollectionPageRoute","getCommunityPageRoute","CollectionDataService","CommunityDataService","FindListOptions","buildPaginatedList","Community","getFirstCompletedRemoteData","getFirstSucceededRemoteData","PageInfo","isNotEmpty","followLink","CommunityListSaveAction","ShowMoreFlatNode","combineAndFlatten","obsList","matrix","concat","arr","every","e","toFlatNode","c","isExpandable","level","isExpanded","parent","isExpandable$","name","id","payload","isShowMoreNode","route","showMoreFlatNode","communityListStateSelector","state","communityList","expandedNodesSelector","loadingNodeSelector","loadingNode","CommunityListService","appConfig","communityDataService","collectionDataService","store","configOnePage","Object","assign","elementsPerPage","pageSize","saveCommunityListStateToStore","dispatch","getExpandedNodesFromStore","select","getLoadingNodeFromStore","currentPage","topCommunities","i","pagination","push","getTopCommunities","topComs$","coms","newPages","unit","page","newPage","newPageInfo","length","pageInfo","topComs","transformListOfCommunities","options","findTop","sort","field","direction","findListOptions","results","listOfPaginatedCommunities","find","node","currentCommunityPage","community","transformCommunity","totalPages","getIsExpandable","communityFlatNode","subcoms","nextSetOfSubcommunitiesPage","findByParent","uuid","rd","currentCollectionPage","collections","nextSetOfCollectionsPage","nodes","collection","hasSubcoms$","totalElements","hasColls$","hasSubcoms","hasColls","ɵɵinject","i2","i3","factory","ɵfac","providedIn","CdkTreeModule","FlatTreeControl","AsyncPipe","NgIf","RouterLink","take","DSONameService","SortDirection","SortOptions","isEmpty","ThemedLoadingComponent","TruncatableComponent","TruncatablePartComponent","ɵɵlistener","CommunityListComponent_cdk_tree_node_3_button_5_Template_button_click_0_listener","ɵɵrestoreView","_r1","node_r2","ɵɵnextContext","$implicit","ctx_r2","ɵɵresetView","getNextPage","ɵɵtextInterpolate1","ɵɵtemplate","CommunityListComponent_cdk_tree_node_3_button_5_Template","CommunityListComponent_cdk_tree_node_3_ds_loading_7_Template","ɵɵproperty","dataSource","CommunityListComponent_cdk_tree_node_4_button_2_Template_button_click_0_listener","_r4","node_r5","toggleExpanded","ɵɵclassMap","ɵɵpipeBind2","ɵɵpureFunction1","_c0","dsoNameService","getName","archivedItemsCount","shortDescription","CommunityListComponent_cdk_tree_node_4_button_2_Template","CommunityListComponent_cdk_tree_node_4_span_4_Template","CommunityListComponent_cdk_tree_node_4_span_12_Template","CommunityListComponent_cdk_tree_node_4_div_15_Template","CommunityListComponent_cdk_tree_node_4_div_16_Template","hasChild","node_r6","CommunityListComponent_cdk_tree_node_5_div_9_Template","CommunityListComponent","treeControl","trackBy","index","paginationConfig","ASC","ngOnInit","result","ngOnDestroy","_","isShowMore","node2","startsWith","parentNodeInExpandedNodes","ɵɵdirectiveInject","CommunityListComponent_Template","CommunityListComponent_ds_loading_0_Template","CommunityListComponent_cdk_tree_node_3_Template","CommunityListComponent_cdk_tree_node_4_Template","CommunityListComponent_cdk_tree_node_5_Template","CdkTreeNodeDef","CdkTreeNodePadding","CdkTreeNodeToggle","CdkTree","CdkTreeNode","i4","styles","ThemedComponent","getComponentName","importThemedComponent","themeName","importUnthemedComponent","t","ɵɵInheritDefinitionFeature","ngContentSelectors","ThemedCommunityListComponent_Template","ThemedCommunityListComponent_ng_template_0_Template","ɵɵtemplateRefExtractor","ɵɵprojection","ThemedCommunityListPageComponent_Template","ThemedCommunityListPageComponent_ng_template_0_Template","inject","hasNoValue","currentPathFromSnapshot","I18nBreadcrumbsService","breadcrumbService","key","Error","fullPath","provider","BREADCRUMB_MESSAGE_POSTFIX","getBreadcrumbs"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}