{"version":3,"file":"default-src_app_shared_access-control-form-container_access-control-form-container_component_ts.js","mappings":"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","sources":["./src/app/core/config/bulk-access-config-data.service.ts","./src/app/core/config/config-data.service.ts","./src/app/shared/access-control-form-container/access-control-array-form/access-control-array-form.component.ts","./src/app/shared/access-control-form-container/access-control-array-form/access-control-array-form.component.html","./src/app/shared/access-control-form-container/access-control-array-form/to-date.pipe.ts","./src/app/shared/access-control-form-container/access-control-form-container-intial-state.ts","./src/app/shared/access-control-form-container/access-control-form-container.component.ts","./src/app/shared/access-control-form-container/access-control-form-container.component.html","./src/app/shared/access-control-form-container/bulk-access-control.service.ts","./src/app/shared/access-control-form-container/item-access-control-select-bitstreams-modal/item-access-control-select-bitstreams-modal.component.ts","./src/app/shared/access-control-form-container/item-access-control-select-bitstreams-modal/item-access-control-select-bitstreams-modal.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { RemoteDataBuildService } from '../cache/builders/remote-data-build.service';\nimport { ObjectCacheService } from '../cache/object-cache.service';\nimport { RequestService } from '../data/request.service';\nimport { HALEndpointService } from '../shared/hal-endpoint.service';\nimport { ConfigDataService } from './config-data.service';\n\n/**\n * Data Service responsible for retrieving Bulk Access Condition Options from the REST API\n */\n@Injectable({ providedIn: 'root' })\nexport class BulkAccessConfigDataService extends ConfigDataService {\n\n  constructor(\n    protected requestService: RequestService,\n    protected rdbService: RemoteDataBuildService,\n    protected objectCache: ObjectCacheService,\n    protected halService: HALEndpointService,\n  ) {\n    super('bulkaccessconditionoptions', requestService, rdbService, objectCache, halService);\n  }\n\n}\n","import { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FollowLinkConfig } from '../../shared/utils/follow-link-config.model';\nimport { IdentifiableDataService } from '../data/base/identifiable-data.service';\nimport { RemoteData } from '../data/remote-data';\nimport { getFirstCompletedRemoteData } from '../shared/operators';\nimport { ConfigObject } from './models/config.model';\n\n/**\n * Abstract data service to retrieve configuration objects from the REST server.\n * Common logic for configuration objects should be implemented here.\n */\nexport abstract class ConfigDataService extends IdentifiableDataService<ConfigObject> {\n  /**\n   * Returns an observable of {@link RemoteData} of an object, based on an href, with a list of\n   * {@link FollowLinkConfig}, to automatically resolve {@link HALLink}s of the object\n   *\n   * Throws an error if a configuration object cannot be retrieved.\n   *\n   * @param href                        The url of object we want to retrieve\n   * @param useCachedVersionIfAvailable If this is true, the request will only be sent if there's\n   *                                    no valid cached version. Defaults to true\n   * @param reRequestOnStale            Whether or not the request should automatically be re-\n   *                                    requested after the response becomes stale\n   * @param linksToFollow               List of {@link FollowLinkConfig} that indicate which\n   *                                    {@link HALLink}s should be automatically resolved\n   */\n  public findByHref(href: string, useCachedVersionIfAvailable = true, reRequestOnStale = true, ...linksToFollow: FollowLinkConfig<ConfigObject>[]): Observable<RemoteData<ConfigObject>> {\n    return super.findByHref(href, useCachedVersionIfAvailable, reRequestOnStale, ...linksToFollow).pipe(\n      getFirstCompletedRemoteData(),\n      map((rd: RemoteData<ConfigObject>) => {\n        if (rd.hasFailed) {\n          throw new Error(`Couldn't retrieve the config`);\n        } else {\n          return rd;\n        }\n      }),\n    );\n  }\n\n  /**\n   * Returns a config object by given name\n   *\n   * Throws an error if a configuration object cannot be retrieved.\n   *\n   * @param name                        The name of configuration to retrieve\n   * @param useCachedVersionIfAvailable If this is true, the request will only be sent if there's\n   *                                    no valid cached version. Defaults to true\n   * @param reRequestOnStale            Whether or not the request should automatically be re-\n   *                                    requested after the response becomes stale\n   * @param linksToFollow               List of {@link FollowLinkConfig} that indicate which\n   *                                    {@link HALLink}s should be automatically resolved\n   */\n  public findByName(name: string,  useCachedVersionIfAvailable = true, reRequestOnStale = true, ...linksToFollow: FollowLinkConfig<ConfigObject>[]): Observable<RemoteData<ConfigObject>> {\n    return super.findById(name, useCachedVersionIfAvailable, reRequestOnStale, ...linksToFollow);\n  }\n}\n","import {\n  NgFor,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormsModule,\n  NgForm,\n} from '@angular/forms';\nimport { NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { AccessesConditionOption } from '../../../core/config/models/config-accesses-conditions-options.model';\nimport { BtnDisabledDirective } from '../../btn-disabled.directive';\nimport { dateToISOFormat } from '../../date.util';\nimport { ToDatePipe } from './to-date.pipe';\n\n@Component({\n  selector: 'ds-access-control-array-form',\n  templateUrl: './access-control-array-form.component.html',\n  styleUrls: ['./access-control-array-form.component.scss'],\n  exportAs: 'accessControlArrayForm',\n  standalone: true,\n  imports: [FormsModule, NgIf, NgFor, NgbDatepickerModule, TranslateModule, ToDatePipe, BtnDisabledDirective],\n})\nexport class AccessControlArrayFormComponent implements OnInit {\n  @Input() dropdownOptions: AccessesConditionOption[] = [];\n  @Input() mode!: 'add' | 'replace';\n  @Input() type!: 'item' | 'bitstream';\n\n  @ViewChild('ngForm', { static: true }) ngForm!: NgForm;\n\n  form: { accessControls: AccessControlItem[] } = {\n    accessControls: [emptyAccessControlItem()], // Start with one empty access control item\n  };\n\n  formDisabled = true;\n\n  ngOnInit(): void {\n    this.disable(); // Disable the form by default\n  }\n\n  get allControlsAreEmpty() {\n    return this.form.accessControls\n      .every(x => x.itemName === null || x.itemName === '');\n  }\n\n  get showWarning() {\n    return this.mode === 'replace' && this.allControlsAreEmpty && !this.formDisabled;\n  }\n\n  /**\n   * Add a new access control item to the form.\n   * Start and end date are disabled by default.\n   * @param itemName The name of the item to add\n   */\n  addAccessControlItem(itemName: string = null) {\n    this.form.accessControls = [\n      ...this.form.accessControls,\n      { ...emptyAccessControlItem(), itemName },\n    ];\n  }\n\n  /**\n   * Remove an access control item from the form.\n   * @param ngModelGroup\n   * @param index\n   */\n  removeAccessControlItem(id: number) {\n    this.form.accessControls = this.form.accessControls.filter(item => item.id !== id);\n  }\n\n  /**\n   * Get the value of the form.\n   * This will be used to read the form value from the parent component.\n   * @return The form value\n   */\n  getValue() {\n    return this.form.accessControls\n      .filter(x => x.itemName !== null && x.itemName !== '')\n      .map(x => ({\n        name: x.itemName,\n        startDate: (x.startDate ? dateToISOFormat(x.startDate) : null),\n        endDate: (x.endDate ? dateToISOFormat(x.endDate) : null),\n      }));\n  }\n\n  /**\n   * Set the value of the form from the parent component.\n   */\n  reset() {\n    this.form.accessControls = [];\n\n    // Add an empty access control item by default\n    this.addAccessControlItem();\n\n    this.disable();\n  }\n\n  /**\n   * Disable the form.\n   * This will be used to disable the form from the parent component.\n   */\n  disable = () => {\n    this.ngForm.form.disable();\n    this.formDisabled = true;\n  };\n\n  /**\n   * Enable the form.\n   * This will be used to enable the form from the parent component.\n   */\n  enable = () => {\n    this.ngForm.form.enable();\n    this.formDisabled = false;\n  };\n\n  accessControlChanged(control: AccessControlItem, selectedItem: string) {\n    const item = this.dropdownOptions\n      .find((x) => x.name === selectedItem);\n\n    control.startDate = null;\n    control.endDate = null;\n\n    control.hasStartDate = item?.hasStartDate || false;\n    control.hasEndDate = item?.hasEndDate || false;\n\n    control.maxStartDate = item?.maxStartDate || null;\n    control.maxEndDate = item?.maxEndDate || null;\n  }\n\n  trackById(index: number, item: AccessControlItem) {\n    return item.id;\n  }\n\n}\n\n\nexport interface AccessControlItem {\n  id: number; // will be used only locally\n\n  itemName: string | null;\n\n  hasStartDate?: boolean;\n  startDate: string | null;\n  maxStartDate?: string | null;\n\n  hasEndDate?: boolean;\n  endDate: string | null;\n  maxEndDate?: string | null;\n}\n\nconst emptyAccessControlItem = (): AccessControlItem => ({\n  id: randomID(),\n  itemName: null,\n  startDate: null,\n  hasStartDate: false,\n  maxStartDate: null,\n  endDate: null,\n  hasEndDate: false,\n  maxEndDate: null,\n});\n\nconst randomID = () => Math.floor(Math.random() * 1000000);\n","<form #ngForm=\"ngForm\">\n  <div *ngIf=\"showWarning\" class=\"alert alert-warning\">\n    {{'access-control-no-access-conditions-warning-message' | translate}}\n  </div>\n\n  <ng-container *ngFor=\"let control of form.accessControls; trackBy: trackById\">\n    <div ngModelGroup=\"access-control-item-{{control.id}}\" class=\"access-control-item mt-3\">\n\n      <div class=\"d-flex flex-column\">\n        <div>\n          <label for=\"accesscontroloption-{{control.id}}\">\n            {{'access-control-option-label' | translate}}\n          </label>\n          <select\n            id=\"accesscontroloption-{{control.id}}\"\n            [disabled]=\"ngForm.disabled\"\n            [(ngModel)]=\"control.itemName\"\n            (ngModelChange)=\"accessControlChanged(control, $event)\"\n            name=\"itemName-{{control.id}}\"\n            class=\"form-control\">\n            <option value=\"\"></option>\n            <option *ngFor=\"let option of dropdownOptions\" [value]=\"option.name\">\n              {{ option.name }}\n            </option>\n          </select>\n          <small class=\"form-text text-muted\">\n            {{'access-control-option-note' | translate}}\n          </small>\n        </div>\n\n        <div *ngIf=\"control.hasStartDate\" class=\"mt-3\">\n          <label for=\"accesscontrolstartdate-{{control.id}}\">\n            {{'access-control-option-start-date' | translate}}\n          </label>\n          <div class=\"input-group\">\n            <input\n              id=\"accesscontrolstartdate-{{control.id}}\"\n              class=\"form-control\"\n              placeholder=\"yyyy-mm-dd\"\n              [(ngModel)]=\"control.startDate\"\n              name=\"startDate-{{control.id}}\"\n              [maxDate]=\"control.maxStartDate | toDate\"\n              ngbDatepicker\n              placement=\"top-start top-end bottom-start bottom-end\"\n              #d=\"ngbDatepicker\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                class=\"btn btn-outline-secondary fas fa-calendar\"\n                [dsBtnDisabled]=\"ngForm.disabled\"\n                (click)=\"d.toggle()\" type=\"button\">\n              </button>\n            </div>\n          </div>\n          <small class=\"form-text text-muted\">\n            {{'access-control-option-start-date-note' | translate}}\n          </small>\n        </div>\n\n        <div *ngIf=\"control.hasEndDate\" class=\"mt-3\">\n          <label for=\"accesscontrolenddate-{{control.id}}\">\n            {{'access-control-option-end-date' | translate}}\n          </label>\n          <div class=\"input-group\">\n            <input\n              id=\"accesscontrolenddate-{{control.id}}\"\n              class=\"form-control\"\n              placeholder=\"yyyy-mm-dd\"\n              [(ngModel)]=\"control.endDate\"\n              name=\"endDate-{{control.id}}\"\n              [maxDate]=\"control.maxEndDate | toDate\"\n              ngbDatepicker\n              placement=\"top-start top-end bottom-start bottom-end\"\n              #d1=\"ngbDatepicker\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\" class=\"btn btn-outline-secondary fas fa-calendar\"\n                [dsBtnDisabled]=\"ngForm.disabled\"\n                (click)=\"d1.toggle()\">\n              </button>\n            </div>\n          </div>\n          <small class=\"form-text text-muted\">\n            {{'access-control-option-end-date-note' | translate}}\n          </small>\n        </div>\n      </div>\n\n      <div>\n        <span aria-hidden=\"true\" class=\"mb-2 d-inline-block\">&nbsp;</span>\n        <div class=\"input-group\">\n\n          <button type=\"button\" class=\"btn btn-outline-danger\"\n                  [attr.aria-label]=\"'access-control-remove' | translate\"\n                  [dsBtnDisabled]=\"ngForm.disabled || form.accessControls.length === 1\"\n                  (click)=\"removeAccessControlItem(control.id)\">\n            <i class=\"fas fa-trash\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n\n  <button type=\"button\" id=\"add-btn-{{type}}\" class=\"btn btn-outline-primary mt-3\"\n          [dsBtnDisabled]=\"ngForm.disabled\"\n          (click)=\"addAccessControlItem()\">\n    <i class=\"fas fa-plus\"></i>\n    {{'access-control-add-more' | translate}}\n  </button>\n\n</form>\n","import {\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-struct';\n\n@Pipe({\n  // eslint-disable-next-line @angular-eslint/pipe-prefix\n  name: 'toDate',\n  pure: false,\n  standalone: true,\n})\nexport class ToDatePipe implements PipeTransform {\n  transform(dateValue: string | null): NgbDateStruct | null {\n    if (!dateValue) {\n      return null;\n    }\n\n    const date = new Date(dateValue);\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n    } as NgbDateStruct;\n  }\n\n}\n","import { ListableObject } from '../object-collection/shared/listable-object.model';\n\nexport const createAccessControlInitialFormState = (): AccessControlFormState => ({\n  item: {\n    toggleStatus: false,\n    accessMode: 'replace',\n  },\n  bitstream: {\n    toggleStatus: false,\n    accessMode: 'replace',\n    changesLimit: 'all', // 'all' | 'selected'\n    selectedBitstreams: [] as ListableObject[],\n  },\n});\n\nexport interface AccessControlFormState {\n  item: {\n    toggleStatus: boolean,\n    accessMode: 'add' | 'replace',\n  },\n  bitstream: {\n    toggleStatus: boolean,\n    accessMode: 'add' | 'replace',\n    changesLimit: string,\n    selectedBitstreams: ListableObject[],\n  }\n}\n","import {\n  AsyncPipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { UiSwitchModule } from 'ngx-ui-switch';\nimport {\n  concatMap,\n  Observable,\n  shareReplay,\n} from 'rxjs';\nimport {\n  map,\n  take,\n} from 'rxjs/operators';\n\nimport { BulkAccessConfigDataService } from '../../core/config/bulk-access-config-data.service';\nimport { BulkAccessConditionOptions } from '../../core/config/models/bulk-access-condition-options.model';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { DSpaceObject } from '../../core/shared/dspace-object.model';\nimport { Item } from '../../core/shared/item.model';\nimport { getFirstCompletedRemoteData } from '../../core/shared/operators';\nimport { AlertComponent } from '../alert/alert.component';\nimport { AlertType } from '../alert/alert-type';\nimport { BtnDisabledDirective } from '../btn-disabled.directive';\nimport { SelectableListService } from '../object-list/selectable-list/selectable-list.service';\nimport { AccessControlArrayFormComponent } from './access-control-array-form/access-control-array-form.component';\nimport { createAccessControlInitialFormState } from './access-control-form-container-intial-state';\nimport { BulkAccessControlService } from './bulk-access-control.service';\nimport {\n  ITEM_ACCESS_CONTROL_SELECT_BITSTREAMS_LIST_ID,\n  ItemAccessControlSelectBitstreamsModalComponent,\n} from './item-access-control-select-bitstreams-modal/item-access-control-select-bitstreams-modal.component';\n\n@Component({\n  selector: 'ds-access-control-form-container',\n  templateUrl: './access-control-form-container.component.html',\n  styleUrls: ['./access-control-form-container.component.scss'],\n  exportAs: 'dsAccessControlForm',\n  standalone: true,\n  imports: [NgIf, AlertComponent, UiSwitchModule, FormsModule, AccessControlArrayFormComponent, AsyncPipe, TranslateModule, BtnDisabledDirective],\n})\nexport class AccessControlFormContainerComponent<T extends DSpaceObject> implements OnDestroy {\n\n  /**\n   * Will be used to determine if we need to show the limit changes to specific bitstreams radio buttons\n   */\n  @Input() showLimitToSpecificBitstreams = false;\n\n  /**\n   * The title message of the access control form (translate key)\n   */\n  @Input() titleMessage = '';\n\n  /**\n   * The item to which the access control form applies\n   */\n  @Input() itemRD: RemoteData<T>;\n\n  /**\n   * Whether to show the submit and cancel button\n   * We want to hide these buttons when the form is\n   * used in an accordion, and we want to show buttons somewhere else\n   */\n  @Input() showSubmit = true;\n\n  @ViewChild('bitstreamAccessCmp', { static: true }) bitstreamAccessCmp: AccessControlArrayFormComponent;\n  @ViewChild('itemAccessCmp', { static: true }) itemAccessCmp: AccessControlArrayFormComponent;\n\n  readonly AlertType = AlertType;\n\n  constructor(\n    private bulkAccessConfigService: BulkAccessConfigDataService,\n    private bulkAccessControlService: BulkAccessControlService,\n    public selectableListService: SelectableListService,\n    protected modalService: NgbModal,\n    private cdr: ChangeDetectorRef,\n  ) {}\n\n  state = createAccessControlInitialFormState();\n\n  dropdownData$: Observable<BulkAccessConditionOptions> = this.bulkAccessConfigService.findByName('default').pipe(\n    getFirstCompletedRemoteData(),\n    map((configRD: RemoteData<BulkAccessConditionOptions>) => configRD.hasSucceeded ? configRD.payload : null),\n    shareReplay({ refCount: false, bufferSize: 1 }),\n  );\n\n  /**\n   * Will be used from a parent component to read the value of the form\n   */\n  getFormValue() {\n    console.log({\n      bitstream: this.bitstreamAccessCmp.getValue(),\n      item: this.itemAccessCmp.getValue(),\n      state: this.state,\n    });\n    return {\n      bitstream: this.bitstreamAccessCmp.getValue(),\n      item: this.itemAccessCmp.getValue(),\n      state: this.state,\n    };\n  }\n\n  /**\n   * Reset the form to its initial state\n   * This will also reset the state of the child components (bitstream and item access)\n   */\n  reset() {\n    this.bitstreamAccessCmp.reset();\n    this.itemAccessCmp.reset();\n    this.state = createAccessControlInitialFormState();\n  }\n\n  /**\n   * Submit the form\n   * This will create a payload file and execute the script\n   */\n  submit() {\n    const bitstreamAccess = this.bitstreamAccessCmp.getValue();\n    const itemAccess = this.itemAccessCmp.getValue();\n\n    const { file } = this.bulkAccessControlService.createPayloadFile({\n      bitstreamAccess,\n      itemAccess,\n      state: this.state,\n    });\n\n    this.bulkAccessControlService.executeScript(\n      [ this.itemRD.payload.uuid ],\n      file,\n    ).pipe(take(1)).subscribe((res) => {\n      console.log('success', res);\n    });\n  }\n\n  /**\n   * Handle the status change of the access control form (item or bitstream)\n   * This will enable/disable the access control form for the item or bitstream\n   * @param type The type of the access control form (item or bitstream)\n   * @param active boolean indicating whether the access control form should be enabled or disabled\n   */\n  handleStatusChange(type: 'item' | 'bitstream', active: boolean) {\n    if (type === 'bitstream') {\n      active ? this.bitstreamAccessCmp.enable() : this.bitstreamAccessCmp.disable();\n    } else if (type === 'item') {\n      active ? this.itemAccessCmp.enable() : this.itemAccessCmp.disable();\n    }\n  }\n\n  /**\n   * Open the modal to select bitstreams for which to change the access control\n   * This will open the modal and pass the currently selected bitstreams\n   * @param item The item for which to change the access control\n   */\n  openSelectBitstreamsModal(item: Item) {\n    const ref = this.modalService.open(ItemAccessControlSelectBitstreamsModalComponent);\n    ref.componentInstance.selectedBitstreams = this.state.bitstream.selectedBitstreams;\n    ref.componentInstance.item = item;\n\n    ref.closed.pipe(\n      concatMap(() => this.selectableListService.getSelectableList(ITEM_ACCESS_CONTROL_SELECT_BITSTREAMS_LIST_ID)),\n      take(1),\n    ).subscribe((list) => {\n      this.state.bitstream.selectedBitstreams = list?.selection || [];\n      this.cdr.detectChanges();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.selectableListService.deselectAll(ITEM_ACCESS_CONTROL_SELECT_BITSTREAMS_LIST_ID);\n  }\n\n}\n\n","<div class=\"container\">\n  <div class=\"card border-0\">\n    <div class=\"card-body\">\n      <ds-alert\n        *ngIf=\"titleMessage\"\n        [type]=\"AlertType.Info\"\n        [content]=\"titleMessage\"\n        class=\"d-block pb-3\">\n      </ds-alert>\n\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6 border-right d-flex flex-column justify-content-between\">\n\n          <div>\n            <div class=\"d-flex align-items-center\">\n              <h2 class=\"h3 mb-0 mr-4\">\n                {{ 'access-control-item-header-toggle' | translate }}\n              </h2>\n              <ui-switch\n                [ariaLabel]=\"(state.bitstream.toggleStatus ? 'access-control-item-toggle.disable' : 'access-control-item-toggle.enable') | translate\"\n                [(ngModel)]=\"state.item.toggleStatus\"\n                (ngModelChange)=\"handleStatusChange('item', $event)\">\n              </ui-switch>\n            </div>\n\n            <fieldset class=\"row mt-3\">\n              <legend class=\"h4 col-12 col-md-3\">\n                {{ 'access-control-mode' | translate }}\n              </legend>\n              <div class=\"col-12 col-md-8\">\n                <div class=\"form-check\">\n                  <input class=\"form-check-input\" type=\"radio\"\n                         name=\"itemMode\" id=\"itemReplace\" value=\"replace\"\n                         [disabled]=\"!state.item.toggleStatus\"\n                         [(ngModel)]=\"state.item.accessMode\">\n                  <label class=\"form-check-label\" for=\"itemReplace\">\n                    {{'access-control-replace-all' | translate}}\n                  </label>\n                </div>\n                <div class=\"form-check\">\n                  <input class=\"form-check-input\" type=\"radio\"\n                         name=\"itemMode\" id=\"itemAdd\" value=\"add\"\n                         [disabled]=\"!state.item.toggleStatus\"\n                         [(ngModel)]=\"state.item.accessMode\">\n                  <label class=\"form-check-label\" for=\"itemAdd\">\n                    {{'access-control-add-to-existing' | translate}}\n                  </label>\n                </div>\n              </div>\n            </fieldset>\n          </div>\n\n          <div>\n            <h3 class=\"h4 mt-3\">{{'access-control-access-conditions' | translate}}</h3>\n\n            <ds-access-control-array-form\n              #itemAccessCmp\n              [type]=\"'item'\"\n              [mode]=\"state.item.accessMode\"\n              [dropdownOptions]=\"(dropdownData$ | async)?.itemAccessConditionOptions || []\">\n            </ds-access-control-array-form>\n          </div>\n\n        </div>\n\n        <div class=\"col-12 col-md-6 d-flex flex-column justify-content-between\">\n\n          <div>\n            <div class=\"d-flex align-items-center\">\n              <h2 class=\"h3 mb-0 mr-4\">\n                {{'access-control-bitstream-header-toggle' | translate}}\n              </h2>\n              <ui-switch\n                [ariaLabel]=\"(state.bitstream.toggleStatus ? 'access-control-bitstream-toggle.disable' : 'access-control-bitstream-toggle.enable') | translate\"\n                [(ngModel)]=\"state.bitstream.toggleStatus\"\n                (ngModelChange)=\"handleStatusChange('bitstream', $event)\">\n              </ui-switch>\n            </div>\n\n            <div *ngIf=\"showLimitToSpecificBitstreams\" class=\"row mt-3\">\n            <fieldset class=\"col-12\">\n              <legend class=\"h4\">\n                {{'access-control-limit-to-specific' | translate}}\n              </legend>\n              <div class=\"form-check\">\n                <input class=\"form-check-input\" type=\"radio\"\n                       name=\"changesLimit\" id=\"processAll\" value=\"all\"\n                       [disabled]=\"!state.bitstream.toggleStatus\"\n                       [(ngModel)]=\"state.bitstream.changesLimit\">\n                <label class=\"form-check-label\" for=\"processAll\">\n                  {{'access-control-process-all-bitstreams' | translate}}\n                </label>\n              </div>\n              <div class=\"form-check\">\n                <input class=\"form-check-input mt-2\" type=\"radio\"\n                       name=\"changesLimit\" id=\"processSelected\" value=\"selected\"\n                       [disabled]=\"!state.bitstream.toggleStatus\"\n                       [(ngModel)]=\"state.bitstream.changesLimit\">\n                <label class=\"form-check-label\" for=\"processSelected\">\n                  {{ state.bitstream.selectedBitstreams.length }}\n                  {{'access-control-bitstreams-selected' | translate}}\n\n                  <button\n                    *ngIf=\"itemRD\"\n                    [attr.aria-label]=\"'access-control-bitstreams-select' | translate\"\n                    [dsBtnDisabled]=\"!state.bitstream.toggleStatus || state.bitstream.changesLimit !== 'selected'\"\n                    (click)=\"openSelectBitstreamsModal(itemRD.payload)\"\n                    class=\"btn btn-outline-dark border-0\" type=\"button\">\n                    <i class=\"fa fa-search\"></i>\n                  </button>\n\n                </label>\n              </div>\n            </fieldset>\n            </div>\n          </div>\n\n          <fieldset class=\"row mt-3\">\n            <legend class=\"h4 col-12 col-md-3\">\n              {{'access-control-mode' | translate}}\n            </legend>\n            <div class=\"col-12 col-md-8\">\n              <div class=\"form-check\">\n                <input class=\"form-check-input\" type=\"radio\"\n                       name=\"bitstreamMode\" id=\"bitstreamReplace\" value=\"replace\"\n                       [disabled]=\"!state.bitstream.toggleStatus\"\n                       [(ngModel)]=\"state.bitstream.accessMode\">\n                <label class=\"form-check-label\" for=\"bitstreamReplace\">\n                  {{'access-control-replace-all' | translate}}\n                </label>\n              </div>\n              <div class=\"form-check\">\n                <input class=\"form-check-input\" type=\"radio\"\n                       name=\"bitstreamMode\" id=\"bitstreamAdd\" value=\"add\"\n                       [disabled]=\"!state.bitstream.toggleStatus\"\n                       [(ngModel)]=\"state.bitstream.accessMode\">\n                <label class=\"form-check-label\" for=\"bitstreamAdd\">\n                  {{'access-control-add-to-existing' | translate}}\n                </label>\n              </div>\n            </div>\n          </fieldset>\n\n          <div>\n            <h3 class=\"h4 mt-3\">{{'access-control-access-conditions' | translate}}</h3>\n\n            <ds-access-control-array-form\n              #bitstreamAccessCmp\n              [type]=\"'bitstream'\"\n              [mode]=\"state.bitstream.accessMode\"\n              [dropdownOptions]=\"(dropdownData$ | async)?.bitstreamAccessConditionOptions || []\">\n            </ds-access-control-array-form>\n          </div>\n        </div>\n      </div>\n\n      <hr *ngIf=\"showSubmit\">\n\n      <div *ngIf=\"showSubmit\" class=\"d-flex justify-content-end\">\n        <button class=\"btn btn-outline-primary mr-3\" (click)=\"reset()\" type=\"button\">\n          {{ 'access-control-cancel' | translate }}\n        </button>\n        <button class=\"btn btn-primary\"\n                [dsBtnDisabled]=\"!state.item.toggleStatus && !state.bitstream.toggleStatus\"\n                (click)=\"submit()\" type=\"submit\">\n          {{ 'access-control-execute' | translate }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ScriptDataService } from '../../core/data/processes/script-data.service';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { getFirstCompletedRemoteData } from '../../core/shared/operators';\nimport { getProcessDetailRoute } from '../../process-page/process-page-routing.paths';\nimport { Process } from '../../process-page/processes/process.model';\nimport { ProcessParameter } from '../../process-page/processes/process-parameter.model';\nimport { isNotEmpty } from '../empty.util';\nimport { NotificationsService } from '../notifications/notifications.service';\nimport { AccessControlFormState } from './access-control-form-container-intial-state';\n\nexport interface BulkAccessPayload {\n  state: AccessControlFormState;\n  bitstreamAccess: any;\n  itemAccess: any;\n}\n\n/**\n * This service is used to create a payload file and execute the bulk access control script\n */\n@Injectable({ providedIn: 'root' })\nexport class BulkAccessControlService {\n  constructor(\n    private notificationsService: NotificationsService,\n    private router: Router,\n    private scriptService: ScriptDataService,\n    private translationService: TranslateService,\n  ) {}\n\n  /**\n   * Create a payload file from the given payload and return the file and the url to the file\n   * The created file will be used as input for the bulk access control script\n   * @param payload The payload to create the file from\n   */\n  createPayloadFile(payload: BulkAccessPayload) {\n    const content = convertToBulkAccessControlFileModel(payload);\n\n    const blob = new Blob([JSON.stringify(content, null, 2)], {\n      type: 'application/json',\n    });\n\n    const file = new File([blob], 'data.json', {\n      type: 'application/json',\n    });\n\n    const url = URL.createObjectURL(file);\n\n    return { url, file };\n  }\n\n  /**\n   * Execute the bulk access control script with the given uuids and file\n   * @param uuids\n   * @param file\n   */\n  executeScript(uuids: string[], file: File): Observable<boolean> {\n    console.log('execute', { uuids, file });\n\n    const params: ProcessParameter[] = [\n      { name: '-f', value: file.name },\n    ];\n    uuids.forEach((uuid) => {\n      params.push({ name: '-u', value: uuid });\n    });\n\n    return this.scriptService.invoke('bulk-access-control', params, [file]).pipe(\n      getFirstCompletedRemoteData(),\n      map((rd: RemoteData<Process>) => {\n        if (rd.hasSucceeded) {\n          const title = this.translationService.get('process.new.notification.success.title');\n          const content = this.translationService.get('process.new.notification.success.content');\n          this.notificationsService.success(title, content);\n          if (isNotEmpty(rd.payload)) {\n            this.router.navigateByUrl(getProcessDetailRoute(rd.payload.processId));\n          }\n          return true;\n        } else {\n          const title = this.translationService.get('process.new.notification.error.title');\n          const content = this.translationService.get('process.new.notification.error.content');\n          this.notificationsService.error(title, content);\n          return false;\n        }\n      }),\n    );\n  }\n}\n\n/**\n * Convert the given payload to a BulkAccessControlFileModel\n * @param payload\n */\nexport const convertToBulkAccessControlFileModel = (payload: { state: AccessControlFormState, bitstreamAccess: AccessCondition[], itemAccess: AccessCondition[] }): BulkAccessControlFileModel => {\n  const finalPayload: BulkAccessControlFileModel = {};\n\n  const itemEnabled = payload.state.item.toggleStatus;\n  const bitstreamEnabled = payload.state.bitstream.toggleStatus;\n\n  if (itemEnabled) {\n    finalPayload.item = {\n      mode: payload.state.item.accessMode,\n      accessConditions: payload.itemAccess,\n    };\n  }\n\n  if (bitstreamEnabled) {\n    const constraints = { uuid: [] };\n\n    if (bitstreamEnabled && payload.state.bitstream.changesLimit === 'selected') {\n      // @ts-ignore\n      constraints.uuid = payload.state.bitstream.selectedBitstreams.map((x) => x.id);\n    }\n\n    finalPayload.bitstream = {\n      constraints,\n      mode: payload.state.bitstream.accessMode,\n      accessConditions: payload.bitstreamAccess,\n    };\n  }\n\n  return finalPayload;\n};\n\n\nexport interface BulkAccessControlFileModel {\n  item?: {\n    mode: string;\n    accessConditions: AccessCondition[];\n  },\n  bitstream?: {\n    constraints: { uuid: string[] };\n    mode: string;\n    accessConditions: AccessCondition[];\n  }\n}\n\ninterface AccessCondition {\n  name: string;\n  startDate?: string;\n  endDate?: string;\n}\n","import {\n  AsyncPipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { PaginatedList } from 'src/app/core/data/paginated-list.model';\nimport { RemoteData } from 'src/app/core/data/remote-data';\nimport { Bitstream } from 'src/app/core/shared/bitstream.model';\nimport { Context } from 'src/app/core/shared/context.model';\n\nimport { BitstreamDataService } from '../../../core/data/bitstream-data.service';\nimport { PaginationService } from '../../../core/pagination/pagination.service';\nimport { Item } from '../../../core/shared/item.model';\nimport { getFirstCompletedRemoteData } from '../../../core/shared/operators';\nimport { hasValue } from '../../empty.util';\nimport { ObjectCollectionComponent } from '../../object-collection/object-collection.component';\nimport { PaginationComponentOptions } from '../../pagination/pagination-component-options.model';\n\nexport const ITEM_ACCESS_CONTROL_SELECT_BITSTREAMS_LIST_ID = 'item-access-control-select-bitstreams';\n\n@Component({\n  selector: 'ds-item-access-control-select-bitstreams-modal',\n  templateUrl: './item-access-control-select-bitstreams-modal.component.html',\n  styleUrls: ['./item-access-control-select-bitstreams-modal.component.scss'],\n  standalone: true,\n  imports: [NgIf, ObjectCollectionComponent, AsyncPipe, TranslateModule],\n})\nexport class ItemAccessControlSelectBitstreamsModalComponent implements OnInit {\n\n  LIST_ID = ITEM_ACCESS_CONTROL_SELECT_BITSTREAMS_LIST_ID;\n\n  @Input() item!: Item;\n  @Input() selectedBitstreams: string[] = [];\n\n  data$ = new BehaviorSubject<RemoteData<PaginatedList<Bitstream>> | null>(null);\n  paginationConfig: PaginationComponentOptions;\n  pageSize = 5;\n\n  context: Context = Context.Bitstream;\n\n  constructor(\n    private bitstreamService: BitstreamDataService,\n    protected paginationService: PaginationService,\n    protected translateService: TranslateService,\n    public activeModal: NgbActiveModal,\n  ) { }\n\n  ngOnInit() {\n    this.loadForPage(1);\n\n    this.paginationConfig = new PaginationComponentOptions();\n    this.paginationConfig.id = 'iacsbm';\n    this.paginationConfig.currentPage = 1;\n    if (hasValue(this.pageSize)) {\n      this.paginationConfig.pageSize = this.pageSize;\n    }\n  }\n\n  loadForPage(page: number) {\n    this.bitstreamService.findAllByItemAndBundleName(this.item, 'ORIGINAL', { currentPage: page }, false)\n      .pipe(\n        getFirstCompletedRemoteData(),\n      )\n      .subscribe(this.data$);\n  }\n\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title\">\n    {{'access-control-select-bitstreams-modal.title' | translate}}\n  </h4>\n  <button type=\"button\" class=\"close\" aria-label=\"Close\"\n          (click)=\"activeModal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <ng-container *ngIf=\"data$ | async as data\">\n    <ds-viewable-collection\n      *ngIf=\"data.payload.page.length > 0\"\n      [config]=\"paginationConfig\"\n      [context]=\"context\"\n      [objects]=\"data\"\n      [selectable]=\"true\"\n      [selectionConfig]=\"{ repeatable: true, listId: LIST_ID }\"\n      [showPaginator]=\"true\"\n      (pageChange)=\"loadForPage($event)\">\n    </ds-viewable-collection>\n\n    <div *ngIf=\"data && data.payload.page.length === 0\"\n      class=\"alert alert-info w-100\" role=\"alert\">\n      {{'access-control-select-bitstreams-modal.no-items' | translate}}\n    </div>\n\n  </ng-container>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-outline-dark\"\n          (click)=\"activeModal.close('Close click')\">\n    {{'access-control-select-bitstreams-modal.close' | translate}}\n  </button>\n</div>\n"],"names":["RemoteDataBuildService","ObjectCacheService","RequestService","HALEndpointService","ConfigDataService","BulkAccessConfigDataService","constructor","requestService","rdbService","objectCache","halService","i0","ɵɵinject","i1","i2","i3","i4","factory","ɵfac","providedIn","map","IdentifiableDataService","getFirstCompletedRemoteData","findByHref","href","useCachedVersionIfAvailable","reRequestOnStale","linksToFollow","pipe","rd","hasFailed","Error","findByName","name","findById","NgFor","NgIf","FormsModule","NgForm","NgbDatepickerModule","TranslateModule","BtnDisabledDirective","dateToISOFormat","ToDatePipe","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵproperty","option_r5","ɵɵtwoWayListener","AccessControlArrayFormComponent_ng_container_3_div_13_Template_input_ngModelChange_5_listener","$event","ɵɵrestoreView","_r6","control_r3","ɵɵnextContext","$implicit","ɵɵtwoWayBindingSet","startDate","ɵɵresetView","ɵɵlistener","AccessControlArrayFormComponent_ng_container_3_div_13_Template_button_click_9_listener","d_r7","ɵɵreference","toggle","ɵɵpropertyInterpolate1","id","ɵɵtwoWayProperty","maxStartDate","ngForm_r8","disabled","AccessControlArrayFormComponent_ng_container_3_div_14_Template_input_ngModelChange_5_listener","_r9","endDate","AccessControlArrayFormComponent_ng_container_3_div_14_Template_button_click_9_listener","d1_r10","maxEndDate","ɵɵelementContainerStart","AccessControlArrayFormComponent_ng_container_3_Template_select_ngModelChange_7_listener","_r2","itemName","ctx_r3","accessControlChanged","ɵɵelement","ɵɵtemplate","AccessControlArrayFormComponent_ng_container_3_option_9_Template","AccessControlArrayFormComponent_ng_container_3_div_13_Template","AccessControlArrayFormComponent_ng_container_3_div_14_Template","AccessControlArrayFormComponent_ng_container_3_Template_button_click_19_listener","removeAccessControlItem","dropdownOptions","hasStartDate","hasEndDate","form","accessControls","length","AccessControlArrayFormComponent","emptyAccessControlItem","formDisabled","disable","ngForm","enable","ngOnInit","allControlsAreEmpty","every","x","showWarning","mode","addAccessControlItem","filter","item","getValue","reset","control","selectedItem","find","trackById","index","selectors","viewQuery","AccessControlArrayFormComponent_Query","rf","ctx","AccessControlArrayFormComponent_div_2_Template","AccessControlArrayFormComponent_ng_container_3_Template","AccessControlArrayFormComponent_Template_button_click_4_listener","_r1","type","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","NgModel","NgModelGroup","NgbInputDatepicker","TranslatePipe","styles","randomID","Math","floor","random","transform","dateValue","date","Date","year","getFullYear","month","getMonth","day","getDate","pure","standalone","createAccessControlInitialFormState","toggleStatus","accessMode","bitstream","changesLimit","selectedBitstreams","AsyncPipe","ChangeDetectorRef","NgbModal","UiSwitchModule","concatMap","shareReplay","take","RemoteData","AlertComponent","AlertType","SelectableListService","BulkAccessControlService","ITEM_ACCESS_CONTROL_SELECT_BITSTREAMS_LIST_ID","ItemAccessControlSelectBitstreamsModalComponent","ctx_r1","Info","titleMessage","AccessControlFormContainerComponent_div_43_button_15_Template_button_click_0_listener","_r4","openSelectBitstreamsModal","itemRD","payload","state","AccessControlFormContainerComponent_div_43_Template_input_ngModelChange_6_listener","_r3","AccessControlFormContainerComponent_div_43_Template_input_ngModelChange_11_listener","AccessControlFormContainerComponent_div_43_button_15_Template","ɵɵtextInterpolate2","AccessControlFormContainerComponent_div_67_Template_button_click_1_listener","_r5","AccessControlFormContainerComponent_div_67_Template_button_click_4_listener","submit","AccessControlFormContainerComponent","bulkAccessConfigService","bulkAccessControlService","selectableListService","modalService","cdr","showLimitToSpecificBitstreams","showSubmit","dropdownData$","configRD","hasSucceeded","refCount","bufferSize","getFormValue","console","log","bitstreamAccessCmp","itemAccessCmp","bitstreamAccess","itemAccess","file","createPayloadFile","executeScript","uuid","subscribe","res","handleStatusChange","active","ref","open","componentInstance","closed","getSelectableList","list","selection","detectChanges","ngOnDestroy","deselectAll","ɵɵdirectiveInject","AccessControlFormContainerComponent_Query","AccessControlFormContainerComponent_ds_alert_3_Template","AccessControlFormContainerComponent_Template_ui_switch_ngModelChange_11_listener","AccessControlFormContainerComponent_Template_input_ngModelChange_19_listener","AccessControlFormContainerComponent_Template_input_ngModelChange_24_listener","AccessControlFormContainerComponent_Template_ui_switch_ngModelChange_41_listener","AccessControlFormContainerComponent_div_43_Template","AccessControlFormContainerComponent_Template_input_ngModelChange_50_listener","AccessControlFormContainerComponent_Template_input_ngModelChange_55_listener","AccessControlFormContainerComponent_hr_66_Template","AccessControlFormContainerComponent_div_67_Template","ɵɵtextInterpolate","tmp_16_0","itemAccessConditionOptions","ɵɵpureFunction0","_c2","tmp_31_0","bitstreamAccessConditionOptions","i5","RadioControlValueAccessor","i6","UiSwitchComponent","i7","Router","TranslateService","ScriptDataService","getProcessDetailRoute","isNotEmpty","NotificationsService","notificationsService","router","scriptService","translationService","content","convertToBulkAccessControlFileModel","blob","Blob","JSON","stringify","File","url","URL","createObjectURL","uuids","params","value","forEach","push","invoke","title","get","success","navigateByUrl","processId","error","finalPayload","itemEnabled","bitstreamEnabled","accessConditions","constraints","NgbActiveModal","BehaviorSubject","Context","BitstreamDataService","PaginationService","Item","hasValue","ObjectCollectionComponent","PaginationComponentOptions","ItemAccessControlSelectBitstreamsModalComponent_ng_container_8_ds_viewable_collection_1_Template_ds_viewable_collection_pageChange_0_listener","loadForPage","paginationConfig","context","data_r3","ɵɵpureFunction1","_c0","LIST_ID","ItemAccessControlSelectBitstreamsModalComponent_ng_container_8_ds_viewable_collection_1_Template","ItemAccessControlSelectBitstreamsModalComponent_ng_container_8_div_2_Template","page","bitstreamService","paginationService","translateService","activeModal","data$","pageSize","Bitstream","currentPage","findAllByItemAndBundleName","inputs","features","ɵɵStandaloneFeature","decls","vars","consts","template","ItemAccessControlSelectBitstreamsModalComponent_Template","ItemAccessControlSelectBitstreamsModalComponent_Template_button_click_4_listener","dismiss","ItemAccessControlSelectBitstreamsModalComponent_ng_container_8_Template","ItemAccessControlSelectBitstreamsModalComponent_Template_button_click_11_listener","close"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}