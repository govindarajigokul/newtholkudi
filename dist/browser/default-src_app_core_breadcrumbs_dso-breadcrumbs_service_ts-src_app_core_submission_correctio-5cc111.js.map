{"version":3,"file":"default-src_app_core_breadcrumbs_dso-breadcrumbs_service_ts-src_app_core_submission_correctio-5cc111.js","mappings":"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","sources":["./src/app/breadcrumbs/breadcrumb/breadcrumb.model.ts","./src/app/core/breadcrumbs/dso-breadcrumbs.service.ts","./src/app/core/notifications/qa/events/quality-assurance-event-data.service.ts","./src/app/core/submission/correctiontype-data.service.ts","./src/app/item-page/versions/item-versions-shared.service.ts","./src/app/item-page/versions/item-versions-summary-modal/item-versions-summary-modal.component.ts","./src/app/item-page/versions/item-versions-summary-modal/item-versions-summary-modal.component.html","./src/app/shared/correction-suggestion/item-withdrawn-reinstate-modal.component.ts","./src/app/shared/correction-suggestion/item-withdrawn-reinstate-modal.component.html","./src/app/shared/dso-page/dso-withdrawn-reinstate-service/dso-withdrawn-reinstate-modal.service.ts","./src/app/statistics/angulartics/dspace/view-tracker.component.ts","./src/app/statistics/angulartics/dspace/view-tracker.component.html"],"sourcesContent":["/**\n * Class representing a single breadcrumb\n */\nexport class Breadcrumb {\n  constructor(\n    /**\n     * The display value of the breadcrumb\n     */\n    public text: string,\n    /**\n     * The optional url of the breadcrumb\n     */\n    public url?: string) {\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs';\nimport {\n  find,\n  map,\n  switchMap,\n} from 'rxjs/operators';\n\nimport { getDSORoute } from '../../app-routing-paths';\nimport { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport { hasValue } from '../../shared/empty.util';\nimport { followLink } from '../../shared/utils/follow-link-config.model';\nimport { LinkService } from '../cache/builders/link.service';\nimport { RemoteData } from '../data/remote-data';\nimport { ChildHALResource } from '../shared/child-hal-resource.model';\nimport { DSpaceObject } from '../shared/dspace-object.model';\nimport { BreadcrumbsProviderService } from './breadcrumbsProviderService';\nimport { DSONameService } from './dso-name.service';\n\n/**\n * Service to calculate DSpaceObject breadcrumbs for a single part of the route\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DSOBreadcrumbsService implements BreadcrumbsProviderService<ChildHALResource & DSpaceObject> {\n  constructor(\n    protected linkService: LinkService,\n    protected dsoNameService: DSONameService,\n  ) {\n\n  }\n\n  /**\n   * Method to recursively calculate the breadcrumbs\n   * This method returns the name and url of the key and all its parent DSOs recursively, top down\n   * @param key The key (a DSpaceObject) used to resolve the breadcrumb\n   * @param url The url to use as a link for this breadcrumb\n   */\n  getBreadcrumbs(key: ChildHALResource & DSpaceObject, url: string): Observable<Breadcrumb[]> {\n    const label = this.dsoNameService.getName(key);\n    const crumb = new Breadcrumb(label, url);\n    const propertyName = key.getParentLinkKey();\n    return this.linkService.resolveLink(key, followLink(propertyName))[propertyName].pipe(\n      find((parentRD: RemoteData<ChildHALResource & DSpaceObject>) => parentRD.hasSucceeded || parentRD.statusCode === 204),\n      switchMap((parentRD: RemoteData<ChildHALResource & DSpaceObject>) => {\n        if (hasValue(parentRD) && hasValue(parentRD.payload)) {\n          const parent = parentRD.payload;\n          return this.getBreadcrumbs(parent, getDSORoute(parent));\n        }\n        return observableOf([]);\n\n      }),\n      map((breadcrumbs: Breadcrumb[]) => [...breadcrumbs, crumb]),\n    );\n  }\n}\n","import {\n  HttpHeaders,\n  HttpParams,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ReplaceOperation } from 'fast-json-patch';\nimport { Observable } from 'rxjs';\nimport {\n  find,\n  switchMap,\n  take,\n} from 'rxjs/operators';\n\nimport { QualityAssuranceEventData } from '../../../../notifications/qa/project-entry-import-modal/project-entry-import-modal.component';\nimport { hasValue } from '../../../../shared/empty.util';\nimport { NotificationsService } from '../../../../shared/notifications/notifications.service';\nimport { FollowLinkConfig } from '../../../../shared/utils/follow-link-config.model';\nimport { RemoteDataBuildService } from '../../../cache/builders/remote-data-build.service';\nimport { RequestParam } from '../../../cache/models/request-param.model';\nimport { ObjectCacheService } from '../../../cache/object-cache.service';\nimport {\n  CreateData,\n  CreateDataImpl,\n} from '../../../data/base/create-data';\nimport {\n  DeleteData,\n  DeleteDataImpl,\n} from '../../../data/base/delete-data';\nimport { IdentifiableDataService } from '../../../data/base/identifiable-data.service';\nimport {\n  PatchData,\n  PatchDataImpl,\n} from '../../../data/base/patch-data';\nimport {\n  SearchData,\n  SearchDataImpl,\n} from '../../../data/base/search-data';\nimport { DefaultChangeAnalyzer } from '../../../data/default-change-analyzer.service';\nimport { FindListOptions } from '../../../data/find-list-options.model';\nimport { PaginatedList } from '../../../data/paginated-list.model';\nimport { RemoteData } from '../../../data/remote-data';\nimport {\n  DeleteByIDRequest,\n  PostRequest,\n} from '../../../data/request.models';\nimport { RequestService } from '../../../data/request.service';\nimport { HttpOptions } from '../../../dspace-rest/dspace-rest.service';\nimport { HALEndpointService } from '../../../shared/hal-endpoint.service';\nimport { NoContent } from '../../../shared/NoContent.model';\nimport { QualityAssuranceEventObject } from '../models/quality-assurance-event.model';\n\n/**\n * The service handling all Quality Assurance topic REST requests.\n */\n@Injectable({ providedIn: 'root' })\nexport class QualityAssuranceEventDataService extends IdentifiableDataService<QualityAssuranceEventObject> {\n\n  private createData: CreateData<QualityAssuranceEventObject>;\n  private searchData: SearchData<QualityAssuranceEventObject>;\n  private patchData: PatchData<QualityAssuranceEventObject>;\n  private deleteData: DeleteData<QualityAssuranceEventObject>;\n\n  /**\n   * Initialize service variables\n   * @param {RequestService} requestService\n   * @param {RemoteDataBuildService} rdbService\n   * @param {ObjectCacheService} objectCache\n   * @param {HALEndpointService} halService\n   * @param {NotificationsService} notificationsService\n   * @param {DefaultChangeAnalyzer<QualityAssuranceEventObject>} comparator\n   */\n  constructor(\n    protected requestService: RequestService,\n    protected rdbService: RemoteDataBuildService,\n    protected objectCache: ObjectCacheService,\n    protected halService: HALEndpointService,\n    protected notificationsService: NotificationsService,\n    protected comparator: DefaultChangeAnalyzer<QualityAssuranceEventObject>,\n  ) {\n    super('qualityassuranceevents', requestService, rdbService, objectCache, halService);\n    this.createData = new CreateDataImpl(this.linkPath, requestService, rdbService, objectCache, halService, notificationsService, this.responseMsToLive);\n    this.deleteData = new DeleteDataImpl(this.linkPath, requestService, rdbService, objectCache, halService, notificationsService, this.responseMsToLive, this.constructIdEndpoint);\n    this.patchData = new PatchDataImpl<QualityAssuranceEventObject>(this.linkPath, requestService, rdbService, objectCache, halService, comparator, this.responseMsToLive, this.constructIdEndpoint);\n    this.searchData = new SearchDataImpl(this.linkPath, requestService, rdbService, objectCache, halService, this.responseMsToLive);\n  }\n\n  /**\n   * Return the list of Quality Assurance events by topic.\n   *\n   * @param topic\n   *    The Quality Assurance topic\n   * @param options\n   *    Find list options object.\n   * @param linksToFollow\n   *    List of {@link FollowLinkConfig} that indicate which {@link HALLink}s should be automatically resolved.\n   * @return Observable<RemoteData<PaginatedList<QualityAssuranceEventObject>>>\n   *    The list of Quality Assurance events.\n   */\n  public getEventsByTopic(topic: string, options: FindListOptions = {}, ...linksToFollow: FollowLinkConfig<QualityAssuranceEventObject>[]): Observable<RemoteData<PaginatedList<QualityAssuranceEventObject>>> {\n    options.searchParams = [\n      new RequestParam('topic', topic),\n    ];\n    return this.searchData.searchBy('findByTopic', options, true, true, ...linksToFollow);\n  }\n\n  /**\n   * Service for retrieving Quality Assurance events by topic and target.\n   * @param options (Optional) The search options to use when retrieving the events.\n   * @param linksToFollow (Optional) The links to follow when retrieving the events.\n   * @returns An observable of the remote data containing the paginated list of Quality Assurance events.\n   */\n  public searchEventsByTopic(options: FindListOptions = {}, ...linksToFollow: FollowLinkConfig<QualityAssuranceEventObject>[]): Observable<RemoteData<PaginatedList<QualityAssuranceEventObject>>> {\n    return this.searchData.searchBy('findByTopic', options, true, true, ...linksToFollow);\n  }\n\n  /**\n   * Clear findByTopic requests from cache\n   */\n  public clearFindByTopicRequests() {\n    this.requestService.setStaleByHrefSubstring('findByTopic');\n  }\n\n  /**\n   * Return a single Quality Assurance event.\n   *\n   * @param id\n   *    The Quality Assurance event id\n   * @param linksToFollow\n   *    List of {@link FollowLinkConfig} that indicate which {@link HALLink}s should be automatically resolved\n   * @return Observable<RemoteData<QualityAssuranceEventObject>>\n   *    The Quality Assurance event.\n   */\n  public getEvent(id: string, ...linksToFollow: FollowLinkConfig<QualityAssuranceEventObject>[]): Observable<RemoteData<QualityAssuranceEventObject>> {\n    return this.findById(id, true, true, ...linksToFollow);\n  }\n\n  /**\n   * Save the new status of a Quality Assurance event.\n   *\n   * @param status\n   *    The new status\n   * @param dso QualityAssuranceEventObject\n   *    The event item\n   * @param reason\n   *    The optional reason (not used for now; for future implementation)\n   * @return Observable<RestResponse>\n   *    The REST response.\n   */\n  public patchEvent(status, dso, reason?: string): Observable<RemoteData<QualityAssuranceEventObject>> {\n    const operation: ReplaceOperation<string>[] = [\n      {\n        path: '/status',\n        op: 'replace',\n        value: status,\n      },\n    ];\n    return this.patchData.patch(dso, operation);\n  }\n\n  /**\n   * Bound a project to a Quality Assurance event publication.\n   *\n   * @param itemId\n   *    The Id of the Quality Assurance event\n   * @param projectId\n   *    The project Id to bound\n   * @return Observable<RestResponse>\n   *    The REST response.\n   */\n  public boundProject(itemId: string, projectId: string): Observable<RemoteData<QualityAssuranceEventObject>> {\n    return this.postOnRelated(itemId, projectId);\n  }\n\n  /**\n   * Remove a project from a Quality Assurance event publication.\n   *\n   * @param itemId\n   *    The Id of the Quality Assurance event\n   * @return Observable<RestResponse>\n   *    The REST response.\n   */\n  public removeProject(itemId: string): Observable<RemoteData<NoContent>> {\n    return this.deleteOnRelated(itemId);\n  }\n\n  /**\n   * Perform a delete operation on an endpoint related item. Ex.: endpoint/<itemId>/related\n   * @param objectId The item id\n   * @return the RestResponse as an Observable\n   */\n  private deleteOnRelated(objectId: string): Observable<RemoteData<NoContent>> {\n    const requestId = this.requestService.generateRequestId();\n\n    const hrefObs = this.getIDHrefObs(objectId);\n\n    hrefObs.pipe(\n      find((href: string) => hasValue(href)),\n    ).subscribe((href: string) => {\n      const request = new DeleteByIDRequest(requestId, href + '/related', objectId);\n      if (hasValue(this.responseMsToLive)) {\n        request.responseMsToLive = this.responseMsToLive;\n      }\n      this.requestService.send(request);\n    });\n\n    return this.rdbService.buildFromRequestUUID<QualityAssuranceEventObject>(requestId);\n  }\n\n  /**\n   * Perform a post on an endpoint related item with ID. Ex.: endpoint/<itemId>/related?item=<relatedItemId>\n   * @param objectId The item id\n   * @param relatedItemId The related item Id\n   * @param body The optional POST body\n   * @return the RestResponse as an Observable\n   */\n  private postOnRelated(objectId: string, relatedItemId: string, body?: any) {\n    const requestId = this.requestService.generateRequestId();\n    const hrefObs = this.getIDHrefObs(objectId);\n\n    hrefObs.pipe(\n      take(1),\n    ).subscribe((href: string) => {\n      const request = new PostRequest(requestId, href + '/related?item=' + relatedItemId, body);\n      if (hasValue(this.responseMsToLive)) {\n        request.responseMsToLive = this.responseMsToLive;\n      }\n      this.requestService.send(request);\n    });\n\n    return this.rdbService.buildFromRequestUUID<QualityAssuranceEventObject>(requestId);\n  }\n\n  /**\n   * Perform a post on an endpoint related to correction type\n   * @param data the data to post\n   * @returns the RestResponse as an Observable\n   */\n  postData(target: string, correctionType: string, related: string, reason: string): Observable<RemoteData<QualityAssuranceEventObject>> {\n    const requestId = this.requestService.generateRequestId();\n    const href$ = this.getBrowseEndpoint();\n\n    return href$.pipe(\n      switchMap((href: string) => {\n        const options: HttpOptions = Object.create({});\n        let headers = new HttpHeaders();\n        headers = headers.append('Content-Type', 'application/json');\n        options.headers = headers;\n        let params = new HttpParams();\n        params = params.append('target', target)\n          .append('correctionType', correctionType);\n        options.params = params;\n        const request = new PostRequest(requestId, href, { 'reason': reason } , options);\n        if (hasValue(this.responseMsToLive)) {\n          request.responseMsToLive = this.responseMsToLive;\n        }\n        this.requestService.send(request);\n        return this.rdbService.buildFromRequestUUID<QualityAssuranceEventObject>(requestId);\n      }),\n    );\n  }\n\n  public deleteQAEvent(qaEvent: QualityAssuranceEventData): Observable<RemoteData<NoContent>> {\n    return this.deleteData.delete(qaEvent.id);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  map,\n  Observable,\n} from 'rxjs';\n\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\nimport { RemoteDataBuildService } from '../cache/builders/remote-data-build.service';\nimport { RequestParam } from '../cache/models/request-param.model';\nimport { ObjectCacheService } from '../cache/object-cache.service';\nimport { IdentifiableDataService } from '../data/base/identifiable-data.service';\nimport { SearchDataImpl } from '../data/base/search-data';\nimport { FindListOptions } from '../data/find-list-options.model';\nimport { PaginatedList } from '../data/paginated-list.model';\nimport { RemoteData } from '../data/remote-data';\nimport { RequestService } from '../data/request.service';\nimport { HALEndpointService } from '../shared/hal-endpoint.service';\nimport {\n  getAllSucceededRemoteDataPayload,\n  getPaginatedListPayload,\n} from '../shared/operators';\nimport { CorrectionType } from './models/correctiontype.model';\n\n/**\n * A service that provides methods to make REST requests with correctiontypes endpoint.\n */\n@Injectable({ providedIn: 'root' })\nexport class CorrectionTypeDataService extends IdentifiableDataService<CorrectionType> {\n  protected linkPath = 'correctiontypes';\n  protected searchByTopic = 'findByTopic';\n  protected searchFindByItem = 'findByItem';\n  private searchData: SearchDataImpl<CorrectionType>;\n\n  constructor(\n    protected requestService: RequestService,\n    protected rdbService: RemoteDataBuildService,\n    protected objectCache: ObjectCacheService,\n    protected halService: HALEndpointService,\n    protected notificationsService: NotificationsService,\n  ) {\n    super('correctiontypes', requestService, rdbService, objectCache, halService);\n\n    this.searchData = new SearchDataImpl(this.linkPath, requestService, rdbService, objectCache, halService, this.responseMsToLive);\n  }\n\n  /**\n   * Get the correction type by id\n   * @param id the id of the correction type\n   * @param useCachedVersionIfAvailable use the cached version if available\n   * @param reRequestOnStale re-request on stale\n   * @returns {Observable<RemoteData<CorrectionType>>} the correction type\n   */\n  getCorrectionTypeById(id: string, useCachedVersionIfAvailable = true, reRequestOnStale = true): Observable<RemoteData<CorrectionType>> {\n    return this.findById(id, useCachedVersionIfAvailable, reRequestOnStale);\n  }\n\n  /**\n   * Search for the correction types for the item\n   * @param itemUuid the uuid of the item\n   * @param useCachedVersionIfAvailable use the cached version if available\n   * @returns the list of correction types for the item\n   */\n  findByItem(itemUuid: string, useCachedVersionIfAvailable): Observable<RemoteData<PaginatedList<CorrectionType>>> {\n    const options = new FindListOptions();\n    options.searchParams = [new RequestParam('uuid', itemUuid)];\n    return this.searchData.searchBy(this.searchFindByItem, options, useCachedVersionIfAvailable);\n  }\n\n  /**\n   * Find the correction type for the topic\n   * @param topic the topic of the correction type to search for\n   * @param useCachedVersionIfAvailable use the cached version if available\n   * @param reRequestOnStale re-request on stale\n   * @returns the correction type for the topic\n   */\n  findByTopic(topic: string, useCachedVersionIfAvailable = true, reRequestOnStale = true): Observable<CorrectionType> {\n    const options = new FindListOptions();\n    options.searchParams = [\n      new RequestParam('topic', topic),\n    ];\n\n    return this.searchData.searchBy(this.searchByTopic, options, useCachedVersionIfAvailable, reRequestOnStale).pipe(\n      getAllSucceededRemoteDataPayload(),\n      getPaginatedListPayload(),\n      map((list: CorrectionType[]) => {\n        return list[0];\n      }),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { RemoteData } from '../../core/data/remote-data';\nimport { Version } from '../../core/shared/version.model';\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ItemVersionsSharedService {\n\n  constructor(\n    private notificationsService: NotificationsService,\n    private translateService: TranslateService,\n  ) {\n  }\n\n  private static msg(key: string): string {\n    const translationPrefix = 'item.version.create.notification';\n    return translationPrefix + '.' + key;\n  }\n\n  /**\n   * Notify success/failure after creating a new version.\n   *\n   * @param newVersionRD the new version that has been created\n   */\n  public notifyCreateNewVersion(newVersionRD: RemoteData<Version>): void {\n    const newVersionNumber = newVersionRD?.payload?.version;\n    newVersionRD.hasSucceeded ?\n      this.notificationsService.success(null, this.translateService.get(ItemVersionsSharedService.msg('success'), { version: newVersionNumber })) :\n      this.notificationsService.error(null, this.translateService.get(ItemVersionsSharedService.msg(newVersionRD?.statusCode === 422 ? 'inProgress' : 'failure')));\n  }\n\n}\n","import {\n  AsyncPipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { ModalBeforeDismiss } from '../../../shared/interfaces/modal-before-dismiss.interface';\nimport { ThemedLoadingComponent } from '../../../shared/loading/themed-loading.component';\n\n@Component({\n  selector: 'ds-item-versions-summary-modal',\n  templateUrl: './item-versions-summary-modal.component.html',\n  styleUrls: ['./item-versions-summary-modal.component.scss'],\n  standalone: true,\n  imports: [NgIf, FormsModule, ThemedLoadingComponent, AsyncPipe, TranslateModule],\n})\nexport class ItemVersionsSummaryModalComponent implements OnInit, ModalBeforeDismiss {\n\n  versionNumber: number;\n  newVersionSummary: string;\n  firstVersion = true;\n  submitted$: BehaviorSubject<boolean>;\n\n  @Output() createVersionEvent: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(\n    protected activeModal: NgbActiveModal,\n  ) {\n  }\n\n  ngOnInit() {\n    this.submitted$ = new BehaviorSubject<boolean>(false);\n  }\n\n  onModalClose() {\n    this.activeModal.dismiss();\n  }\n\n  beforeDismiss(): boolean | Promise<boolean> {\n    // prevent the modal from being dismissed after version creation is initiated\n    return !this.submitted$.getValue();\n  }\n\n  onModalSubmit() {\n    this.createVersionEvent.emit(this.newVersionSummary);\n    this.submitted$.next(true);\n    // NOTE: the caller of this modal is responsible for closing it,\n    //       e.g. after the version creation POST request completed.\n  }\n\n}\n","<div *ngIf=\"(this.submitted$ | async) !== true; else waiting\">\n  <div class=\"modal-header\">{{'item.version.create.modal.header' | translate}}\n    <button type=\"button\" class=\"close\" (click)=\"onModalClose()\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">×</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <p class=\"pb-2\">\n      {{ \"item.version.create.modal.text\" | translate }}\n      <span *ngIf=\"!firstVersion\">\n        {{ \"item.version.create.modal.text.startingFrom\" | translate : {version: versionNumber} }}\n      </span>\n    </p>\n    <div class=\"form-group\">\n      <label for=\"summary\">{{'item.version.create.modal.form.summary.label' | translate }}:</label>\n      <input type=\"text\" id=\"summary\" class=\"form-control\" [(ngModel)]=\"newVersionSummary\"\n             (keyup.enter)=\"onModalSubmit()\"\n             placeholder=\"{{'item.version.create.modal.form.summary.placeholder' | translate }}\"/>\n<!--      (keyup.enter)=\"$event.preventDefault(); $event.stopImmediatePropagation()\"-->\n    </div>\n  </div>\n  <div class=\"modal-footer space-children-mr\">\n      <button class=\"btn btn-outline-secondary btn-sm ml-0\"\n              type=\"button\"\n              (click)=\"onModalClose()\"\n              title=\"{{'item.version.create.modal.button.cancel.tooltip' | translate}}\">\n        <i class=\"fas fa-times fa-fw\"></i> {{'item.version.create.modal.button.cancel' | translate}}\n      </button>\n      <button class=\"btn btn-success btn-sm ml-0\"\n              type=\"submit\"\n              (click)=\"onModalSubmit()\"\n              title=\"{{'item.version.create.modal.button.confirm.tooltip' | translate}}\">\n        <i class=\"fas fa-check fa-fw\"></i> {{'item.version.create.modal.button.confirm' | translate}}\n    </button>\n  </div>\n</div>\n\n<ng-template #waiting>\n  <div class=\"modal-header\">{{'item.version.create.modal.submitted.header' | translate}}</div>\n  <div class=\"modal-body\">\n    <p>{{'item.version.create.modal.submitted.text' | translate}}</p>\n    <div class=\"d-flex justify-content-center\">\n      <ds-loading [showMessage]=\"false\"></ds-loading>\n    </div>\n  </div>\n</ng-template>\n","import {\n  AsyncPipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { AuthorizationDataService } from '../../core/data/feature-authorization/authorization-data.service';\nimport { ModalBeforeDismiss } from '../interfaces/modal-before-dismiss.interface';\nimport { ThemedLoadingComponent } from '../loading/themed-loading.component';\n\n@Component({\n  selector: 'ds-item-withdrawn-reinstate-modal',\n  templateUrl: './item-withdrawn-reinstate-modal.component.html',\n  styleUrls: ['./item-withdrawn-reinstate-modal.component.scss'],\n  imports: [\n    NgIf,\n    TranslateModule,\n    ThemedLoadingComponent,\n    FormsModule,\n    AsyncPipe,\n  ],\n  standalone: true,\n})\n/**\n * Represents a modal component for withdrawing or reinstating an item.\n * Implements the ModalBeforeDismiss interface.\n */\nexport class ItemWithdrawnReinstateModalComponent implements ModalBeforeDismiss {\n\n  /**\n   * The reason for withdrawing or reinstating a suggestion.\n   */\n  reason: string;\n  /**\n   * Indicates whether the item can be withdrawn.\n   */\n  canWithdraw: boolean;\n  /**\n   * BehaviorSubject that represents the submitted state.\n   * Emits a boolean value indicating whether the form has been submitted or not.\n   */\n  submitted$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  /**\n   * Event emitter for creating a QA event.\n   * @event createQAEvent\n   */\n  @Output() createQAEvent: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(\n    protected activeModal: NgbActiveModal,\n    protected authorizationService: AuthorizationDataService,\n  ) {}\n\n  /**\n   * Closes the modal.\n   */\n  onModalClose() {\n    this.activeModal.close();\n  }\n\n  /**\n   * Determines whether the modal can be dismissed.\n   * @returns {boolean} True if the modal can be dismissed, false otherwise.\n   */\n  beforeDismiss(): boolean {\n    // prevent the modal from being dismissed after version creation is initiated\n    return !this.submitted$.getValue();\n  }\n\n  /**\n   * Handles the submission of the modal form.\n   * Emits the reason for withdrawal or reinstatement through the createQAEvent output.\n   */\n  onModalSubmit() {\n    this.submitted$.next(true);\n    this.createQAEvent.emit(this.reason);\n  }\n\n  /**\n   * Sets the withdrawal state of the component.\n   * @param state The new withdrawal state.\n   */\n  public setWithdraw(state: boolean) {\n    this.canWithdraw = state;\n  }\n}\n","<div *ngIf=\"(this.submitted$ | async) !== true; else waiting\">\n  <div *ngIf=\"this.canWithdraw; else reinstateHeader\" class=\"modal-header\">\n    {{ 'item.qa.withdrawn.modal.header' | translate }}\n    <button type=\"button\" class=\"close\" (click)=\"onModalClose()\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">×</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"form-group\">\n      <label for=\"reason\">{{ this.canWithdraw ? ('qa-withdrawn.create.modal.form.summary.label' | translate)\n                                              : ('qa-reinstate.create.modal.form.summary.label' | translate) }}</label>\n      <label for=\"reason\">{{ this.canWithdraw ? ('qa-withdrawn.create.modal.form.summary2.label' | translate)\n                                              : ('qa-reinstate.create.modal.form.summary2.label' | translate) }}</label>\n      <textarea class=\"form-control\" id=\"reason\"\n                rows=\"6\"\n                [(ngModel)]=\"reason\"\n                placeholder=\"{{ this.canWithdraw ? ('qa-withdrown.modal.form.summary.placeholder' | translate)\n                                                 : ('qa-reinstate.modal.form.summary.placeholder' | translate) }}\"\n                name=\"message\"></textarea>\n    </div>\n  </div>\n  <div class=\"modal-footer space-children-mr\">\n    <button class=\"btn btn-outline-secondary btn-sm ml-0\"\n            type=\"button\"\n            (click)=\"onModalClose()\"\n            title=\"{{'item.qa.withdrawn-reinstate.create.modal.button.cancel.tooltip' | translate}}\">\n      <i class=\"fas fa-times fa-fw\"></i> {{'item.qa.withdrawn-reinstate.create.modal.button.cancel' | translate}}\n    </button>\n    <button class=\"btn btn-success btn-sm ml-0\"\n            type=\"submit\"\n            (click)=\"onModalSubmit()\"\n            title=\"{{'item.qa.withdrawn-reinstate.modal.button.confirm.tooltip' | translate}}\">\n      <i class=\"fas fa-check fa-fw\"></i> {{ this.canWithdraw ? ('qa-withdrown.create.modal.button.confirm' | translate)\n                                                             : ('qa-reinstate.create.modal.button.confirm' | translate) }}\n    </button>\n  </div>\n</div>\n\n<ng-template #waiting>\n  <div class=\"modal-header\">{{'item.qa.withdrawn.modal.submitted.header' | translate}}</div>\n  <div class=\"modal-body\">\n    <div class=\"d-flex justify-content-center\">\n      <ds-loading [showMessage]=\"false\"></ds-loading>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #reinstateHeader>\n  <div *ngIf=\"!this.canWithdraw\" class=\"modal-header\">\n    {{'item.qa.reinstate.modal.header' | translate}}\n    <button type=\"button\" class=\"close\" (click)=\"onModalClose()\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">×</span>\n    </button>\n  </div>\n</ng-template>\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateService } from '@ngx-translate/core';\nimport { take } from 'rxjs/operators';\n\nimport { AuthorizationDataService } from '../../../core/data/feature-authorization/authorization-data.service';\nimport { ItemDataService } from '../../../core/data/item-data.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { QualityAssuranceEventDataService } from '../../../core/notifications/qa/events/quality-assurance-event-data.service';\nimport { QualityAssuranceEventObject } from '../../../core/notifications/qa/models/quality-assurance-event.model';\nimport { Item } from '../../../core/shared/item.model';\nimport { getFirstCompletedRemoteData } from '../../../core/shared/operators';\nimport { ItemWithdrawnReinstateModalComponent } from '../../correction-suggestion/item-withdrawn-reinstate-modal.component';\nimport { NotificationsService } from '../../notifications/notifications.service';\n\nexport const REQUEST_WITHDRAWN = 'REQUEST/WITHDRAWN';\nexport const REQUEST_REINSTATE = 'REQUEST/REINSTATE';\n\n@Injectable({\n  providedIn: 'root',\n})\n/**\n * Service for managing the withdrawn/reinstate modal for a DSO.\n */\nexport class DsoWithdrawnReinstateModalService {\n\n  constructor(\n    protected router: Router,\n    protected modalService: NgbModal,\n    protected itemService: ItemDataService,\n    private notificationsService: NotificationsService,\n    protected authorizationService: AuthorizationDataService,\n    private translateService: TranslateService,\n    protected qaEventDataService: QualityAssuranceEventDataService,\n  ) {}\n\n  /**\n   * Open the create withdrawn modal for the provided dso\n   */\n  openCreateWithdrawnReinstateModal(dso: Item, correctionType: 'request-reinstate' | 'request-withdrawn', state: boolean): void {\n    const target = dso.id;\n    // Open modal\n    const activeModal = this.modalService.open(ItemWithdrawnReinstateModalComponent);\n    (activeModal.componentInstance as ItemWithdrawnReinstateModalComponent).setWithdraw(state);\n    (activeModal.componentInstance as ItemWithdrawnReinstateModalComponent).createQAEvent\n      .pipe(\n        take(1),\n      ).subscribe(\n        (reasone) => {\n          this.sendQARequest(target, correctionType, reasone);\n          activeModal.close();\n        },\n      );\n  }\n\n  /**\n   * Sends a quality assurance request.\n   *\n   * @param target - The target - the item's UUID.\n   * @param correctionType - The type of correction.\n   * @param reason - The reason for the request.\n   * Reloads the current page in order to update the withdrawn/reinstate button.\n   * and desplay a notification box.\n   */\n  sendQARequest(target: string, correctionType: 'request-reinstate' | 'request-withdrawn', reason: string): void {\n    this.qaEventDataService.postData(target, correctionType, '', reason)\n      .pipe (\n        getFirstCompletedRemoteData(),\n      )\n      .subscribe((res: RemoteData<QualityAssuranceEventObject>) => {\n        if (res.hasSucceeded) {\n          const message = (correctionType === 'request-withdrawn')\n            ? 'correction-type.manage-relation.action.notification.withdrawn'\n            : 'correction-type.manage-relation.action.notification.reinstate';\n\n          this.notificationsService.success(this.translateService.get(message));\n          this.authorizationService.invalidateAuthorizationsRequestCache();\n          this.reloadPage(true);\n        } else {\n          this.notificationsService.error(this.translateService.get('correction-type.manage-relation.action.notification.error'));\n        }\n      });\n  }\n\n  /**\n   * Reloads the current page or navigates to a specified URL.\n   * @param self - A boolean indicating whether to reload the current page (true) or navigate to a specified URL (false).\n   * @param urlToNavigateTo - The URL to navigate to if `self` is false.\n   * skipLocationChange:true means dont update the url to / when navigating\n   */\n  reloadPage(self: boolean, urlToNavigateTo?: string) {\n    const url = self ? this.router.url : urlToNavigateTo;\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\n      this.router.navigate([`/${url}`]);\n    });\n  }\n}\n\n","import {\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { Angulartics2 } from 'angulartics2';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { ReferrerService } from '../../../core/services/referrer.service';\nimport { DSpaceObject } from '../../../core/shared/dspace-object.model';\nimport { hasValue } from '../../../shared/empty.util';\n\n/**\n * This component triggers a page view statistic\n */\n@Component({\n  selector: 'ds-view-tracker',\n  styleUrls: ['./view-tracker.component.scss'],\n  templateUrl: './view-tracker.component.html',\n  standalone: true,\n})\nexport class ViewTrackerComponent implements OnInit, OnDestroy {\n  /**\n   * The DSpaceObject to track a view event about\n   */\n  @Input() object: DSpaceObject;\n\n  /**\n   * The subscription on this.referrerService.getReferrer()\n   * @protected\n   */\n  protected sub: Subscription;\n\n  constructor(\n    public angulartics2: Angulartics2,\n    public referrerService: ReferrerService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.sub = this.referrerService.getReferrer()\n      .pipe(take(1))\n      .subscribe((referrer: string) => {\n        this.angulartics2.eventTrack.next({\n          action: 'page_view',\n          properties: {\n            object: this.object,\n            referrer,\n          },\n        });\n      });\n  }\n\n  ngOnDestroy(): void {\n    // unsubscribe in the case that this component is destroyed before\n    // this.referrerService.getReferrer() has emitted\n    if (hasValue(this.sub)) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n","&nbsp;\n"],"names":["Breadcrumb","constructor","text","url","of","observableOf","find","map","switchMap","getDSORoute","hasValue","followLink","LinkService","DSONameService","DSOBreadcrumbsService","linkService","dsoNameService","getBreadcrumbs","key","label","getName","crumb","propertyName","getParentLinkKey","resolveLink","pipe","parentRD","hasSucceeded","statusCode","payload","parent","breadcrumbs","i0","ɵɵinject","i1","i2","factory","ɵfac","providedIn","HttpHeaders","HttpParams","take","NotificationsService","RemoteDataBuildService","RequestParam","ObjectCacheService","CreateDataImpl","DeleteDataImpl","IdentifiableDataService","PatchDataImpl","SearchDataImpl","DefaultChangeAnalyzer","DeleteByIDRequest","PostRequest","RequestService","HALEndpointService","QualityAssuranceEventDataService","requestService","rdbService","objectCache","halService","notificationsService","comparator","createData","linkPath","responseMsToLive","deleteData","constructIdEndpoint","patchData","searchData","getEventsByTopic","topic","options","linksToFollow","searchParams","searchBy","searchEventsByTopic","clearFindByTopicRequests","setStaleByHrefSubstring","getEvent","id","findById","patchEvent","status","dso","reason","operation","path","op","value","patch","boundProject","itemId","projectId","postOnRelated","removeProject","deleteOnRelated","objectId","requestId","generateRequestId","hrefObs","getIDHrefObs","href","subscribe","request","send","buildFromRequestUUID","relatedItemId","body","postData","target","correctionType","related","href$","getBrowseEndpoint","Object","create","headers","append","params","deleteQAEvent","qaEvent","delete","i3","i4","i5","i6","FindListOptions","getAllSucceededRemoteDataPayload","getPaginatedListPayload","CorrectionTypeDataService","searchByTopic","searchFindByItem","getCorrectionTypeById","useCachedVersionIfAvailable","reRequestOnStale","findByItem","itemUuid","findByTopic","list","TranslateService","ItemVersionsSharedService","translateService","msg","translationPrefix","notifyCreateNewVersion","newVersionRD","newVersionNumber","version","success","get","error","AsyncPipe","NgIf","EventEmitter","FormsModule","NgbActiveModal","TranslateModule","BehaviorSubject","ThemedLoadingComponent","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind2","ɵɵpureFunction1","_c0","ctx_r1","versionNumber","ɵɵlistener","ItemVersionsSummaryModalComponent_div_0_Template_button_click_4_listener","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵresetView","onModalClose","ɵɵtemplate","ItemVersionsSummaryModalComponent_div_0_span_11_Template","ɵɵtwoWayListener","ItemVersionsSummaryModalComponent_div_0_Template_input_ngModelChange_16_listener","$event","ɵɵtwoWayBindingSet","newVersionSummary","ItemVersionsSummaryModalComponent_div_0_Template_input_keyup_enter_16_listener","onModalSubmit","ItemVersionsSummaryModalComponent_div_0_Template_button_click_19_listener","ɵɵelement","ItemVersionsSummaryModalComponent_div_0_Template_button_click_24_listener","ɵɵpipeBind1","ɵɵproperty","firstVersion","ɵɵpropertyInterpolate","ɵɵtwoWayProperty","ɵɵtextInterpolate","ItemVersionsSummaryModalComponent","activeModal","createVersionEvent","ngOnInit","submitted$","dismiss","beforeDismiss","getValue","emit","next","ɵɵdirectiveInject","selectors","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ItemVersionsSummaryModalComponent_Template","rf","ctx","ItemVersionsSummaryModalComponent_div_0_Template","ItemVersionsSummaryModalComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","waiting_r3","DefaultValueAccessor","NgControlStatus","NgModel","TranslatePipe","styles","AuthorizationDataService","ItemWithdrawnReinstateModalComponent_div_0_div_1_Template_button_click_3_listener","_r2","ctx_r2","ItemWithdrawnReinstateModalComponent_div_0_div_1_Template","ItemWithdrawnReinstateModalComponent_div_0_Template_textarea_ngModelChange_12_listener","ItemWithdrawnReinstateModalComponent_div_0_Template_button_click_16_listener","ItemWithdrawnReinstateModalComponent_div_0_Template_button_click_21_listener","canWithdraw","reinstateHeader_r4","ItemWithdrawnReinstateModalComponent_ng_template_4_div_0_Template_button_click_3_listener","_r5","ItemWithdrawnReinstateModalComponent_ng_template_4_div_0_Template","ItemWithdrawnReinstateModalComponent","authorizationService","createQAEvent","close","setWithdraw","state","ItemWithdrawnReinstateModalComponent_Template","ItemWithdrawnReinstateModalComponent_div_0_Template","ItemWithdrawnReinstateModalComponent_ng_template_2_Template","ItemWithdrawnReinstateModalComponent_ng_template_4_Template","waiting_r6","Router","NgbModal","ItemDataService","getFirstCompletedRemoteData","REQUEST_WITHDRAWN","REQUEST_REINSTATE","DsoWithdrawnReinstateModalService","router","modalService","itemService","qaEventDataService","openCreateWithdrawnReinstateModal","open","componentInstance","reasone","sendQARequest","res","message","invalidateAuthorizationsRequestCache","reloadPage","self","urlToNavigateTo","navigateByUrl","skipLocationChange","then","navigate","i7","Angulartics2","ReferrerService","DSpaceObject","ViewTrackerComponent","angulartics2","referrerService","sub","getReferrer","referrer","eventTrack","action","properties","object","ngOnDestroy","unsubscribe","inputs","ViewTrackerComponent_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}