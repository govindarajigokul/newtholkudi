{"version":3,"file":"src_app_forgot-password_forgot-password-routes_ts.js","mappings":"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","sources":["./src/app/forgot-password/forgot-password-email/forgot-email.component.ts","./src/app/forgot-password/forgot-password-email/forgot-email.component.html","./src/app/forgot-password/forgot-password-email/themed-forgot-email.component.ts","./src/app/shared/theme-support/themed.component.html","./src/app/forgot-password/forgot-password-form/forgot-password-form.component.ts","./src/app/forgot-password/forgot-password-form/forgot-password-form.component.html","./src/app/forgot-password/forgot-password-form/themed-forgot-password-form.component.ts","./src/app/forgot-password/forgot-password-routes.ts","./src/themes/ lazy ^\\.\\/.*\\/app\\/forgot\\-password\\/forgot\\-password\\-email\\/forgot\\-email\\.component$ namespace object","./src/themes/ lazy ^\\.\\/.*\\/app\\/forgot\\-password\\/forgot\\-password\\-form\\/forgot\\-password\\-form\\.component$ namespace object"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ThemedRegisterEmailFormComponent } from 'src/app/register-email-form/themed-registry-email-form.component';\n\nimport { TYPE_REQUEST_FORGOT } from '../../register-email-form/register-email-form.component';\n\n@Component({\n  selector: 'ds-base-forgot-email',\n  styleUrls: ['./forgot-email.component.scss'],\n  templateUrl: './forgot-email.component.html',\n  imports: [\n    ThemedRegisterEmailFormComponent,\n  ],\n  standalone: true,\n})\n/**\n * Component responsible the forgot password email step\n */\nexport class ForgotEmailComponent {\n  typeRequest = TYPE_REQUEST_FORGOT;\n}\n","<ds-register-email-form\n    [MESSAGE_PREFIX]=\"'forgot-email.form'\" [typeRequest]=\"typeRequest\">\n</ds-register-email-form>\n","import { Component } from '@angular/core';\n\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { ForgotEmailComponent } from './forgot-email.component';\n\n/**\n * Themed wrapper for ForgotEmailComponent\n */\n@Component({\n  selector: 'ds-forgot-email',\n  styleUrls: [],\n  templateUrl: './../../shared/theme-support/themed.component.html',\n  standalone: true,\n  imports: [ForgotEmailComponent],\n})\nexport class ThemedForgotEmailComponent extends ThemedComponent<ForgotEmailComponent> {\n  protected getComponentName(): string {\n    return 'ForgotEmailComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/forgot-password/forgot-password-email/forgot-email.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./forgot-email.component`);\n  }\n\n}\n","<ng-template #vcr>\n</ng-template>\n<div #content>\n  <ng-content></ng-content>\n</div>\n","import {\n  AsyncPipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router,\n} from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AuthenticateAction } from '../../core/auth/auth.actions';\nimport { CoreState } from '../../core/core-state.model';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { EPersonDataService } from '../../core/eperson/eperson-data.service';\nimport { EPerson } from '../../core/eperson/models/eperson.model';\nimport {\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteDataPayload,\n} from '../../core/shared/operators';\nimport { Registration } from '../../core/shared/registration.model';\nimport { ProfilePageSecurityFormComponent } from '../../profile-page/profile-page-security-form/profile-page-security-form.component';\nimport { BtnDisabledDirective } from '../../shared/btn-disabled.directive';\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\nimport { BrowserOnlyPipe } from '../../shared/utils/browser-only.pipe';\n\n@Component({\n  selector: 'ds-base-forgot-password-form',\n  styleUrls: ['./forgot-password-form.component.scss'],\n  templateUrl: './forgot-password-form.component.html',\n  imports: [\n    TranslateModule,\n    BrowserOnlyPipe,\n    ProfilePageSecurityFormComponent,\n    AsyncPipe,\n    NgIf,\n    BtnDisabledDirective,\n  ],\n  standalone: true,\n})\n/**\n * Component for a user to enter a new password for a forgot token.\n */\nexport class ForgotPasswordFormComponent implements OnInit {\n\n  registration$: Observable<Registration>;\n\n  token: string;\n  email: string;\n  user: string;\n\n  isInValid = true;\n  password: string;\n\n  /**\n   * Prefix for the notification messages of this component\n   */\n  NOTIFICATIONS_PREFIX = 'forgot-password.form.notification';\n\n  constructor(private ePersonDataService: EPersonDataService,\n              private translateService: TranslateService,\n              private notificationsService: NotificationsService,\n              private store: Store<CoreState>,\n              private router: Router,\n              private route: ActivatedRoute,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.registration$ = this.route.data.pipe(\n      map((data) => data.registration as RemoteData<Registration>),\n      getFirstSucceededRemoteDataPayload(),\n    );\n    this.registration$.subscribe((registration: Registration) => {\n      this.email = registration.email;\n      this.token = registration.token;\n      this.user = registration.user;\n    });\n  }\n\n  setInValid($event: boolean) {\n    this.isInValid = $event;\n  }\n\n  setPasswordValue($event: string) {\n    this.password = $event;\n  }\n\n  /**\n   * Submits the password to the eperson service to be updated.\n   * The submission will not be made when the form is not valid.\n   */\n  submit() {\n    if (!this.isInValid) {\n      this.ePersonDataService.patchPasswordWithToken(this.user, this.token, this.password).pipe(\n        getFirstCompletedRemoteData(),\n      ).subscribe((response: RemoteData<EPerson>) => {\n        if (response.hasSucceeded) {\n          this.notificationsService.success(\n            this.translateService.instant(this.NOTIFICATIONS_PREFIX + '.success.title'),\n            this.translateService.instant(this.NOTIFICATIONS_PREFIX + '.success.content'),\n          );\n          this.store.dispatch(new AuthenticateAction(this.email, this.password));\n          this.router.navigate(['/home']);\n        } else {\n          this.notificationsService.error(\n            this.translateService.instant(this.NOTIFICATIONS_PREFIX + '.error.title'), response.errorMessage,\n          );\n        }\n      });\n    }\n  }\n}\n","<div class=\"container\" *ngIf=\"(registration$ |async)\">\n    <h1 class=\"mb-4\">{{'forgot-password.form.head' | translate}}</h1>\n    <div class=\"card mb-4\">\n        <div class=\"card-header\">{{'forgot-password.form.identification.header' | translate}}</div>\n        <div class=\"card-body\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <span class=\"font-weight-bold\">{{'forgot-password.form.identification.email' | translate}} </span>\n                    <span [attr.data-test]=\"'email' | dsBrowserOnly\">{{(registration$ |async).email}}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card mb-4\">\n        <div class=\"card-header\">{{'forgot-password.form.card.security' | translate}}</div>\n        <div class=\"card-body\">\n\n            <ds-profile-page-security-form\n                    [passwordCanBeEmpty]=\"false\"\n                    [FORM_PREFIX]=\"'forgot-password.form.'\"\n                    (isInvalid)=\"setInValid($event)\"\n                    (passwordValue)=\"setPasswordValue($event)\"\n            ></ds-profile-page-security-form>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <button\n                    [dsBtnDisabled]=\"isInValid\"\n                    class=\"btn btn-default btn-primary\"\n                    (click)=\"submit()\">{{'forgot-password.form.submit' | translate}}</button>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { ForgotPasswordFormComponent } from './forgot-password-form.component';\n\n/**\n * Themed wrapper for ForgotPasswordFormComponent\n */\n@Component({\n  selector: 'ds-forgot-password-form',\n  styleUrls: [],\n  templateUrl: './../../shared/theme-support/themed.component.html',\n  standalone: true,\n  imports: [ForgotPasswordFormComponent],\n})\nexport class ThemedForgotPasswordFormComponent extends ThemedComponent<ForgotPasswordFormComponent> {\n  protected getComponentName(): string {\n    return 'ForgotPasswordFormComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/forgot-password/forgot-password-form/forgot-password-form.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./forgot-password-form.component`);\n  }\n}\n","import { Route } from '@angular/router';\n\nimport { registrationGuard } from '../register-page/registration.guard';\nimport { ThemedForgotEmailComponent } from './forgot-password-email/themed-forgot-email.component';\nimport { ThemedForgotPasswordFormComponent } from './forgot-password-form/themed-forgot-password-form.component';\n\nexport const ROUTES: Route[] = [\n  {\n    path: '',\n    component: ThemedForgotEmailComponent,\n    data: { title: 'forgot-password.title' },\n  },\n  {\n    path: ':token',\n    component: ThemedForgotPasswordFormComponent,\n    canActivate: [registrationGuard],\n  },\n];\n","var map = {\n\t\"./custom/app/forgot-password/forgot-password-email/forgot-email.component\": [\n\t\t82217,\n\t\t\"src_themes_custom_app_forgot-password_forgot-password-email_forgot-email_component_ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 45265;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./custom/app/forgot-password/forgot-password-form/forgot-password-form.component\": [\n\t\t42873,\n\t\t\"src_themes_custom_app_forgot-password_forgot-password-form_forgot-password-form_component_ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 15706;\nmodule.exports = webpackAsyncContext;"],"names":["ThemedRegisterEmailFormComponent","TYPE_REQUEST_FORGOT","ForgotEmailComponent","constructor","typeRequest","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","ForgotEmailComponent_Template","rf","ctx","ɵɵelement","ɵɵproperty","styles","ThemedComponent","ThemedForgotEmailComponent","getComponentName","importThemedComponent","themeName","importUnthemedComponent","t","ɵɵInheritDefinitionFeature","ngContentSelectors","_c0","ThemedForgotEmailComponent_Template","ɵɵtemplate","ThemedForgotEmailComponent_ng_template_0_Template","ɵɵtemplateRefExtractor","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","AsyncPipe","NgIf","ActivatedRoute","Router","Store","TranslateModule","TranslateService","map","AuthenticateAction","EPersonDataService","getFirstCompletedRemoteData","getFirstSucceededRemoteDataPayload","ProfilePageSecurityFormComponent","BtnDisabledDirective","NotificationsService","BrowserOnlyPipe","ɵɵtext","ɵɵlistener","ForgotPasswordFormComponent_div_0_Template_ds_profile_page_security_form_isInvalid_23_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","setInValid","ForgotPasswordFormComponent_div_0_Template_ds_profile_page_security_form_passwordValue_23_listener","setPasswordValue","ForgotPasswordFormComponent_div_0_Template_button_click_26_listener","submit","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵtextInterpolate1","registration$","email","isInValid","ForgotPasswordFormComponent","ePersonDataService","translateService","notificationsService","store","router","route","NOTIFICATIONS_PREFIX","ngOnInit","data","pipe","registration","subscribe","token","user","password","patchPasswordWithToken","response","hasSucceeded","success","instant","dispatch","navigate","error","errorMessage","ɵɵdirectiveInject","i1","i2","i3","i4","i5","ForgotPasswordFormComponent_Template","ForgotPasswordFormComponent_div_0_Template","TranslatePipe","ThemedForgotPasswordFormComponent","ThemedForgotPasswordFormComponent_Template","ThemedForgotPasswordFormComponent_ng_template_0_Template","registrationGuard","ROUTES","path","component","title","canActivate"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}