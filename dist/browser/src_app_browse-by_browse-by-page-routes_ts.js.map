{"version":3,"file":"src_app_browse-by_browse-by-page-routes_ts.js","mappings":"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","sources":["./src/app/breadcrumbs/breadcrumb/breadcrumb.model.ts","./src/app/browse-by/browse-by-dso-breadcrumb.resolver.ts","./src/app/browse-by/browse-by-guard.ts","./src/app/browse-by/browse-by-i18n-breadcrumb.resolver.ts","./src/app/browse-by/browse-by-page-routes.ts","./src/app/browse-by/browse-by-page/browse-by-page.component.ts","./src/app/browse-by/browse-by-page/browse-by-page.component.html","./src/app/browse-by/browse-by-switcher/browse-by-switcher.component.ts","./src/app/shared/abstract-component-loader/abstract-component-loader.component.html","./src/app/core/breadcrumbs/dso-breadcrumbs.service.ts","./src/app/core/breadcrumbs/i18n-breadcrumb.resolver.ts","./src/app/core/breadcrumbs/i18n-breadcrumbs.service.ts"],"sourcesContent":["/**\n * Class representing a single breadcrumb\n */\nexport class Breadcrumb {\n  constructor(\n    /**\n     * The display value of the breadcrumb\n     */\n    public text: string,\n    /**\n     * The optional url of the breadcrumb\n     */\n    public url?: string) {\n  }\n}\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { getDSORoute } from '../app-routing-paths';\nimport { BreadcrumbConfig } from '../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { DSOBreadcrumbsService } from '../core/breadcrumbs/dso-breadcrumbs.service';\nimport { DSpaceObjectDataService } from '../core/data/dspace-object-data.service';\nimport { Collection } from '../core/shared/collection.model';\nimport { Community } from '../core/shared/community.model';\nimport {\n  getFirstSucceededRemoteData,\n  getRemoteDataPayload,\n} from '../core/shared/operators';\nimport { hasValue } from '../shared/empty.util';\n\n/**\n * Method for resolving a breadcrumb config object\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {DSOBreadcrumbsService} breadcrumbService\n * @param {DSpaceObjectDataService} dataService\n * @returns BreadcrumbConfig object\n */\nexport const browseByDSOBreadcrumbResolver: ResolveFn<BreadcrumbConfig<Community | Collection>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  breadcrumbService: DSOBreadcrumbsService = inject(DSOBreadcrumbsService),\n  dataService: DSpaceObjectDataService = inject(DSpaceObjectDataService),\n): Observable<BreadcrumbConfig<Community | Collection>> => {\n  const uuid = route.queryParams.scope;\n  if (hasValue(uuid)) {\n    return dataService.findById(uuid).pipe(\n      getFirstSucceededRemoteData(),\n      getRemoteDataPayload(),\n      map((object: Community | Collection) => {\n        return { provider: breadcrumbService, key: object, url: getDSORoute(object) };\n      }),\n    );\n  }\n  return undefined;\n};\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivateFn,\n  Data,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs';\nimport {\n  map,\n  switchMap,\n} from 'rxjs/operators';\n\nimport { PAGE_NOT_FOUND_PATH } from '../app-routing-paths';\nimport { BrowseDefinitionDataService } from '../core/browse/browse-definition-data.service';\nimport { RemoteData } from '../core/data/remote-data';\nimport { BrowseDefinition } from '../core/shared/browse-definition.model';\nimport { getFirstCompletedRemoteData } from '../core/shared/operators';\nimport {\n  hasNoValue,\n  hasValue,\n} from '../shared/empty.util';\n\nexport const browseByGuard: CanActivateFn = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  browseDefinitionService: BrowseDefinitionDataService = inject(BrowseDefinitionDataService),\n  router: Router = inject(Router),\n  translate: TranslateService = inject(TranslateService),\n): Observable<boolean> => {\n  const title = route.data.title;\n  const id = route.params.id || route.queryParams.id || route.data.id;\n  let browseDefinition$: Observable<BrowseDefinition | undefined>;\n  if (hasNoValue(route.data.browseDefinition) && hasValue(id)) {\n    browseDefinition$ = browseDefinitionService.findById(id).pipe(\n      getFirstCompletedRemoteData(),\n      map((browseDefinitionRD: RemoteData<BrowseDefinition>) => browseDefinitionRD.payload),\n    );\n  } else {\n    browseDefinition$ = observableOf(route.data.browseDefinition);\n  }\n  const scope = route.queryParams.scope ?? route.parent?.params.id;\n  const value = route.queryParams.value;\n  const metadataTranslated = translate.instant(`browse.metadata.${id}`);\n  return browseDefinition$.pipe(\n    switchMap((browseDefinition: BrowseDefinition | undefined) => {\n      if (hasValue(browseDefinition)) {\n        route.data = createData(title, id, browseDefinition, metadataTranslated, value, route, scope);\n        return observableOf(true);\n      } else {\n        void router.navigate([PAGE_NOT_FOUND_PATH]);\n        return observableOf(false);\n      }\n    }),\n  );\n};\n\nfunction createData(title: string, id: string, browseDefinition: BrowseDefinition, field: string, value: string, route: ActivatedRouteSnapshot, scope: string): Data {\n  return Object.assign({}, route.data, {\n    title: title,\n    id: id,\n    browseDefinition: browseDefinition,\n    field: field,\n    value: hasValue(value) ? `\"${value}\"` : '',\n    scope: scope,\n  });\n}\n","import {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { BreadcrumbConfig } from '../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { i18nBreadcrumbResolver } from '../core/breadcrumbs/i18n-breadcrumb.resolver';\n\n/**\n * Method for resolving a browse-by i18n breadcrumb configuration object\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @returns BreadcrumbConfig object for a browse-by page\n */\nexport const browseByI18nBreadcrumbResolver: ResolveFn<BreadcrumbConfig<string>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n): BreadcrumbConfig<string> => {\n  const extendedBreadcrumbKey = route.data.breadcrumbKey + '.' + route.params.id;\n  route.data = Object.assign({}, route.data, { breadcrumbKey: extendedBreadcrumbKey });\n  return i18nBreadcrumbResolver(route, state) as BreadcrumbConfig<string>;\n};\n","import { Route } from '@angular/router';\n\nimport { browseByDSOBreadcrumbResolver } from './browse-by-dso-breadcrumb.resolver';\nimport { browseByGuard } from './browse-by-guard';\nimport { browseByI18nBreadcrumbResolver } from './browse-by-i18n-breadcrumb.resolver';\nimport { BrowseByPageComponent } from './browse-by-page/browse-by-page.component';\n\nexport const ROUTES: Route[] = [\n  {\n    path: '',\n    resolve: {\n      breadcrumb: browseByDSOBreadcrumbResolver,\n    },\n    children: [\n      {\n        path: ':id',\n        component: BrowseByPageComponent,\n        canActivate: [browseByGuard],\n        resolve: { breadcrumb: browseByI18nBreadcrumbResolver },\n        data: { title: 'browse.title.page', breadcrumbKey: 'browse.metadata' },\n      },\n    ],\n  }];\n","import { AsyncPipe } from '@angular/common';\nimport {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { BrowseDefinition } from '../../core/shared/browse-definition.model';\nimport { BrowseByDataType } from '../browse-by-switcher/browse-by-data-type';\nimport { BrowseBySwitcherComponent } from '../browse-by-switcher/browse-by-switcher.component';\n\n@Component({\n  selector: 'ds-browse-by-page',\n  templateUrl: './browse-by-page.component.html',\n  styleUrls: ['./browse-by-page.component.scss'],\n  imports: [\n    BrowseBySwitcherComponent,\n    AsyncPipe,\n  ],\n  standalone: true,\n})\nexport class BrowseByPageComponent implements OnInit {\n\n  browseByType$: Observable<{type: BrowseByDataType }>;\n\n  constructor(\n    protected route: ActivatedRoute,\n  ) {\n  }\n\n  /**\n   * Fetch the correct browse-by component by using the relevant config from the route data\n   */\n  ngOnInit(): void {\n    this.browseByType$ = this.route.data.pipe(\n      map((data: { browseDefinition: BrowseDefinition }) => ({ type: data.browseDefinition.getRenderType() })),\n    );\n  }\n\n}\n","<div class=\"container\">\n  <ds-browse-by-switcher [browseByType]=\"browseByType$ | async\">\n  </ds-browse-by-switcher>\n</div>\n","import {\n  AsyncPipe,\n  NgComponentOutlet,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n} from '@angular/core';\n\nimport { Context } from '../../core/shared/context.model';\nimport { GenericConstructor } from '../../core/shared/generic-constructor';\nimport { AbstractComponentLoaderComponent } from '../../shared/abstract-component-loader/abstract-component-loader.component';\nimport { DynamicComponentLoaderDirective } from '../../shared/abstract-component-loader/dynamic-component-loader.directive';\nimport { BrowseByDataType } from './browse-by-data-type';\nimport { getComponentByBrowseByType } from './browse-by-decorator';\n\n@Component({\n  selector: 'ds-browse-by-switcher',\n  templateUrl: '../../shared/abstract-component-loader/abstract-component-loader.component.html',\n  imports: [AsyncPipe, NgComponentOutlet, DynamicComponentLoaderDirective],\n  standalone: true,\n})\nexport class BrowseBySwitcherComponent extends AbstractComponentLoaderComponent<Component> {\n\n  @Input() context: Context;\n\n  @Input() browseByType: { type: BrowseByDataType };\n\n  @Input() displayTitle: boolean;\n\n  @Input() scope: string;\n\n  protected inputNamesDependentForComponent: (keyof this & string)[] = [\n    'context',\n    'browseByType',\n  ];\n\n  protected inputNames: (keyof this & string)[] = [\n    'context',\n    'browseByType',\n    'displayTitle',\n    'scope',\n  ];\n\n  public getComponent(): GenericConstructor<Component> {\n    return getComponentByBrowseByType(this.browseByType.type, this.context, this.themeService.getThemeName());\n  }\n\n}\n","<ng-template #DynamicComponentLoader dsDynamicComponentLoader></ng-template>\n","import { Injectable } from '@angular/core';\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs';\nimport {\n  find,\n  map,\n  switchMap,\n} from 'rxjs/operators';\n\nimport { getDSORoute } from '../../app-routing-paths';\nimport { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport { hasValue } from '../../shared/empty.util';\nimport { followLink } from '../../shared/utils/follow-link-config.model';\nimport { LinkService } from '../cache/builders/link.service';\nimport { RemoteData } from '../data/remote-data';\nimport { ChildHALResource } from '../shared/child-hal-resource.model';\nimport { DSpaceObject } from '../shared/dspace-object.model';\nimport { BreadcrumbsProviderService } from './breadcrumbsProviderService';\nimport { DSONameService } from './dso-name.service';\n\n/**\n * Service to calculate DSpaceObject breadcrumbs for a single part of the route\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DSOBreadcrumbsService implements BreadcrumbsProviderService<ChildHALResource & DSpaceObject> {\n  constructor(\n    protected linkService: LinkService,\n    protected dsoNameService: DSONameService,\n  ) {\n\n  }\n\n  /**\n   * Method to recursively calculate the breadcrumbs\n   * This method returns the name and url of the key and all its parent DSOs recursively, top down\n   * @param key The key (a DSpaceObject) used to resolve the breadcrumb\n   * @param url The url to use as a link for this breadcrumb\n   */\n  getBreadcrumbs(key: ChildHALResource & DSpaceObject, url: string): Observable<Breadcrumb[]> {\n    const label = this.dsoNameService.getName(key);\n    const crumb = new Breadcrumb(label, url);\n    const propertyName = key.getParentLinkKey();\n    return this.linkService.resolveLink(key, followLink(propertyName))[propertyName].pipe(\n      find((parentRD: RemoteData<ChildHALResource & DSpaceObject>) => parentRD.hasSucceeded || parentRD.statusCode === 204),\n      switchMap((parentRD: RemoteData<ChildHALResource & DSpaceObject>) => {\n        if (hasValue(parentRD) && hasValue(parentRD.payload)) {\n          const parent = parentRD.payload;\n          return this.getBreadcrumbs(parent, getDSORoute(parent));\n        }\n        return observableOf([]);\n\n      }),\n      map((breadcrumbs: Breadcrumb[]) => [...breadcrumbs, crumb]),\n    );\n  }\n}\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { BreadcrumbConfig } from '../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { hasNoValue } from '../../shared/empty.util';\nimport { currentPathFromSnapshot } from '../../shared/utils/route.utils';\nimport { I18nBreadcrumbsService } from './i18n-breadcrumbs.service';\n\n/**\n * Method for resolving an I18n breadcrumb configuration object\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {I18nBreadcrumbsService} breadcrumbService\n * @returns BreadcrumbConfig object\n */\nexport const i18nBreadcrumbResolver: ResolveFn<BreadcrumbConfig<string>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  breadcrumbService: I18nBreadcrumbsService = inject(I18nBreadcrumbsService),\n): BreadcrumbConfig<string> => {\n  const key = route.data.breadcrumbKey;\n  if (hasNoValue(key)) {\n    throw new Error('You provided an i18nBreadcrumbResolver for url \\\"' + route.url + '\\\" but no breadcrumbKey in the route\\'s data');\n  }\n  const fullPath = currentPathFromSnapshot(route);\n  return { provider: breadcrumbService, key: key, url: fullPath };\n};\n","import { Injectable } from '@angular/core';\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs';\n\nimport { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport { BreadcrumbsProviderService } from './breadcrumbsProviderService';\n\n/**\n * The postfix for i18n breadcrumbs\n */\nexport const BREADCRUMB_MESSAGE_POSTFIX = '.breadcrumbs';\n\n/**\n * Service to calculate i18n breadcrumbs for a single part of the route\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class I18nBreadcrumbsService implements BreadcrumbsProviderService<string> {\n\n  /**\n   * Method to calculate the breadcrumbs\n   * @param key The key used to resolve the breadcrumb\n   * @param url The url to use as a link for this breadcrumb\n   */\n  getBreadcrumbs(key: string, url: string): Observable<Breadcrumb[]> {\n    return observableOf([new Breadcrumb(key + BREADCRUMB_MESSAGE_POSTFIX, url)]);\n  }\n}\n"],"names":["Breadcrumb","constructor","text","url","inject","map","getDSORoute","DSOBreadcrumbsService","DSpaceObjectDataService","getFirstSucceededRemoteData","getRemoteDataPayload","hasValue","browseByDSOBreadcrumbResolver","route","state","breadcrumbService","dataService","uuid","queryParams","scope","findById","pipe","object","provider","key","undefined","Router","TranslateService","of","observableOf","switchMap","PAGE_NOT_FOUND_PATH","BrowseDefinitionDataService","getFirstCompletedRemoteData","hasNoValue","browseByGuard","browseDefinitionService","router","translate","title","data","id","params","browseDefinition$","browseDefinition","browseDefinitionRD","payload","parent","value","metadataTranslated","instant","createData","navigate","field","Object","assign","i18nBreadcrumbResolver","browseByI18nBreadcrumbResolver","extendedBreadcrumbKey","breadcrumbKey","BrowseByPageComponent","ROUTES","path","resolve","breadcrumb","children","component","canActivate","AsyncPipe","ActivatedRoute","BrowseBySwitcherComponent","ngOnInit","browseByType$","type","getRenderType","i0","ɵɵdirectiveInject","i1","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","BrowseByPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵpipeBind1","styles","Component","Context","AbstractComponentLoaderComponent","DynamicComponentLoaderDirective","getComponentByBrowseByType","inputNamesDependentForComponent","inputNames","getComponent","browseByType","context","themeService","getThemeName","t","inputs","displayTitle","ɵɵInheritDefinitionFeature","BrowseBySwitcherComponent_Template","ɵɵtemplate","BrowseBySwitcherComponent_ng_template_0_Template","ɵɵtemplateRefExtractor","encapsulation","find","followLink","LinkService","DSONameService","linkService","dsoNameService","getBreadcrumbs","label","getName","crumb","propertyName","getParentLinkKey","resolveLink","parentRD","hasSucceeded","statusCode","breadcrumbs","ɵɵinject","i2","factory","ɵfac","providedIn","currentPathFromSnapshot","I18nBreadcrumbsService","Error","fullPath","BREADCRUMB_MESSAGE_POSTFIX"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}