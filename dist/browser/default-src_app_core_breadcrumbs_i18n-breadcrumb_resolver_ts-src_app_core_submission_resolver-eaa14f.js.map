{"version":3,"file":"default-src_app_core_breadcrumbs_i18n-breadcrumb_resolver_ts-src_app_core_submission_resolver-eaa14f.js","mappings":"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","sources":["./src/app/core/breadcrumbs/i18n-breadcrumb.resolver.ts","./src/app/core/breadcrumbs/i18n-breadcrumbs.service.ts","./src/app/core/config/config-data.service.ts","./src/app/core/config/submission-accesses-config-data.service.ts","./src/app/core/config/submission-forms-config-data.service.ts","./src/app/core/config/submission-uploads-config-data.service.ts","./src/app/core/json-patch/builder/json-patch-operations-builder.ts","./src/app/core/submission/models/workspaceitem-section-upload-file.model.ts","./src/app/core/submission/resolver/submission-links-to-follow.ts","./src/app/core/submission/resolver/submission-object.resolver.ts","./src/app/core/submission/resolver/submission-parent-breadcrumb.resolver.ts","./src/app/core/submission/submission-cc-license-data.service.ts","./src/app/core/submission/submission-cc-license-url-data.service.ts","./src/app/core/submission/submission-parent-breadcrumb.service.ts","./src/app/shared/ds-select/ds-select.component.ts","./src/app/shared/ds-select/ds-select.component.html","./src/app/shared/form/builder/models/form-field-language-value.model.ts","./src/app/shared/form/builder/models/form-field-previous-value-object.ts","./src/app/shared/utils/truncate.pipe.ts","./src/app/submission/edit/submission-edit.component.ts","./src/app/submission/edit/submission-edit.component.html","./src/app/submission/edit/themed-submission-edit.component.ts","./src/app/shared/theme-support/themed.component.html","./src/app/submission/form/collection/submission-form-collection.component.ts","./src/app/submission/form/collection/submission-form-collection.component.html","./src/app/submission/form/footer/submission-form-footer.component.ts","./src/app/submission/form/footer/submission-form-footer.component.html","./src/app/submission/form/section-add/submission-form-section-add.component.ts","./src/app/submission/form/section-add/submission-form-section-add.component.html","./src/app/submission/form/submission-form.component.ts","./src/app/submission/form/submission-form.component.html","./src/app/submission/form/submission-upload-files/submission-upload-files.component.ts","./src/app/submission/form/submission-upload-files/submission-upload-files.component.html","./src/app/submission/form/submission-upload-files/themed-submission-upload-files.component.ts","./src/app/submission/sections/accesses/section-accesses.component.ts","./src/app/submission/sections/accesses/section-accesses.component.html","./src/app/submission/sections/accesses/section-accesses.model.ts","./src/app/submission/sections/accesses/section-accesses.service.ts","./src/app/submission/sections/cc-license/submission-section-cc-licenses.component.ts","./src/app/submission/sections/cc-license/submission-section-cc-licenses.component.html","./src/app/submission/sections/container/section-container.component.ts","./src/app/submission/sections/container/section-container.component.html","./src/app/submission/sections/duplicates/section-duplicates.component.ts","./src/app/submission/sections/duplicates/section-duplicates.component.html","./src/app/submission/sections/form/section-form-operations.service.ts","./src/app/submission/sections/form/section-form.component.ts","./src/app/submission/sections/form/section-form.component.html","./src/app/submission/sections/identifiers/section-identifiers.component.ts","./src/app/submission/sections/identifiers/section-identifiers.component.html","./src/app/submission/sections/license/section-license.component.ts","./src/app/submission/sections/license/section-license.component.html","./src/app/submission/sections/license/section-license.model.ts","./src/app/submission/sections/models/section.model.ts","./src/app/submission/sections/section-coar-notify/coar-notify-config-data.service.ts","./src/app/submission/sections/section-coar-notify/section-coar-notify.component.ts","./src/app/submission/sections/section-coar-notify/section-coar-notify.component.html","./src/app/submission/sections/sections-decorator.ts","./src/app/submission/sections/sections.directive.ts","./src/app/submission/sections/sherpa-policies/content-accordion/content-accordion.component.ts","./src/app/submission/sections/sherpa-policies/content-accordion/content-accordion.component.html","./src/app/submission/sections/sherpa-policies/metadata-information/metadata-information.component.ts","./src/app/submission/sections/sherpa-policies/metadata-information/metadata-information.component.html","./src/app/submission/sections/sherpa-policies/publication-information/publication-information.component.ts","./src/app/submission/sections/sherpa-policies/publication-information/publication-information.component.html","./src/app/submission/sections/sherpa-policies/publisher-policy/publisher-policy.component.ts","./src/app/submission/sections/sherpa-policies/publisher-policy/publisher-policy.component.html","./src/app/submission/sections/sherpa-policies/section-sherpa-policies.component.ts","./src/app/submission/sections/sherpa-policies/section-sherpa-policies.component.html","./src/app/submission/sections/upload/accessConditions/submission-section-upload-access-conditions.component.ts","./src/app/submission/sections/upload/accessConditions/submission-section-upload-access-conditions.component.html","./src/app/submission/sections/upload/file/edit/section-upload-file-edit.component.ts","./src/app/submission/sections/upload/file/edit/section-upload-file-edit.component.html","./src/app/submission/sections/upload/file/edit/section-upload-file-edit.model.ts","./src/app/submission/sections/upload/file/section-upload-file.component.ts","./src/app/submission/sections/upload/file/section-upload-file.component.html","./src/app/submission/sections/upload/file/themed-section-upload-file.component.ts","./src/app/submission/sections/upload/file/view/section-upload-file-view.component.ts","./src/app/submission/sections/upload/file/view/section-upload-file-view.component.html","./src/app/submission/sections/upload/section-upload-constants.ts","./src/app/submission/sections/upload/section-upload.component.ts","./src/app/submission/sections/upload/section-upload.component.html","./src/app/submission/sections/upload/section-upload.service.ts","./node_modules/lodash/uniq.js","./src/themes/ lazy ^\\.\\/.*\\/app\\/submission\\/edit\\/submission\\-edit\\.component$ namespace object","./src/themes/ lazy ^\\.\\/.*\\/app\\/submission\\/form\\/submission\\-upload\\-files\\/submission\\-upload\\-files\\.component\\.ts$ namespace object","./src/themes/ lazy ^\\.\\/.*\\/app\\/submission\\/sections\\/upload\\/file\\/section\\-upload\\-file\\.component$ namespace object"],"sourcesContent":["import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { BreadcrumbConfig } from '../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { hasNoValue } from '../../shared/empty.util';\nimport { currentPathFromSnapshot } from '../../shared/utils/route.utils';\nimport { I18nBreadcrumbsService } from './i18n-breadcrumbs.service';\n\n/**\n * Method for resolving an I18n breadcrumb configuration object\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {I18nBreadcrumbsService} breadcrumbService\n * @returns BreadcrumbConfig object\n */\nexport const i18nBreadcrumbResolver: ResolveFn<BreadcrumbConfig<string>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  breadcrumbService: I18nBreadcrumbsService = inject(I18nBreadcrumbsService),\n): BreadcrumbConfig<string> => {\n  const key = route.data.breadcrumbKey;\n  if (hasNoValue(key)) {\n    throw new Error('You provided an i18nBreadcrumbResolver for url \\\"' + route.url + '\\\" but no breadcrumbKey in the route\\'s data');\n  }\n  const fullPath = currentPathFromSnapshot(route);\n  return { provider: breadcrumbService, key: key, url: fullPath };\n};\n","import { Injectable } from '@angular/core';\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs';\n\nimport { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport { BreadcrumbsProviderService } from './breadcrumbsProviderService';\n\n/**\n * The postfix for i18n breadcrumbs\n */\nexport const BREADCRUMB_MESSAGE_POSTFIX = '.breadcrumbs';\n\n/**\n * Service to calculate i18n breadcrumbs for a single part of the route\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class I18nBreadcrumbsService implements BreadcrumbsProviderService<string> {\n\n  /**\n   * Method to calculate the breadcrumbs\n   * @param key The key used to resolve the breadcrumb\n   * @param url The url to use as a link for this breadcrumb\n   */\n  getBreadcrumbs(key: string, url: string): Observable<Breadcrumb[]> {\n    return observableOf([new Breadcrumb(key + BREADCRUMB_MESSAGE_POSTFIX, url)]);\n  }\n}\n","import { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FollowLinkConfig } from '../../shared/utils/follow-link-config.model';\nimport { IdentifiableDataService } from '../data/base/identifiable-data.service';\nimport { RemoteData } from '../data/remote-data';\nimport { getFirstCompletedRemoteData } from '../shared/operators';\nimport { ConfigObject } from './models/config.model';\n\n/**\n * Abstract data service to retrieve configuration objects from the REST server.\n * Common logic for configuration objects should be implemented here.\n */\nexport abstract class ConfigDataService extends IdentifiableDataService<ConfigObject> {\n  /**\n   * Returns an observable of {@link RemoteData} of an object, based on an href, with a list of\n   * {@link FollowLinkConfig}, to automatically resolve {@link HALLink}s of the object\n   *\n   * Throws an error if a configuration object cannot be retrieved.\n   *\n   * @param href                        The url of object we want to retrieve\n   * @param useCachedVersionIfAvailable If this is true, the request will only be sent if there's\n   *                                    no valid cached version. Defaults to true\n   * @param reRequestOnStale            Whether or not the request should automatically be re-\n   *                                    requested after the response becomes stale\n   * @param linksToFollow               List of {@link FollowLinkConfig} that indicate which\n   *                                    {@link HALLink}s should be automatically resolved\n   */\n  public findByHref(href: string, useCachedVersionIfAvailable = true, reRequestOnStale = true, ...linksToFollow: FollowLinkConfig<ConfigObject>[]): Observable<RemoteData<ConfigObject>> {\n    return super.findByHref(href, useCachedVersionIfAvailable, reRequestOnStale, ...linksToFollow).pipe(\n      getFirstCompletedRemoteData(),\n      map((rd: RemoteData<ConfigObject>) => {\n        if (rd.hasFailed) {\n          throw new Error(`Couldn't retrieve the config`);\n        } else {\n          return rd;\n        }\n      }),\n    );\n  }\n\n  /**\n   * Returns a config object by given name\n   *\n   * Throws an error if a configuration object cannot be retrieved.\n   *\n   * @param name                        The name of configuration to retrieve\n   * @param useCachedVersionIfAvailable If this is true, the request will only be sent if there's\n   *                                    no valid cached version. Defaults to true\n   * @param reRequestOnStale            Whether or not the request should automatically be re-\n   *                                    requested after the response becomes stale\n   * @param linksToFollow               List of {@link FollowLinkConfig} that indicate which\n   *                                    {@link HALLink}s should be automatically resolved\n   */\n  public findByName(name: string,  useCachedVersionIfAvailable = true, reRequestOnStale = true, ...linksToFollow: FollowLinkConfig<ConfigObject>[]): Observable<RemoteData<ConfigObject>> {\n    return super.findById(name, useCachedVersionIfAvailable, reRequestOnStale, ...linksToFollow);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { FollowLinkConfig } from '../../shared/utils/follow-link-config.model';\nimport { RemoteDataBuildService } from '../cache/builders/remote-data-build.service';\nimport { ObjectCacheService } from '../cache/object-cache.service';\nimport { RemoteData } from '../data/remote-data';\nimport { RequestService } from '../data/request.service';\nimport { HALEndpointService } from '../shared/hal-endpoint.service';\nimport { ConfigDataService } from './config-data.service';\nimport { ConfigObject } from './models/config.model';\nimport { SubmissionAccessesModel } from './models/config-submission-accesses.model';\n\n/**\n * Provides methods to retrieve, from REST server, bitstream access conditions configurations applicable during the submission process.\n */\n@Injectable({ providedIn: 'root' })\nexport class SubmissionAccessesConfigDataService extends ConfigDataService {\n  constructor(\n    protected requestService: RequestService,\n    protected rdbService: RemoteDataBuildService,\n    protected objectCache: ObjectCacheService,\n    protected halService: HALEndpointService,\n  ) {\n    super('submissionaccessoptions', requestService, rdbService, objectCache, halService);\n  }\n\n  /**\n   * Returns an observable of {@link RemoteData} of an object, based on an href, with a list of\n   * {@link FollowLinkConfig}, to automatically resolve {@link HALLink}s of the object\n   *\n   * Throws an error if a configuration object cannot be retrieved.\n   *\n   * @param href                        The url of object we want to retrieve\n   * @param useCachedVersionIfAvailable If this is true, the request will only be sent if there's\n   *                                    no valid cached version. Defaults to true\n   * @param reRequestOnStale            Whether or not the request should automatically be re-\n   *                                    requested after the response becomes stale\n   * @param linksToFollow               List of {@link FollowLinkConfig} that indicate which\n   *                                    {@link HALLink}s should be automatically resolved\n   */\n  findByHref(href: string, useCachedVersionIfAvailable = true, reRequestOnStale = true, ...linksToFollow): Observable<RemoteData<SubmissionAccessesModel>> {\n    return super.findByHref(href, useCachedVersionIfAvailable, reRequestOnStale, ...linksToFollow as FollowLinkConfig<ConfigObject>[]) as Observable<RemoteData<SubmissionAccessesModel>>;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { FollowLinkConfig } from '../../shared/utils/follow-link-config.model';\nimport { RemoteDataBuildService } from '../cache/builders/remote-data-build.service';\nimport { ObjectCacheService } from '../cache/object-cache.service';\nimport { RemoteData } from '../data/remote-data';\nimport { RequestService } from '../data/request.service';\nimport { HALEndpointService } from '../shared/hal-endpoint.service';\nimport { ConfigDataService } from './config-data.service';\nimport { ConfigObject } from './models/config.model';\nimport { SubmissionFormsModel } from './models/config-submission-forms.model';\n\n/**\n * Data service to retrieve submission form configuration objects from the REST server.\n */\n@Injectable({ providedIn: 'root' })\nexport class SubmissionFormsConfigDataService extends ConfigDataService {\n  constructor(\n    protected requestService: RequestService,\n    protected rdbService: RemoteDataBuildService,\n    protected objectCache: ObjectCacheService,\n    protected halService: HALEndpointService,\n  ) {\n    super('submissionforms', requestService, rdbService, objectCache, halService);\n  }\n\n  /**\n   * Returns an observable of {@link RemoteData} of an object, based on an href, with a list of\n   * {@link FollowLinkConfig}, to automatically resolve {@link HALLink}s of the object\n   *\n   * Throws an error if a configuration object cannot be retrieved.\n   *\n   * @param href                        The url of object we want to retrieve\n   * @param useCachedVersionIfAvailable If this is true, the request will only be sent if there's\n   *                                    no valid cached version. Defaults to true\n   * @param reRequestOnStale            Whether or not the request should automatically be re-\n   *                                    requested after the response becomes stale\n   * @param linksToFollow               List of {@link FollowLinkConfig} that indicate which\n   *                                    {@link HALLink}s should be automatically resolved\n   */\n  public findByHref(href: string, useCachedVersionIfAvailable = true, reRequestOnStale = true, ...linksToFollow: FollowLinkConfig<SubmissionFormsModel>[]): Observable<RemoteData<SubmissionFormsModel>> {\n    return super.findByHref(href, useCachedVersionIfAvailable, reRequestOnStale, ...linksToFollow as FollowLinkConfig<ConfigObject>[]) as Observable<RemoteData<SubmissionFormsModel>>;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { FollowLinkConfig } from '../../shared/utils/follow-link-config.model';\nimport { RemoteDataBuildService } from '../cache/builders/remote-data-build.service';\nimport { ObjectCacheService } from '../cache/object-cache.service';\nimport { RemoteData } from '../data/remote-data';\nimport { RequestService } from '../data/request.service';\nimport { HALEndpointService } from '../shared/hal-endpoint.service';\nimport { ConfigDataService } from './config-data.service';\nimport { ConfigObject } from './models/config.model';\nimport { SubmissionUploadsModel } from './models/config-submission-uploads.model';\n\n/**\n * Provides methods to retrieve, from REST server, bitstream access conditions configurations applicable during the submission process.\n */\n@Injectable({ providedIn: 'root' })\nexport class SubmissionUploadsConfigDataService extends ConfigDataService {\n  constructor(\n    protected requestService: RequestService,\n    protected rdbService: RemoteDataBuildService,\n    protected objectCache: ObjectCacheService,\n    protected halService: HALEndpointService,\n  ) {\n    super('submissionuploads', requestService, rdbService, objectCache, halService);\n  }\n\n  findByHref(href: string, useCachedVersionIfAvailable = true, reRequestOnStale = true, ...linksToFollow): Observable<RemoteData<SubmissionUploadsModel>> {\n    return super.findByHref(href, useCachedVersionIfAvailable, reRequestOnStale, ...linksToFollow as FollowLinkConfig<ConfigObject>[]) as Observable<RemoteData<SubmissionUploadsModel>>;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport {\n  dateToISOFormat,\n  dateToString,\n  isNgbDateStruct,\n} from '../../../shared/date.util';\nimport {\n  hasNoValue,\n  hasValue,\n  isEmpty,\n  isNotEmpty,\n} from '../../../shared/empty.util';\nimport { FormFieldLanguageValueObject } from '../../../shared/form/builder/models/form-field-language-value.model';\nimport { FormFieldMetadataValueObject } from '../../../shared/form/builder/models/form-field-metadata-value.model';\nimport { CoreState } from '../../core-state.model';\nimport { VocabularyEntry } from '../../submission/vocabularies/models/vocabulary-entry.model';\nimport {\n  FlushPatchOperationAction,\n  NewPatchAddOperationAction,\n  NewPatchMoveOperationAction,\n  NewPatchRemoveOperationAction,\n  NewPatchReplaceOperationAction,\n} from '../json-patch-operations.actions';\nimport { JsonPatchOperationPathObject } from './json-patch-operation-path-combiner';\n\n/**\n * Provides methods to dispatch JsonPatch Operations Actions\n */\n@Injectable({ providedIn: 'root' })\nexport class JsonPatchOperationsBuilder {\n\n  constructor(private store: Store<CoreState>) {\n  }\n\n  /**\n   * Dispatches a new NewPatchAddOperationAction\n   *\n   * @param path\n   *    a JsonPatchOperationPathObject representing path\n   * @param value\n   *    The value to update the referenced path\n   * @param first\n   *    A boolean representing if the value to be added is the first of an array\n   * @param plain\n   *    A boolean representing if the value to be added is a plain text value\n   */\n  add(path: JsonPatchOperationPathObject, value, first = false, plain = false) {\n    this.store.dispatch(\n      new NewPatchAddOperationAction(\n        path.rootElement,\n        path.subRootElement,\n        path.path, this.prepareValue(value, plain, first)));\n  }\n\n  /**\n   * Dispatches a new NewPatchReplaceOperationAction\n   *\n   * @param path\n   *    a JsonPatchOperationPathObject representing path\n   * @param value\n   *    the value to update the referenced path\n   * @param plain\n   *    a boolean representing if the value to be added is a plain text value\n   */\n  replace(path: JsonPatchOperationPathObject, value, plain = false) {\n    if (hasNoValue(value) || (typeof value === 'object' && hasNoValue(value.value))) {\n      this.remove(path);\n    } else {\n      this.store.dispatch(\n        new NewPatchReplaceOperationAction(\n          path.rootElement,\n          path.subRootElement,\n          path.path,\n          this.prepareValue(value, plain, false)));\n    }\n  }\n\n  /**\n   * Dispatch a new NewPatchMoveOperationAction\n   *\n   * @param path\n   *    the new path tho move to\n   * @param prevPath\n   *    the original path to move from\n   */\n  move(path: JsonPatchOperationPathObject, prevPath: string) {\n    this.store.dispatch(\n      new NewPatchMoveOperationAction(\n        path.rootElement,\n        path.subRootElement,\n        prevPath,\n        path.path,\n      ),\n    );\n  }\n\n  /**\n   * Dispatches a new NewPatchRemoveOperationAction\n   *\n   * @param path\n   *    a JsonPatchOperationPathObject representing path\n   */\n  remove(path: JsonPatchOperationPathObject) {\n    this.store.dispatch(\n      new NewPatchRemoveOperationAction(\n        path.rootElement,\n        path.subRootElement,\n        path.path));\n  }\n\n  /**\n   * Dispatches a new FlushPatchOperationAction\n   *\n   * @param path\n   *    a JsonPatchOperationPathObject representing path\n   */\n  flushOperation(path: JsonPatchOperationPathObject) {\n    this.store.dispatch(\n      new FlushPatchOperationAction(\n        path.rootElement,\n        path.subRootElement,\n        path.path));\n  }\n\n  protected prepareValue(value: any, plain: boolean, first: boolean) {\n    let operationValue: any = null;\n    if (hasValue(value)) {\n      if (plain) {\n        operationValue = value;\n      } else {\n        if (Array.isArray(value)) {\n          operationValue = [];\n          value.forEach((entry) => {\n            if ((typeof entry === 'object')) {\n              operationValue.push(this.prepareObjectValue(entry));\n            } else {\n              operationValue.push(new FormFieldMetadataValueObject(entry));\n            }\n          });\n        } else if (typeof value === 'object') {\n          operationValue = this.prepareObjectValue(value);\n        } else {\n          operationValue = new FormFieldMetadataValueObject(value);\n        }\n      }\n    }\n    return (first && !Array.isArray(operationValue)) ? [operationValue] : operationValue;\n  }\n\n  protected prepareObjectValue(value: any) {\n    let operationValue = Object.create({});\n    if (isEmpty(value) || value instanceof FormFieldMetadataValueObject) {\n      operationValue = value;\n    } else if (value instanceof Date) {\n      operationValue = new FormFieldMetadataValueObject(dateToISOFormat(value));\n    } else if (value instanceof VocabularyEntry) {\n      operationValue = this.prepareAuthorityValue(value);\n    } else if (value instanceof FormFieldLanguageValueObject) {\n      operationValue = new FormFieldMetadataValueObject(value.value, value.language);\n    } else if (value.hasOwnProperty('authority')) {\n      operationValue = new FormFieldMetadataValueObject(value.value, value.language, value.authority);\n    } else if (isNgbDateStruct(value)) {\n      operationValue = new FormFieldMetadataValueObject(dateToString(value));\n    } else if (value.hasOwnProperty('value')) {\n      operationValue = new FormFieldMetadataValueObject(value.value);\n    } else {\n      Object.keys(value)\n        .forEach((key) => {\n          if (typeof value[key] === 'object') {\n            operationValue[key] = this.prepareObjectValue(value[key]);\n          } else {\n            operationValue[key] = value[key];\n          }\n        });\n    }\n    return operationValue;\n  }\n\n  protected prepareAuthorityValue(value: any): FormFieldMetadataValueObject {\n    let operationValue: FormFieldMetadataValueObject;\n    if (isNotEmpty(value.authority)) {\n      operationValue = new FormFieldMetadataValueObject(value.value, value.language, value.authority);\n    } else {\n      operationValue = new FormFieldMetadataValueObject(value.value, value.language);\n    }\n    return operationValue;\n  }\n\n}\n","import { SubmissionUploadFileAccessConditionObject } from './submission-upload-file-access-condition.model';\nimport { WorkspaceitemSectionFormObject } from './workspaceitem-section-form.model';\n\n/**\n * An interface to represent submission's upload section file entry.\n */\nexport class WorkspaceitemSectionUploadFileObject {\n\n  /**\n   * The file UUID\n   */\n  uuid: string;\n\n  /**\n   * The file metadata\n   */\n  metadata: WorkspaceitemSectionFormObject;\n\n  /**\n   * The file size\n   */\n  sizeBytes: number;\n\n  /**\n   * The file check sum\n   */\n  checkSum: {\n    checkSumAlgorithm: string;\n    value: string;\n  };\n\n  /**\n   * The file format information\n   */\n  format: {\n    shortDescription: string,\n    description: string,\n    mimetype: string,\n    supportLevel: string,\n    internal: boolean,\n    type: string\n  };\n\n  /**\n   * The file url\n   */\n  url: string;\n\n  /**\n   * The file thumbnail url\n   */\n  thumbnail: string;\n\n  /**\n   * The list of file access conditions\n   */\n  accessConditions: SubmissionUploadFileAccessConditionObject[];\n}\n","import {\n  followLink,\n  FollowLinkConfig,\n} from '../../../shared/utils/follow-link-config.model';\nimport { WorkflowItem } from '../models/workflowitem.model';\nimport { WorkspaceItem } from '../models/workspaceitem.model';\n\n/**\n * The self links defined in this list are expected to be requested somewhere in the near future\n * Requesting them as embeds will limit the number of requests\n *\n * Needs to be in a separate file to prevent circular dependencies in webpack.\n */\nexport const SUBMISSION_LINKS_TO_FOLLOW: FollowLinkConfig<WorkflowItem | WorkspaceItem>[] = [\n  followLink('item'),\n  followLink('collection'),\n];\n","import {\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { IdentifiableDataService } from '../../data/base/identifiable-data.service';\nimport { RemoteData } from '../../data/remote-data';\nimport { Item } from '../../shared/item.model';\nimport { getFirstCompletedRemoteData } from '../../shared/operators';\nimport { SubmissionObject } from '../models/submission-object.model';\nimport { SUBMISSION_LINKS_TO_FOLLOW } from './submission-links-to-follow';\n\n/**\n * Method for resolving an item based on the parameters in the current route\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {IdentifiableDataService<SubmissionObject> } dataService\n * @returns Observable<<RemoteData<Item>> Emits the found item based on the parameters in the current route,\n * or an error if something went wrong\n */\nexport const SubmissionObjectResolver: (route: ActivatedRouteSnapshot, state: RouterStateSnapshot, dataService: IdentifiableDataService<SubmissionObject>) => Observable<RemoteData<Item>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  dataService: IdentifiableDataService<SubmissionObject>,\n): Observable<RemoteData<Item>> => {\n  return dataService.findById(route.params.id,\n    true,\n    false,\n    ...SUBMISSION_LINKS_TO_FOLLOW,\n  ).pipe(\n    getFirstCompletedRemoteData(),\n    switchMap((wfiRD: RemoteData<any>) => wfiRD.payload.item as Observable<RemoteData<Item>>),\n    getFirstCompletedRemoteData(),\n  );\n};\n","import {\n  ActivatedRouteSnapshot,\n  Resolve,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { BreadcrumbConfig } from '../../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { IdentifiableDataService } from '../../data/base/identifiable-data.service';\nimport {\n  getFirstCompletedRemoteData,\n  getRemoteDataPayload,\n} from '../../shared/operators';\nimport { SubmissionObject } from '../models/submission-object.model';\nimport { SubmissionParentBreadcrumbsService } from '../submission-parent-breadcrumb.service';\nimport { SUBMISSION_LINKS_TO_FOLLOW } from './submission-links-to-follow';\n\n/**\n * This class represents a resolver that requests a specific item before the route is activated\n */\nexport abstract class SubmissionParentBreadcrumbResolver implements Resolve<BreadcrumbConfig<SubmissionObject>> {\n\n  protected constructor(\n    protected dataService: IdentifiableDataService<any>,\n    protected breadcrumbService: SubmissionParentBreadcrumbsService,\n  ) {\n  }\n\n  /**\n   * Method for resolving an item based on the parameters in the current route\n   * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n   * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n   * @returns Observable<<RemoteData<Item>> Emits the found item based on the parameters in the current route,\n   * or an error if something went wrong\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<BreadcrumbConfig<SubmissionObject>> {\n    return this.dataService.findById(route.params.id,\n      true,\n      false,\n      ...SUBMISSION_LINKS_TO_FOLLOW,\n    ).pipe(\n      getFirstCompletedRemoteData(),\n      getRemoteDataPayload(),\n      map((submissionObject: SubmissionObject) => ({\n        provider: this.breadcrumbService,\n        key: submissionObject,\n      } as BreadcrumbConfig<SubmissionObject>)),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { FollowLinkConfig } from '../../shared/utils/follow-link-config.model';\nimport { RemoteDataBuildService } from '../cache/builders/remote-data-build.service';\nimport { ObjectCacheService } from '../cache/object-cache.service';\nimport { BaseDataService } from '../data/base/base-data.service';\nimport {\n  FindAllData,\n  FindAllDataImpl,\n} from '../data/base/find-all-data';\nimport { FindListOptions } from '../data/find-list-options.model';\nimport { PaginatedList } from '../data/paginated-list.model';\nimport { RemoteData } from '../data/remote-data';\nimport { RequestService } from '../data/request.service';\nimport { HALEndpointService } from '../shared/hal-endpoint.service';\nimport { SubmissionCcLicence } from './models/submission-cc-license.model';\n\n@Injectable({ providedIn: 'root' })\nexport class SubmissionCcLicenseDataService extends BaseDataService<SubmissionCcLicence> implements FindAllData<SubmissionCcLicence> {\n\n  protected linkPath = 'submissioncclicenses';\n  private findAllData: FindAllData<SubmissionCcLicence>;\n\n  constructor(\n    protected requestService: RequestService,\n    protected rdbService: RemoteDataBuildService,\n    protected objectCache: ObjectCacheService,\n    protected halService: HALEndpointService,\n  ) {\n    super('submissioncclicenses', requestService, rdbService, objectCache, halService);\n\n    this.findAllData = new FindAllDataImpl(this.linkPath, requestService, rdbService, objectCache, halService, this.responseMsToLive);\n  }\n\n  /**\n   * Returns {@link RemoteData} of all object with a list of {@link FollowLinkConfig}, to indicate which embedded\n   * info should be added to the objects\n   *\n   * @param options                     Find list options object\n   * @param useCachedVersionIfAvailable If this is true, the request will only be sent if there's\n   *                                    no valid cached version. Defaults to true\n   * @param reRequestOnStale            Whether or not the request should automatically be re-\n   *                                    requested after the response becomes stale\n   * @param linksToFollow               List of {@link FollowLinkConfig} that indicate which\n   *                                    {@link HALLink}s should be automatically resolved\n   * @return {Observable<RemoteData<PaginatedList<T>>>}\n   *    Return an observable that emits object list\n   */\n  public findAll(options?: FindListOptions, useCachedVersionIfAvailable?: boolean, reRequestOnStale?: boolean, ...linksToFollow: FollowLinkConfig<SubmissionCcLicence>[]): Observable<RemoteData<PaginatedList<SubmissionCcLicence>>> {\n    return this.findAllData.findAll(options, useCachedVersionIfAvailable, reRequestOnStale, ...linksToFollow);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  map,\n  switchMap,\n} from 'rxjs/operators';\n\nimport { FollowLinkConfig } from '../../shared/utils/follow-link-config.model';\nimport { RemoteDataBuildService } from '../cache/builders/remote-data-build.service';\nimport { RequestParam } from '../cache/models/request-param.model';\nimport { ObjectCacheService } from '../cache/object-cache.service';\nimport { BaseDataService } from '../data/base/base-data.service';\nimport {\n  SearchData,\n  SearchDataImpl,\n} from '../data/base/search-data';\nimport { FindListOptions } from '../data/find-list-options.model';\nimport { PaginatedList } from '../data/paginated-list.model';\nimport { RemoteData } from '../data/remote-data';\nimport { RequestService } from '../data/request.service';\nimport { HALEndpointService } from '../shared/hal-endpoint.service';\nimport {\n  getFirstSucceededRemoteData,\n  getRemoteDataPayload,\n} from '../shared/operators';\nimport {\n  Field,\n  Option,\n  SubmissionCcLicence,\n} from './models/submission-cc-license.model';\nimport { SubmissionCcLicenceUrl } from './models/submission-cc-license-url.model';\n\n@Injectable({ providedIn: 'root' })\nexport class SubmissionCcLicenseUrlDataService extends BaseDataService<SubmissionCcLicenceUrl> implements SearchData<SubmissionCcLicenceUrl> {\n  private searchData: SearchDataImpl<SubmissionCcLicenceUrl>;\n\n  constructor(\n    protected requestService: RequestService,\n    protected rdbService: RemoteDataBuildService,\n    protected objectCache: ObjectCacheService,\n    protected halService: HALEndpointService,\n  ) {\n    super('submissioncclicenseUrls-search', requestService, rdbService, objectCache, halService);\n\n    this.searchData = new SearchDataImpl(this.linkPath, requestService, rdbService, objectCache, halService, this.responseMsToLive, (href, searchMethod) => `${href}/${searchMethod}`);\n  }\n\n  /**\n   * Get the link to the Creative Commons license corresponding to the given type and options.\n   * @param ccLicense   the Creative Commons license type\n   * @param options     the selected options of the license fields\n   */\n  getCcLicenseLink(ccLicense: SubmissionCcLicence, options: Map<Field, Option>): Observable<string> {\n\n    return this.searchData.getSearchByHref(\n      'rightsByQuestions',{\n        searchParams: [\n          new RequestParam('license', ccLicense.id),\n          ...ccLicense.fields.map((field: Field) => new RequestParam(`answer_${field.id}`, options.get(field).id)),\n        ],\n      },\n    ).pipe(\n      switchMap((href) => this.findByHref(href)),\n      getFirstSucceededRemoteData(),\n      getRemoteDataPayload(),\n      map((response) => response.url),\n    );\n  }\n\n  /**\n   * Make a new FindListRequest with given search method\n   *\n   * @param searchMethod                The search method for the object\n   * @param options                     The [[FindListOptions]] object\n   * @param useCachedVersionIfAvailable If this is true, the request will only be sent if there's\n   *                                    no valid cached version. Defaults to true\n   * @param reRequestOnStale            Whether or not the request should automatically be re-\n   *                                    requested after the response becomes stale\n   * @param linksToFollow               List of {@link FollowLinkConfig} that indicate which\n   *                                    {@link HALLink}s should be automatically resolved\n   * @return {Observable<RemoteData<PaginatedList<T>>}\n   *    Return an observable that emits response from the server\n   */\n  public searchBy(searchMethod: string, options?: FindListOptions, useCachedVersionIfAvailable?: boolean, reRequestOnStale?: boolean, ...linksToFollow: FollowLinkConfig<SubmissionCcLicenceUrl>[]): Observable<RemoteData<PaginatedList<SubmissionCcLicenceUrl>>> {\n    return this.searchData.searchBy(searchMethod, options, useCachedVersionIfAvailable, reRequestOnStale, ...linksToFollow);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  combineLatest,\n  Observable,\n  of as observableOf,\n  switchMap,\n} from 'rxjs';\n\nimport { getDSORoute } from '../../app-routing-paths';\nimport { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport {\n  hasValue,\n  isEmpty,\n} from '../../shared/empty.util';\nimport { SubmissionService } from '../../submission/submission.service';\nimport { BreadcrumbsProviderService } from '../breadcrumbs/breadcrumbsProviderService';\nimport { DSOBreadcrumbsService } from '../breadcrumbs/dso-breadcrumbs.service';\nimport { DSONameService } from '../breadcrumbs/dso-name.service';\nimport { CollectionDataService } from '../data/collection-data.service';\nimport { RemoteData } from '../data/remote-data';\nimport { Collection } from '../shared/collection.model';\nimport {\n  getFirstCompletedRemoteData,\n  getRemoteDataPayload,\n} from '../shared/operators';\nimport { SubmissionObject } from './models/submission-object.model';\n\n/**\n * Service to calculate the parent {@link DSpaceObject} breadcrumbs for a {@link SubmissionObject}\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class SubmissionParentBreadcrumbsService implements BreadcrumbsProviderService<SubmissionObject> {\n\n  constructor(\n    protected dsoNameService: DSONameService,\n    protected dsoBreadcrumbsService: DSOBreadcrumbsService,\n    protected submissionService: SubmissionService,\n    protected collectionService: CollectionDataService,\n  ) {\n  }\n\n  /**\n   * Creates the parent breadcrumb structure for {@link SubmissionObject}s. It also automatically recreates the\n   * parent breadcrumb structure when you change a {@link SubmissionObject}'s by dispatching a\n   * {@link ChangeSubmissionCollectionAction}.\n   *\n   * @param submissionObject The {@link SubmissionObject} for which the parent breadcrumb structure needs to be created\n   */\n  getBreadcrumbs(submissionObject: SubmissionObject): Observable<Breadcrumb[]> {\n    if (isEmpty(submissionObject)) {\n      return observableOf([]);\n    }\n\n    return combineLatest([\n      (submissionObject.collection as Observable<RemoteData<Collection>>).pipe(\n        getFirstCompletedRemoteData(),\n        getRemoteDataPayload(),\n      ),\n      this.submissionService.getSubmissionCollectionId(submissionObject.id),\n    ]).pipe(\n      switchMap(([collection, latestCollectionId]: [Collection, string]) => {\n        if (hasValue(latestCollectionId)) {\n          return this.collectionService.findById(latestCollectionId).pipe(\n            getFirstCompletedRemoteData(),\n            getRemoteDataPayload(),\n          );\n        } else {\n          return observableOf(collection);\n        }\n      }),\n      switchMap((collection: Collection) => this.dsoBreadcrumbsService.getBreadcrumbs(collection, getDSORoute(collection))),\n    );\n  }\n\n}\n","import { NgIf } from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BtnDisabledDirective } from '../btn-disabled.directive';\n\n/**\n * Component which represent a DSpace dropdown selector.\n */\n@Component({\n  selector: 'ds-select',\n  templateUrl: './ds-select.component.html',\n  styleUrls: ['./ds-select.component.scss'],\n  standalone: true,\n  imports: [NgbDropdownModule, NgIf, TranslateModule, BtnDisabledDirective],\n})\nexport class DsSelectComponent {\n\n  /**\n   * An optional label for the dropdown selector.\n   */\n  @Input()\n  label: string;\n\n  /**\n   * Whether the dropdown selector is disabled.\n   */\n  @Input()\n  disabled: boolean;\n\n  /**\n   * Emits an event when the dropdown selector is opened or closed.\n   */\n  @Output()\n  toggled = new EventEmitter();\n\n  /**\n   * Emits an event when the dropdown selector or closed.\n   */\n  @Output()\n  close = new EventEmitter();\n}\n","<div>\n\n  <div ngbDropdown class=\"btn-group\" (openChange)=\"toggled.emit($event)\">\n\n    <div class=\"input-group-prepend\" *ngIf=\"label\">\n      <span id=\"dsSelectMenuLabel\" class=\"input-group-text\">\n        {{ label | translate }}\n      </span>\n    </div>\n\n    <button aria-describedby=\"dsSelectMenuLabel\"\n            id=\"dsSelectMenuButton\"\n            class=\"btn btn-outline-primary selection\"\n            (blur)=\"close.emit($event)\"\n            (click)=\"close.emit($event)\"\n            [dsBtnDisabled]=\"disabled\"\n            ngbDropdownToggle>\n      <ng-content select=\".selection\"></ng-content>\n    </button>\n\n    <div ngbDropdownMenu\n         class=\"dropdown-menu\"\n         id=\"dsSelectDropdownMenu\"\n         aria-labelledby=\"dsSelectMenuButton\">\n      <div>\n        <ng-content select=\".menu\"></ng-content>\n      </div>\n    </div>\n  </div>\n\n</div>\n","export class FormFieldLanguageValueObject {\n  value: string;\n  language: string;\n\n  constructor(value: string, language: string) {\n    this.value = value;\n    this.language = language;\n  }\n}\n\nexport interface LanguageCode {\n  display: string;\n  code: string;\n}\n","import isEqual from 'lodash/isEqual';\n\nexport class FormFieldPreviousValueObject {\n\n  private _path;\n  private _value;\n\n  constructor(path: any[] = null, value: any = null) {\n    this._path = path;\n    this._value = value;\n  }\n\n  get path() {\n    return this._path;\n  }\n\n  set path(path: string | string[]) {\n    this._path = path;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value: any) {\n    this._value = value;\n  }\n\n  public delete() {\n    this._value = null;\n    this._path = null;\n  }\n\n  public isPathEqual(path) {\n    return this._path && isEqual(this._path, path);\n  }\n}\n","import {\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\n\nimport { hasValue } from '../empty.util';\n\n/**\n * Pipe to truncate a value in Angular. (Take a substring, starting at 0)\n * Default value: 10\n */\n@Pipe({\n  name: 'dsTruncate',\n  standalone: true,\n})\nexport class TruncatePipe implements PipeTransform {\n\n  /**\n   *\n   */\n  transform(value: string, args: string[]): string {\n    if (hasValue(value)) {\n      const limit = (args && args.length > 0) ? parseInt(args[0], 10) : 10; // 10 as default truncate value\n      return value.length > limit ? value.substring(0, limit) + '...' : value;\n    } else {\n      return value;\n    }\n  }\n\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  ParamMap,\n  Router,\n} from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  Subscription,\n} from 'rxjs';\nimport {\n  debounceTime,\n  filter,\n  switchMap,\n} from 'rxjs/operators';\n\nimport { SubmissionDefinitionsModel } from '../../core/config/models/config-submission-definitions.model';\nimport { ItemDataService } from '../../core/data/item-data.service';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { Collection } from '../../core/shared/collection.model';\nimport { Item } from '../../core/shared/item.model';\nimport { getAllSucceededRemoteData } from '../../core/shared/operators';\nimport { SubmissionObject } from '../../core/submission/models/submission-object.model';\nimport { WorkspaceitemSectionsObject } from '../../core/submission/models/workspaceitem-sections.model';\nimport { SubmissionJsonPatchOperationsService } from '../../core/submission/submission-json-patch-operations.service';\nimport {\n  hasValue,\n  isEmpty,\n  isNotEmptyOperator,\n  isNotNull,\n} from '../../shared/empty.util';\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\nimport { SubmissionFormComponent } from '../form/submission-form.component';\nimport { SubmissionError } from '../objects/submission-error.model';\nimport { SubmissionService } from '../submission.service';\nimport parseSectionErrors from '../utils/parseSectionErrors';\n\n/**\n * This component allows to edit an existing workspaceitem/workflowitem.\n */\n@Component({\n  selector: 'ds-base-submission-edit',\n  styleUrls: ['./submission-edit.component.scss'],\n  templateUrl: './submission-edit.component.html',\n  standalone: true,\n  imports: [\n    SubmissionFormComponent,\n  ],\n})\nexport class SubmissionEditComponent implements OnDestroy, OnInit {\n\n  /**\n   * The collection id this submission belonging to\n   * @type {string}\n   */\n  public collectionId: string;\n\n  /**\n   * Checks if the collection can be modifiable by the user\n   * @type {booelan}\n   */\n  public collectionModifiable: boolean | null = null;\n\n\n  /**\n   * The list of submission's sections\n   * @type {WorkspaceitemSectionsObject}\n   */\n  public sections: WorkspaceitemSectionsObject;\n\n  /**\n   * The submission self url\n   * @type {string}\n   */\n  public selfUrl: string;\n\n  /**\n   * The configuration object that define this submission\n   * @type {SubmissionDefinitionsModel}\n   */\n  public submissionDefinition: SubmissionDefinitionsModel;\n\n  /**\n   * The submission errors present in the submission object\n   * @type {SubmissionError}\n   */\n  public submissionErrors: SubmissionError;\n\n  /**\n   * The submission id\n   * @type {string}\n   */\n  public submissionId: string;\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  private subs: Subscription[] = [];\n\n  /**\n   * BehaviorSubject containing the self link to the item for this submission\n   * @private\n   */\n  private itemLink$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n\n  /**\n   * The item for this submission.\n   */\n  public item: Item;\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {ChangeDetectorRef} changeDetectorRef\n   * @param {NotificationsService} notificationsService\n   * @param {ActivatedRoute} route\n   * @param {Router} router\n   * @param {ItemDataService} itemDataService\n   * @param {SubmissionService} submissionService\n   * @param {TranslateService} translate\n   * @param {SubmissionJsonPatchOperationsService} submissionJsonPatchOperationsService\n   */\n  constructor(private changeDetectorRef: ChangeDetectorRef,\n              private notificationsService: NotificationsService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private itemDataService: ItemDataService,\n              private submissionService: SubmissionService,\n              private translate: TranslateService,\n              private submissionJsonPatchOperationsService: SubmissionJsonPatchOperationsService) {\n  }\n\n  /**\n   * Retrieve workspaceitem/workflowitem from server and initialize all instance variables\n   */\n  ngOnInit() {\n\n    this.collectionModifiable = this.route.snapshot.data?.collectionModifiable ?? null;\n\n    this.subs.push(\n      this.route.paramMap.pipe(\n        switchMap((params: ParamMap) => this.submissionService.retrieveSubmission(params.get('id'))),\n        // NOTE new submission is retrieved on the browser side only, so get null on server side rendering\n        filter((submissionObjectRD: RemoteData<SubmissionObject>) => isNotNull(submissionObjectRD)),\n      ).subscribe((submissionObjectRD: RemoteData<SubmissionObject>) => {\n        if (submissionObjectRD.hasSucceeded) {\n          if (isEmpty(submissionObjectRD.payload)) {\n            this.notificationsService.info(null, this.translate.get('submission.general.cannot_submit'));\n            this.router.navigate(['/mydspace']);\n          } else {\n            const { errors } = submissionObjectRD.payload;\n            this.submissionErrors = parseSectionErrors(errors);\n            this.submissionId = submissionObjectRD.payload.id.toString();\n            this.collectionId = (submissionObjectRD.payload.collection as Collection).id;\n            this.selfUrl = submissionObjectRD.payload._links.self.href;\n            this.sections = submissionObjectRD.payload.sections;\n            this.itemLink$.next(submissionObjectRD.payload._links.item.href);\n            this.item = submissionObjectRD.payload.item;\n            this.submissionDefinition = (submissionObjectRD.payload.submissionDefinition as SubmissionDefinitionsModel);\n          }\n        } else {\n          if (submissionObjectRD.statusCode === 404) {\n            // redirect to not found page\n            this.router.navigate(['/404'], { skipLocationChange: true });\n          }\n          // TODO handle generic error\n        }\n      }),\n      this.itemLink$.pipe(\n        isNotEmptyOperator(),\n        switchMap((itemLink: string) =>\n          this.itemDataService.findByHref(itemLink),\n        ),\n        getAllSucceededRemoteData(),\n        // Multiple sources can update the item in quick succession.\n        // We only want to rerender the form if the item is unchanged for some time\n        debounceTime(300),\n      ).subscribe((itemRd: RemoteData<Item>) => {\n        this.item = itemRd.payload;\n        this.changeDetectorRef.detectChanges();\n      }),\n    );\n  }\n\n  /**\n   * Unsubscribe from all subscriptions\n   */\n  ngOnDestroy() {\n    this.subs\n      .filter((sub) => hasValue(sub))\n      .forEach((sub) => sub.unsubscribe());\n\n    this.submissionJsonPatchOperationsService.deletePendingJsonPatchOperations();\n  }\n}\n","<div class=\"submission-submit-container\" >\n  <ds-submission-form [collectionId]=\"collectionId\"\n                      [sections]=\"sections\"\n                      [selfUrl]=\"selfUrl\"\n                      [submissionDefinition]=\"submissionDefinition\"\n                      [submissionErrors]=\"submissionErrors\"\n                      [item]=\"item\"\n                      [collectionModifiable]=\"collectionModifiable\"\n                      [submissionId]=\"submissionId\"></ds-submission-form>\n</div>\n","/**\n * Themed wrapper for SubmissionEditComponent\n */\nimport { Component } from '@angular/core';\n\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { SubmissionEditComponent } from './submission-edit.component';\n\n@Component({\n  selector: 'ds-submission-edit',\n  styleUrls: [],\n  templateUrl: './../../shared/theme-support/themed.component.html',\n  standalone: true,\n  imports: [SubmissionEditComponent],\n})\nexport class ThemedSubmissionEditComponent extends ThemedComponent<SubmissionEditComponent> {\n  protected getComponentName(): string {\n    return 'SubmissionEditComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/submission/edit/submission-edit.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./submission-edit.component`);\n  }\n}\n","<ng-template #vcr>\n</ng-template>\n<div #content>\n  <ng-content></ng-content>\n</div>\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  Observable,\n  of as observableOf,\n  Subscription,\n} from 'rxjs';\nimport {\n  find,\n  map,\n  mergeMap,\n} from 'rxjs/operators';\n\nimport { DSONameService } from '../../../core/breadcrumbs/dso-name.service';\nimport { CollectionDataService } from '../../../core/data/collection-data.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { JsonPatchOperationPathCombiner } from '../../../core/json-patch/builder/json-patch-operation-path-combiner';\nimport { JsonPatchOperationsBuilder } from '../../../core/json-patch/builder/json-patch-operations-builder';\nimport { Collection } from '../../../core/shared/collection.model';\nimport { getFirstSucceededRemoteDataPayload } from '../../../core/shared/operators';\nimport { SubmissionObject } from '../../../core/submission/models/submission-object.model';\nimport { SubmissionJsonPatchOperationsService } from '../../../core/submission/submission-json-patch-operations.service';\nimport { BtnDisabledDirective } from '../../../shared/btn-disabled.directive';\nimport { CollectionDropdownComponent } from '../../../shared/collection-dropdown/collection-dropdown.component';\nimport { ThemedCollectionDropdownComponent } from '../../../shared/collection-dropdown/themed-collection-dropdown.component';\nimport {\n  hasValue,\n  isNotEmpty,\n} from '../../../shared/empty.util';\nimport { SectionsService } from '../../sections/sections.service';\nimport { SectionsType } from '../../sections/sections-type';\nimport { SubmissionService } from '../../submission.service';\n\n/**\n * This component allows to show the current collection the submission belonging to and to change it.\n */\n@Component({\n  selector: 'ds-submission-form-collection',\n  styleUrls: ['./submission-form-collection.component.scss'],\n  templateUrl: './submission-form-collection.component.html',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TranslateModule,\n    NgbDropdownModule,\n    ThemedCollectionDropdownComponent,\n    BtnDisabledDirective,\n  ],\n})\nexport class SubmissionFormCollectionComponent implements OnDestroy, OnChanges, OnInit {\n\n  /**\n   * The current collection id this submission belonging to\n   * @type {string}\n   */\n  @Input() currentCollectionId: string;\n\n  /**\n   * The current configuration object that define this submission\n   * @type {SubmissionDefinitionsModel}\n   */\n  @Input() currentDefinition: string;\n\n  /**\n   * Checks if the collection can be modifiable by the user\n   * @type {booelan}\n   */\n  @Input() collectionModifiable: boolean | null = null;\n\n  /**\n   * The submission id\n   * @type {string}\n   */\n  @Input() submissionId;\n\n  /**\n   * Flag to indicate if the submission dropdown is read only\n   */\n  @Input() isReadonly = false;\n\n  /**\n   * An event fired when a different collection is selected.\n   * Event's payload equals to new SubmissionObject.\n   */\n  @Output() collectionChange: EventEmitter<SubmissionObject> = new EventEmitter<SubmissionObject>();\n\n  /**\n   * A boolean representing if a collection change operation is processing\n   * @type {BehaviorSubject<boolean>}\n   */\n  public processingChange$ = new BehaviorSubject<boolean>(false);\n\n  /**\n   * The selected collection id\n   * @type {string}\n   */\n  public selectedCollectionId: string;\n\n  /**\n   * The selected collection name\n   * @type {Observable<string>}\n   */\n  public selectedCollectionName$: Observable<string>;\n\n  /**\n   * The JsonPatchOperationPathCombiner object\n   * @type {JsonPatchOperationPathCombiner}\n   */\n  protected pathCombiner: JsonPatchOperationPathCombiner;\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  private subs: Subscription[] = [];\n\n  /**\n   * The html child that contains the collections list\n   */\n  @ViewChild(CollectionDropdownComponent) collectionDropdown: CollectionDropdownComponent;\n\n  /**\n   * A boolean representing if the collection section is available\n   * @type {BehaviorSubject<boolean>}\n   */\n  available$: Observable<boolean>;\n\n  constructor(protected cdr: ChangeDetectorRef,\n              private collectionDataService: CollectionDataService,\n              private operationsBuilder: JsonPatchOperationsBuilder,\n              private operationsService: SubmissionJsonPatchOperationsService,\n              private submissionService: SubmissionService,\n              private sectionsService: SectionsService,\n              public dsoNameService: DSONameService,\n  ) {\n  }\n\n  /**\n   * Initialize collection list\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (hasValue(changes.currentCollectionId)\n      && hasValue(changes.currentCollectionId.currentValue)) {\n      this.selectedCollectionId = this.currentCollectionId;\n\n      this.selectedCollectionName$ = this.collectionDataService.findById(this.currentCollectionId).pipe(\n        find((collectionRD: RemoteData<Collection>) => isNotEmpty(collectionRD.payload)),\n        map((collectionRD: RemoteData<Collection>) => this.dsoNameService.getName(collectionRD.payload)),\n      );\n    }\n  }\n\n  /**\n   * Initialize all instance variables\n   */\n  ngOnInit() {\n    this.pathCombiner = new JsonPatchOperationPathCombiner('sections', 'collection');\n    this.available$ = this.sectionsService.isSectionTypeAvailable(this.submissionId, SectionsType.Collection);\n  }\n\n  /**\n   * Unsubscribe from all subscriptions\n   */\n  ngOnDestroy(): void {\n    this.subs.filter((sub) => hasValue(sub)).forEach((sub) => sub.unsubscribe());\n  }\n\n  /**\n   * Emit a [collectionChange] event when a new collection is selected from list\n   *\n   * @param event\n   *    the selected [CollectionListEntryItem]\n   */\n  onSelect(event) {\n    this.processingChange$.next(true);\n    this.operationsBuilder.replace(this.pathCombiner.getPath(), event.collection.id, true);\n    this.subs.push(this.operationsService.jsonPatchByResourceID(\n      this.submissionService.getSubmissionObjectLinkName(),\n      this.submissionId,\n      'sections',\n      'collection').pipe(\n      mergeMap((submissionObject: SubmissionObject[]) => {\n        // retrieve the full submission object with embeds\n        return this.submissionService.retrieveSubmission(submissionObject[0].id).pipe(\n          getFirstSucceededRemoteDataPayload(),\n        );\n      }),\n    ).subscribe((submissionObject: SubmissionObject) => {\n      this.selectedCollectionId = event.collection.id;\n      this.selectedCollectionName$ = observableOf(event.collection.name);\n      this.collectionChange.emit(submissionObject);\n      this.submissionService.changeSubmissionCollection(this.submissionId, event.collection.id);\n      this.processingChange$.next(false);\n      this.cdr.detectChanges();\n    }),\n    );\n  }\n\n  /**\n   * Reset search form control on dropdown menu close\n   */\n  onClose() {\n    this.collectionDropdown?.reset();\n  }\n\n  /**\n   * Reset search form control when dropdown menu is closed\n   *\n   * @param isOpen\n   *    Representing if the dropdown menu is open or not.\n   */\n  toggled(isOpen: boolean) {\n    if (!isOpen) {\n      this.collectionDropdown?.reset();\n    }\n  }\n}\n","<div>\n  <div\n    *ngIf=\"(available$ | async) !== true\"\n    class=\"input-group mb-3\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">{{ 'submission.sections.general.collection' | translate }}</span>\n    </div>\n    <div class=\"input-group-append\">\n      <span class=\"input-group-text\">{{ selectedCollectionName$ | async }}</span>\n    </div>\n  </div>\n  <div\n    ngbDropdown\n    #collectionControls=\"ngbDropdown\"\n    *ngIf=\"(available$ | async)\"\n    class=\"btn-group input-group\"\n    (openChange)=\"toggled($event)\">\n    <div class=\"input-group-prepend\">\n      <span id=\"collectionControlsMenuLabel\" class=\"input-group-text\">\n        {{ 'submission.sections.general.collection' | translate }}\n      </span>\n    </div>\n    <button aria-describedby=\"collectionControlsMenuLabel\"\n            id=\"collectionControlsMenuButton\"\n            class=\"btn btn-outline-primary\"\n            (blur)=\"onClose()\"\n            (click)=\"onClose()\"\n            [dsBtnDisabled]=\"(processingChange$ | async) || collectionModifiable === false || isReadonly\"\n            ngbDropdownToggle>\n      <span *ngIf=\"(processingChange$ | async)\"><i class='fas fa-circle-notch fa-spin'></i></span>\n      <span *ngIf=\"(processingChange$ | async) !== true\">{{ selectedCollectionName$ | async }}</span>\n    </button>\n\n    <div ngbDropdownMenu\n         class=\"dropdown-menu p-0\"\n         id=\"collectionControlsDropdownMenu\"\n         aria-labelledby=\"collectionControlsMenuButton\">\n      <ds-collection-dropdown\n        (selectionChange)=\"onSelect($event)\">\n      </ds-collection-dropdown>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SubmissionRestService } from '../../../core/submission/submission-rest.service';\nimport { SubmissionScopeType } from '../../../core/submission/submission-scope-type';\nimport { BtnDisabledDirective } from '../../../shared/btn-disabled.directive';\nimport { isNotEmpty } from '../../../shared/empty.util';\nimport { BrowserOnlyPipe } from '../../../shared/utils/browser-only.pipe';\nimport { SubmissionService } from '../../submission.service';\n\n/**\n * This component represents submission form footer bar.\n */\n@Component({\n  selector: 'ds-submission-form-footer',\n  styleUrls: ['./submission-form-footer.component.scss'],\n  templateUrl: './submission-form-footer.component.html',\n  standalone: true,\n  imports: [CommonModule, BrowserOnlyPipe, TranslateModule, BtnDisabledDirective],\n})\nexport class SubmissionFormFooterComponent implements OnChanges {\n\n  /**\n   * The submission id\n   * @type {string}\n   */\n  @Input() submissionId: string;\n\n  /**\n   * A boolean representing if a submission deposit operation is pending\n   * @type {Observable<boolean>}\n   */\n  public processingDepositStatus: Observable<boolean>;\n\n  /**\n   * A boolean representing if a submission save operation is pending\n   * @type {Observable<boolean>}\n   */\n  public processingSaveStatus: Observable<boolean>;\n\n  /**\n   * A boolean representing if showing deposit and discard buttons\n   * @type {Observable<boolean>}\n   */\n  public showDepositAndDiscard: Observable<boolean>;\n\n  /**\n   * A boolean representing if submission form is valid or not\n   * @type {Observable<boolean>}\n   */\n  public submissionIsInvalid: Observable<boolean> = observableOf(true);\n\n  /**\n   * A boolean representing if submission form has unsaved modifications\n   */\n  public hasUnsavedModification: Observable<boolean>;\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {NgbModal} modalService\n   * @param {SubmissionRestService} restService\n   * @param {SubmissionService} submissionService\n   */\n  constructor(private modalService: NgbModal,\n              private restService: SubmissionRestService,\n              private submissionService: SubmissionService) {\n  }\n\n  /**\n   * Initialize all instance variables\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (isNotEmpty(this.submissionId)) {\n      this.submissionIsInvalid = this.submissionService.getSubmissionStatus(this.submissionId).pipe(\n        map((isValid: boolean) => isValid === false),\n      );\n\n      this.processingSaveStatus = this.submissionService.getSubmissionSaveProcessingStatus(this.submissionId);\n      this.processingDepositStatus = this.submissionService.getSubmissionDepositProcessingStatus(this.submissionId);\n      this.showDepositAndDiscard = observableOf(this.submissionService.getSubmissionScope() === SubmissionScopeType.WorkspaceItem);\n      this.hasUnsavedModification = this.submissionService.hasUnsavedModification();\n    }\n  }\n\n  /**\n   * Dispatch a submission save action\n   */\n  save(event) {\n    this.submissionService.dispatchSave(this.submissionId, true);\n  }\n\n  /**\n   * Dispatch a submission save for later action\n   */\n  saveLater(event) {\n    this.submissionService.dispatchSaveForLater(this.submissionId);\n  }\n\n  /**\n   * Dispatch a submission deposit action\n   */\n  public deposit(event) {\n    this.submissionService.dispatchDeposit(this.submissionId);\n  }\n\n  /**\n   * Dispatch a submission discard action\n   */\n  public confirmDiscard(content) {\n    this.modalService.open(content).result.then(\n      (result) => {\n        if (result === 'ok') {\n          this.submissionService.dispatchDiscard(this.submissionId);\n        }\n      },\n    );\n  }\n}\n","<div class=\"row\" *ngIf=\"!!submissionId\">\n  <div class=\"col\">\n    <button *ngIf=\"(showDepositAndDiscard | async)\"\n            type=\"button\"\n            id=\"discard\"\n            [attr.data-test]=\"'discard' | dsBrowserOnly\"\n            class=\"btn btn-danger\"\n            [dsBtnDisabled]=\"(processingSaveStatus | async) || (processingDepositStatus | async)\"\n            (click)=\"$event.preventDefault();confirmDiscard(content)\">\n      <i class=\"fas fa-trash\"></i> {{'submission.general.discard.submit' | translate}}\n    </button>\n  </div>\n  <div class=\"col text-right d-flex justify-content-end align-items-center\">\n    <span *ngIf=\"(hasUnsavedModification | async) !== true && (processingSaveStatus | async) !== true && (processingDepositStatus | async) !== true\">\n      <i class=\"fas fa-check-circle\"></i> {{'submission.general.info.saved' | translate}}\n    </span>\n    <span *ngIf=\"(hasUnsavedModification | async) && (processingSaveStatus | async) !== true && (processingDepositStatus | async) !== true\">\n      <i class=\"fas fa-exclamation-circle\"></i> {{'submission.general.info.pending-changes' | translate}}\n    </span>\n    <div *ngIf=\"(processingSaveStatus | async) || (processingDepositStatus | async)\" class=\"col d-flex justify-content-end align-items-center\">\n      <div class=\"progress w-75\">\n        <div *ngIf=\"(processingSaveStatus | async)\" class=\"progress-bar progress-bar-striped progress-bar-animated bg-info\" [style.width]=\"'100%'\" role=\"progressbar\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\">Saving...</div>\n        <div *ngIf=\"(processingDepositStatus | async)\" class=\"progress-bar progress-bar-striped progress-bar-animated bg-info\" [style.width]=\"'100%'\" role=\"progressbar\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\">Depositing...</div>\n      </div>\n    </div>\n    <div class=\"ml-2 space-children-mr\">\n      <button type=\"button\"\n              class=\"btn btn-secondary\"\n              id=\"save\"\n              [attr.data-test]=\"'save' | dsBrowserOnly\"\n              [dsBtnDisabled]=\"(processingSaveStatus | async) || (hasUnsavedModification | async) !== true\"\n              (click)=\"save($event)\">\n        <span><i class=\"fas fa-save\"></i> {{'submission.general.save' | translate}}</span>\n      </button>\n      <button type=\"button\"\n              [class.btn-primary]=\"(showDepositAndDiscard | async) !== true\"\n              [class.btn-secondary]=\"(showDepositAndDiscard | async)\"\n              class=\"btn\"\n              id=\"saveForLater\"\n              [attr.data-test]=\"'save-for-later' | dsBrowserOnly\"\n              [dsBtnDisabled]=\"(processingSaveStatus | async) || (processingDepositStatus | async)\"\n              (click)=\"saveLater($event)\">\n        <span><i class=\"fas fa-save\"></i> {{'submission.general.save-later' | translate}}</span>\n      </button>\n      <button *ngIf=\"(showDepositAndDiscard | async)\"\n              type=\"button\"\n              id=\"deposit\"\n              [attr.data-test]=\"'deposit' | dsBrowserOnly\"\n              class=\"btn btn-success\"\n              [dsBtnDisabled]=\"(processingSaveStatus | async) || (processingDepositStatus | async)\"\n              (click)=\"deposit($event)\">\n        <span><i class=\"fas fa-plus\"></i> {{'submission.general.deposit' | translate}}</span>\n      </button>\n    </div>\n  </div>\n</div>\n\n<ng-template #content let-c=\"close\" let-d=\"dismiss\">\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-danger\">{{'submission.general.discard.confirm.title' | translate}}</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('cancel')\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <p>{{'submission.general.discard.confirm.info' | translate}}</p>\n  </div>\n  <div class=\"modal-footer space-children-mr\">\n    <button type=\"button\" id=\"discard_cancel\" class=\"btn btn-secondary\" (click)=\"c('cancel')\">{{'submission.general.discard.confirm.cancel' | translate}}</button>\n    <button type=\"button\" id=\"discard_submit\" class=\"btn btn-danger\" (click)=\"c('ok')\">{{'submission.general.discard.confirm.submit' | translate}}</button>\n  </div>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { BtnDisabledDirective } from '../../../shared/btn-disabled.directive';\nimport { HostWindowService } from '../../../shared/host-window.service';\nimport { SectionDataObject } from '../../sections/models/section-data.model';\nimport { SectionsService } from '../../sections/sections.service';\nimport { SubmissionService } from '../../submission.service';\n\n/**\n * This component allow to add any new section to submission form\n */\n@Component({\n  selector: 'ds-submission-form-section-add',\n  styleUrls: ['./submission-form-section-add.component.scss'],\n  templateUrl: './submission-form-section-add.component.html',\n  standalone: true,\n  imports: [CommonModule, TranslateModule, NgbDropdownModule, BtnDisabledDirective],\n})\nexport class SubmissionFormSectionAddComponent implements OnInit {\n\n  /**\n   * The collection id this submission belonging to\n   * @type {string}\n   */\n  @Input() collectionId: string;\n\n  /**\n   * The submission id\n   * @type {string}\n   */\n  @Input() submissionId: string;\n\n  /**\n   * The possible section list to add\n   * @type {Observable<SectionDataObject[]>}\n   */\n  public sectionList$: Observable<SectionDataObject[]>;\n\n  /**\n   * A boolean representing if there are available sections to add\n   * @type {Observable<boolean>}\n   */\n  public hasSections$: Observable<boolean>;\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {SectionsService} sectionService\n   * @param {SubmissionService} submissionService\n   * @param {HostWindowService} windowService\n   */\n  constructor(private sectionService: SectionsService,\n              private submissionService: SubmissionService,\n              public windowService: HostWindowService) {\n  }\n\n  /**\n   * Initialize all instance variables\n   */\n  ngOnInit() {\n    this.sectionList$ = this.submissionService.getDisabledSectionsList(this.submissionId);\n    this.hasSections$ = this.sectionList$.pipe(\n      map((list: SectionDataObject[]) => list.length > 0),\n    );\n  }\n\n  /**\n   * Dispatch an action to add a new section\n   */\n  addSection(sectionId) {\n    this.sectionService.addSection(this.submissionId, sectionId);\n  }\n}\n","<div ngbDropdown\n     #sectionAdd=\"ngbDropdown\"\n     placement=\"bottom-right\"\n     class=\"d-inline-block\"\n     [ngClass]=\"{'w-100': windowService.isXs()}\">\n  <ng-container *ngIf=\"hasSections$ | async\">\n  <button class=\"btn btn-outline-primary dropdown-toggle\"\n          id=\"sectionControls\"\n          [dsBtnDisabled]=\"(hasSections$ | async) !== true\"\n          [ngClass]=\"{'w-100': (windowService.isXs() | async)}\"\n          ngbDropdownToggle>\n          {{ 'submission.sections.general.add-more' | translate }} <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\n  </button>\n  </ng-container>\n  <div ngbDropdownMenu\n       class=\"sections-dropdown-menu\"\n       aria-labelledby=\"sectionControls\"\n       [ngClass]=\"{'w-100': (windowService.isXs() | async)}\">\n    <button class=\"dropdown-item disabled\" *ngIf=\"(hasSections$ | async) !== true\">\n      {{ 'submission.sections.general.no-sections' | translate }}\n    </button>\n    <button class=\"dropdown-item\" *ngFor=\"let listItem of (sectionList$ | async)\" (click)=\"addSection(listItem.id)\">\n      {{'submission.sections.'+listItem.header | translate }}\n    </button>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n} from '@angular/core';\nimport isEqual from 'lodash/isEqual';\nimport {\n  Observable,\n  of as observableOf,\n  Subscription,\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n} from 'rxjs/operators';\n\nimport { AuthService } from '../../core/auth/auth.service';\nimport { SubmissionDefinitionsModel } from '../../core/config/models/config-submission-definitions.model';\nimport { SubmissionSectionModel } from '../../core/config/models/config-submission-section.model';\nimport { Collection } from '../../core/shared/collection.model';\nimport { HALEndpointService } from '../../core/shared/hal-endpoint.service';\nimport { Item } from '../../core/shared/item.model';\nimport { SubmissionObject } from '../../core/submission/models/submission-object.model';\nimport { WorkspaceitemSectionsObject } from '../../core/submission/models/workspaceitem-sections.model';\nimport {\n  hasValue,\n  isNotEmpty,\n  isNotUndefined,\n} from '../../shared/empty.util';\nimport { ThemedLoadingComponent } from '../../shared/loading/themed-loading.component';\nimport { UploaderOptions } from '../../shared/upload/uploader/uploader-options.model';\nimport { SectionVisibility } from '../objects/section-visibility.model';\nimport { SubmissionError } from '../objects/submission-error.model';\nimport { SubmissionObjectEntry } from '../objects/submission-objects.reducer';\nimport { SubmissionSectionContainerComponent } from '../sections/container/section-container.component';\nimport { SectionDataObject } from '../sections/models/section-data.model';\nimport { SectionsService } from '../sections/sections.service';\nimport { SectionsType } from '../sections/sections-type';\nimport { VisibilityType } from '../sections/visibility-type';\nimport { SubmissionService } from '../submission.service';\nimport { SubmissionFormCollectionComponent } from './collection/submission-form-collection.component';\nimport { SubmissionFormFooterComponent } from './footer/submission-form-footer.component';\nimport { SubmissionFormSectionAddComponent } from './section-add/submission-form-section-add.component';\nimport { ThemedSubmissionUploadFilesComponent } from './submission-upload-files/themed-submission-upload-files.component';\n\n/**\n * This component represents the submission form.\n */\n@Component({\n  selector: 'ds-submission-form',\n  styleUrls: ['./submission-form.component.scss'],\n  templateUrl: './submission-form.component.html',\n  imports: [\n    CommonModule,\n    ThemedLoadingComponent,\n    SubmissionSectionContainerComponent,\n    SubmissionFormFooterComponent,\n    ThemedSubmissionUploadFilesComponent,\n    SubmissionFormCollectionComponent,\n    SubmissionFormSectionAddComponent,\n  ],\n  standalone: true,\n})\nexport class SubmissionFormComponent implements OnChanges, OnDestroy {\n\n  /**\n   * The collection id this submission belonging to\n   * @type {string}\n   */\n  @Input() collectionId: string;\n\n  @Input() item: Item;\n\n  /**\n   * Checks if the collection can be modifiable by the user\n   * @type {boolean}\n   */\n  @Input() collectionModifiable: boolean | null = null;\n\n\n  /**\n   * The list of submission's sections\n   * @type {WorkspaceitemSectionsObject}\n   */\n  @Input() sections: WorkspaceitemSectionsObject;\n\n  /**\n   * The submission errors present in the submission object\n   * @type {SubmissionError}\n   */\n  @Input() submissionErrors: SubmissionError;\n\n  /**\n   * The submission self url\n   * @type {string}\n   */\n  @Input() selfUrl: string;\n\n  /**\n   * The configuration object that define this submission\n   * @type {SubmissionDefinitionsModel}\n   */\n  @Input() submissionDefinition: SubmissionDefinitionsModel;\n\n  /**\n   * The submission id\n   * @type {string}\n   */\n  @Input() submissionId: string;\n\n  /**\n   * The configuration id that define this submission\n   * @type {string}\n   */\n  public definitionId: string;\n\n  /**\n   * A boolean representing if a submission form is pending\n   * @type {Observable<boolean>}\n   */\n  public loading: Observable<boolean> = observableOf(true);\n\n  /**\n   * Emits true when the submission config has bitstream uploading enabled in submission\n   */\n  public uploadEnabled$: Observable<boolean>;\n\n  /**\n   * Observable of the list of submission's sections\n   * @type {Observable<WorkspaceitemSectionsObject>}\n   */\n  public submissionSections: Observable<WorkspaceitemSectionsObject>;\n\n  /**\n   * The uploader configuration options\n   * @type {UploaderOptions}\n   */\n  public uploadFilesOptions: UploaderOptions = new UploaderOptions();\n\n  /**\n   * A boolean representing if component is active\n   * @type {boolean}\n   */\n  protected isActive: boolean;\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  protected subs: Subscription[] = [];\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {AuthService} authService\n   * @param {ChangeDetectorRef} changeDetectorRef\n   * @param {HALEndpointService} halService\n   * @param {SubmissionService} submissionService\n   * @param {SectionsService} sectionsService\n   */\n  constructor(\n    private authService: AuthService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private halService: HALEndpointService,\n    private submissionService: SubmissionService,\n    private sectionsService: SectionsService) {\n    this.isActive = true;\n  }\n\n  /**\n   * Initialize all instance variables and retrieve form configuration\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if ((changes.collectionId && this.collectionId) && (changes.submissionId && this.submissionId)) {\n      this.isActive = true;\n\n      // retrieve submission's section list\n      this.submissionSections = this.submissionService.getSubmissionObject(this.submissionId).pipe(\n        filter(() => this.isActive),\n        map((submission: SubmissionObjectEntry) => submission.isLoading),\n        map((isLoading: boolean) => isLoading),\n        distinctUntilChanged(),\n        switchMap((isLoading: boolean) => {\n          if (!isLoading) {\n            return this.getSectionsList();\n          } else {\n            return observableOf([]);\n          }\n        }));\n      this.uploadEnabled$ = this.sectionsService.isSectionTypeAvailable(this.submissionId, SectionsType.Upload);\n\n      // check if is submission loading\n      this.loading = this.submissionService.getSubmissionObject(this.submissionId).pipe(\n        filter(() => this.isActive),\n        map((submission: SubmissionObjectEntry) => submission.isLoading),\n        map((isLoading: boolean) => isLoading),\n        distinctUntilChanged());\n\n      // init submission state\n      this.subs.push(\n        this.halService.getEndpoint(this.submissionService.getSubmissionObjectLinkName()).pipe(\n          filter((href: string) => isNotEmpty(href)),\n          distinctUntilChanged())\n          .subscribe((endpointURL) => {\n            this.uploadFilesOptions.authToken = this.authService.buildAuthHeader();\n            this.uploadFilesOptions.url = endpointURL.concat(`/${this.submissionId}`);\n            this.definitionId = this.submissionDefinition.name;\n            this.submissionService.dispatchInit(\n              this.collectionId,\n              this.submissionId,\n              this.selfUrl,\n              this.submissionDefinition,\n              this.sections,\n              this.item,\n              this.submissionErrors);\n            this.changeDetectorRef.detectChanges();\n          }),\n      );\n\n      // start auto save\n      this.submissionService.startAutoSave(this.submissionId);\n    }\n  }\n\n  /**\n   *  Returns the visibility object of the collection section\n   */\n  private getCollectionVisibility(): SectionVisibility {\n    const submissionSectionModel: SubmissionSectionModel =\n      this.submissionDefinition.sections.page.find(\n        (section) => isEqual(section.sectionType, SectionsType.Collection),\n      );\n\n    return isNotUndefined(submissionSectionModel.visibility) ? submissionSectionModel.visibility : null;\n  }\n\n  /**\n   * Getter to see if the collection section visibility is hidden\n   */\n  get isSectionHidden(): boolean {\n    const visibility = this.getCollectionVisibility();\n    return (\n      hasValue(visibility) &&\n      isEqual(visibility.main, VisibilityType.HIDDEN) &&\n      isEqual(visibility.other, VisibilityType.HIDDEN)\n    );\n  }\n\n  /**\n   * Getter to see if the collection section visibility is readonly\n   */\n  get isSectionReadonly(): boolean {\n    const visibility = this.getCollectionVisibility();\n    return (\n      hasValue(visibility) &&\n      isEqual(visibility.main, VisibilityType.READONLY) &&\n      isEqual(visibility.other, VisibilityType.READONLY)\n    );\n  }\n\n  /**\n   * Unsubscribe from all subscriptions, destroy instance variables\n   * and reset submission state\n   */\n  ngOnDestroy() {\n    this.isActive = false;\n    this.submissionService.stopAutoSave();\n    this.submissionService.resetAllSubmissionObjects();\n    this.subs\n      .filter((subscription) => hasValue(subscription))\n      .forEach((subscription) => subscription.unsubscribe());\n  }\n\n  /**\n   * On collection change reset submission state in case of it has a different\n   * submission definition\n   *\n   * @param submissionObject\n   *    new submission object\n   */\n  onCollectionChange(submissionObject: SubmissionObject) {\n    this.collectionId = (submissionObject.collection as Collection).id;\n    if (this.definitionId !== (submissionObject.submissionDefinition as SubmissionDefinitionsModel).name) {\n      this.sections = submissionObject.sections;\n      this.submissionDefinition = (submissionObject.submissionDefinition as SubmissionDefinitionsModel);\n      this.definitionId = this.submissionDefinition.name;\n      this.submissionService.resetSubmissionObject(\n        this.collectionId,\n        this.submissionId,\n        submissionObject._links.self.href,\n        this.submissionDefinition,\n        this.sections,\n        this.item);\n    } else {\n      this.changeDetectorRef.detectChanges();\n    }\n  }\n\n  /**\n   * Check if submission form is loading\n   */\n  isLoading(): Observable<boolean> {\n    return this.loading;\n  }\n\n  /**\n   * Check if submission form is loading\n   */\n  protected getSectionsList(): Observable<any> {\n    return this.submissionService.getSubmissionSections(this.submissionId).pipe(\n      filter((sections: SectionDataObject[]) => isNotEmpty(sections)),\n      map((sections: SectionDataObject[]) =>\n        sections.filter((section: SectionDataObject) => !isEqual(section.sectionType,SectionsType.Collection))),\n    );\n  }\n}\n","<div class=\"container-fluid\">\n    <div *ngIf=\"(isLoading() | async) !== true\" class=\"submission-form-header mb-3 d-flex flex-wrap position-sticky\">\n        <div *ngIf=\"(uploadEnabled$ | async)\" class=\"w-100\">\n            <ds-submission-upload-files [submissionId]=\"submissionId\"\n                                        [collectionId]=\"collectionId\"\n                                        [uploadFilesOptions]=\"uploadFilesOptions\"></ds-submission-upload-files>\n            <div class=\"clearfix\"></div>\n        </div>\n\n        <div class=\"submission-form-header-item mb-3 mb-sm-0 flex-sm-grow-1 flex-md-grow-0\">\n          <ng-container *ngIf=\"!isSectionHidden\">\n            <ds-submission-form-collection\n            [currentCollectionId]=\"collectionId\"\n                                           [currentDefinition]=\"definitionId\"\n                                           [submissionId]=\"submissionId\"\n                                           [collectionModifiable]=\"collectionModifiable\"\n                                           [isReadonly]=\"isSectionReadonly\"\n                                           (collectionChange)=\"onCollectionChange($event)\">\n            </ds-submission-form-collection>\n          </ng-container>\n        </div>\n        <div class=\"submission-form-header-item text-right\">\n            <ds-submission-form-section-add [collectionId]=\"collectionId\"\n                                            [submissionId]=\"submissionId\">\n            </ds-submission-form-section-add>\n        </div>\n    </div>\n\n    <div class=\"submission-form-content\">\n        <ds-loading *ngIf=\"(isLoading() | async)\" message=\"Loading...\"></ds-loading>\n        <ng-container *ngFor=\"let object of $any(submissionSections | async)\">\n            <ds-submission-section-container [collectionId]=\"collectionId\"\n                                             [submissionId]=\"submissionId\"\n                                             [sectionData]=\"$any(object)\">\n            </ds-submission-section-container>\n        </ng-container>\n    </div>\n    <div *ngIf=\"(isLoading() | async) !== true\" class=\"submission-form-footer mt-3 mb-3 position-sticky\">\n        <ds-submission-form-footer [submissionId]=\"submissionId\"></ds-submission-form-footer>\n    </div>\n</div>\n\n","import { NgIf } from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  Observable,\n  of as observableOf,\n  Subscription,\n} from 'rxjs';\nimport {\n  first,\n  take,\n} from 'rxjs/operators';\n\nimport { WorkspaceItem } from '../../../core/submission/models/workspaceitem.model';\nimport { SubmissionJsonPatchOperationsService } from '../../../core/submission/submission-json-patch-operations.service';\nimport { normalizeSectionData } from '../../../core/submission/submission-response-parsing.service';\nimport {\n  hasValue,\n  isEmpty,\n  isNotEmpty,\n} from '../../../shared/empty.util';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { UploaderComponent } from '../../../shared/upload/uploader/uploader.component';\nimport { UploaderOptions } from '../../../shared/upload/uploader/uploader-options.model';\nimport { SectionsService } from '../../sections/sections.service';\nimport { SectionsType } from '../../sections/sections-type';\nimport { SubmissionService } from '../../submission.service';\nimport parseSectionErrors from '../../utils/parseSectionErrors';\n\n/**\n * This component represents the drop zone that provides to add files to the submission.\n */\n@Component({\n  selector: 'ds-base-submission-upload-files',\n  templateUrl: './submission-upload-files.component.html',\n  imports: [\n    UploaderComponent,\n    NgIf,\n  ],\n  standalone: true,\n})\nexport class SubmissionUploadFilesComponent implements OnChanges, OnDestroy {\n\n  /**\n   * The collection id this submission belonging to\n   * @type {string}\n   */\n  @Input() collectionId: string;\n\n  /**\n   * The submission id\n   * @type {string}\n   */\n  @Input() submissionId: string;\n\n  /**\n   * The uploader configuration options\n   * @type {UploaderOptions}\n   */\n  @Input() uploadFilesOptions: UploaderOptions;\n\n  /**\n   * A boolean representing if is possible to active drop zone over the document page\n   * @type {boolean}\n   */\n  public enableDragOverDocument = true;\n\n  /**\n   * i18n message label\n   * @type {string}\n   */\n  public dropOverDocumentMsg = 'submission.sections.upload.drop-message';\n\n  /**\n   * i18n message label\n   * @type {string}\n   */\n  public dropMsg = 'submission.sections.upload.drop-message';\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  private subs: Subscription[] = [];\n\n  /**\n   * A boolean representing if upload functionality is enabled\n   * @type {boolean}\n   */\n  private uploadEnabled: Observable<boolean> = observableOf(false);\n\n  /**\n   * Save submission before to upload a file\n   */\n  public onBeforeUpload = () => {\n    const sub: Subscription = this.operationsService.jsonPatchByResourceType(\n      this.submissionService.getSubmissionObjectLinkName(),\n      this.submissionId,\n      'sections')\n      .subscribe();\n    this.subs.push(sub);\n    return sub;\n  };\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {NotificationsService} notificationsService\n   * @param {SubmissionJsonPatchOperationsService} operationsService\n   * @param {SectionsService} sectionService\n   * @param {SubmissionService} submissionService\n   * @param {TranslateService} translate\n   */\n  constructor(private notificationsService: NotificationsService,\n              private operationsService: SubmissionJsonPatchOperationsService,\n              private sectionService: SectionsService,\n              private submissionService: SubmissionService,\n              private translate: TranslateService) {\n  }\n\n  /**\n   * Check if upload functionality is enabled\n   */\n  ngOnChanges() {\n    this.uploadEnabled = this.sectionService.isSectionTypeAvailable(this.submissionId, SectionsType.Upload);\n  }\n\n  /**\n   * Parse the submission object retrieved from REST after upload\n   *\n   * @param workspaceitem\n   *    The submission object retrieved from REST\n   */\n  public onCompleteItem(workspaceitem: WorkspaceItem) {\n    // Checks if upload section is enabled so do upload\n    this.subs.push(\n      this.uploadEnabled\n        .pipe(first())\n        .subscribe((isUploadEnabled) => {\n          if (isUploadEnabled) {\n\n            const { sections } = workspaceitem;\n            const { errors } = workspaceitem;\n\n            const errorsList = parseSectionErrors(errors);\n            if (sections && isNotEmpty(sections)) {\n              Object.keys(sections)\n                .forEach((sectionId) => {\n                  const sectionData = normalizeSectionData(sections[sectionId]);\n                  const sectionErrors = errorsList[sectionId];\n                  this.sectionService.isSectionType(this.submissionId, sectionId, SectionsType.Upload)\n                    .pipe(take(1))\n                    .subscribe((isUpload) => {\n                      if (isUpload) {\n                        // Look for errors on upload\n                        if ((isEmpty(sectionErrors))) {\n                          this.notificationsService.success(null, this.translate.get('submission.sections.upload.upload-successful'));\n                        } else {\n                          this.notificationsService.error(null, this.translate.get('submission.sections.upload.upload-failed'));\n                        }\n                      }\n                    });\n                  this.sectionService.updateSectionData(this.submissionId, sectionId, sectionData, sectionErrors, sectionErrors);\n                });\n            }\n\n          }\n        }),\n    );\n  }\n\n  /**\n   * Show error notification on upload fails\n   */\n  public onUploadError() {\n    this.notificationsService.error(null, this.translate.get('submission.sections.upload.upload-failed'));\n  }\n\n  /**\n   * Unsubscribe from all subscriptions\n   */\n  ngOnDestroy() {\n    this.subs\n      .filter((subscription) => hasValue(subscription))\n      .forEach((subscription) => subscription.unsubscribe());\n  }\n}\n","<ds-uploader *ngIf=\"uploadFilesOptions.url\"\n             [dropMsg]=\"dropMsg\"\n             [dropOverDocumentMsg]=\"dropOverDocumentMsg\"\n             [enableDragOverDocument]=\"enableDragOverDocument\"\n             [onBeforeUpload]=\"onBeforeUpload\"\n             [uploadFilesOptions]=\"uploadFilesOptions\"\n             (onCompleteItem)=\"onCompleteItem($event)\"\n             (onUploadError)=\"onUploadError()\"></ds-uploader>\n","import {\n  Component,\n  Input,\n} from '@angular/core';\n\nimport { ThemedComponent } from '../../../shared/theme-support/themed.component';\nimport { UploaderOptions } from '../../../shared/upload/uploader/uploader-options.model';\nimport { SubmissionUploadFilesComponent } from './submission-upload-files.component';\n\n/**\n * Themed wrapper for {@link SubmissionUploadFilesComponent}\n */\n@Component({\n  selector: 'ds-submission-upload-files',\n  templateUrl: '../../../shared/theme-support/themed.component.html',\n  standalone: true,\n  imports: [SubmissionUploadFilesComponent],\n})\nexport class ThemedSubmissionUploadFilesComponent extends ThemedComponent<SubmissionUploadFilesComponent> {\n\n  @Input() collectionId: string;\n\n  @Input() submissionId: string;\n\n  @Input() uploadFilesOptions: UploaderOptions;\n\n  protected inAndOutputNames: (keyof SubmissionUploadFilesComponent & keyof this)[] = [\n    'collectionId',\n    'submissionId',\n    'uploadFilesOptions',\n  ];\n\n  protected getComponentName(): string {\n    return 'SubmissionUploadFilesComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../../themes/${themeName}/app/submission/form/submission-upload-files/submission-upload-files.component.ts`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import('./submission-upload-files.component');\n  }\n}\n","import { NgIf } from '@angular/common';\nimport {\n  Component,\n  Inject,\n  ViewChild,\n} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport {\n  DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX,\n  DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER,\n  DynamicCheckboxModel,\n  DynamicDatePickerModel,\n  DynamicFormArrayModel,\n  DynamicFormControlEvent,\n  DynamicFormControlModel,\n  DynamicFormGroupModel,\n  DynamicSelectModel,\n  MATCH_ENABLED,\n  OR_OPERATOR,\n} from '@ng-dynamic-forms/core';\nimport { DynamicDateControlValue } from '@ng-dynamic-forms/core/lib/model/dynamic-date-control.model';\nimport { DynamicFormControlCondition } from '@ng-dynamic-forms/core/lib/model/misc/dynamic-form-control-relation.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  combineLatest,\n  Observable,\n  of,\n  Subscription,\n} from 'rxjs';\nimport {\n  filter,\n  map,\n  mergeMap,\n  take,\n} from 'rxjs/operators';\n\nimport { AccessesConditionOption } from '../../../core/config/models/config-accesses-conditions-options.model';\nimport { SubmissionAccessesConfigDataService } from '../../../core/config/submission-accesses-config-data.service';\nimport { JsonPatchOperationPathCombiner } from '../../../core/json-patch/builder/json-patch-operation-path-combiner';\nimport { JsonPatchOperationsBuilder } from '../../../core/json-patch/builder/json-patch-operations-builder';\nimport { getFirstSucceededRemoteData } from '../../../core/shared/operators';\nimport { WorkspaceitemSectionAccessesObject } from '../../../core/submission/models/workspaceitem-section-accesses.model';\nimport { SubmissionJsonPatchOperationsService } from '../../../core/submission/submission-json-patch-operations.service';\nimport { dateToISOFormat } from '../../../shared/date.util';\nimport {\n  hasValue,\n  isNotEmpty,\n  isNotNull,\n} from '../../../shared/empty.util';\nimport { FormBuilderService } from '../../../shared/form/builder/form-builder.service';\nimport { FormComponent } from '../../../shared/form/form.component';\nimport { FormService } from '../../../shared/form/form.service';\nimport { SectionFormOperationsService } from '../form/section-form-operations.service';\nimport { SectionModelComponent } from '../models/section.model';\nimport { SectionDataObject } from '../models/section-data.model';\nimport { SectionsService } from '../sections.service';\nimport {\n  ACCESS_CONDITION_GROUP_CONFIG,\n  ACCESS_CONDITION_GROUP_LAYOUT,\n  ACCESS_CONDITIONS_FORM_ARRAY_CONFIG,\n  ACCESS_CONDITIONS_FORM_ARRAY_LAYOUT,\n  ACCESS_FORM_CHECKBOX_CONFIG,\n  ACCESS_FORM_CHECKBOX_LAYOUT,\n  FORM_ACCESS_CONDITION_END_DATE_CONFIG,\n  FORM_ACCESS_CONDITION_END_DATE_LAYOUT,\n  FORM_ACCESS_CONDITION_START_DATE_CONFIG,\n  FORM_ACCESS_CONDITION_START_DATE_LAYOUT,\n  FORM_ACCESS_CONDITION_TYPE_CONFIG,\n  FORM_ACCESS_CONDITION_TYPE_LAYOUT,\n} from './section-accesses.model';\nimport { SectionAccessesService } from './section-accesses.service';\n\n/**\n * This component represents a section for managing item's access conditions.\n */\n@Component({\n  selector: 'ds-section-accesses',\n  templateUrl: './section-accesses.component.html',\n  styleUrls: ['./section-accesses.component.scss'],\n  imports: [\n    FormComponent,\n    NgIf,\n  ],\n  standalone: true,\n})\nexport class SubmissionSectionAccessesComponent extends SectionModelComponent {\n\n  /**\n   * The FormComponent reference\n   */\n  @ViewChild('formRef') public formRef: FormComponent;\n\n  /**\n   * List of available access conditions that could be set to item\n   */\n  public availableAccessConditionOptions: AccessesConditionOption[];  // List of accessConditions that an user can select\n\n  /**\n   * The form id\n   * @type {string}\n   */\n  public formId: string;\n\n  /**\n   * The accesses section data\n   * @type {WorkspaceitemSectionAccessesObject}\n   */\n  public accessesData: WorkspaceitemSectionAccessesObject;\n\n  /**\n   * The form model\n   * @type {DynamicFormControlModel[]}\n   */\n  public formModel: DynamicFormControlModel[];\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  protected subs: Subscription[] = [];\n\n  /**\n   * The [[JsonPatchOperationPathCombiner]] object\n   * @type {JsonPatchOperationPathCombiner}\n   */\n  protected pathCombiner: JsonPatchOperationPathCombiner;\n\n  /**\n   * Defines if the access discoverable property can be managed\n   */\n  public canChangeDiscoverable: boolean;\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {SectionsService} sectionService\n   * @param {SectionDataObject} injectedSectionData\n   * @param {FormService} formService\n   * @param {JsonPatchOperationsBuilder} operationsBuilder\n   * @param {SectionFormOperationsService} formOperationsService\n   * @param {FormBuilderService} formBuilderService\n   * @param {TranslateService} translate\n   * @param {SubmissionAccessesConfigDataService} accessesConfigService\n   * @param {SectionAccessesService} accessesService\n   * @param {SubmissionJsonPatchOperationsService} operationsService\n   * @param {string} injectedSubmissionId\n   */\n  constructor(\n    protected sectionService: SectionsService,\n    private formBuilderService: FormBuilderService,\n    private accessesConfigService: SubmissionAccessesConfigDataService,\n    private accessesService: SectionAccessesService,\n    protected formOperationsService: SectionFormOperationsService,\n    protected operationsBuilder: JsonPatchOperationsBuilder,\n    private formService: FormService,\n    private translate: TranslateService,\n    private operationsService: SubmissionJsonPatchOperationsService,\n    @Inject('sectionDataProvider') public injectedSectionData: SectionDataObject,\n    @Inject('submissionIdProvider') public injectedSubmissionId: string) {\n    super(undefined, injectedSectionData, injectedSubmissionId);\n  }\n\n  /**\n   * Initialize form model values\n   *\n   * @param formModel\n   *    The form model\n   */\n  public initModelData(formModel: DynamicFormControlModel[]) {\n    this.accessesData.accessConditions.forEach((accessCondition, index) => {\n      Array.of('name', 'startDate', 'endDate')\n        .filter((key) => accessCondition.hasOwnProperty(key) && isNotEmpty(accessCondition[key]))\n        .forEach((key) => {\n          const metadataModel: any = this.formBuilderService.findById(key, formModel, index);\n          if (metadataModel) {\n            if (metadataModel.type === DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER) {\n              const date = new Date(accessCondition[key]);\n              metadataModel.value = {\n                year: date.getUTCFullYear(),\n                month: date.getUTCMonth() + 1,\n                day: date.getUTCDate(),\n              };\n            } else {\n              metadataModel.value = accessCondition[key];\n            }\n          }\n        });\n    });\n  }\n\n  /**\n   * Method called when a form dfChange event is fired.\n   * Dispatch form operations based on changes.\n   */\n  onChange(event: DynamicFormControlEvent) {\n    if (event.model.type === DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX) {\n      const path = this.formOperationsService.getFieldPathSegmentedFromChangeEvent(event);\n      const value = this.formOperationsService.getFieldValueFromChangeEvent(event);\n      this.operationsBuilder.replace(this.pathCombiner.getPath(path), value.value, true);\n    } else {\n      if (event.model.id === FORM_ACCESS_CONDITION_TYPE_CONFIG.id) {\n        // Clear previous state when switching through different access conditions\n\n        const startDateControl: UntypedFormControl = event.control.parent.get('startDate') as UntypedFormControl;\n        const endDateControl: UntypedFormControl = event.control.parent.get('endDate') as UntypedFormControl;\n\n        startDateControl?.markAsUntouched();\n        endDateControl?.markAsUntouched();\n\n        startDateControl?.setValue(null);\n        endDateControl?.setValue(null);\n        event.control.parent.markAsDirty();\n      }\n\n      // validate form\n      this.formService.validateAllFormFields(this.formRef.formGroup);\n      this.formService.isValid(this.formId).pipe(\n        take(1),\n        filter((isValid) => isValid),\n        mergeMap(() => this.formService.getFormData(this.formId)),\n        take(1),\n      ).subscribe((formData: any) => {\n        const accessConditionsToSave = [];\n        formData.accessCondition\n          .map((accessConditions) => accessConditions.accessConditionGroup)\n          .filter((accessCondition) => isNotEmpty(accessCondition))\n          .forEach((accessCondition) => {\n            let accessConditionOpt;\n\n            this.availableAccessConditionOptions\n              .filter((element) => isNotNull(accessCondition.name) && element.name === accessCondition.name[0].value)\n              .forEach((element) => accessConditionOpt = element);\n\n            if (accessConditionOpt) {\n              const currentAccessCondition = Object.assign({}, accessCondition);\n              currentAccessCondition.name = this.retrieveValueFromField(accessCondition.name);\n\n              /* When start and end date fields are deactivated, their values may be still present in formData,\n              therefore it is necessary to delete them if they're not allowed by the current access condition option. */\n              if (!accessConditionOpt.hasStartDate) {\n                delete currentAccessCondition.startDate;\n              } else if (accessCondition.startDate) {\n                const startDate = this.retrieveValueFromField(accessCondition.startDate);\n                currentAccessCondition.startDate = dateToISOFormat(startDate);\n              }\n              if (!accessConditionOpt.hasEndDate) {\n                delete currentAccessCondition.endDate;\n              } else if (accessCondition.endDate) {\n                const endDate = this.retrieveValueFromField(accessCondition.endDate);\n                currentAccessCondition.endDate = dateToISOFormat(endDate);\n              }\n              accessConditionsToSave.push(currentAccessCondition);\n            }\n          });\n\n        this.operationsBuilder.add(this.pathCombiner.getPath('accessConditions'), accessConditionsToSave, true);\n      });\n    }\n  }\n\n  /**\n   * Method called when a form removeArrayItem event is fired.\n   * Dispatch remove form operations based on changes.\n   */\n  onRemove(event: DynamicFormControlEvent) {\n    const fieldIndex = this.formOperationsService.getArrayIndexFromEvent(event);\n    const fieldPath = 'accessConditions/' + fieldIndex;\n\n    this.operationsBuilder.remove(this.pathCombiner.getPath(fieldPath));\n  }\n\n  /**\n   * Unsubscribe from all subscriptions\n   */\n  onSectionDestroy() {\n    this.subs\n      .filter((subscription) => hasValue(subscription))\n      .forEach((subscription) => subscription.unsubscribe());\n  }\n\n  /**\n   * Initialize all instance variables and retrieve collection default access conditions\n   */\n  protected onSectionInit(): void {\n\n    this.pathCombiner = new JsonPatchOperationPathCombiner('sections', this.sectionData.id);\n    this.formId = this.formService.getUniqueId(this.sectionData.id);\n    const config$ = this.accessesConfigService.findByHref(this.sectionData.config, true, false).pipe(\n      getFirstSucceededRemoteData(),\n      map((config) => config.payload),\n    );\n\n    const accessData$ = this.accessesService.getAccessesData(this.submissionId, this.sectionData.id);\n\n    combineLatest([config$, accessData$]).subscribe(([config, accessData]) => {\n      this.availableAccessConditionOptions = isNotEmpty(config.accessConditionOptions) ? config.accessConditionOptions : [];\n      this.canChangeDiscoverable = !!config.canChangeDiscoverable;\n      this.accessesData = accessData;\n      this.formModel = this.buildFileEditForm();\n    });\n\n\n  }\n\n  /**\n   * Get section status\n   *\n   * @return Observable<boolean>\n   *     the section status\n   */\n  protected getSectionStatus(): Observable<boolean> {\n    return of(true);\n  }\n\n  /**\n   * Initialize form model\n   */\n  protected buildFileEditForm() {\n\n    const formModel: DynamicFormControlModel[] = [];\n    if (this.canChangeDiscoverable) {\n      const discoverableCheckboxConfig = Object.assign({}, ACCESS_FORM_CHECKBOX_CONFIG, {\n        label: this.translate.instant('submission.sections.accesses.form.discoverable-label'),\n        hint: this.translate.instant('submission.sections.accesses.form.discoverable-description'),\n        value: this.accessesData.discoverable,\n      });\n      formModel.push(\n        new DynamicCheckboxModel(discoverableCheckboxConfig, ACCESS_FORM_CHECKBOX_LAYOUT),\n      );\n    }\n\n    const accessConditionTypeModelConfig = Object.assign({}, FORM_ACCESS_CONDITION_TYPE_CONFIG);\n    const accessConditionsArrayConfig = Object.assign({}, ACCESS_CONDITIONS_FORM_ARRAY_CONFIG);\n    const accessConditionTypeOptions = [];\n\n    for (const accessCondition of this.availableAccessConditionOptions) {\n      accessConditionTypeOptions.push(\n        {\n          label: accessCondition.name,\n          value: accessCondition.name,\n        },\n      );\n    }\n    accessConditionTypeModelConfig.options = accessConditionTypeOptions;\n\n    // Dynamically assign of relation in config. For startDate and endDate.\n    const startDateCondition: DynamicFormControlCondition[] = [];\n    const endDateCondition: DynamicFormControlCondition[] = [];\n    let maxStartDate: DynamicDateControlValue;\n    let maxEndDate: DynamicDateControlValue;\n    this.availableAccessConditionOptions.forEach((condition) => {\n\n      if (condition.hasStartDate) {\n        startDateCondition.push({ id: 'name', value: condition.name });\n        if (condition.maxStartDate) {\n          const min = new Date(condition.maxStartDate);\n          maxStartDate = {\n            year: min.getUTCFullYear(),\n            month: min.getUTCMonth() + 1,\n            day: min.getUTCDate(),\n          };\n        }\n      }\n      if (condition.hasEndDate) {\n        endDateCondition.push({ id: 'name', value: condition.name });\n        if (condition.maxEndDate) {\n          const max = new Date(condition.maxEndDate);\n          maxEndDate = {\n            year: max.getUTCFullYear(),\n            month: max.getUTCMonth() + 1,\n            day: max.getUTCDate(),\n          };\n        }\n      }\n    });\n    const confStart = { relations: [{ match: MATCH_ENABLED, operator: OR_OPERATOR, when: startDateCondition }] };\n    const confEnd = { relations: [{ match: MATCH_ENABLED, operator: OR_OPERATOR, when: endDateCondition }] };\n    const hasStartDate = startDateCondition.length > 0;\n    const hasEndDate = endDateCondition.length > 0;\n\n    accessConditionsArrayConfig.groupFactory = () => {\n      const type = new DynamicSelectModel(accessConditionTypeModelConfig, FORM_ACCESS_CONDITION_TYPE_LAYOUT);\n      const startDateConfig = Object.assign({}, FORM_ACCESS_CONDITION_START_DATE_CONFIG, confStart);\n      if (maxStartDate) {\n        startDateConfig.max = maxStartDate;\n      }\n\n      const endDateConfig = Object.assign({}, FORM_ACCESS_CONDITION_END_DATE_CONFIG, confEnd);\n      if (maxEndDate) {\n        endDateConfig.max = maxEndDate;\n      }\n\n      const startDate = new DynamicDatePickerModel(startDateConfig, FORM_ACCESS_CONDITION_START_DATE_LAYOUT);\n      const endDate = new DynamicDatePickerModel(endDateConfig, FORM_ACCESS_CONDITION_END_DATE_LAYOUT);\n      const accessConditionGroupConfig = Object.assign({}, ACCESS_CONDITION_GROUP_CONFIG);\n      accessConditionGroupConfig.group = [type];\n      if (hasStartDate) {\n        accessConditionGroupConfig.group.push(startDate);\n      }\n      if (hasEndDate) {\n        accessConditionGroupConfig.group.push(endDate);\n      }\n      return [new DynamicFormGroupModel(accessConditionGroupConfig, ACCESS_CONDITION_GROUP_LAYOUT)];\n    };\n\n    // Number of access conditions blocks in form\n    accessConditionsArrayConfig.initialCount = isNotEmpty(this.accessesData.accessConditions) ? this.accessesData.accessConditions.length : 1;\n    formModel.push(\n      new DynamicFormArrayModel(accessConditionsArrayConfig, ACCESS_CONDITIONS_FORM_ARRAY_LAYOUT),\n    );\n\n    this.initModelData(formModel);\n    return formModel;\n  }\n\n  protected retrieveValueFromField(field: any) {\n    const temp = Array.isArray(field) ? field[0] : field;\n    return (temp) ? temp.value : undefined;\n  }\n\n}\n","<ds-form *ngIf=\"!!formModel\" #formRef=\"formComponent\"\n         [formId]=\"formId\"\n         [formModel]=\"formModel\"\n         [displaySubmit]=\"false\"\n         [displayCancel]=\"false\"\n         (dfChange)=\"onChange($event)\"\n         (removeArrayItem)=\"onRemove($event)\"></ds-form>\n","import {\n  DynamicDatePickerModelConfig,\n  DynamicFormArrayModelConfig,\n  DynamicFormControlLayout,\n  DynamicFormGroupModelConfig,\n  DynamicSelectModelConfig,\n  MATCH_ENABLED,\n  OR_OPERATOR,\n} from '@ng-dynamic-forms/core';\nimport { DynamicCheckboxModelConfig } from '@ng-dynamic-forms/core/lib/model/checkbox/dynamic-checkbox.model';\n\n\nexport const ACCESS_FORM_CHECKBOX_CONFIG: DynamicCheckboxModelConfig = {\n  id: 'discoverable',\n  name: 'discoverable',\n};\n\nexport const ACCESS_FORM_CHECKBOX_LAYOUT = {\n\n  element: {\n    container: 'custom-control custom-checkbox pl-1',\n    control: 'custom-control-input',\n    label: 'custom-control-label pt-1',\n  },\n};\n\nexport const ACCESS_CONDITION_GROUP_CONFIG: DynamicFormGroupModelConfig = {\n  id: 'accessConditionGroup',\n  group: [],\n};\n\nexport const ACCESS_CONDITION_GROUP_LAYOUT: DynamicFormControlLayout = {\n  element: {\n    host: 'form-group access-condition-group col',\n    container: 'pl-1 pr-1',\n    control: 'form-row ',\n  },\n};\n\nexport const ACCESS_CONDITIONS_FORM_ARRAY_CONFIG: DynamicFormArrayModelConfig = {\n  id: 'accessCondition',\n  groupFactory: null,\n};\nexport const ACCESS_CONDITIONS_FORM_ARRAY_LAYOUT: DynamicFormControlLayout = {\n  grid: {\n    group: 'form-row pt-4',\n  },\n};\n\nexport const FORM_ACCESS_CONDITION_TYPE_CONFIG: DynamicSelectModelConfig<any> = {\n  id: 'name',\n  label: 'submission.sections.accesses.form.access-condition-label',\n  hint: 'submission.sections.accesses.form.access-condition-hint',\n  options: [],\n};\nexport const FORM_ACCESS_CONDITION_TYPE_LAYOUT: DynamicFormControlLayout = {\n  element: {\n    host: 'col-12',\n    label: 'col-form-label name-label',\n  },\n};\n\nexport const FORM_ACCESS_CONDITION_START_DATE_CONFIG: DynamicDatePickerModelConfig = {\n  id: 'startDate',\n  label: 'submission.sections.accesses.form.from-label',\n  hint: 'submission.sections.accesses.form.from-hint',\n  placeholder: 'submission.sections.accesses.form.from-placeholder',\n  inline: false,\n  toggleIcon: 'far fa-calendar-alt',\n  relations: [\n    {\n      match: MATCH_ENABLED,\n      operator: OR_OPERATOR,\n      when: [],\n    },\n  ],\n  required: true,\n  validators: {\n    required: null,\n  },\n  errorMessages: {\n    required: 'submission.sections.accesses.form.date-required-from',\n  },\n};\nexport const FORM_ACCESS_CONDITION_START_DATE_LAYOUT: DynamicFormControlLayout = {\n  element: {\n    label: 'col-form-label',\n  },\n  grid: {\n    host: 'col-6',\n  },\n};\n\nexport const FORM_ACCESS_CONDITION_END_DATE_CONFIG: DynamicDatePickerModelConfig = {\n  id: 'endDate',\n  label: 'submission.sections.accesses.form.until-label',\n  hint: 'submission.sections.accesses.form.until-hint',\n  placeholder: 'submission.sections.accesses.form.until-placeholder',\n  inline: false,\n  toggleIcon: 'far fa-calendar-alt',\n  relations: [\n    {\n      match: MATCH_ENABLED,\n      operator: OR_OPERATOR,\n      when: [],\n    },\n  ],\n  required: true,\n  validators: {\n    required: null,\n  },\n  errorMessages: {\n    required: 'submission.sections.accesses.form.date-required-until',\n  },\n};\nexport const FORM_ACCESS_CONDITION_END_DATE_LAYOUT: DynamicFormControlLayout = {\n  element: {\n    label: 'col-form-label',\n  },\n  grid: {\n    host: 'col-6',\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n} from 'rxjs/operators';\n\nimport { WorkspaceitemSectionAccessesObject } from '../../../core/submission/models/workspaceitem-section-accesses.model';\nimport { isNotUndefined } from '../../../shared/empty.util';\nimport { submissionSectionDataFromIdSelector } from '../../selectors';\nimport { SubmissionState } from '../../submission.reducers';\n\n/**\n * A service that provides methods to handle submission item's accesses condition state.\n */\n@Injectable({ providedIn: 'root' })\nexport class SectionAccessesService {\n\n  /**\n   * Initialize service variables\n   *\n   * @param {Store<SubmissionState>} store\n   */\n  constructor(private store: Store<SubmissionState>) { }\n\n\n  /**\n   * Return item's accesses condition state.\n   *\n   * @param submissionId\n   *    The submission id\n   * @param sectionId\n   *    The section id\n   * @returns {Observable}\n   *    Emits bitstream's metadata\n   */\n  public getAccessesData(submissionId: string, sectionId: string): Observable<WorkspaceitemSectionAccessesObject> {\n\n    return this.store.select(submissionSectionDataFromIdSelector(submissionId, sectionId)).pipe(\n      filter((state) => isNotUndefined(state)),\n      distinctUntilChanged());\n  }\n}\n","import {\n  AsyncPipe,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  Inject,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n  NgbDropdownModule,\n  NgbModal,\n  NgbModalRef,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport {\n  Observable,\n  of as observableOf,\n  Subscription,\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  take,\n  tap,\n} from 'rxjs/operators';\n\nimport { ConfigurationDataService } from '../../../core/data/configuration-data.service';\nimport { FindListOptions } from '../../../core/data/find-list-options.model';\nimport { JsonPatchOperationPathCombiner } from '../../../core/json-patch/builder/json-patch-operation-path-combiner';\nimport { JsonPatchOperationsBuilder } from '../../../core/json-patch/builder/json-patch-operations-builder';\nimport {\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteDataPayload,\n  getRemoteDataPayload,\n} from '../../../core/shared/operators';\nimport {\n  Field,\n  Option,\n  SubmissionCcLicence,\n} from '../../../core/submission/models/submission-cc-license.model';\nimport { WorkspaceitemSectionCcLicenseObject } from '../../../core/submission/models/workspaceitem-section-cc-license.model';\nimport { SubmissionCcLicenseDataService } from '../../../core/submission/submission-cc-license-data.service';\nimport { SubmissionCcLicenseUrlDataService } from '../../../core/submission/submission-cc-license-url-data.service';\nimport { BtnDisabledDirective } from '../../../shared/btn-disabled.directive';\nimport { DsSelectComponent } from '../../../shared/ds-select/ds-select.component';\nimport { isNotEmpty } from '../../../shared/empty.util';\nimport { ThemedLoadingComponent } from '../../../shared/loading/themed-loading.component';\nimport { VarDirective } from '../../../shared/utils/var.directive';\nimport { SectionModelComponent } from '../models/section.model';\nimport { SectionDataObject } from '../models/section-data.model';\nimport { SectionsService } from '../sections.service';\nimport { SectionsType } from '../sections-type';\n\n/**\n * This component represents the submission section to select the Creative Commons license.\n */\n@Component({\n  selector: 'ds-submission-section-cc-licenses',\n  templateUrl: './submission-section-cc-licenses.component.html',\n  styleUrls: ['./submission-section-cc-licenses.component.scss'],\n  imports: [\n    TranslateModule,\n    NgIf,\n    ThemedLoadingComponent,\n    AsyncPipe,\n    VarDirective,\n    NgForOf,\n    DsSelectComponent,\n    NgbDropdownModule,\n    FormsModule,\n    InfiniteScrollModule,\n    BtnDisabledDirective,\n  ],\n  standalone: true,\n})\nexport class SubmissionSectionCcLicensesComponent extends SectionModelComponent {\n\n  /**\n   * The form id\n   * @type {string}\n   */\n  public formId: string;\n\n  /**\n   * A boolean representing if this section is loading\n   * @type {boolean}\n   */\n  public isLoading = true;\n\n  /**\n   * The [JsonPatchOperationPathCombiner] object\n   * @type {JsonPatchOperationPathCombiner}\n   */\n  protected pathCombiner: JsonPatchOperationPathCombiner;\n\n  /**\n   * The list of Subscriptions this component subscribes to.\n   */\n  private subscriptions: Subscription[] = [];\n\n  /**\n   * Cache of the available Creative Commons licenses.\n   */\n  submissionCcLicenses: SubmissionCcLicence[] = [];\n\n  /**\n   * Reference to NgbModal\n   */\n  protected modalRef: NgbModalRef;\n\n  /**\n   * Default jurisdiction configured\n   */\n  defaultJurisdiction: string;\n\n  /**\n   * The currently selected cc licence\n   */\n  selectedCcLicense: SubmissionCcLicence = new SubmissionCcLicence();\n\n  /**\n   * Options for paginated data loading\n   */\n  ccLicenceOptions: FindListOptions = {\n    elementsPerPage: 20,\n    currentPage: 1,\n  };\n  /**\n   * Check to stop paginated search\n   *\n   * @private\n   */\n  private _isLastPage: boolean;\n\n  /**\n   * The Creative Commons link saved in the workspace item.\n   */\n  get storedCcLicenseLink(): string {\n    return this.data.uri;\n  }\n\n  /**\n   * The accepted state for the selected Creative Commons license.\n   */\n  get accepted(): boolean {\n    if (this.data.accepted === undefined) {\n      return !!this.data.uri;\n    }\n    return this.data.accepted;\n  }\n\n  constructor(\n    protected modalService: NgbModal,\n    protected sectionService: SectionsService,\n    protected submissionCcLicensesDataService: SubmissionCcLicenseDataService,\n    protected submissionCcLicenseUrlDataService: SubmissionCcLicenseUrlDataService,\n    protected operationsBuilder: JsonPatchOperationsBuilder,\n    protected configService: ConfigurationDataService,\n    protected ref: ChangeDetectorRef,\n    @Inject('collectionIdProvider') public injectedCollectionId: string,\n    @Inject('sectionDataProvider') public injectedSectionData: SectionDataObject,\n    @Inject('submissionIdProvider') public injectedSubmissionId: string,\n  ) {\n    super(\n      injectedCollectionId,\n      injectedSectionData,\n      injectedSubmissionId,\n    );\n  }\n\n  /**\n   * The data of this section.\n   */\n  get data(): WorkspaceitemSectionCcLicenseObject {\n    return this.sectionData.data as WorkspaceitemSectionCcLicenseObject;\n  }\n\n  /**\n   * Select a given Creative Commons license.\n   * @param ccLicense the Creative Commons license to select.\n   */\n  selectCcLicense(ccLicense: SubmissionCcLicence) {\n    if (this.selectedCcLicense.id === ccLicense.id) {\n      return;\n    }\n    this.selectedCcLicense = ccLicense;\n    this.setAccepted(false);\n    this.updateSectionData({\n      ccLicense: {\n        id: ccLicense.id,\n        fields: {},\n      },\n      uri: undefined,\n    });\n  }\n\n  /**\n   * Get the selected Creative Commons license.\n   */\n  getSelectedCcLicense(): SubmissionCcLicence {\n    if (!this.submissionCcLicenses || !this.data.ccLicense) {\n      return null;\n    }\n    return this.submissionCcLicenses.filter((ccLicense) => ccLicense.id === this.data.ccLicense.id)[0];\n  }\n\n  /**\n   * Select an option for a given license field.\n   * @param ccLicense   the related Creative Commons license.\n   * @param field       the field for which to select an option.\n   * @param option      the option to select.\n   */\n  selectOption(ccLicense: SubmissionCcLicence, field: Field, option: Option) {\n    if (this.isSelectedOption(ccLicense, field, option)) {\n      return;\n    }\n    this.updateSectionData({\n      ccLicense: {\n        id: ccLicense.id,\n        fields: Object.assign({}, this.data.ccLicense.fields, {\n          [field.id]: option,\n        }),\n      },\n      accepted: false,\n    });\n  }\n\n  /**\n   * Get the selected option for a given license field.\n   * @param ccLicense   the related Creative Commons license.\n   * @param field       the field for which to get the selected option value.\n   */\n  getSelectedOption(ccLicense: SubmissionCcLicence, field: Field): Option {\n    if (field.id === 'jurisdiction' && this.defaultJurisdiction !== undefined && this.defaultJurisdiction !== 'none') {\n      return field.enums.find(option => option.id === this.defaultJurisdiction);\n    }\n    return this.data.ccLicense.fields[field.id];\n  }\n\n  /**\n   * Whether a given option is selected for a given Creative Commons license field.\n   * @param ccLicense   the related Creative Commons license.\n   * @param field       the field for which to check whether the option is selected.\n   * @param option      the option for which to check whether it is selected.\n   */\n  isSelectedOption(ccLicense: SubmissionCcLicence, field: Field, option: Option): boolean {\n    return this.getSelectedOption(ccLicense, field) && this.getSelectedOption(ccLicense, field).id === option.id;\n  }\n\n  /**\n   * Get the link to the Creative Commons license corresponding with the selected options.\n   */\n  getCcLicenseLink$(): Observable<string> {\n\n    if (this.storedCcLicenseLink) {\n      return observableOf(this.storedCcLicenseLink);\n    }\n    if (!this.getSelectedCcLicense() || this.getSelectedCcLicense().fields.some(\n      (field) => !this.getSelectedOption(this.getSelectedCcLicense(), field))) {\n      return undefined;\n    }\n    const selectedCcLicense = this.getSelectedCcLicense();\n    return this.submissionCcLicenseUrlDataService.getCcLicenseLink(\n      selectedCcLicense,\n      new Map(selectedCcLicense.fields.map(\n        (field) => [field, this.getSelectedOption(selectedCcLicense, field)],\n      )),\n    );\n  }\n\n  /**\n   * Open a given info modal.\n   * @param content   the modal content.\n   */\n  openInfoModal(content) {\n    this.modalRef = this.modalService.open(content);\n  }\n\n  /**\n   * Close the info modal.\n   */\n  closeInfoModal() {\n    this.modalRef.close();\n  }\n\n  /**\n   * Get section status\n   *\n   * @return Observable<boolean>\n   *     the section status\n   */\n  getSectionStatus(): Observable<boolean> {\n    return observableOf(this.accepted);\n  }\n\n  /**\n   * Unsubscribe from all subscriptions\n   */\n  onSectionDestroy(): void {\n    this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n  }\n\n  /**\n   * Initialize the section.\n   */\n  onSectionInit(): void {\n    this.pathCombiner = new JsonPatchOperationPathCombiner('sections', this.sectionData.id);\n    this.subscriptions.push(\n      this.sectionService.getSectionState(this.submissionId, this.sectionData.id, SectionsType.CcLicense).pipe(\n        filter((sectionState) => {\n          return isNotEmpty(sectionState) && (isNotEmpty(sectionState.data) || isNotEmpty(sectionState.errorsToShow));\n        }),\n        distinctUntilChanged(),\n        map((sectionState) => sectionState.data as WorkspaceitemSectionCcLicenseObject),\n      ).subscribe((data) => {\n        if (this.data.accepted !== data.accepted) {\n          const path = this.pathCombiner.getPath('uri');\n          if (data.accepted) {\n            this.getCcLicenseLink$().pipe(\n              take(1),\n            ).subscribe((link) => {\n              this.operationsBuilder.add(path, link.toString(), false, true);\n            });\n          } else if (this.data.uri) {\n            this.operationsBuilder.remove(path);\n          }\n        }\n        this.sectionData.data = data;\n      }),\n      this.configService.findByPropertyName('cc.license.jurisdiction').pipe(\n        getFirstCompletedRemoteData(),\n        getRemoteDataPayload(),\n      ).subscribe((remoteData) => {\n        if (remoteData === undefined || remoteData.values.length === 0) {\n          // No value configured, use blank value (International jurisdiction)\n          this.defaultJurisdiction = '';\n        } else {\n          this.defaultJurisdiction = remoteData.values[0];\n        }\n      }),\n    );\n    this.loadCcLicences();\n  }\n\n  /**\n   * Set the accepted state for the Creative Commons license.\n   * @param accepted  the accepted state for the cc license.\n   */\n  setAccepted(accepted: boolean) {\n    this.updateSectionData({\n      accepted,\n    });\n    this.updateSectionStatus();\n  }\n\n  /**\n   * Update the section data for this section.\n   */\n  updateSectionData(data: WorkspaceitemSectionCcLicenseObject) {\n    this.sectionService.updateSectionData(this.submissionId, this.sectionData.id, Object.assign({}, this.data, data));\n  }\n\n  onScroll(event) {\n    if (event.target.scrollTop + event.target.clientHeight >= event.target.scrollHeight) {\n      if (!this.isLoading && !this._isLastPage) {\n        this.ccLicenceOptions.currentPage++;\n        this.loadCcLicences();\n      }\n    }\n  }\n\n  loadCcLicences() {\n    this.isLoading = true;\n\n    this.subscriptions.push(\n      this.submissionCcLicensesDataService.findAll(this.ccLicenceOptions).pipe(\n        getFirstSucceededRemoteDataPayload(),\n        tap((response) => this._isLastPage = response.pageInfo.currentPage === response.pageInfo.totalPages),\n        map((list) => list.page),\n      ).subscribe(\n        (licenses) => {\n          this.submissionCcLicenses = [...this.submissionCcLicenses, ...licenses];\n          this.isLoading = false;\n          this.ref.detectChanges();\n        },\n      ),\n    );\n  }\n}\n","@if (submissionCcLicenses) {\n  <div class=\"mb-4 ccLicense-select\">\n    <div ngbDropdown>\n      <input id=\"cc-license-dropdown\"\n             class=\"form-control\"\n             [(ngModel)]=\"selectedCcLicense.name\"\n             placeholder=\"{{ !storedCcLicenseLink ? ('submission.sections.ccLicense.select' | translate) : ('submission.sections.ccLicense.change' | translate)}}\"\n             [ngModelOptions]=\"{standalone: true}\"\n             ngbDropdownToggle\n             role=\"combobox\"\n             #script=\"ngModel\">\n      <div ngbDropdownMenu aria-labelledby=\"cc-license-dropdown\" class=\"w-100 scrollable-menu\"\n           role=\"menu\"\n           infiniteScroll\n           (scroll)=\"onScroll($event)\"\n           [infiniteScrollDistance]=\"5\"\n           [infiniteScrollThrottle]=\"300\"\n           [infiniteScrollUpDistance]=\"1.5\"\n           [fromRoot]=\"true\"\n           [scrollWindow]=\"false\">\n\n        @if(submissionCcLicenses?.length === 0) {\n          <button class=\"dropdown-item disabled\">\n            {{ 'submission.sections.ccLicense.none' | translate }}\n          </button>\n        } @else {\n          @for(license of submissionCcLicenses; track license.id) {\n            <button class=\"dropdown-item\" (click)=\"selectCcLicense(license)\">\n              {{ license.name }}\n            </button>\n          }\n        }\n      </div>\n  </div>\n  </div>\n}\n\n<ng-container *ngIf=\"getSelectedCcLicense()\">\n\n  <div *ngFor=\"let field of getSelectedCcLicense().fields\"\n       class=\"mb-4\">\n\n    <div class=\"d-flex flex-row\">\n      <div class=\"font-weight-bold {{ field.id }}\">\n        {{ field.label }}\n      </div>\n      <button\n        class=\"btn btn-outline-info btn-sm ml-2\"\n        (click)=\"openInfoModal(infoModal)\">\n        <i class=\"fas fa-question\"></i>\n      </button>\n    </div>\n\n    <ng-template #infoModal>\n\n      <div>\n\n        <div class=\"modal-header mb-4 \">\n          <div>\n            <h4>\n              {{ field.label }}\n            </h4>\n            <div [innerHTML]=\"field.description\"></div>\n          </div>\n          <button type=\"button\" class=\"close\"\n                  (click)=\"closeInfoModal()\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">×</span>\n          </button>\n        </div>\n\n        <div class=\"modal-body\">\n          <div *ngFor=\"let value of field.enums\"\n               class=\"mb-4\">\n            <h5>\n              {{ value.label }}\n            </h5>\n            <div [innerHTML]=\"value.description\" class=\"font-weight-light\"></div>\n          </div>\n        </div>\n\n      </div>\n\n    </ng-template>\n\n    <ds-select *ngIf=\"field.enums?.length > 5\" [disabled]=\"field.id === 'jurisdiction' && defaultJurisdiction !== undefined && defaultJurisdiction !== 'none'\">\n      <ng-container class=\"selection\" *ngVar=\"getSelectedOption(getSelectedCcLicense(), field) as option\">\n        <span *ngIf=\"option\">\n          {{ option.label }}\n        </span>\n        <span *ngIf=\"!option\">\n          {{ 'submission.sections.ccLicense.option.select' | translate }}\n        </span>\n      </ng-container>\n      <ng-container class=\"menu\">\n        <div class=\"options-select-menu overflow-auto\">\n          <button *ngFor=\"let option of field.enums\"\n                  class=\"dropdown-item\"\n                  (click)=\"selectOption(getSelectedCcLicense(), field, option)\">\n            {{ option.label }}\n          </button>\n        </div>\n      </ng-container>\n    </ds-select>\n\n    <ng-container *ngIf=\"field.enums?.length <= 5\">\n      <div *ngFor=\"let option of field.enums\"\n           class=\"d-flex flex-row m-1\">\n        <div (click)=\"selectOption(getSelectedCcLicense(), field, option)\">\n          <input type=\"radio\"\n                 title=\"{{ option.label }}\"\n                 class=\"mr-1\"\n                 [checked]=\"isSelectedOption(getSelectedCcLicense(), field, option)\">\n          <span>{{ option.label }}</span>\n        </div>\n      </div>\n    </ng-container>\n\n  </div>\n\n</ng-container>\n\n<ng-container *ngIf=\"getCcLicenseLink$()\">\n  <ng-container *ngVar=\"getCcLicenseLink$() | async as licenseLink\">\n    <div *ngIf=\"!licenseLink\">\n      <ds-loading></ds-loading>\n    </div>\n    <div *ngIf=\"licenseLink\"\n         class=\"mt-2 p-4 bg-light text-dark\">\n      <div>\n        {{ 'submission.sections.ccLicense.link' | translate }}\n      </div>\n      <a class=\"license-link\" href=\"{{ licenseLink }}\" target=\"_blank\" rel=\"noopener noreferrer\">\n        {{ licenseLink }}\n      </a>\n      <div class=\"m-2\">\n        <div (click)=\"setAccepted(!accepted)\">\n          <input type=\"checkbox\"\n                 class=\"mr-2\"\n                 title=\"accepted\"\n                 [checked]=\"accepted\">\n          <span> {{ 'submission.sections.ccLicense.confirmation' | translate }}</span>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n","import {\n  AsyncPipe,\n  NgClass,\n  NgComponentOutlet,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  Injector,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { NgbAccordionModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { AlertComponent } from '../../../shared/alert/alert.component';\nimport { AlertType } from '../../../shared/alert/alert-type';\nimport { SectionDataObject } from '../models/section-data.model';\nimport { SectionsDirective } from '../sections.directive';\nimport { rendersSectionType } from '../sections-decorator';\n\n/**\n * This component represents a section that contains the submission license form.\n */\n@Component({\n  selector: 'ds-submission-section-container',\n  templateUrl: './section-container.component.html',\n  styleUrls: ['./section-container.component.scss'],\n  imports: [\n    AlertComponent,\n    NgForOf,\n    NgbAccordionModule,\n    NgComponentOutlet,\n    TranslateModule,\n    NgClass,\n    NgIf,\n    AsyncPipe,\n    SectionsDirective,\n  ],\n  standalone: true,\n})\nexport class SubmissionSectionContainerComponent implements OnInit {\n\n  /**\n   * The collection id this submission belonging to\n   * @type {string}\n   */\n  @Input() collectionId: string;\n\n  /**\n   * The section data\n   * @type {SectionDataObject}\n   */\n  @Input() sectionData: SectionDataObject;\n\n  /**\n   * The submission id\n   * @type {string}\n   */\n  @Input() submissionId: string;\n\n  /**\n   * The AlertType enumeration\n   * @type {AlertType}\n   */\n  public AlertTypeEnum = AlertType;\n\n  /**\n   * Injector to inject a section component with the @Input parameters\n   * @type {Injector}\n   */\n  public objectInjector: Injector;\n\n  /**\n   * The SectionsDirective reference\n   */\n  @ViewChild('sectionRef') sectionRef: SectionsDirective;\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {Injector} injector\n   */\n  constructor(private injector: Injector) {\n  }\n\n  /**\n   * Initialize all instance variables\n   */\n  ngOnInit() {\n    this.objectInjector = Injector.create({\n      providers: [\n        { provide: 'collectionIdProvider', useFactory: () => (this.collectionId), deps: [] },\n        { provide: 'sectionDataProvider', useFactory: () => (this.sectionData), deps: [] },\n        { provide: 'submissionIdProvider', useFactory: () => (this.submissionId), deps: [] },\n      ],\n      parent: this.injector,\n    });\n  }\n\n  /**\n   * Remove section from submission form\n   *\n   * @param event\n   *    the event emitted\n   */\n  public removeSection(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.sectionRef.removeSection(this.submissionId, this.sectionData.id);\n  }\n\n  /**\n   * Find the correct component based on the section's type\n   */\n  getSectionContent() {\n    return rendersSectionType(this.sectionData.sectionType);\n  }\n}\n","<div dsSection #sectionRef=\"sectionRef\" [attr.id]=\"'section_' + sectionData.id\"\n  [ngClass]=\"{ 'section-focus' : sectionRef.isSectionActive() }\" [mandatory]=\"sectionData.mandatory\"\n  [submissionId]=\"submissionId\" [sectionType]=\"sectionData.sectionType\" [sectionId]=\"sectionData.id\">\n  <ngb-accordion #acc=\"ngbAccordion\" *ngIf=\"(sectionRef.isEnabled() | async)\"\n    (panelChange)=\"sectionRef.sectionChange($event)\" activeIds=\"{{ sectionData.id }}\" [destroyOnHide]=\"false\">\n    <ngb-panel id=\"{{ sectionData.id }}\" [type]=\"sectionRef.isInfo() ? 'info' : ''\">\n      <ng-template ngbPanelTitle>\n        <span [ngClass]=\"{ 'text-white' : sectionRef.isInfo()}\" class=\"float-left section-title\" tabindex=\"0\">{{\n          'submission.sections.'+sectionData.header | translate\n          }}</span>\n        <div class=\"d-inline-block float-right\">\n          <i *ngIf=\"(sectionRef.isValid() | async) !== true && !(sectionRef.hasErrors()) && !(sectionRef.isInfo())\"\n            class=\"fas fa-exclamation-circle text-warning mr-3\"\n            title=\"{{'submission.sections.status.warnings.title' | translate}}\" role=\"img\"\n            [attr.aria-label]=\"'submission.sections.status.warnings.aria' | translate\"></i>\n          <i *ngIf=\"(sectionRef.hasErrors()) && !(sectionRef.isInfo())\"\n            class=\"fas fa-exclamation-circle text-danger mr-3\"\n            title=\"{{'submission.sections.status.errors.title' | translate}}\" role=\"img\"\n            [attr.aria-label]=\"'submission.sections.status.errors.aria' | translate\"></i>\n          <i *ngIf=\"(sectionRef.isValid() | async) && !(sectionRef.hasErrors()) && !(sectionRef.isInfo())\"\n            class=\"fas fa-check-circle text-success mr-3\"\n            title=\"{{'submission.sections.status.valid.title' | translate}}\" role=\"img\"\n            [attr.aria-label]=\"'submission.sections.status.valid.aria' | translate\"></i>\n          <i *ngIf=\"sectionRef.isInfo()\" class=\"fas fa-info-circle mr-3 text-white\"\n            title=\"{{'submission.sections.status.info.title' | translate}}\" role=\"img\"\n            [attr.aria-label]=\"'submission.sections.status.info.aria' | translate\"></i>\n          <a class=\"close\" tabindex=\"0\" role=\"button\"\n            [attr.aria-label]=\"(sectionRef.isOpen() ? 'submission.sections.toggle.aria.close' : 'submission.sections.toggle.aria.open') | translate: {sectionHeader: ('submission.sections.'+sectionData.header | translate)}\"\n            [title]=\"(sectionRef.isOpen() ? 'submission.sections.toggle.close' : 'submission.sections.toggle.open') | translate\">\n            <span *ngIf=\"sectionRef.isOpen()\" [ngClass]=\"{ 'text-white' : sectionRef.isInfo()}\"\n              class=\"fas fa-chevron-up fa-fw\"></span>\n            <span *ngIf=\"!sectionRef.isOpen()\" class=\"fas fa-chevron-down fa-fw\"></span>\n          </a>\n          <a href=\"javascript:void(0);\" class=\"close mr-3\" *ngIf=\"!sectionRef.isMandatory()\"\n            (click)=\"removeSection($event)\">\n            <i class=\"fas fa-trash-o\" aria-hidden=\"true\" tabindex=\"0\"></i>\n          </a>\n        </div>\n      </ng-template>\n      <ng-template ngbPanelContent>\n        <div id=\"sectionGenericError_{{sectionData.id}}\" *ngIf=\"sectionRef.hasGenericErrors()\">\n          <ds-alert *ngFor=\"let error of sectionRef.getErrors(); let i = index\" [content]=\"error\" [dismissible]=\"true\"\n            [type]=\"AlertTypeEnum.Error\" (close)=\"sectionRef.removeError(i)\"></ds-alert>\n        </div>\n        <div id=\"sectionContent_{{sectionData.id}}\" (click)=\"sectionRef.setFocus($event)\">\n          <ng-container *ngComponentOutlet=\"getSectionContent(); injector: objectInjector;\"></ng-container>\n        </div>\n      </ng-template>\n    </ngb-panel>\n  </ngb-accordion>\n</div>\n","import {\n  AsyncPipe,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  OnInit,\n} from '@angular/core';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  Observable,\n  of as observableOf,\n  Subscription,\n} from 'rxjs';\n\nimport { Metadata } from '../../../core/shared/metadata.utils';\nimport { WorkspaceitemSectionDuplicatesObject } from '../../../core/submission/models/workspaceitem-section-duplicates.model';\nimport { URLCombiner } from '../../../core/url-combiner/url-combiner';\nimport { getItemModuleRoute } from '../../../item-page/item-page-routing-paths';\nimport { AlertType } from '../../../shared/alert/alert-type';\nimport { VarDirective } from '../../../shared/utils/var.directive';\nimport { SubmissionService } from '../../submission.service';\nimport { SectionModelComponent } from '../models/section.model';\nimport { SectionDataObject } from '../models/section-data.model';\nimport { SectionsService } from '../sections.service';\n\n/**\n * Detect duplicates step\n *\n * @author Kim Shepherd\n */\n@Component({\n  selector: 'ds-submission-section-duplicates',\n  templateUrl: './section-duplicates.component.html',\n  changeDetection: ChangeDetectionStrategy.Default,\n  imports: [\n    VarDirective,\n    NgIf,\n    AsyncPipe,\n    TranslateModule,\n    NgForOf,\n  ],\n  standalone: true,\n})\n\nexport class SubmissionSectionDuplicatesComponent extends SectionModelComponent implements OnInit {\n  protected readonly Metadata = Metadata;\n  /**\n   * The Alert categories.\n   * @type {AlertType}\n   */\n  public AlertTypeEnum = AlertType;\n\n  /**\n   * Variable to track if the section is loading.\n   * @type {boolean}\n   */\n  public isLoading = true;\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  protected subs: Subscription[] = [];\n\n  /**\n   * Initialize instance variables.\n   *\n   * @param {TranslateService} translate\n   * @param {SectionsService} sectionService\n   * @param {SubmissionService} submissionService\n   * @param {string} injectedCollectionId\n   * @param {SectionDataObject} injectedSectionData\n   * @param {string} injectedSubmissionId\n   */\n  constructor(protected translate: TranslateService,\n              protected sectionService: SectionsService,\n              protected submissionService: SubmissionService,\n              @Inject('collectionIdProvider') public injectedCollectionId: string,\n              @Inject('sectionDataProvider') public injectedSectionData: SectionDataObject,\n              @Inject('submissionIdProvider') public injectedSubmissionId: string) {\n    super(injectedCollectionId, injectedSectionData, injectedSubmissionId);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  /**\n   * Initialize all instance variables and retrieve configuration.\n   */\n  onSectionInit() {\n    this.isLoading = false;\n  }\n\n  /**\n   * Check if identifier section has read-only visibility\n   */\n  isReadOnly(): boolean {\n    return true;\n  }\n\n  /**\n   * Unsubscribe from all subscriptions, if needed.\n   */\n  onSectionDestroy(): void {\n    return;\n  }\n\n  /**\n   * Get section status. Because this simple component never requires human interaction, this is basically\n   * always going to be the opposite of \"is this section still loading\". This is not the place for API response\n   * error checking but determining whether the step can 'proceed'.\n   *\n   * @return Observable<boolean>\n   *     the section status\n   */\n  public getSectionStatus(): Observable<boolean> {\n    return observableOf(!this.isLoading);\n  }\n\n  /**\n   * Get duplicate data as observable from the section data\n   */\n  public getDuplicateData(): Observable<WorkspaceitemSectionDuplicatesObject> {\n    return this.sectionService.getSectionData(this.submissionId, this.sectionData.id, this.sectionData.sectionType) as\n      Observable<WorkspaceitemSectionDuplicatesObject>;\n  }\n\n  /**\n   * Construct and return an item link for use with a preview item stub\n   * @param uuid\n   */\n  public getItemLink(uuid: any) {\n    return new URLCombiner(getItemModuleRoute(), uuid).toString();\n  }\n\n\n}\n","<!--\nTemplate for the detect duplicates submission section component\n@author Kim Shepherd\n-->\n<div class=\"text-sm-left\" *ngVar=\"(this.getDuplicateData() | async) as data\">\n  <ng-container *ngIf=\"data?.potentialDuplicates.length === 0\">\n    <div class=\"alert alert-success w-100\">{{ 'submission.sections.duplicates.none' | translate }}</div>\n  </ng-container>\n    <ng-container *ngIf=\"data?.potentialDuplicates.length > 0\">\n      <div class=\"alert alert-warning w-100\">{{ 'submission.sections.duplicates.detected' | translate }}</div>\n      <div *ngFor=\"let dupe of data?.potentialDuplicates\" class=\"ds-duplicate\">\n        <a target=\"_blank\" [href]=\"getItemLink(dupe.uuid)\">{{dupe.title}}</a>\n        <div *ngFor=\"let metadatum of Metadata.toViewModelList(dupe.metadata)\">\n          {{('item.preview.' + metadatum.key) | translate}} {{metadatum.value}}\n        </div>\n        <p *ngIf=\"dupe.workspaceItemId\">{{ 'submission.sections.duplicates.in-workspace' | translate }}</p>\n        <p *ngIf=\"dupe.workflowItemId\">{{ 'submission.sections.duplicates.in-workflow' | translate }}</p>\n      </div>\n    </ng-container>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  DYNAMIC_FORM_CONTROL_TYPE_ARRAY,\n  DYNAMIC_FORM_CONTROL_TYPE_GROUP,\n  DynamicFormArrayGroupModel,\n  DynamicFormControlEvent,\n  DynamicFormControlModel,\n  isDynamicFormControlEvent,\n} from '@ng-dynamic-forms/core';\nimport { deepClone } from 'fast-json-patch';\nimport isEqual from 'lodash/isEqual';\nimport isObject from 'lodash/isObject';\n\nimport { JsonPatchOperationPathCombiner } from '../../../core/json-patch/builder/json-patch-operation-path-combiner';\nimport { JsonPatchOperationsBuilder } from '../../../core/json-patch/builder/json-patch-operations-builder';\nimport { VocabularyEntry } from '../../../core/submission/vocabularies/models/vocabulary-entry.model';\nimport { VocabularyEntryDetail } from '../../../core/submission/vocabularies/models/vocabulary-entry-detail.model';\nimport {\n  dateToString,\n  isNgbDateStruct,\n} from '../../../shared/date.util';\nimport {\n  hasValue,\n  isNotEmpty,\n  isNotNull,\n  isNotUndefined,\n  isNull,\n  isUndefined,\n} from '../../../shared/empty.util';\nimport { DsDynamicInputModel } from '../../../shared/form/builder/ds-dynamic-form-ui/models/ds-dynamic-input.model';\nimport { DynamicQualdropModel } from '../../../shared/form/builder/ds-dynamic-form-ui/models/ds-dynamic-qualdrop.model';\nimport { DynamicRowArrayModel } from '../../../shared/form/builder/ds-dynamic-form-ui/models/ds-dynamic-row-array-model';\nimport { DynamicRelationGroupModel } from '../../../shared/form/builder/ds-dynamic-form-ui/models/relation-group/dynamic-relation-group.model';\nimport { FormBuilderService } from '../../../shared/form/builder/form-builder.service';\nimport { FormFieldLanguageValueObject } from '../../../shared/form/builder/models/form-field-language-value.model';\nimport { FormFieldMetadataValueObject } from '../../../shared/form/builder/models/form-field-metadata-value.model';\nimport { FormFieldPreviousValueObject } from '../../../shared/form/builder/models/form-field-previous-value-object';\n\n/**\n * The service handling all form section operations\n */\n@Injectable({ providedIn: 'root' })\nexport class SectionFormOperationsService {\n\n  /**\n   * Initialize service variables\n   *\n   * @param {FormBuilderService} formBuilder\n   * @param {JsonPatchOperationsBuilder} operationsBuilder\n   */\n  constructor(\n    private formBuilder: FormBuilderService,\n    private operationsBuilder: JsonPatchOperationsBuilder) {\n  }\n\n  /**\n   * Dispatch properly method based on form operation type\n   *\n   * @param pathCombiner\n   *    the [[JsonPatchOperationPathCombiner]] object for the specified operation\n   * @param event\n   *    the [[DynamicFormControlEvent]] for the specified operation\n   * @param previousValue\n   *    the [[FormFieldPreviousValueObject]] for the specified operation\n   * @param hasStoredValue\n   *    representing if field value related to the specified operation has stored value\n   */\n  public dispatchOperationsFromEvent(pathCombiner: JsonPatchOperationPathCombiner,\n    event: DynamicFormControlEvent,\n    previousValue: FormFieldPreviousValueObject,\n    hasStoredValue: boolean): void {\n    switch (event.type) {\n      case 'remove':\n        this.dispatchOperationsFromRemoveEvent(pathCombiner, event, previousValue);\n        break;\n      case 'change':\n        this.dispatchOperationsFromChangeEvent(pathCombiner, event, previousValue, hasStoredValue);\n        break;\n      case 'move':\n        this.dispatchOperationsFromMoveEvent(pathCombiner, event, previousValue);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Return index if specified field is part of fields array\n   *\n   * @param event\n   *    the [[DynamicFormControlEvent]] | CustomEvent for the specified operation\n   * @return number\n   *    the array index is part of array, zero otherwise\n   */\n  public getArrayIndexFromEvent(event: any): number {\n    let fieldIndex: number;\n\n    if (isNotEmpty(event)) {\n      if (isDynamicFormControlEvent(event)) {\n        // This is the case of a default insertItem/removeItem event\n\n        if (isNull(event.context)) {\n          // Check whether model is part of an Array of group\n          if (this.isPartOfArrayOfGroup(event.model)) {\n            fieldIndex = (event.model.parent as any).parent.index;\n          }\n        } else {\n          fieldIndex = event.context.index;\n        }\n\n      } else {\n        // This is the case of a custom event which contains indexes information\n        fieldIndex = event?.index as any;\n      }\n    }\n\n    // if field index is undefined model is not part of array of fields\n    return isNotUndefined(fieldIndex) ? fieldIndex : 0;\n  }\n\n  /**\n   * Check if specified model is part of array of group\n   *\n   * @param model\n   *    the [[DynamicFormControlModel]] model\n   * @return boolean\n   *    true if is part of array, false otherwise\n   */\n  public isPartOfArrayOfGroup(model: DynamicFormControlModel): boolean {\n    return (isNotNull(model.parent)\n      && (model.parent as any).type === DYNAMIC_FORM_CONTROL_TYPE_GROUP\n      && (model.parent as any).parent\n      && (model.parent as any).parent.context\n      && (model.parent as any).parent.context.type === DYNAMIC_FORM_CONTROL_TYPE_ARRAY);\n  }\n\n  /**\n   * Return a map for the values of a Qualdrop field\n   *\n   * @param event\n   *    the [[DynamicFormControlEvent]] for the specified operation\n   * @return Map<string, any>\n   *    the map of values\n   */\n  public getQualdropValueMap(event: DynamicFormControlEvent): Map<string, any> {\n    const metadataValueMap = new Map();\n\n    const context = this.formBuilder.isQualdropGroup(event.model)\n      ? (event.model.parent as DynamicFormArrayGroupModel).context\n      : (event.model.parent.parent as DynamicFormArrayGroupModel).context;\n\n    context.groups.forEach((arrayModel: DynamicFormArrayGroupModel) => {\n      const groupModel = arrayModel.group[0] as DynamicQualdropModel;\n      const metadataValueList = metadataValueMap.get(groupModel.qualdropId) ? metadataValueMap.get(groupModel.qualdropId) : [];\n      if (groupModel.value) {\n        metadataValueList.push(groupModel.value);\n        metadataValueMap.set(groupModel.qualdropId, metadataValueList);\n      }\n    });\n\n    return metadataValueMap;\n  }\n\n  /**\n   * Return the absolute path for the field interesting in the specified operation\n   *\n   * @param event\n   *    the [[DynamicFormControlEvent]] for the specified operation\n   * @return string\n   *    the field path\n   */\n  public getFieldPathFromEvent(event: DynamicFormControlEvent): string {\n    const fieldIndex = this.getArrayIndexFromEvent(event);\n    const fieldId = this.getFieldPathSegmentedFromChangeEvent(event);\n    return (isNotUndefined(fieldIndex)) ? fieldId + '/' + fieldIndex : fieldId;\n  }\n\n  /**\n   * Return the absolute path for the Qualdrop field interesting in the specified operation\n   *\n   * @param event\n   *    the [[DynamicFormControlEvent]] for the specified operation\n   * @return string\n   *    the field path\n   */\n  public getQualdropItemPathFromEvent(event: DynamicFormControlEvent): string {\n    const fieldIndex = this.getArrayIndexFromEvent(event);\n    const metadataValueMap = new Map();\n    let path = null;\n\n    const context = this.formBuilder.isQualdropGroup(event.model)\n      ? (event.model.parent as DynamicFormArrayGroupModel).context\n      : (event.model.parent.parent as DynamicFormArrayGroupModel).context;\n\n    context.groups.forEach((arrayModel: DynamicFormArrayGroupModel, index: number) => {\n      const groupModel = arrayModel.group[0] as DynamicQualdropModel;\n      const metadataValueList = metadataValueMap.get(groupModel.qualdropId) ? metadataValueMap.get(groupModel.qualdropId) : [];\n      if (groupModel.value) {\n        metadataValueList.push(groupModel.value);\n        metadataValueMap.set(groupModel.qualdropId, metadataValueList);\n      }\n      if (index === fieldIndex) {\n        path = groupModel.qualdropId + '/' + (metadataValueList.length - 1);\n      }\n    });\n\n    return path;\n  }\n\n  /**\n   * Return the segmented path for the field interesting in the specified change operation\n   *\n   * @param event\n   *    the [[DynamicFormControlEvent]] for the specified operation\n   * @return string\n   *    the field path\n   */\n  public getFieldPathSegmentedFromChangeEvent(event: DynamicFormControlEvent): string {\n    let fieldId;\n    if (this.formBuilder.isQualdropGroup(event.model as DynamicFormControlModel)) {\n      fieldId = (event.model as any).qualdropId;\n    } else if (this.formBuilder.isQualdropGroup(event.model.parent as DynamicFormControlModel)) {\n      fieldId = (event.model.parent as any).qualdropId;\n    } else {\n      fieldId = this.formBuilder.getId(event.model);\n    }\n    return fieldId;\n  }\n\n  /**\n   * Return the value of the field interesting in the specified change operation\n   *\n   * @param event\n   *    the [[DynamicFormControlEvent]] for the specified operation\n   * @return any\n   *    the field value\n   */\n  public getFieldValueFromChangeEvent(event: DynamicFormControlEvent): any {\n    let fieldValue;\n    const value = (event.model as any).value;\n\n    if (this.formBuilder.isModelInCustomGroup(event.model)) {\n      fieldValue = (event.model.parent as any).value;\n    } else if (this.formBuilder.isRelationGroup(event.model)) {\n      fieldValue = (event.model as DynamicRelationGroupModel).getGroupValue();\n    } else if ((event.model as any).hasLanguages) {\n      const language = (event.model as any).language;\n      if ((event.model as DsDynamicInputModel).hasAuthority) {\n        if (Array.isArray(value)) {\n          value.forEach((authority, index) => {\n            authority = Object.assign(new VocabularyEntry(), authority, { language });\n            value[index] = authority;\n          });\n          fieldValue = value;\n        } else {\n          fieldValue = Object.assign(new VocabularyEntry(), value, { language });\n        }\n      } else {\n        // Language without Authority (input, textArea)\n        fieldValue = new FormFieldMetadataValueObject(value, language);\n      }\n    } else if (isNgbDateStruct(value)) {\n      fieldValue = new FormFieldMetadataValueObject(dateToString(value));\n    } else if (value instanceof FormFieldLanguageValueObject || value instanceof VocabularyEntry\n      || value instanceof VocabularyEntryDetail || isObject(value)) {\n      fieldValue = value;\n    } else {\n      fieldValue = new FormFieldMetadataValueObject(value);\n    }\n\n    return fieldValue;\n  }\n\n  /**\n   * Return a map for the values of an array of field\n   *\n   * @param items\n   *    the list of items\n   * @return Map<string, any>\n   *    the map of values\n   */\n  public getValueMap(items: any[]): Map<string, any> {\n    const metadataValueMap = new Map();\n\n    items.forEach((item) => {\n      Object.keys(item)\n        .forEach((key) => {\n          const metadataValueList = metadataValueMap.get(key) ? metadataValueMap.get(key) : [];\n          metadataValueList.push(item[key]);\n          metadataValueMap.set(key, metadataValueList);\n        });\n\n    });\n    return metadataValueMap;\n  }\n\n  /**\n   * Handle form remove operations\n   *\n   * @param pathCombiner\n   *    the [[JsonPatchOperationPathCombiner]] object for the specified operation\n   * @param event\n   *    the [[DynamicFormControlEvent]] for the specified operation\n   * @param previousValue\n   *    the [[FormFieldPreviousValueObject]] for the specified operation\n   */\n  protected dispatchOperationsFromRemoveEvent(pathCombiner: JsonPatchOperationPathCombiner,\n    event: DynamicFormControlEvent,\n    previousValue: FormFieldPreviousValueObject): void {\n\n    const path = this.getFieldPathFromEvent(event);\n    const value = this.getFieldValueFromChangeEvent(event);\n    if (this.formBuilder.isQualdropGroup(event.model as DynamicFormControlModel)) {\n      this.dispatchOperationsFromMap(this.getQualdropValueMap(event), pathCombiner, event, previousValue);\n    } else if (event.context && event.context instanceof DynamicFormArrayGroupModel) {\n      // Model is a DynamicRowArrayModel\n      this.handleArrayGroupPatch(pathCombiner, event, (event as any).context.context, previousValue);\n    } else if ((isNotEmpty(value) && typeof value === 'string') || (isNotEmpty(value) && value instanceof FormFieldMetadataValueObject && value.hasValue())) {\n      this.operationsBuilder.remove(pathCombiner.getPath(path));\n    }\n  }\n\n  /**\n   * Handle form add operations\n   *\n   * @param pathCombiner\n   *    the [[JsonPatchOperationPathCombiner]] object for the specified operation\n   * @param event\n   *    the [[DynamicFormControlEvent]] for the specified operation\n   */\n  protected dispatchOperationsFromAddEvent(\n    pathCombiner: JsonPatchOperationPathCombiner,\n    event: DynamicFormControlEvent,\n  ): void {\n    const path = this.getFieldPathSegmentedFromChangeEvent(event);\n    const value = deepClone(this.getFieldValueFromChangeEvent(event));\n    if (isNotEmpty(value)) {\n      value.place = this.getArrayIndexFromEvent(event);\n      if (hasValue(event.group) && hasValue(event.group.value)) {\n        const valuesInGroup = event.group.value\n          .map((g) => Object.values(g))\n          .reduce((accumulator, currentValue) => accumulator.concat(currentValue))\n          .filter((v) => isNotEmpty(v));\n        if (valuesInGroup.length === 1) {\n          // The first add for a field needs to be a different PATCH operation\n          // for some reason\n          this.operationsBuilder.add(\n            pathCombiner.getPath([path]),\n            [value], false);\n        } else {\n          this.operationsBuilder.add(\n            pathCombiner.getPath([path, '-']),\n            value, false);\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle form change operations\n   *\n   * @param pathCombiner\n   *    the [[JsonPatchOperationPathCombiner]] object for the specified operation\n   * @param event\n   *    the [[DynamicFormControlEvent]] for the specified operation\n   * @param previousValue\n   *    the [[FormFieldPreviousValueObject]] for the specified operation\n   * @param hasStoredValue\n   *    representing if field value related to the specified operation has stored value\n   */\n  protected dispatchOperationsFromChangeEvent(pathCombiner: JsonPatchOperationPathCombiner,\n    event: DynamicFormControlEvent,\n    previousValue: FormFieldPreviousValueObject,\n    hasStoredValue: boolean): void {\n\n    if (event.context && event.context instanceof DynamicFormArrayGroupModel) {\n      // Model is a DynamicRowArrayModel\n      this.handleArrayGroupPatch(pathCombiner, event, (event as any).context.context, previousValue);\n      return;\n    }\n\n    const path = this.getFieldPathFromEvent(event);\n    const segmentedPath = this.getFieldPathSegmentedFromChangeEvent(event);\n    const value = this.getFieldValueFromChangeEvent(event);\n    // Detect which operation must be dispatched\n    if (this.formBuilder.isQualdropGroup(event.model.parent as DynamicFormControlModel)\n      || this.formBuilder.isQualdropGroup(event.model as DynamicFormControlModel)) {\n      // It's a qualdrup model\n      this.dispatchOperationsFromMap(this.getQualdropValueMap(event), pathCombiner, event, previousValue);\n    } else if (this.formBuilder.isRelationGroup(event.model)) {\n      // It's a relation model\n      this.dispatchOperationsFromMap(this.getValueMap(value), pathCombiner, event, previousValue);\n    } else if (this.formBuilder.hasArrayGroupValue(event.model)) {\n      // Model has as value an array, so dispatch an add operation with entire block of values\n      this.operationsBuilder.add(\n        pathCombiner.getPath(segmentedPath),\n        value, true);\n    } else if (previousValue.isPathEqual(this.formBuilder.getPath(event.model)) || (hasStoredValue && isNotEmpty(previousValue.value)) ) {\n      // Here model has a previous value changed or stored in the server\n      if (hasValue(event.$event) && hasValue(event.$event.previousIndex)) {\n        if (event.$event.previousIndex < 0) {\n          this.operationsBuilder.add(\n            pathCombiner.getPath(segmentedPath),\n            value, true);\n        } else {\n          const moveTo = pathCombiner.getPath(path);\n          const moveFrom = pathCombiner.getPath(segmentedPath + '/' + event.$event.previousIndex);\n          if (isNotEmpty(moveFrom.path) && isNotEmpty(moveTo.path) && moveFrom.path !== moveTo.path) {\n            this.operationsBuilder.move(\n              moveTo,\n              moveFrom.path,\n            );\n          }\n        }\n      } else if (!value.hasValue()) {\n        // New value is empty, so dispatch a remove operation\n        if (this.getArrayIndexFromEvent(event) === 0) {\n          this.operationsBuilder.remove(pathCombiner.getPath(segmentedPath));\n        } else {\n          this.operationsBuilder.remove(pathCombiner.getPath(path));\n        }\n      } else {\n        // New value is not equal from the previous one, so dispatch a replace operation\n        this.operationsBuilder.replace(\n          pathCombiner.getPath(path),\n          value);\n      }\n      previousValue.delete();\n    } else if (value.hasValue()) {\n      // Here model has no previous value but a new one\n      if (isUndefined(this.getArrayIndexFromEvent(event)) || this.getArrayIndexFromEvent(event) === 0) {\n        // Model is single field or is part of an array model but is the first item,\n        // so dispatch an add operation that initialize the values of a specific metadata\n        this.operationsBuilder.add(\n          pathCombiner.getPath(segmentedPath),\n          value, true);\n      } else {\n        // Model is part of an array model but is not the first item,\n        // so dispatch an add operation that add a value to an existent metadata\n        this.operationsBuilder.add(\n          pathCombiner.getPath(path),\n          value);\n      }\n    }\n  }\n\n  /**\n   * Handle form operations interesting a field with a map as value\n   *\n   * @param valueMap\n   *    map of values\n   * @param pathCombiner\n   *    the [[JsonPatchOperationPathCombiner]] object for the specified operation\n   * @param event\n   *    the [[DynamicFormControlEvent]] for the specified operation\n   * @param previousValue\n   *    the [[FormFieldPreviousValueObject]] for the specified operation\n   */\n  protected dispatchOperationsFromMap(valueMap: Map<string, any>,\n    pathCombiner: JsonPatchOperationPathCombiner,\n    event: DynamicFormControlEvent,\n    previousValue: FormFieldPreviousValueObject): void {\n    const currentValueMap = valueMap;\n    if (event.type === 'remove') {\n      const path = this.getQualdropItemPathFromEvent(event);\n      this.operationsBuilder.remove(pathCombiner.getPath(path));\n    } else {\n      if (previousValue.isPathEqual(this.formBuilder.getPath(event.model))) {\n        previousValue.value.forEach((entry, index) => {\n          const currentValue = currentValueMap.get(index);\n          if (currentValue) {\n            if (!isEqual(entry, currentValue)) {\n              this.operationsBuilder.add(pathCombiner.getPath(index), currentValue, true);\n            }\n            currentValueMap.delete(index);\n          } else if (!currentValue) {\n            this.operationsBuilder.remove(pathCombiner.getPath(index));\n          }\n        });\n      }\n      currentValueMap.forEach((entry: any[], index) => {\n        if (entry.length === 1 && isNull(entry[0])) {\n          // The last item of the group has been deleted so make a remove op\n          this.operationsBuilder.remove(pathCombiner.getPath(index));\n        } else {\n          this.operationsBuilder.add(pathCombiner.getPath(index), entry, true);\n        }\n      });\n    }\n\n    previousValue.delete();\n  }\n\n  /**\n   * Handle form move operations\n   *\n   * @param pathCombiner\n   *    the [[JsonPatchOperationPathCombiner]] object for the specified operation\n   * @param event\n   *    the [[DynamicFormControlEvent]] for the specified operation\n   * @param previousValue\n   *    the [[FormFieldPreviousValueObject]] for the specified operation\n   */\n  private dispatchOperationsFromMoveEvent(pathCombiner: JsonPatchOperationPathCombiner,\n    event: DynamicFormControlEvent,\n    previousValue: FormFieldPreviousValueObject) {\n\n    return this.handleArrayGroupPatch(pathCombiner, event.$event, (event as any).$event.arrayModel, previousValue);\n  }\n\n  /**\n   * Specific patch handler for a DynamicRowArrayModel.\n   * Configure a Patch ADD with the current array value.\n   * @param pathCombiner\n   *    the [[JsonPatchOperationPathCombiner]] object for the specified operation\n   * @param event\n   *    the [[DynamicFormControlEvent]] for the specified operation\n   * @param model\n   *    the [[DynamicRowArrayModel]] model\n   * @param previousValue\n   *    the [[FormFieldPreviousValueObject]] for the specified operation\n   */\n  private handleArrayGroupPatch(pathCombiner: JsonPatchOperationPathCombiner,\n    event,\n    model: DynamicRowArrayModel,\n    previousValue: FormFieldPreviousValueObject) {\n\n    const arrayValue = this.formBuilder.getValueFromModel([model]);\n    const segmentedPath = this.getFieldPathSegmentedFromChangeEvent(event);\n    if (isNotEmpty(arrayValue)) {\n      this.operationsBuilder.add(\n        pathCombiner.getPath(segmentedPath),\n        arrayValue[segmentedPath],\n        false,\n      );\n    } else if (previousValue.isPathEqual(this.formBuilder.getPath(event.model))) {\n      this.operationsBuilder.remove(pathCombiner.getPath(segmentedPath));\n    }\n\n  }\n}\n","import { NgIf } from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewChild,\n} from '@angular/core';\nimport {\n  DynamicFormControlEvent,\n  DynamicFormControlModel,\n} from '@ng-dynamic-forms/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport findIndex from 'lodash/findIndex';\nimport isEqual from 'lodash/isEqual';\nimport {\n  combineLatest as observableCombineLatest,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  find,\n  map,\n  mergeMap,\n  take,\n  tap,\n} from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { ObjectCacheService } from '../../../core/cache/object-cache.service';\nimport { ConfigObject } from '../../../core/config/models/config.model';\nimport { FormRowModel } from '../../../core/config/models/config-submission-form.model';\nimport { SubmissionFormsModel } from '../../../core/config/models/config-submission-forms.model';\nimport { SubmissionFormsConfigDataService } from '../../../core/config/submission-forms-config-data.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { RequestService } from '../../../core/data/request.service';\nimport { JsonPatchOperationPathCombiner } from '../../../core/json-patch/builder/json-patch-operation-path-combiner';\nimport {\n  getFirstSucceededRemoteData,\n  getRemoteDataPayload,\n} from '../../../core/shared/operators';\nimport { SubmissionObject } from '../../../core/submission/models/submission-object.model';\nimport { WorkflowItem } from '../../../core/submission/models/workflowitem.model';\nimport { WorkspaceItem } from '../../../core/submission/models/workspaceitem.model';\nimport { WorkspaceitemSectionFormObject } from '../../../core/submission/models/workspaceitem-section-form.model';\nimport { SubmissionObjectDataService } from '../../../core/submission/submission-object-data.service';\nimport { SubmissionScopeType } from '../../../core/submission/submission-scope-type';\nimport {\n  hasValue,\n  isEmpty,\n  isNotEmpty,\n  isUndefined,\n} from '../../../shared/empty.util';\nimport { FormBuilderService } from '../../../shared/form/builder/form-builder.service';\nimport { FormFieldPreviousValueObject } from '../../../shared/form/builder/models/form-field-previous-value-object';\nimport { FormComponent } from '../../../shared/form/form.component';\nimport { FormService } from '../../../shared/form/form.service';\nimport { ThemedLoadingComponent } from '../../../shared/loading/themed-loading.component';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { difference } from '../../../shared/object.util';\nimport { followLink } from '../../../shared/utils/follow-link-config.model';\nimport { SubmissionSectionError } from '../../objects/submission-section-error.model';\nimport { SubmissionSectionObject } from '../../objects/submission-section-object.model';\nimport { SubmissionService } from '../../submission.service';\nimport { SectionModelComponent } from '../models/section.model';\nimport { SectionDataObject } from '../models/section-data.model';\nimport { SectionsService } from '../sections.service';\nimport { SectionFormOperationsService } from './section-form-operations.service';\n\n/**\n * This component represents a section that contains a Form.\n */\n@Component({\n  selector: 'ds-submission-section-form',\n  styleUrls: ['./section-form.component.scss'],\n  templateUrl: './section-form.component.html',\n  imports: [\n    FormComponent,\n    ThemedLoadingComponent,\n    NgIf,\n  ],\n  standalone: true,\n})\nexport class SubmissionSectionFormComponent extends SectionModelComponent {\n\n  /**\n   * The form id\n   * @type {string}\n   */\n  public formId: string;\n\n  /**\n   * The form model\n   * @type {DynamicFormControlModel[]}\n   */\n  public formModel: DynamicFormControlModel[];\n\n  /**\n   * A boolean representing if this section is updating\n   * @type {boolean}\n   */\n  public isUpdating = false;\n\n  /**\n   * A boolean representing if this section is loading\n   * @type {boolean}\n   */\n  public isLoading = true;\n\n  /**\n   * A map representing all field on their way to be removed\n   * @type {Map}\n   */\n  protected fieldsOnTheirWayToBeRemoved: Map<string, number[]> = new Map();\n\n  /**\n   * The form config\n   * @type {SubmissionFormsModel}\n   */\n  protected formConfig: SubmissionFormsModel;\n\n  /**\n   * The form data\n   * @type {any}\n   */\n  protected formData: any = Object.create({});\n\n  /**\n   * Store the\n   * @protected\n   */\n  protected sectionMetadata: string[];\n\n  /**\n   * The [JsonPatchOperationPathCombiner] object\n   * @type {JsonPatchOperationPathCombiner}\n   */\n  protected pathCombiner: JsonPatchOperationPathCombiner;\n\n  /**\n   * The [FormFieldPreviousValueObject] object\n   * @type {FormFieldPreviousValueObject}\n   */\n  protected previousValue: FormFieldPreviousValueObject = new FormFieldPreviousValueObject();\n\n  /**\n   * The list of Subscription\n   * @type {Array}\n   */\n  protected subs: Subscription[] = [];\n\n  protected submissionObject: SubmissionObject;\n\n  /**\n   * A flag representing if this section is readonly\n   */\n  protected isSectionReadonly = false;\n\n  /**\n   * The FormComponent reference\n   */\n  @ViewChild('formRef') private formRef: FormComponent;\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {ChangeDetectorRef} cdr\n   * @param {FormBuilderService} formBuilderService\n   * @param {SectionFormOperationsService} formOperationsService\n   * @param {FormService} formService\n   * @param {SubmissionFormsConfigDataService} formConfigService\n   * @param {NotificationsService} notificationsService\n   * @param {SectionsService} sectionService\n   * @param {SubmissionService} submissionService\n   * @param {TranslateService} translate\n   * @param {SubmissionObjectDataService} submissionObjectService\n   * @param {ObjectCacheService} objectCache\n   * @param {RequestService} requestService\n   * @param {string} injectedCollectionId\n   * @param {SectionDataObject} injectedSectionData\n   * @param {string} injectedSubmissionId\n   */\n  constructor(protected cdr: ChangeDetectorRef,\n              protected formBuilderService: FormBuilderService,\n              protected formOperationsService: SectionFormOperationsService,\n              protected formService: FormService,\n              protected formConfigService: SubmissionFormsConfigDataService,\n              protected notificationsService: NotificationsService,\n              protected sectionService: SectionsService,\n              protected submissionService: SubmissionService,\n              protected translate: TranslateService,\n              protected submissionObjectService: SubmissionObjectDataService,\n              protected objectCache: ObjectCacheService,\n              protected requestService: RequestService,\n              @Inject('collectionIdProvider') public injectedCollectionId: string,\n              @Inject('sectionDataProvider') public injectedSectionData: SectionDataObject,\n              @Inject('submissionIdProvider') public injectedSubmissionId: string) {\n    super(injectedCollectionId, injectedSectionData, injectedSubmissionId);\n  }\n\n  /**\n   * Initialize all instance variables and retrieve form configuration\n   */\n  onSectionInit() {\n    this.pathCombiner = new JsonPatchOperationPathCombiner('sections', this.sectionData.id);\n    this.formId = this.formService.getUniqueId(this.sectionData.id);\n    this.sectionService.dispatchSetSectionFormId(this.submissionId, this.sectionData.id, this.formId);\n    this.formConfigService.findByHref(this.sectionData.config).pipe(\n      map((configData: RemoteData<ConfigObject>) => configData.payload),\n      tap((config: SubmissionFormsModel) => this.formConfig = config),\n      mergeMap(() =>\n        observableCombineLatest([\n          this.sectionService.getSectionData(this.submissionId, this.sectionData.id, this.sectionData.sectionType),\n          this.submissionObjectService.findById(this.submissionId, true, false, followLink('item')).pipe(\n            getFirstSucceededRemoteData(),\n            getRemoteDataPayload()),\n          this.sectionService.isSectionReadOnly(this.submissionId, this.sectionData.id, this.submissionService.getSubmissionScope()),\n        ])),\n      take(1))\n      .subscribe(([sectionData, submissionObject, isSectionReadOnly]: [WorkspaceitemSectionFormObject, SubmissionObject, boolean]) => {\n        if (isUndefined(this.formModel)) {\n          // this.sectionData.errorsToShow = [];\n          this.submissionObject = submissionObject;\n          this.isSectionReadonly = isSectionReadOnly;\n          // Is the first loading so init form\n          this.initForm(sectionData, this.sectionData.errorsToShow, this.sectionData.serverValidationErrors);\n          this.sectionData.data = sectionData;\n          this.subscriptions();\n          this.isLoading = false;\n          this.cdr.detectChanges();\n        }\n      });\n  }\n\n  /**\n   * Unsubscribe from all subscriptions\n   */\n  onSectionDestroy() {\n    this.subs\n      .filter((subscription) => hasValue(subscription))\n      .forEach((subscription) => subscription.unsubscribe());\n  }\n\n  /**\n   * Get section status\n   *\n   * @return Observable<boolean>\n   *     the section status\n   */\n  protected getSectionStatus(): Observable<boolean> {\n    const formStatus$ = this.formService.isValid(this.formId);\n    const serverValidationStatus$ = this.sectionService.getSectionServerErrors(this.submissionId, this.sectionData.id).pipe(\n      map((validationErrors) => isEmpty(validationErrors)),\n    );\n\n    return observableCombineLatest([formStatus$, serverValidationStatus$]).pipe(\n      map(([formValidation, serverSideValidation]: [boolean, boolean]) => formValidation && serverSideValidation),\n    );\n  }\n\n  /**\n   * Check if the section data has been enriched by the server\n   *\n   * @param sectionData\n   *    the section data retrieved from the server\n   */\n  hasMetadataEnrichment(sectionData: WorkspaceitemSectionFormObject): boolean {\n\n    const sectionDataToCheck = {};\n    Object.keys(sectionData).forEach((key) => {\n      // todo: removing Relationships works due to a bug -- dspace.entity.type is included in sectionData, which is what triggers the update;\n      //       if we use this.sectionMetadata.includes(key), this field is filtered out and removed Relationships won't disappear from the form.\n      if (this.inCurrentSubmissionScope(key)) {\n        sectionDataToCheck[key] = sectionData[key];\n      }\n    });\n\n    const diffResult = [];\n\n    // compare current form data state with section data retrieved from store\n    const diffObj = difference(sectionDataToCheck, this.formData);\n\n    // iterate over differences to check whether they are actually different\n    Object.keys(diffObj)\n      .forEach((key) => {\n        diffObj[key].forEach((value) => {\n          // the findIndex extra check excludes values already present in the form but in different positions\n          if (value.hasOwnProperty('value') && findIndex(this.formData[key], { value: value.value }) < 0) {\n            diffResult.push(value);\n          }\n        });\n      });\n    return isNotEmpty(diffResult);\n  }\n\n  /**\n   * Whether a specific field is editable in the current scope. Unscoped fields always return true.\n   * @private\n   */\n  private inCurrentSubmissionScope(field: string): boolean {\n    const scope = this.formConfig?.rows.find((row: FormRowModel) => {\n      if (row.fields?.[0]?.selectableMetadata) {\n        return row.fields?.[0]?.selectableMetadata?.[0]?.metadata === field;\n      } else if (row.fields?.[0]?.selectableRelationship) {\n        return row.fields?.[0]?.selectableRelationship.relationshipType === field.replace(/^relationship\\./g, '');\n      } else {\n        return false;\n      }\n    })?.fields?.[0]?.scope;\n\n    switch (scope) {\n      case SubmissionScopeType.WorkspaceItem.valueOf(): {\n        return (this.submissionObject as any).type === WorkspaceItem.type.value;\n      }\n      case SubmissionScopeType.WorkflowItem.valueOf(): {\n        return (this.submissionObject as any).type === WorkflowItem.type.value;\n      }\n      default: {\n        return true;\n      }\n    }\n  }\n\n  /**\n   * Initialize form model\n   *\n   * @param sectionData\n   *    the section data retrieved from the server\n   */\n  initForm(sectionData: WorkspaceitemSectionFormObject, errorsToShow: SubmissionSectionError[], serverValidationErrors: SubmissionSectionError[]): void {\n    try {\n      this.formModel = this.formBuilderService.modelFromConfiguration(\n        this.submissionId,\n        this.formConfig,\n        this.collectionId,\n        sectionData,\n        this.submissionService.getSubmissionScope(),\n        this.isSectionReadonly,\n      );\n      const sectionMetadata = this.sectionService.computeSectionConfiguredMetadata(this.formConfig);\n      this.sectionService.updateSectionData(this.submissionId, this.sectionData.id, sectionData, errorsToShow, serverValidationErrors, sectionMetadata);\n    } catch (e: unknown) {\n      const msg: string = this.translate.instant('error.submission.sections.init-form-error') + (e as Error).toString();\n      const sectionError: SubmissionSectionError = {\n        message: msg,\n        path: '/sections/' + this.sectionData.id,\n      };\n      if (e instanceof Error) {\n        console.error(e.stack);\n      }\n      this.sectionService.setSectionError(this.submissionId, this.sectionData.id, sectionError);\n    }\n  }\n\n  /**\n   * Update form model\n   *\n   * @param sectionState\n   *    the section state retrieved from the server\n   */\n  updateForm(sectionState: SubmissionSectionObject): void {\n\n    const sectionData = sectionState.data as WorkspaceitemSectionFormObject;\n    const errors = sectionState.errorsToShow;\n\n    if (isNotEmpty(sectionData) && !isEqual(sectionData, this.sectionData.data)) {\n      this.sectionData.data = sectionData;\n      if (this.hasMetadataEnrichment(sectionData)) {\n        this.isUpdating = true;\n        this.formModel = null;\n        this.cdr.detectChanges();\n        this.initForm(sectionData, errors, sectionState.serverValidationErrors);\n        this.checksForErrors(errors);\n        this.isUpdating = false;\n        this.cdr.detectChanges();\n      } else if (isNotEmpty(errors) || isNotEmpty(this.sectionData.errorsToShow)) {\n        this.checksForErrors(errors);\n      }\n    } else if (isNotEmpty(errors) || isNotEmpty(this.sectionData.errorsToShow)) {\n      this.checksForErrors(errors);\n    }\n\n  }\n\n  /**\n   * Check if there are form validation error retrieved from server\n   *\n   * @param errors\n   *    the section errors retrieved from the server\n   */\n  checksForErrors(errors: SubmissionSectionError[]): void {\n    this.formService.isFormInitialized(this.formId).pipe(\n      find((status: boolean) => status === true && !this.isUpdating))\n      .subscribe(() => {\n        this.sectionService.checkSectionErrors(this.submissionId, this.sectionData.id, this.formId, errors, this.sectionData.errorsToShow);\n        this.sectionData.errorsToShow = errors;\n        this.cdr.detectChanges();\n      });\n  }\n\n  /**\n   * Initialize all subscriptions\n   */\n  subscriptions(): void {\n    this.subs.push(\n      /**\n       * Subscribe to form's data\n       */\n      this.formService.getFormData(this.formId).pipe(\n        distinctUntilChanged())\n        .subscribe((formData) => {\n          this.formData = formData;\n        }),\n\n      /**\n       * Subscribe to section state\n       */\n      this.sectionService.getSectionState(this.submissionId, this.sectionData.id, this.sectionData.sectionType).pipe(\n        filter((sectionState: SubmissionSectionObject) => {\n          return isNotEmpty(sectionState) && (isNotEmpty(sectionState.data) || isNotEmpty(sectionState.errorsToShow));\n        }),\n        distinctUntilChanged())\n        .subscribe((sectionState: SubmissionSectionObject) => {\n          this.fieldsOnTheirWayToBeRemoved = new Map();\n          this.sectionMetadata = sectionState.metadata;\n          this.updateForm(sectionState);\n        }),\n    );\n  }\n\n  /**\n   * Method called when a form dfChange event is fired.\n   * Dispatch form operations based on changes.\n   *\n   * @param event\n   *    the [[DynamicFormControlEvent]] emitted\n   */\n  onChange(event: DynamicFormControlEvent): void {\n    this.formOperationsService.dispatchOperationsFromEvent(\n      this.pathCombiner,\n      event,\n      this.previousValue,\n      this.hasStoredValue(this.formBuilderService.getId(event.model), this.formOperationsService.getArrayIndexFromEvent(event)));\n    const metadata = this.formOperationsService.getFieldPathSegmentedFromChangeEvent(event);\n    const value = this.formOperationsService.getFieldValueFromChangeEvent(event);\n\n    if ((environment.submission.autosave.metadata.indexOf(metadata) !== -1 && isNotEmpty(value)) || this.hasRelatedCustomError(metadata)) {\n      this.submissionService.dispatchSave(this.submissionId);\n    }\n  }\n\n  private hasRelatedCustomError(medatata): boolean {\n    const index = findIndex(this.sectionData.errorsToShow, { path: this.pathCombiner.getPath(medatata).path });\n    if (index  !== -1) {\n      const error = this.sectionData.errorsToShow[index];\n      const validator = error.message.replace('error.validation.', '');\n      return !environment.form.validatorMap.hasOwnProperty(validator);\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Method called when a form dfFocus event is fired.\n   * Initialize [FormFieldPreviousValueObject] instance.\n   *\n   * @param event\n   *    the [[DynamicFormControlEvent]] emitted\n   */\n  onFocus(event: DynamicFormControlEvent): void {\n    const value = this.formOperationsService.getFieldValueFromChangeEvent(event);\n    const path = this.formBuilderService.getPath(event.model);\n    if (this.formBuilderService.hasMappedGroupValue(event.model)) {\n      this.previousValue.path = path;\n      this.previousValue.value = this.formOperationsService.getQualdropValueMap(event);\n    } else if (isNotEmpty(value) && ((typeof value === 'object' && isNotEmpty(value.value)) || (typeof value === 'string'))) {\n      this.previousValue.path = path;\n      this.previousValue.value = value;\n    }\n  }\n\n  /**\n   * Method called when a form remove event is fired.\n   * Dispatch form operations based on changes.\n   *\n   * @param event\n   *    the [[DynamicFormControlEvent]] emitted\n   */\n  onRemove(event: DynamicFormControlEvent): void {\n    const fieldId = this.formBuilderService.getId(event.model);\n    const fieldIndex = this.formOperationsService.getArrayIndexFromEvent(event);\n\n    // Keep track that this field will be removed\n    if (this.fieldsOnTheirWayToBeRemoved.has(fieldId)) {\n      const indexes = this.fieldsOnTheirWayToBeRemoved.get(fieldId);\n      indexes.push(fieldIndex);\n      this.fieldsOnTheirWayToBeRemoved.set(fieldId, indexes);\n    } else {\n      this.fieldsOnTheirWayToBeRemoved.set(fieldId, [fieldIndex]);\n    }\n\n    this.formOperationsService.dispatchOperationsFromEvent(\n      this.pathCombiner,\n      event,\n      this.previousValue,\n      this.hasStoredValue(fieldId, fieldIndex));\n\n  }\n\n  /**\n   * Check if the specified form field has already a value stored\n   *\n   * @param fieldId\n   *    the section data retrieved from the serverù\n   * @param index\n   *    the section data retrieved from the server\n   */\n  hasStoredValue(fieldId, index): boolean {\n    if (isNotEmpty(this.sectionData.data)) {\n      return this.sectionData.data.hasOwnProperty(fieldId) &&\n        isNotEmpty(this.sectionData.data[fieldId][index]) &&\n        !this.isFieldToRemove(fieldId, index);\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Check if the specified field is on the way to be removed\n   *\n   * @param fieldId\n   *    the section data retrieved from the serverù\n   * @param index\n   *    the section data retrieved from the server\n   */\n  isFieldToRemove(fieldId, index) {\n    return this.fieldsOnTheirWayToBeRemoved.has(fieldId) && this.fieldsOnTheirWayToBeRemoved.get(fieldId).includes(index);\n  }\n\n  /**\n   * Handle the customEvent (ex. drag-drop move event).\n   * The customEvent is stored inside event.$event\n   * @param $event\n   */\n  onCustomEvent(event: DynamicFormControlEvent) {\n    this.formOperationsService.dispatchOperationsFromEvent(\n      this.pathCombiner,\n      event,\n      this.previousValue,\n      null);\n  }\n}\n","<ds-loading *ngIf=\"isLoading\" message=\"Loading...\"></ds-loading>\n<ds-form *ngIf=\"!isLoading && formModel\" #formRef=\"formComponent\"\n         [formId]=\"formId\"\n         [formModel]=\"formModel\"\n         [displaySubmit]=\"false\"\n         [displayCancel]=\"false\"\n         (dfChange)=\"onChange($event)\"\n         (dfFocus)=\"onFocus($event)\"\n         (remove)=\"onRemove($event)\"\n         (ngbEvent)=\"onCustomEvent($event)\"\n         (removeArrayItem)=\"onRemove($event)\"></ds-form>\n","import {\n  AsyncPipe,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  OnInit,\n} from '@angular/core';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  Observable,\n  of as observableOf,\n  Subscription,\n} from 'rxjs';\n\nimport { WorkspaceitemSectionIdentifiersObject } from '../../../core/submission/models/workspaceitem-section-identifiers.model';\nimport { AlertType } from '../../../shared/alert/alert-type';\nimport { VarDirective } from '../../../shared/utils/var.directive';\nimport { SubmissionService } from '../../submission.service';\nimport { SectionModelComponent } from '../models/section.model';\nimport { SectionDataObject } from '../models/section-data.model';\nimport { SectionsService } from '../sections.service';\n\n/**\n * This simple component displays DOI, handle and other identifiers that are already minted for the item in\n * a workflow / submission section.\n * ShowMintIdentifierStep will attempt to reserve an identifier before injecting result data for this component.\n *\n * @author Kim Shepherd\n */\n@Component({\n  selector: 'ds-submission-section-identifiers',\n  templateUrl: './section-identifiers.component.html',\n  changeDetection: ChangeDetectionStrategy.Default,\n  imports: [\n    TranslateModule,\n    NgForOf,\n    NgIf,\n    AsyncPipe,\n    VarDirective,\n  ],\n  standalone: true,\n})\n\nexport class SubmissionSectionIdentifiersComponent extends SectionModelComponent implements OnInit {\n  /**\n   * The Alert categories.\n   * @type {AlertType}\n   */\n  public AlertTypeEnum = AlertType;\n\n  /**\n   * Variable to track if the section is loading.\n   * @type {boolean}\n   */\n  public isLoading = true;\n\n  /**\n   * Observable identifierData subject\n   * @type {Observable<WorkspaceitemSectionIdentifiersObject>}\n   */\n  public identifierData$: Observable<WorkspaceitemSectionIdentifiersObject> = new Observable<WorkspaceitemSectionIdentifiersObject>();\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  protected subs: Subscription[] = [];\n  public subbedIdentifierData: WorkspaceitemSectionIdentifiersObject;\n\n  /**\n   * Initialize instance variables.\n   *\n   * @param {TranslateService} translate\n   * @param {SectionsService} sectionService\n   * @param {SubmissionService} submissionService\n   * @param {string} injectedCollectionId\n   * @param {SectionDataObject} injectedSectionData\n   * @param {string} injectedSubmissionId\n   */\n  constructor(protected translate: TranslateService,\n              protected sectionService: SectionsService,\n              protected submissionService: SubmissionService,\n              @Inject('collectionIdProvider') public injectedCollectionId: string,\n              @Inject('sectionDataProvider') public injectedSectionData: SectionDataObject,\n              @Inject('submissionIdProvider') public injectedSubmissionId: string) {\n    super(injectedCollectionId, injectedSectionData, injectedSubmissionId);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  /**\n   * Initialize all instance variables and retrieve configuration.\n   */\n  onSectionInit() {\n    this.isLoading = false;\n    this.identifierData$ = this.getIdentifierData();\n  }\n\n  /**\n   * Check if identifier section has read-only visibility\n   */\n  isReadOnly(): boolean {\n    return true;\n  }\n\n  /**\n   * Unsubscribe from all subscriptions, if needed.\n   */\n  onSectionDestroy(): void {\n    return;\n  }\n\n  /**\n   * Get section status. Because this simple component never requires human interaction, this is basically\n   * always going to be the opposite of \"is this section still loading\". This is not the place for API response\n   * error checking but determining whether the step can 'proceed'.\n   *\n   * @return Observable<boolean>\n   *     the section status\n   */\n  public getSectionStatus(): Observable<boolean> {\n    return observableOf(!this.isLoading);\n  }\n\n  /**\n   * Get identifier data (from the REST service) as a simple object with doi, handle, otherIdentifiers variables\n   * and as an observable so it can update in real-time.\n   */\n  getIdentifierData() {\n    return this.sectionService.getSectionData(this.submissionId, this.sectionData.id, this.sectionData.sectionType) as\n      Observable<WorkspaceitemSectionIdentifiersObject>;\n  }\n\n}\n","<!--\nTemplate for the identifiers submission section component\n@author Kim Shepherd\n-->\n<!-- Main identifier data -->\n<ng-container *ngVar=\"(getIdentifierData() | async) as identifierData\">\n  <ng-container *ngIf=\"identifierData && identifierData.identifiers\">\n  <div>\n  <span>{{'submission.sections.identifiers.info' | translate}}</span>\n  <ul>\n    <ng-container *ngFor=\"let identifier of identifierData.identifiers\">\n      <ng-container *ngIf=\"identifierData.displayTypes.includes(identifier.identifierType) && identifier.value\">\n        <li>{{'submission.sections.identifiers.' + identifier.identifierType + '_label' | translate}}\n          {{identifier.value}}</li>\n      </ng-container>\n    </ng-container>\n  </ul>\n </div>\n </ng-container>\n</ng-container>\n","import {\n  AsyncPipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  AfterViewChecked,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewChild,\n} from '@angular/core';\nimport {\n  DynamicCheckboxModel,\n  DynamicFormControlEvent,\n  DynamicFormControlModel,\n  DynamicFormLayout,\n} from '@ng-dynamic-forms/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  find,\n  map,\n  mergeMap,\n  startWith,\n  take,\n} from 'rxjs/operators';\n\nimport { CollectionDataService } from '../../../core/data/collection-data.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { JsonPatchOperationPathCombiner } from '../../../core/json-patch/builder/json-patch-operation-path-combiner';\nimport { JsonPatchOperationsBuilder } from '../../../core/json-patch/builder/json-patch-operations-builder';\nimport { Collection } from '../../../core/shared/collection.model';\nimport { License } from '../../../core/shared/license.model';\nimport { WorkspaceitemSectionLicenseObject } from '../../../core/submission/models/workspaceitem-section-license.model';\nimport {\n  hasValue,\n  isNotEmpty,\n  isNotNull,\n  isNotUndefined,\n} from '../../../shared/empty.util';\nimport { FormBuilderService } from '../../../shared/form/builder/form-builder.service';\nimport { FormComponent } from '../../../shared/form/form.component';\nimport { FormService } from '../../../shared/form/form.service';\nimport { followLink } from '../../../shared/utils/follow-link-config.model';\nimport { SubmissionService } from '../../submission.service';\nimport { SectionFormOperationsService } from '../form/section-form-operations.service';\nimport { SectionModelComponent } from '../models/section.model';\nimport { SectionDataObject } from '../models/section-data.model';\nimport { SectionsService } from '../sections.service';\nimport {\n  SECTION_LICENSE_FORM_LAYOUT,\n  SECTION_LICENSE_FORM_MODEL,\n} from './section-license.model';\n\n/**\n * This component represents a section that contains the submission license form.\n */\n@Component({\n  selector: 'ds-submission-section-license',\n  styleUrls: ['./section-license.component.scss'],\n  templateUrl: './section-license.component.html',\n  providers: [],\n  imports: [\n    FormComponent,\n    NgIf,\n    AsyncPipe,\n  ],\n  standalone: true,\n})\nexport class SubmissionSectionLicenseComponent   extends SectionModelComponent implements AfterViewChecked {\n\n  /**\n   * The form id\n   * @type {string}\n   */\n  public formId: string;\n\n  /**\n   * The form model\n   * @type {DynamicFormControlModel[]}\n   */\n  public formModel: DynamicFormControlModel[];\n\n  /**\n   * The [[DynamicFormLayout]] object\n   * @type {DynamicFormLayout}\n   */\n  public formLayout: DynamicFormLayout = SECTION_LICENSE_FORM_LAYOUT;\n\n  /**\n   * A boolean representing if to show form submit and cancel buttons\n   * @type {boolean}\n   */\n  public displaySubmit = false;\n\n  /**\n   * The submission license text\n   * @type {Array}\n   */\n  public licenseText$: Observable<string>;\n\n  /**\n   * The [[JsonPatchOperationPathCombiner]] object\n   * @type {JsonPatchOperationPathCombiner}\n   */\n  protected pathCombiner: JsonPatchOperationPathCombiner;\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  protected subs: Subscription[] = [];\n\n  /**\n   * The FormComponent reference\n   */\n  @ViewChild('formRef') private formRef: FormComponent;\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {ChangeDetectorRef} changeDetectorRef\n   * @param {CollectionDataService} collectionDataService\n   * @param {FormBuilderService} formBuilderService\n   * @param {SectionFormOperationsService} formOperationsService\n   * @param {FormService} formService\n   * @param {JsonPatchOperationsBuilder} operationsBuilder\n   * @param {SectionsService} sectionService\n   * @param {SubmissionService} submissionService\n   * @param {TranslateService} translateService\n   * @param {string} injectedCollectionId\n   * @param {SectionDataObject} injectedSectionData\n   * @param {string} injectedSubmissionId\n   */\n  constructor(protected changeDetectorRef: ChangeDetectorRef,\n              protected collectionDataService: CollectionDataService,\n              protected formBuilderService: FormBuilderService,\n              protected formOperationsService: SectionFormOperationsService,\n              protected formService: FormService,\n              protected operationsBuilder: JsonPatchOperationsBuilder,\n              protected sectionService: SectionsService,\n              protected submissionService: SubmissionService,\n              protected translateService: TranslateService,\n              @Inject('collectionIdProvider') public injectedCollectionId: string,\n              @Inject('sectionDataProvider') public injectedSectionData: SectionDataObject,\n              @Inject('submissionIdProvider') public injectedSubmissionId: string) {\n    super(injectedCollectionId, injectedSectionData, injectedSubmissionId);\n  }\n\n  /**\n   * Initialize all instance variables and retrieve submission license\n   */\n  onSectionInit() {\n    this.pathCombiner = new JsonPatchOperationPathCombiner('sections', this.sectionData.id);\n    this.formId = this.formService.getUniqueId(this.sectionData.id);\n    this.formModel = this.formBuilderService.fromJSON(SECTION_LICENSE_FORM_MODEL);\n    const model = this.formBuilderService.findById('granted', this.formModel);\n\n    // Translate checkbox label\n    if (model.label) {\n      model.label = this.translateService.instant(model.label);\n    }\n\n    // Retrieve license accepted status\n    (model as DynamicCheckboxModel).value = (this.sectionData.data as WorkspaceitemSectionLicenseObject).granted;\n\n    this.licenseText$ = this.collectionDataService.findById(this.collectionId, true, true, followLink('license')).pipe(\n      filter((collectionData: RemoteData<Collection>) => isNotUndefined((collectionData.payload))),\n      mergeMap((collectionData: RemoteData<Collection>) => (collectionData.payload as any).license),\n      find((licenseData: RemoteData<License>) => isNotUndefined((licenseData.payload))),\n      map((licenseData: RemoteData<License>) => licenseData.payload.text),\n      startWith(''));\n\n    this.subs.push(\n      // Disable checkbox whether it's in workflow or item scope\n      this.sectionService.isSectionReadOnly(\n        this.submissionId,\n        this.sectionData.id,\n        this.submissionService.getSubmissionScope()).pipe(\n        take(1),\n        filter((isReadOnly) => isReadOnly))\n        .subscribe(() => {\n          model.disabled = true;\n        }),\n\n      this.sectionService.getSectionErrors(this.submissionId, this.sectionData.id).pipe(\n        filter((errors) => isNotEmpty(errors)),\n        distinctUntilChanged())\n        .subscribe((errors) => {\n          // parse errors\n          const newErrors = errors.map((error) => {\n            // When the error path is only on the section,\n            // replace it with the path to the form field to display error also on the form\n            if (error.path === '/sections/license') {\n              // check whether license is not accepted\n              if (!(model as DynamicCheckboxModel).checked) {\n                return Object.assign({}, error, { path: '/sections/license/granted' });\n              } else {\n                return null;\n              }\n            } else {\n              return error;\n            }\n          }).filter((error) => isNotNull(error));\n\n          if (isNotEmpty(newErrors)) {\n            this.sectionService.checkSectionErrors(this.submissionId, this.sectionData.id, this.formId, newErrors);\n            this.sectionData.errors = errors;\n          } else {\n            // Remove any section's errors\n            this.sectionService.dispatchRemoveSectionErrors(this.submissionId, this.sectionData.id);\n          }\n        }),\n    );\n  }\n\n  ngAfterViewChecked(): void {\n    this.changeDetectorRef.detectChanges();\n  }\n\n  /**\n   * Get section status\n   *\n   * @return Observable<boolean>\n   *     the section status\n   */\n  protected getSectionStatus(): Observable<boolean> {\n    const model = this.formBuilderService.findById('granted', this.formModel);\n    return (model as DynamicCheckboxModel).valueChanges.pipe(\n      map((value) => value === true),\n      startWith((model as DynamicCheckboxModel).value));\n  }\n\n  /**\n   * Method called when a form dfChange event is fired.\n   * Dispatch form operations based on changes.\n   */\n  onChange(event: DynamicFormControlEvent) {\n    const path = this.formOperationsService.getFieldPathSegmentedFromChangeEvent(event);\n    const value = this.formOperationsService.getFieldValueFromChangeEvent(event);\n    if (value) {\n      this.operationsBuilder.add(this.pathCombiner.getPath(path), value.value.toString(), false, true);\n      // Remove any section's errors\n      this.sectionService.dispatchRemoveSectionErrors(this.submissionId, this.sectionData.id);\n    } else {\n      this.operationsBuilder.remove(this.pathCombiner.getPath(path));\n    }\n    this.submissionService.dispatchSaveSection(this.submissionId, this.sectionData.id);\n  }\n\n  /**\n   * Unsubscribe from all subscriptions\n   */\n  onSectionDestroy() {\n    this.subs\n      .filter((subscription) => hasValue(subscription))\n      .forEach((subscription) => subscription.unsubscribe());\n  }\n\n}\n","<span class=\"mb-5 preserve-line-breaks\" [innerHTML]=\"licenseText$ | async\"></span>\n<br> <br>\n<ds-form *ngIf=\"formModel\" #formRef=\"formComponent\"\n         [formId]=\"formId\"\n         [formModel]=\"formModel\"\n         [formLayout]=\"formLayout\"\n         [displaySubmit]=\"displaySubmit\"\n         [displayCancel]=\"false\"\n         (dfChange)=\"onChange($event)\"></ds-form>\n","\nexport const SECTION_LICENSE_FORM_LAYOUT = {\n\n  granted: {\n    element: {\n      container: 'custom-control custom-checkbox pl-1',\n      control: 'custom-control-input',\n      label: 'custom-control-label pt-1',\n    },\n  },\n};\n\nexport const SECTION_LICENSE_FORM_MODEL = [\n  {\n    id: 'granted',\n    label: 'submission.sections.license.granted-label',\n    required: true,\n    value: false,\n    validators: {\n      required: null,\n    },\n    errorMessages: {\n      required: 'submission.sections.license.required',\n      notgranted: 'submission.sections.license.notgranted',\n    },\n    type: 'CHECKBOX',\n  },\n];\n","import {\n  Component,\n  Inject,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  filter,\n  startWith,\n} from 'rxjs/operators';\n\nimport {\n  hasValue,\n  isNotUndefined,\n} from '../../../shared/empty.util';\nimport { SectionsService } from '../sections.service';\nimport { SectionDataObject } from './section-data.model';\n\nexport interface SectionDataModel {\n  sectionData: SectionDataObject;\n}\n\n/**\n * An abstract model class for a submission edit form section.\n */\n@Component({\n  selector: 'ds-section-model',\n  template: '',\n})\nexport abstract class SectionModelComponent implements OnDestroy, OnInit, SectionDataModel {\n  protected abstract sectionService: SectionsService;\n\n  /**\n   * The collection id this submission belonging to\n   * @type {string}\n   */\n  collectionId: string;\n\n  /**\n   * The section data\n   * @type {SectionDataObject}\n   */\n  sectionData: SectionDataObject;\n\n  /**\n   * The submission id\n   * @type {string}\n   */\n  submissionId: string;\n\n  /**\n   * A boolean representing if this section is valid\n   * @type {boolean}\n   */\n  protected valid: boolean;\n\n  /**\n   * The Subscription to section status observable\n   * @type {Subscription}\n   */\n  private sectionStatusSub: Subscription;\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {string} injectedCollectionId\n   * @param {SectionDataObject} injectedSectionData\n   * @param {string} injectedSubmissionId\n   */\n  public constructor(@Inject('collectionIdProvider') public injectedCollectionId: string,\n    @Inject('sectionDataProvider') public injectedSectionData: SectionDataObject,\n    @Inject('submissionIdProvider') public injectedSubmissionId: string) {\n    this.collectionId = injectedCollectionId;\n    this.sectionData = injectedSectionData;\n    this.submissionId = injectedSubmissionId;\n  }\n\n  /**\n   * Call abstract methods on component init\n   */\n  ngOnInit(): void {\n    this.onSectionInit();\n    this.updateSectionStatus();\n  }\n\n  /**\n   * Abstract method to implement to get section status\n   *\n   * @return Observable<boolean>\n   *     the section status\n   */\n  protected abstract getSectionStatus(): Observable<boolean>;\n\n  /**\n   * Abstract method called on component init.\n   * It must be used instead of ngOnInit on the component that extend this abstract class\n   *\n   * @return Observable<boolean>\n   *     the section status\n   */\n  protected abstract onSectionInit(): void;\n\n  /**\n   * Abstract method called on component destroy.\n   * It must be used instead of ngOnDestroy on the component that extend this abstract class\n   *\n   * @return Observable<boolean>\n   *     the section status\n   */\n  protected abstract onSectionDestroy(): void;\n\n  /**\n   * Subscribe to section status\n   */\n  protected updateSectionStatus(): void {\n    this.sectionStatusSub = this.getSectionStatus().pipe(\n      filter((sectionStatus: boolean) => isNotUndefined(sectionStatus)),\n      startWith(true))\n      .subscribe((sectionStatus: boolean) => {\n        this.sectionService.setSectionStatus(this.submissionId, this.sectionData.id, sectionStatus);\n      });\n  }\n\n  /**\n   * Unsubscribe from all subscriptions and Call abstract methods on component destroy\n   */\n  ngOnDestroy(): void {\n    if (hasValue(this.sectionStatusSub)) {\n      this.sectionStatusSub.unsubscribe();\n    }\n    this.onSectionDestroy();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Operation } from 'fast-json-patch';\nimport { Observable } from 'rxjs';\nimport {\n  map,\n  take,\n} from 'rxjs/operators';\n\nimport { RemoteDataBuildService } from '../../../core/cache/builders/remote-data-build.service';\nimport { RequestParam } from '../../../core/cache/models/request-param.model';\nimport { ObjectCacheService } from '../../../core/cache/object-cache.service';\nimport {\n  CreateData,\n  CreateDataImpl,\n} from '../../../core/data/base/create-data';\nimport {\n  DeleteData,\n  DeleteDataImpl,\n} from '../../../core/data/base/delete-data';\nimport {\n  FindAllData,\n  FindAllDataImpl,\n} from '../../../core/data/base/find-all-data';\nimport { IdentifiableDataService } from '../../../core/data/base/identifiable-data.service';\nimport {\n  PatchData,\n  PatchDataImpl,\n} from '../../../core/data/base/patch-data';\nimport { ChangeAnalyzer } from '../../../core/data/change-analyzer';\nimport { FindListOptions } from '../../../core/data/find-list-options.model';\nimport { PaginatedList } from '../../../core/data/paginated-list.model';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { MultipartPostRequest } from '../../../core/data/request.models';\nimport { RequestService } from '../../../core/data/request.service';\nimport { RestRequest } from '../../../core/data/rest-request.model';\nimport { RestRequestMethod } from '../../../core/data/rest-request-method';\nimport { HALEndpointService } from '../../../core/shared/hal-endpoint.service';\nimport { NoContent } from '../../../core/shared/NoContent.model';\nimport { URLCombiner } from '../../../core/url-combiner/url-combiner';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { FollowLinkConfig } from '../../../shared/utils/follow-link-config.model';\nimport { SubmissionCoarNotifyConfig } from './submission-coar-notify.config';\n\n\n/**\n * A service responsible for fetching/sending data from/to the REST API on the CoarNotifyConfig endpoint\n */\n@Injectable({ providedIn: 'root' })\nexport class CoarNotifyConfigDataService extends IdentifiableDataService<SubmissionCoarNotifyConfig> implements FindAllData<SubmissionCoarNotifyConfig>, DeleteData<SubmissionCoarNotifyConfig>, PatchData<SubmissionCoarNotifyConfig>, CreateData<SubmissionCoarNotifyConfig> {\n  createData: CreateDataImpl<SubmissionCoarNotifyConfig>;\n  private findAllData: FindAllDataImpl<SubmissionCoarNotifyConfig>;\n  private deleteData: DeleteDataImpl<SubmissionCoarNotifyConfig>;\n  private patchData: PatchDataImpl<SubmissionCoarNotifyConfig>;\n  private comparator: ChangeAnalyzer<SubmissionCoarNotifyConfig>;\n\n  constructor(\n    protected requestService: RequestService,\n    protected rdbService: RemoteDataBuildService,\n    protected objectCache: ObjectCacheService,\n    protected halService: HALEndpointService,\n    protected notificationsService: NotificationsService,\n  ) {\n    super('submissioncoarnotifyconfigs', requestService, rdbService, objectCache, halService);\n\n    this.findAllData = new FindAllDataImpl(this.linkPath, requestService, rdbService, objectCache, halService, this.responseMsToLive);\n    this.deleteData = new DeleteDataImpl(this.linkPath, requestService, rdbService, objectCache, halService, notificationsService, this.responseMsToLive, this.constructIdEndpoint);\n    this.patchData = new PatchDataImpl(this.linkPath, requestService, rdbService, objectCache, halService, this.comparator, this.responseMsToLive, this.constructIdEndpoint);\n    this.createData = new CreateDataImpl(this.linkPath, requestService, rdbService, objectCache, halService, notificationsService, this.responseMsToLive);\n  }\n\n\n  create(object: SubmissionCoarNotifyConfig, ...params: RequestParam[]): Observable<RemoteData<SubmissionCoarNotifyConfig>> {\n    return this.createData.create(object, ...params);\n  }\n\n  patch(object: SubmissionCoarNotifyConfig, operations: Operation[]): Observable<RemoteData<SubmissionCoarNotifyConfig>> {\n    return this.patchData.patch(object, operations);\n  }\n\n  update(object: SubmissionCoarNotifyConfig): Observable<RemoteData<SubmissionCoarNotifyConfig>> {\n    return this.patchData.update(object);\n  }\n\n  commitUpdates(method?: RestRequestMethod): void {\n    return this.patchData.commitUpdates(method);\n  }\n\n  createPatchFromCache(object: SubmissionCoarNotifyConfig): Observable<Operation[]> {\n    return this.patchData.createPatchFromCache(object);\n  }\n\n  findAll(options?: FindListOptions, useCachedVersionIfAvailable?: boolean, reRequestOnStale?: boolean, ...linksToFollow: FollowLinkConfig<SubmissionCoarNotifyConfig>[]): Observable<RemoteData<PaginatedList<SubmissionCoarNotifyConfig>>> {\n    return this.findAllData.findAll(options, useCachedVersionIfAvailable, reRequestOnStale, ...linksToFollow);\n  }\n\n\n  public delete(objectId: string, copyVirtualMetadata?: string[]): Observable<RemoteData<NoContent>> {\n    return this.deleteData.delete(objectId, copyVirtualMetadata);\n  }\n\n  public deleteByHref(href: string, copyVirtualMetadata?: string[]): Observable<RemoteData<NoContent>> {\n    return this.deleteData.deleteByHref(href, copyVirtualMetadata);\n  }\n\n  public invoke(serviceName: string, serviceId: string, files: File[]): Observable<RemoteData<SubmissionCoarNotifyConfig>> {\n    const requestId = this.requestService.generateRequestId();\n    this.getBrowseEndpoint().pipe(\n      take(1),\n      map((endpoint: string) => new URLCombiner(endpoint, serviceName, 'submissioncoarnotifyconfigmodel', serviceId).toString()),\n      map((endpoint: string) => {\n        const body = this.getInvocationFormData(files);\n        return new MultipartPostRequest(requestId, endpoint, body);\n      }),\n    ).subscribe((request: RestRequest) => this.requestService.send(request));\n\n    return this.rdbService.buildFromRequestUUID<SubmissionCoarNotifyConfig>(requestId);\n  }\n\n  private getInvocationFormData(files: File[]): FormData {\n    const form: FormData = new FormData();\n    files.forEach((file: File) => {\n      form.append('file', file);\n    });\n    return form;\n  }\n}\n","import {\n  AsyncPipe,\n  NgClass,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  Inject,\n} from '@angular/core';\nimport {\n  NgbDropdown,\n  NgbDropdownModule,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport {\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  filter,\n  map,\n  take,\n  tap,\n} from 'rxjs/operators';\n\nimport { LdnServicesService } from '../../../admin/admin-ldn-services/ldn-services-data/ldn-services-data.service';\nimport {\n  LdnService,\n  LdnServiceByPattern,\n} from '../../../admin/admin-ldn-services/ldn-services-model/ldn-services.model';\nimport { JsonPatchOperationPathCombiner } from '../../../core/json-patch/builder/json-patch-operation-path-combiner';\nimport { JsonPatchOperationsBuilder } from '../../../core/json-patch/builder/json-patch-operations-builder';\nimport {\n  getFirstCompletedRemoteData,\n  getPaginatedListPayload,\n  getRemoteDataPayload,\n} from '../../../core/shared/operators';\nimport {\n  hasValue,\n  isEmpty,\n  isNotEmpty,\n} from '../../../shared/empty.util';\nimport { SubmissionSectionError } from '../../objects/submission-section-error.model';\nimport { SectionModelComponent } from '../models/section.model';\nimport { SectionDataObject } from '../models/section-data.model';\nimport { SectionsService } from '../sections.service';\nimport { CoarNotifyConfigDataService } from './coar-notify-config-data.service';\nimport { LdnPattern } from './submission-coar-notify.config';\n\n/**\n * This component represents a section that contains the submission section-coar-notify form.\n */\n@Component({\n  selector: 'ds-submission-section-coar-notify',\n  templateUrl: './section-coar-notify.component.html',\n  styleUrls: ['./section-coar-notify.component.scss'],\n  standalone: true,\n  imports: [\n    NgIf,\n    NgForOf,\n    AsyncPipe,\n    TranslateModule,\n    NgbDropdownModule,\n    NgClass,\n    InfiniteScrollModule,\n  ],\n  providers: [NgbDropdown],\n})\nexport class SubmissionSectionCoarNotifyComponent extends SectionModelComponent {\n\n  hasSectionData = false;\n  /**\n   * Contains an array of string patterns.\n   */\n  patterns: LdnPattern[] = [];\n  /**\n   * An object that maps string keys to arrays of LdnService objects.\n   * Used to store LdnService objects by pattern.\n   */\n  ldnServiceByPattern: { [key: string]: LdnServiceByPattern } = {};\n  /**\n   * A map representing all services for each pattern\n   * {\n   *  'pattern': {\n   *   'index': 'service.id'\n   *   }\n   * }\n   *\n   * @type {{ [key: string]: {[key: number]: number} }}\n   * @memberof SubmissionSectionCoarNotifyComponent\n   */\n  previousServices: { [key: string]: LdnServiceByPattern } = {};\n\n  /**\n   * The [[JsonPatchOperationPathCombiner]] object\n   * @type {JsonPatchOperationPathCombiner}\n   */\n  protected pathCombiner: JsonPatchOperationPathCombiner;\n  /**\n   * A map representing all field on their way to be removed\n   * @type {Map}\n   */\n  protected fieldsOnTheirWayToBeRemoved: Map<string, number[]> = new Map();\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  protected subs: Subscription[] = [];\n\n  private filteredServicesByPattern = {};\n\n  constructor(protected ldnServicesService: LdnServicesService,\n              // protected formOperationsService: SectionFormOperationsService,\n              protected operationsBuilder: JsonPatchOperationsBuilder,\n              protected sectionService: SectionsService,\n              protected coarNotifyConfigDataService: CoarNotifyConfigDataService,\n              protected chd: ChangeDetectorRef,\n              @Inject('collectionIdProvider') public injectedCollectionId: string,\n              @Inject('sectionDataProvider') public injectedSectionData: SectionDataObject,\n              @Inject('submissionIdProvider') public injectedSubmissionId: string) {\n    super(injectedCollectionId, injectedSectionData, injectedSubmissionId);\n  }\n\n  /**\n   * Initialize all instance variables\n   */\n  onSectionInit() {\n    this.setCoarNotifyConfig();\n    this.getSectionServerErrorsAndSetErrorsToDisplay();\n    this.pathCombiner = new JsonPatchOperationPathCombiner('sections', this.sectionData.id);\n  }\n\n  /**\n   * Method called when section is initialized\n   * Retriev available NotifyConfigs\n   */\n  setCoarNotifyConfig() {\n    this.subs.push(\n      this.coarNotifyConfigDataService.findAll().pipe(\n        getFirstCompletedRemoteData(),\n      ).subscribe((data) => {\n        if (data.hasSucceeded) {\n          this.patterns = data.payload.page[0].patterns;\n          this.initSelectedServicesByPattern();\n        }\n      }));\n  }\n\n  /**\n   * Handles the change event of a select element.\n   * @param pattern - The pattern of the select element.\n   * @param index - The index of the select element.\n   * @param selectedService - The selected LDN service.\n   */\n  onChange(pattern: string, index: number, selectedService: LdnService | null) {\n    // do nothing if the selected value is the same as the previous one\n    if (this.ldnServiceByPattern[pattern].services[index]?.id === selectedService?.id) {\n      return;\n    }\n\n    // initialize the previousServices object for the pattern if it does not exist\n    if (!this.previousServices[pattern]) {\n      this.previousServices[pattern] = {\n        services: [],\n        allowsMultipleRequests: this.patterns.find(ldnPattern => ldnPattern.pattern === pattern)?.multipleRequest,\n      };\n    }\n\n    // store the previous value\n    this.previousServices[pattern].services[index] = this.ldnServiceByPattern[pattern].services[index];\n    // set the new value\n    this.ldnServiceByPattern[pattern].services[index] = selectedService;\n\n    const hasPrevValueStored = hasValue(this.previousServices[pattern].services[index]) && this.previousServices[pattern].services[index].id !== selectedService?.id;\n    if (hasPrevValueStored) {\n      // when there is a previous value stored and it is different from the new one\n      this.operationsBuilder.flushOperation(this.pathCombiner.getPath([pattern, '-']));\n      if (this.filteredServicesByPattern[pattern]?.includes(this.previousServices[pattern].services[index])){\n        this.operationsBuilder.remove(this.pathCombiner.getPath([pattern, index.toString()]));\n      }\n    }\n\n    if (!hasPrevValueStored || (selectedService?.id && hasPrevValueStored)) {\n      // add the path when there is no previous value stored\n      this.operationsBuilder.add(this.pathCombiner.getPath([pattern, '-']), [selectedService.id], false, true);\n    }\n    // set the previous value to the new value\n    this.previousServices[pattern].services[index] = this.ldnServiceByPattern[pattern].services[index];\n    this.sectionService.dispatchRemoveSectionErrors(this.submissionId, this.sectionData.id);\n    this.chd.detectChanges();\n  }\n\n  /**\n   * Initializes the selected services by pattern.\n   * Loops through each pattern and filters the services based on the pattern.\n   * If the section data has a value for the pattern, it adds the service to the selected services by pattern.\n   * If the section data does not have a value for the pattern, it adds a null service to the selected services by pattern,\n   * so that the select element is initialized with a null value and to display the default select input.\n   */\n  initSelectedServicesByPattern(): void {\n    this.patterns.forEach((ldnPattern) => {\n      if (hasValue(this.sectionData.data[ldnPattern.pattern])) {\n        this.subs.push(\n          this.filterServices(ldnPattern.pattern)\n            .subscribe((services: LdnService[]) => {\n\n              if (!this.ldnServiceByPattern[ldnPattern.pattern]) {\n                this.ldnServiceByPattern[ldnPattern.pattern] = {\n                  services: [],\n                  allowsMultipleRequests: ldnPattern.multipleRequest,\n                };\n              }\n\n              this.ldnServiceByPattern[ldnPattern.pattern].services = services.filter((service) => {\n                const selection = (this.sectionData.data[ldnPattern.pattern] as LdnService[]).find((s: LdnService) => s.id === service.id);\n                this.addService(ldnPattern, selection);\n                return this.sectionData.data[ldnPattern.pattern].includes(service.uuid);\n              });\n            }),\n        );\n      } else {\n        this.ldnServiceByPattern[ldnPattern.pattern] = {\n          services: [],\n          allowsMultipleRequests: ldnPattern.multipleRequest,\n        };\n        this.addService(ldnPattern, null);\n      }\n    });\n  }\n\n  /**\n   * Adds a new service to the selected services for the given pattern.\n   * @param ldnPattern - The pattern to add the new service to.\n   * @param newService - The new service to add.\n   */\n  addService(ldnPattern: LdnPattern, newService: LdnService) {\n    // Your logic to add a new service to the selected services for the pattern\n    // Example: Push the newService to the array corresponding to the pattern\n    if (!this.ldnServiceByPattern[ldnPattern.pattern]) {\n      this.ldnServiceByPattern[ldnPattern.pattern] = {\n        services: [],\n        allowsMultipleRequests: ldnPattern.multipleRequest,\n      };\n    }\n    this.ldnServiceByPattern[ldnPattern.pattern].services.push(newService);\n  }\n\n  /**\n   * Removes the service at the specified index from the array corresponding to the pattern.\n   * @param ldnPattern - The LDN pattern from which to remove the service\n   * @param serviceIndex - the service index to remove\n   */\n  removeService(ldnPattern: LdnPattern, serviceIndex: number) {\n    if (this.ldnServiceByPattern[ldnPattern.pattern]) {\n      // Remove the service at the specified index from the array\n      this.ldnServiceByPattern[ldnPattern.pattern].services.splice(serviceIndex, 1);\n      this.previousServices[ldnPattern.pattern]?.services.splice(serviceIndex, 1);\n      this.operationsBuilder.flushOperation(this.pathCombiner.getPath([ldnPattern.pattern, '-']));\n      this.sectionService.dispatchRemoveSectionErrors(this.submissionId, this.sectionData.id);\n    }\n    if (!this.ldnServiceByPattern[ldnPattern.pattern].services.length) {\n      this.addNewService(ldnPattern);\n    }\n  }\n\n  /**\n   * Method called when dropdowns for the section are initialized\n   * Retrieve services with corresponding patterns to the dropdowns.\n   */\n  filterServices(pattern: string): Observable<LdnService[]> {\n    return this.ldnServicesService.findByInboundPattern(pattern).pipe(\n      getFirstCompletedRemoteData(),\n      tap((rd) => {\n        if (rd.hasFailed) {\n          throw new Error(`Failed to retrieve services for pattern ${pattern}`);\n        }\n      }),\n      filter((rd) => rd.hasSucceeded),\n      getRemoteDataPayload(),\n      getPaginatedListPayload(),\n      tap(res => {\n        if (!this.filteredServicesByPattern[pattern]){\n          this.filteredServicesByPattern[pattern] = [];\n        }\n        if (this.filteredServicesByPattern[pattern].length === 0) {\n          this.filteredServicesByPattern[pattern].push(...res);\n        }\n      }),\n      map((res: LdnService[]) => res.filter((service) => {\n        if (!this.hasSectionData){\n          this.hasSectionData = this.hasInboundPattern(service, pattern);\n        }\n        return this.hasInboundPattern(service, pattern);\n      })),\n    );\n  }\n\n  /**\n   * Checks if the given service has the specified inbound pattern type.\n   * @param service - The service to check.\n   * @param patternType - The inbound pattern type to look for.\n   * @returns True if the service has the specified inbound pattern type, false otherwise.\n   */\n  hasInboundPattern(service: any, patternType: string): boolean {\n    return service.notifyServiceInboundPatterns.some((pattern: { pattern: string }) => {\n      return pattern.pattern === patternType;\n    });\n  }\n\n  /**\n   * Retrieves server errors for the current section and sets them to display.\n   * @returns An Observable that emits the validation errors for the current section.\n   */\n  private getSectionServerErrorsAndSetErrorsToDisplay() {\n    this.subs.push(\n      this.sectionService.getSectionServerErrors(this.submissionId, this.sectionData.id).pipe(\n        take(1),\n        filter((validationErrors) => isNotEmpty(validationErrors)),\n      ).subscribe((validationErrors: SubmissionSectionError[]) => {\n        if (isNotEmpty(validationErrors)) {\n          validationErrors.forEach((error) => {\n            this.sectionService.setSectionError(this.submissionId, this.sectionData.id, error);\n          });\n        }\n      }));\n  }\n\n  /**\n   * Returns an observable of the errors for the current section that match the given pattern and index.\n   * @param pattern - The pattern to match against the error paths.\n   * @param index - The index to match against the error paths.\n   * @returns An observable of the errors for the current section that match the given pattern and index.\n   */\n  public getShownSectionErrors$(pattern: string, index: number): Observable<SubmissionSectionError[]> {\n    return this.sectionService.getShownSectionErrors(this.submissionId, this.sectionData.id, this.sectionData.sectionType)\n      .pipe(\n        take(1),\n        filter((validationErrors) => isNotEmpty(validationErrors)),\n        map((validationErrors: SubmissionSectionError[]) => {\n          return validationErrors.filter((error) => {\n            const path = `${pattern}/${index}`;\n            return error.path.includes(path);\n          });\n        }),\n      );\n  }\n\n  /**\n   * @returns An observable that emits a boolean indicating whether the section has any server errors or not.\n   */\n  protected getSectionStatus(): Observable<boolean> {\n    return this.sectionService.getSectionServerErrors(this.submissionId, this.sectionData.id).pipe(\n      map((validationErrors) => isEmpty(validationErrors),\n      ));\n  }\n\n  /**\n   * Unsubscribe from all subscriptions\n   */\n  onSectionDestroy() {\n    this.subs\n      .filter((subscription) => hasValue(subscription))\n      .forEach((subscription) => subscription.unsubscribe());\n  }\n\n  /**\n   * Add new row to dropdown for multiple service selection\n   * @param ldnPattern - the related LDN pattern where the service is added\n   */\n  addNewService(ldnPattern: LdnPattern): void {\n    //idle new service for new selection\n    this.ldnServiceByPattern[ldnPattern.pattern].services.push(null);\n  }\n}\n","<div class=\"container-fluid\">\n  <ng-container *ngIf=\"patterns?.length > 0 \">\n    <div *ngFor=\"let ldnPattern of patterns; let i = index\" class=\"col\">\n      <div *ngIf=\"(filterServices(ldnPattern.pattern ) | async)?.length > 0\">\n        <label class=\"row col-form-label\">\n          {{'submission.section.section-coar-notify.control.' + ldnPattern.pattern + '.label' | translate }}\n        </label\n        >\n        <div *ngIf=\"ldnServiceByPattern[ldnPattern.pattern]?.services.length\">\n          <div\n            *ngFor=\"\n            let service of ldnServiceByPattern[ldnPattern.pattern].services;\n            let serviceIndex = index\n          \"\n          >\n            <div class=\"row\">\n              <div ngbDropdown #myDropdown=\"ngbDropdown\" [class.mt-2]=\"serviceIndex > 0\" class=\"flex-grow-1\">\n                <div class=\"position-relative right-addon\"\n                     [attr.aria-label]=\"ldnPattern.pattern + '.dropdown'\">\n                  <i ngbDropdownToggle class=\"position-absolute scrollable-dropdown-toggle\"\n                     aria-hidden=\"true\"></i>\n                  <input\n                    [attr.aria-label]=\"ldnPattern.pattern+'.dropdownanchor'\"\n                    type=\"text\"\n                    [readonly]=\"true\"\n                    [ngClass]=\"{'border-danger': (getShownSectionErrors$(ldnPattern.pattern, serviceIndex) | async)?.length > 0}\"\n                    class=\"form-control w-100 scrollable-dropdown-input\"\n                    [value]=\"ldnServiceByPattern[ldnPattern.pattern].services[serviceIndex]?.name\"\n                    (click)=\"myDropdown.open()\"\n                  />\n                </div>\n                <div\n                  ngbDropdownMenu\n                  class=\"dropdown-menu scrollable-dropdown-menu w-100\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  <div\n                    class=\"scrollable-menu\"\n                    role=\"listbox\"\n                    infiniteScroll\n                    [infiniteScrollDistance]=\"2\"\n                    [infiniteScrollThrottle]=\"50\"\n                    [scrollWindow]=\"false\"\n                  >\n                    <button\n                      *ngIf=\"(filterServices(ldnPattern.pattern) | async)?.length === 0\"\n                      class=\"dropdown-item collection-item text-truncate w-100\"\n                    >\n                      {{'submission.section.section-coar-notify.dropdown.no-data' | translate}}\n                    </button>\n                    <button\n                      *ngIf=\"(filterServices(ldnPattern.pattern ) | async)?.length > 0\"\n                      class=\"dropdown-item collection-item text-truncate w-100\"\n                      (click)=\"onChange(ldnPattern.pattern, serviceIndex, null)\"\n                    >\n                      {{'submission.section.section-coar-notify.dropdown.select-none' | translate}}\n                    </button>\n                    <button\n                      *ngFor=\"let serviceOption of filterServices(ldnPattern.pattern ) | async\"\n                      [ngClass]=\"{'bg-light': ldnServiceByPattern[ldnPattern.pattern ].services[serviceIndex]?.id === serviceOption.id}\"\n                      class=\"dropdown-item collection-item text-truncate w-100\"\n                      (click)=\"onChange(ldnPattern.pattern, serviceIndex, serviceOption)\"\n                    >\n                      <b>\n                        {{ serviceOption.name }}\n                      </b>\n                      <br />\n                      {{ serviceOption.description }}\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <button *ngIf=\"ldnServiceByPattern[ldnPattern.pattern].services.length > 1\"\n                      type=\"button\" [class.mt-2]=\"serviceIndex > 0\"\n                      class=\"btn btn-secondary ml-2\"\n                      role=\"button\"\n                      title=\"{{'form.remove' | translate}}\"\n                      [attr.aria-label]=\"'form.remove' | translate\"\n                      (click)=\"removeService(ldnPattern, serviceIndex)\"\n              >\n                <span><i class=\"fas fa-trash\" aria-hidden=\"true\"></i></span>\n              </button>\n            </div>\n\n            <small\n              class=\"row text-muted\"\n              *ngIf=\"!ldnServiceByPattern[ldnPattern.pattern].services[serviceIndex] &&\n                    serviceIndex === ldnServiceByPattern[ldnPattern.pattern].services.length -1\"\n            >\n              {{'submission.section.section-coar-notify.small.notification' | translate : {pattern : ldnPattern.pattern} }}\n            </small>\n            <ng-container *ngIf=\"(getShownSectionErrors$(ldnPattern.pattern , serviceIndex) | async)?.length > 0\">\n              <small class=\"row text-danger\" *ngFor=\"let error of (getShownSectionErrors$(ldnPattern.pattern , serviceIndex) | async)\">\n                {{ error.message | translate}}\n              </small>\n            </ng-container>\n            <div\n              class=\"row mt-1\"\n              *ngIf=\"ldnServiceByPattern[ldnPattern.pattern].services[serviceIndex]\"\n            >\n              <div\n                class=\"alert alert-info w-100 d-flex align-items-center flex-row\"\n              >\n                <i class=\"fa-solid fa-circle-info fa-xl ml-2\"></i>\n                <div class=\"ml-4\">\n                  <div>{{ 'submission.section.section-coar-notify.selection.description' | translate }}</div>\n                  <div *ngIf=\"ldnServiceByPattern[ldnPattern.pattern].services[serviceIndex]?.description; else noDesc\">\n                    {{ ldnServiceByPattern[ldnPattern.pattern].services[serviceIndex].description }}\n                  </div>\n                  <ng-template #noDesc>\n                <span class=\"text-muted\">\n                  {{ 'submission.section.section-coar-notify.selection.no-description' | translate }}\n                </span>\n                  </ng-template>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\" *ngIf=\"(getShownSectionErrors$(ldnPattern.pattern, serviceIndex) | async)?.length > 0\">\n              <div\n                class=\"alert alert-danger w-100 d-flex align-items-center flex-row\"\n              >\n                <div class=\"ml-4\">\n              <span>\n                {{ 'submission.section.section-coar-notify.notification.error' | translate }}\n              </span>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div *ngIf=\"ldnPattern.multipleRequest && (serviceIndex === ldnServiceByPattern[ldnPattern.pattern].services.length - 1)\"\n                   (click)=\"addNewService(ldnPattern)\"\n                   class=\"btn btn-link mt-2 pl-0\"\n              >\n                <i class=\"fas fa-plus\"></i>\n                {{ 'submission.sections.general.add-more' | translate }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n    <ng-container *ngIf=\"!hasSectionData\">\n    <p>\n      {{ 'submission.section.section-coar-notify.info.no-pattern' | translate }}\n    </p>\n  </ng-container>\n</div>\n","import { SubmissionSectionAccessesComponent } from './accesses/section-accesses.component';\nimport { SubmissionSectionCcLicensesComponent } from './cc-license/submission-section-cc-licenses.component';\nimport { SubmissionSectionDuplicatesComponent } from './duplicates/section-duplicates.component';\nimport { SubmissionSectionFormComponent } from './form/section-form.component';\nimport { SubmissionSectionIdentifiersComponent } from './identifiers/section-identifiers.component';\nimport { SubmissionSectionLicenseComponent } from './license/section-license.component';\nimport { SubmissionSectionCoarNotifyComponent } from './section-coar-notify/section-coar-notify.component';\nimport { SectionsType } from './sections-type';\nimport { SubmissionSectionSherpaPoliciesComponent } from './sherpa-policies/section-sherpa-policies.component';\nimport { SubmissionSectionUploadComponent } from './upload/section-upload.component';\n\nconst submissionSectionsMap = new Map();\n\nsubmissionSectionsMap.set(SectionsType.AccessesCondition, SubmissionSectionAccessesComponent);\nsubmissionSectionsMap.set(SectionsType.License, SubmissionSectionLicenseComponent);\nsubmissionSectionsMap.set(SectionsType.CcLicense, SubmissionSectionCcLicensesComponent);\nsubmissionSectionsMap.set(SectionsType.SherpaPolicies, SubmissionSectionSherpaPoliciesComponent);\nsubmissionSectionsMap.set(SectionsType.Upload, SubmissionSectionUploadComponent);\nsubmissionSectionsMap.set(SectionsType.SubmissionForm, SubmissionSectionFormComponent);\nsubmissionSectionsMap.set(SectionsType.Identifiers, SubmissionSectionIdentifiersComponent);\nsubmissionSectionsMap.set(SectionsType.CoarNotify, SubmissionSectionCoarNotifyComponent);\nsubmissionSectionsMap.set(SectionsType.Duplicates, SubmissionSectionDuplicatesComponent);\n\n/**\n * @deprecated\n */\nexport function renderSectionFor(sectionType: SectionsType) {\n  return function decorator(objectElement: any) {\n    if (!objectElement) {\n      return;\n    }\n    submissionSectionsMap.set(sectionType, objectElement);\n  };\n}\n\nexport function rendersSectionType(sectionType: SectionsType) {\n  return submissionSectionsMap.get(sectionType);\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport uniq from 'lodash/uniq';\nimport {\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n  hasValue,\n  isNotEmpty,\n  isNotNull,\n} from '../../shared/empty.util';\nimport { SubmissionSectionError } from '../objects/submission-section-error.model';\nimport { SubmissionService } from '../submission.service';\nimport parseSectionErrorPaths, { SectionErrorPath } from '../utils/parseSectionErrorPaths';\nimport { SectionsService } from './sections.service';\nimport { SectionsType } from './sections-type';\n\n/**\n * Directive for handling generic section functionality\n */\n@Directive({\n  selector: '[dsSection]',\n  exportAs: 'sectionRef',\n  standalone: true,\n})\nexport class SectionsDirective implements OnDestroy, OnInit {\n\n  /**\n   * A boolean representing if section is mandatory\n   * @type {boolean}\n   */\n  @Input() mandatory = true;\n\n  /**\n   * The section id\n   * @type {string}\n   */\n  @Input() sectionId: string;\n\n  /**\n   * The section type\n   * @type {SectionsType}\n   */\n  @Input() sectionType: SectionsType;\n\n  /**\n   * The submission id\n   * @type {string}\n   */\n  @Input() submissionId: string;\n\n  /**\n   * The list of generic errors related to the section\n   * @type {Array}\n   */\n  public genericSectionErrors: string[] = [];\n\n  /**\n   * The list of all errors related to the element belonging to this section\n   * @type {Array}\n   */\n  public allSectionErrors: string[] = [];\n\n  /**\n   * A boolean representing if section is active\n   * @type {boolean}\n   */\n  private active = true;\n\n  /**\n   * A boolean representing if section is enabled\n   * @type {boolean}\n   */\n  private enabled: Observable<boolean>;\n\n  /**\n   * A boolean representing the panel collapsible state: opened (true) or closed (false)\n   * @type {boolean}\n   */\n  private sectionState = this.mandatory;\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  private subs: Subscription[] = [];\n\n  /**\n   * A boolean representing if section is valid\n   * @type {boolean}\n   */\n  private valid: Observable<boolean>;\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {ChangeDetectorRef} changeDetectorRef\n   * @param {SubmissionService} submissionService\n   * @param {SectionsService} sectionService\n   */\n  constructor(private changeDetectorRef: ChangeDetectorRef,\n    private submissionService: SubmissionService,\n    private sectionService: SectionsService) {\n  }\n\n  /**\n   * Initialize instance variables\n   */\n  ngOnInit() {\n    this.valid = this.sectionService.isSectionValid(this.submissionId, this.sectionId).pipe(\n      map((valid: boolean) => {\n        if (valid) {\n          this.resetErrors();\n        }\n        return valid;\n      }));\n\n    this.subs.push(\n      this.sectionService.getShownSectionErrors(this.submissionId, this.sectionId, this.sectionType)\n        .subscribe((errors: SubmissionSectionError[]) => {\n          if (isNotEmpty(errors)) {\n            errors.forEach((errorItem: SubmissionSectionError) => {\n              const parsedErrors: SectionErrorPath[] = parseSectionErrorPaths(errorItem.path);\n\n              parsedErrors.forEach((error: SectionErrorPath) => {\n                if (!error.fieldId) {\n                  this.genericSectionErrors = uniq(this.genericSectionErrors.concat(errorItem.message));\n                } else {\n                  this.allSectionErrors.push(errorItem.message);\n                }\n              });\n            });\n          } else {\n            this.resetErrors();\n          }\n        }),\n      this.submissionService.getActiveSectionId(this.submissionId)\n        .subscribe((activeSectionId) => {\n          const previousActive = this.active;\n          this.active = (activeSectionId === this.sectionId);\n          if (previousActive !== this.active) {\n            this.changeDetectorRef.detectChanges();\n            // If section is no longer active dispatch save action\n            if (!this.active && isNotNull(activeSectionId)) {\n              this.submissionService.dispatchSave(this.submissionId);\n            }\n          }\n        }),\n    );\n\n    this.enabled = this.sectionService.isSectionEnabled(this.submissionId, this.sectionId);\n  }\n\n  /**\n   * Unsubscribe from all subscriptions\n   */\n  ngOnDestroy() {\n    this.subs\n      .filter((subscription) => hasValue(subscription))\n      .forEach((subscription) => subscription.unsubscribe());\n  }\n\n  /**\n   * Change section state\n   *\n   * @param event\n   *    the event emitted\n   */\n  public sectionChange(event) {\n    this.sectionState = event.nextState;\n  }\n\n  /**\n   * Check if section panel is open\n   *\n   * @returns {boolean}\n   *    Returns true when section panel is open\n   */\n  public isOpen(): boolean {\n    return this.sectionState;\n  }\n\n  /**\n   * Check if section is mandatory\n   *\n   * @returns {boolean}\n   *    Returns true when section is mandatory\n   */\n  public isMandatory(): boolean {\n    return this.mandatory;\n  }\n\n  /**\n   * Check if section panel is active\n   *\n   * @returns {boolean}\n   *    Returns true when section panel is active\n   */\n  public isSectionActive(): boolean {\n    return this.active;\n  }\n\n  /**\n   * Check if section is enabled\n   *\n   * @returns {Observable<boolean>}\n   *    Emits true whenever section is enabled\n   */\n  public isEnabled(): Observable<boolean> {\n    return this.enabled;\n  }\n\n  /**\n   * Check if section is valid\n   *\n   * @returns {Observable<boolean>}\n   *    Emits true whenever section is valid\n   */\n  public isValid(): Observable<boolean> {\n    return this.valid;\n  }\n\n  /**\n   * Remove section panel from submission form\n   *\n   * @param submissionId\n   *    the submission id\n   * @param sectionId\n   *    the section id\n   * @returns {Observable<boolean>}\n   *    Emits true whenever section is valid\n   */\n  public removeSection(submissionId: string, sectionId: string) {\n    this.sectionService.removeSection(submissionId, sectionId);\n  }\n\n  /**\n   * Check if section has only generic errors\n   *\n   * @returns {boolean}\n   *    Returns true when section has only generic errors\n   */\n  public hasGenericErrors(): boolean {\n    return this.genericSectionErrors && this.genericSectionErrors.length > 0;\n  }\n\n  /**\n   * Check if section has errors\n   *\n   * @returns {boolean}\n   *    Returns true when section has errors\n   */\n  public hasErrors(): boolean {\n    return (this.genericSectionErrors && this.genericSectionErrors.length > 0) ||\n      (this.allSectionErrors && this.allSectionErrors.length > 0);\n  }\n\n  /**\n   * Return section errors\n   *\n   * @returns {Array}\n   *    Returns section errors list\n   */\n  public getErrors(): string[] {\n    return this.genericSectionErrors;\n  }\n\n  /**\n   * Set form focus to this section panel\n   *\n   * @param event\n   *    The event emitted\n   */\n  public setFocus(event): void {\n    if (!this.active) {\n      this.submissionService.setActiveSection(this.submissionId, this.sectionId);\n    }\n  }\n\n\n  /**\n   * Check if section is information\n   *\n   * @returns {Observable<boolean>}\n   *    Emits true whenever section is information\n   */\n  public isInfo(): boolean {\n    return this.sectionService.getIsInformational(this.sectionType);\n  }\n\n\n\n  /**\n   * Remove error from list\n   *\n   * @param index\n   *    The error array key\n   */\n  public removeError(index): void {\n    this.genericSectionErrors.splice(index);\n  }\n\n  /**\n   * Remove all errors from list\n   */\n  public resetErrors() {\n    if (isNotEmpty(this.genericSectionErrors)) {\n      this.sectionService.dispatchRemoveSectionErrors(this.submissionId, this.sectionId);\n    }\n    this.genericSectionErrors = [];\n    this.allSectionErrors = [];\n\n  }\n}\n","import {\n  NgForOf,\n  NgIf,\n  TitleCasePipe,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n} from '@angular/core';\nimport { NgbCollapseModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { PermittedVersions } from '../../../../core/submission/models/sherpa-policies-details.model';\n\n/**\n * This component represents a section that contains the inner accordions for the publisher policy versions.\n */\n@Component({\n  selector: 'ds-content-accordion',\n  templateUrl: './content-accordion.component.html',\n  styleUrls: ['./content-accordion.component.scss'],\n  imports: [\n    NgForOf,\n    TranslateModule,\n    NgIf,\n    NgbCollapseModule,\n    TitleCasePipe,\n  ],\n  standalone: true,\n})\nexport class ContentAccordionComponent {\n  /**\n   * PermittedVersions to show information from\n   */\n  @Input() version: PermittedVersions;\n\n  /**\n   * A boolean representing if div should start collapsed\n   */\n  public isCollapsed = true;\n}\n","<div class=\"mb-3 border-bottom\" data-test=\"collapse\">\n    <div class=\"w-100 d-flex justify-content-between collapse-toggle\" (click)=\"collapse.toggle()\">\n        <div class=\"d-flex\">\n            <button type=\"button\" class=\"btn btn-link p-0 mr-4\" (click)=\"$event.preventDefault()\"\n                [attr.aria-expanded]=\"!collapse.collapsed\" aria-controls=\"collapseExample\">\n                {{version.articleVersion | titlecase}} {{ 'submission.sections.sherpa.publisher.policy.version' |\n                translate\n                }}\n            </button>\n            <div>\n                <span *ngIf=\"!!version?.embargo && !!version?.embargo.amount;else noEmbargoTitle\"> <i\n                        class=\"fas fa-hourglass-half\"></i> {{version.embargo.amount}}\n                    {{version.embargo?.units[0]}}</span>\n                <ng-template #noEmbargoTitle>\n                    <span><i class=\"fas fa-hourglass-half\"></i> {{\n                        'submission.sections.sherpa.publisher.policy.noembargo' | translate }}</span>\n                </ng-template>\n\n                <span class=\"m-1 ml-4\">\n                    <i class=\"far fa-folder-open\"></i>\n                    <span *ngIf=\"!!version?.locations && version.locations.length > 0; else noLocations\">\n                        {{version.locations[0]}} <span\n                            *ngIf=\"version.locations.length > 1\">+{{version.locations.length-1}}</span>\n                    </span>\n                    <ng-template #noLocations>\n                        <span>{{\n                            'submission.sections.sherpa.publisher.policy.nolocation' | translate }}</span>\n                    </ng-template>\n                </span>\n            </div>\n        </div>\n        <div class=\"d-inline-block\">\n            <span *ngIf=\"collapse.collapsed\" class=\"fas fa-chevron-down\"></span>\n            <span *ngIf=\"!collapse.collapsed\" class=\"fas fa-chevron-up\"></span>\n        </div>\n    </div>\n    <div #collapse=\"ngbCollapse\" [ngbCollapse]=\"isCollapsed\">\n        <div *ngIf=\"!!version\" class=\"ml-4\">\n            <div class=\"row\" *ngIf=\"!!version?.embargo && !!version?.embargo.amount\">\n                <div class=\"col-4\">\n                    <p class=\"m-1\"><i class=\"fas fa-hourglass-half\"></i> {{\n                        'submission.sections.sherpa.publisher.policy.embargo' | translate }}</p>\n                </div>\n                <div class=\"col-6\">\n                    <p class=\"m-1\" *ngIf=\"!!version.embargo;else noEmbargo\">{{version.embargo.amount}}\n                        {{version.embargo.units}}</p>\n                    <ng-template #noEmbargo>\n                        <p class=\"m-1\">{{ 'submission.sections.sherpa.publisher.policy.noembargo' | translate }}</p>\n                    </ng-template>\n                </div>\n            </div>\n            <div class=\"row\" *ngIf=\"!!version?.licenses && version.licenses.length > 0\">\n                <div class=\"col-4\">\n                    <p class=\"m-1\"><i class=\"fas fa-certificate\"></i> {{\n                        'submission.sections.sherpa.publisher.policy.license' | translate }}</p>\n                </div>\n                <div class=\"col-6\">\n                    <p class=\"m-1\" *ngFor=\"let license of version.licenses\">{{license}}</p>\n                </div>\n            </div>\n            <div class=\"row\" *ngIf=\"!!version?.prerequisites && version.prerequisites.length > 0\">\n                <div class=\"col-4\">\n                    <p class=\"m-1\"><i class=\"fas fa-exclamation-circle\"></i> {{\n                        'submission.sections.sherpa.publisher.policy.prerequisites' | translate }}</p>\n                </div>\n                <div class=\"col-6\">\n                    <p class=\"m-1\" *ngFor=\"let prerequisite of version.prerequisites\">{{prerequisite}}</p>\n                </div>\n            </div>\n            <div class=\"row\" *ngIf=\"!!version?.locations && version.locations.length > 0\">\n                <div class=\"col-4\">\n                    <p class=\"m-1\"><i class=\"far fa-folder-open\"></i> {{\n                        'submission.sections.sherpa.publisher.policy.location' | translate }}</p>\n                </div>\n                <div class=\"col-6\">\n                    <p class=\"m-1\" *ngFor=\"let location of version.locations\">{{location}}</p>\n                </div>\n            </div>\n            <div class=\"row\" *ngIf=\"!!version?.conditions && version.conditions.length > 0\">\n                <div class=\"col-4\">\n                    <p class=\"m-1\"><i class=\"fas fa-tasks\"></i> {{\n                        'submission.sections.sherpa.publisher.policy.conditions' | translate }}</p>\n                </div>\n                <div class=\"col-6\">\n                    <p class=\"m-1\" *ngFor=\"let condition of version.conditions\">{{condition}}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import {\n  DatePipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n} from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { Metadata } from '../../../../core/submission/models/sherpa-policies-details.model';\n\n/**\n * This component represents a section that contains the matadata informations.\n */\n@Component({\n  selector: 'ds-metadata-information',\n  templateUrl: './metadata-information.component.html',\n  styleUrls: ['./metadata-information.component.scss'],\n  imports: [\n    NgIf,\n    TranslateModule,\n    DatePipe,\n  ],\n  standalone: true,\n})\nexport class MetadataInformationComponent {\n  /**\n   * Metadata to show information from\n   */\n  @Input() metadata: Metadata;\n\n}\n","<div class=\"ml-4\">\n    <div class=\"row\" *ngIf=\"!!metadata?.id\">\n        <div class=\"col-4\">\n            <p class=\"m-1\">{{ 'submission.sections.sherpa.record.information.id' | translate }}</p>\n        </div>\n        <div class=\"col-8\">\n            <p class=\"m-1\">{{metadata.id}}\n            </p>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!!metadata?.dateCreated\">\n        <div class=\"col-4\">\n            <p class=\"m-1\">{{ 'submission.sections.sherpa.record.information.date.created' | translate }}</p>\n        </div>\n        <div class=\"col-8\">\n            <p class=\"m-1\">{{metadata.dateCreated | date: 'd MMMM Y H:mm:ss zzzz' }}\n            </p>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!!metadata?.dateModified\">\n        <div class=\"col-4\">\n            <p class=\"m-1\">{{ 'submission.sections.sherpa.record.information.date.modified' | translate }}</p>\n        </div>\n        <div class=\"col-8\">\n            <p class=\"m-1\">{{metadata.dateModified| date: 'd MMMM Y H:mm:ss zzzz' }}\n            </p>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!!metadata?.uri\">\n        <div class=\"col-4\">\n            <p class=\"m-1\">{{ 'submission.sections.sherpa.record.information.uri' | translate }}</p>\n        </div>\n        <div class=\"col-8\">\n            <p class=\"m-1\">\n                <a [href]=\"metadata.uri\" target=\"_blank\">{{metadata.uri}}</a>\n            </p>\n        </div>\n    </div>\n</div>","import {\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n} from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { Journal } from '../../../../core/submission/models/sherpa-policies-details.model';\n\n/**\n * This component represents a section that contains the journal publication information.\n */\n@Component({\n  selector: 'ds-publication-information',\n  templateUrl: './publication-information.component.html',\n  styleUrls: ['./publication-information.component.scss'],\n  imports: [\n    NgIf,\n    TranslateModule,\n    NgForOf,\n  ],\n  standalone: true,\n})\nexport class PublicationInformationComponent {\n  /**\n   * Journal to show information from\n   */\n  @Input() journal: Journal;\n\n}\n","<div class=\"ml-4\">\n    <div class=\"row\" *ngIf=\"!!journal?.titles && journal.titles.length > 0\">\n        <div class=\"col-4\">\n            <p class=\"m-1\">{{'submission.sections.sherpa.publication.information.title' | translate}}</p>\n        </div>\n        <div class=\"col-4\">\n            <p class=\"m-1\" *ngFor=\"let title of journal.titles\">{{title}}\n            </p>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!!journal?.issns && journal.issns.length > 0\">\n        <div class=\"col-4\">\n            <p class=\"m-1\">{{'submission.sections.sherpa.publication.information.issns' | translate}}</p>\n        </div>\n        <div class=\"col-4\">\n            <p class=\"m-1\" *ngFor=\"let issn of journal.issns\">{{issn}}\n            </p>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!!journal?.url\">\n        <div class=\"col-4\">\n            <p class=\"m-1\">{{'submission.sections.sherpa.publication.information.url' | translate}}</p>\n        </div>\n        <div class=\"col-4\">\n            <p class=\"m-1\">\n                <a href=\"{{journal.url}}\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    {{journal.url}}\n                </a>\n            </p>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!!journal?.publishers && journal.publishers.length > 0\">\n        <div class=\"col-4\">\n            <p class=\"m-1\">{{'submission.sections.sherpa.publication.information.publishers' | translate}}</p>\n        </div>\n        <div class=\"col-4\" *ngFor=\"let publisher of journal.publishers\">\n            <p class=\"m-1\">\n                <a href=\"{{publisher.uri}}\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    {{publisher.name}}\n                </a>\n            </p>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!!journal?.romeoPub\">\n        <div class=\"col-4\">\n            <p class=\"m-1\">{{'submission.sections.sherpa.publication.information.romeoPub' | translate}}</p>\n        </div>\n        <div class=\"col-4\">\n            <p class=\"m-1\">\n                {{journal.romeoPub}}\n            </p>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!!journal?.zetoPub\">\n        <div class=\"col-4\">\n            <p class=\"m-1\">{{'submission.sections.sherpa.publication.information.zetoPub' | translate}}</p>\n        </div>\n        <div class=\"col-4\">\n            <p class=\"m-1\">\n                {{journal.zetoPub}}\n            </p>\n        </div>\n    </div>\n</div>","import {\n  KeyValuePipe,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n} from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { Policy } from '../../../../core/submission/models/sherpa-policies-details.model';\nimport { AlertType } from '../../../../shared/alert/alert-type';\nimport { ContentAccordionComponent } from '../content-accordion/content-accordion.component';\n\n/**\n * This component represents a section that contains the publisher policy informations.\n */\n@Component({\n  selector: 'ds-publisher-policy',\n  templateUrl: './publisher-policy.component.html',\n  styleUrls: ['./publisher-policy.component.scss'],\n  imports: [\n    ContentAccordionComponent,\n    TranslateModule,\n    KeyValuePipe,\n    NgForOf,\n    NgIf,\n  ],\n  standalone: true,\n})\nexport class PublisherPolicyComponent {\n\n  /**\n   * Policy to show information from\n   */\n  @Input() policy: Policy;\n\n\n  /**\n   * The AlertType enumeration\n   * @type {AlertType}\n   */\n  public AlertTypeEnum = AlertType;\n\n}\n","<div class=\"ml-4\">\n    <ds-content-accordion *ngFor=\"let permittedVersions of policy.permittedVersions\" [version]=\"permittedVersions\">\n    </ds-content-accordion>\n    <div class=\"row\" *ngIf=\"!!policy?.urls\">\n        <div class=\"col-12\">\n            <p class=\"m-1\">\n                {{'submission.sections.sherpa.publisher.policy.more.information' | translate}}\n            </p>\n            <ul>\n                <li *ngFor=\"let url of policy.urls | keyvalue\">\n                    <a href=\"{{url.key}}\" target=\"_blank\" rel=\"noopener noreferrer\">{{url.value}}</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>","import {\n  AsyncPipe,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  Inject,\n} from '@angular/core';\nimport { NgbCollapseModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  Observable,\n  of,\n  Subscription,\n} from 'rxjs';\n\nimport { JsonPatchOperationPathCombiner } from '../../../core/json-patch/builder/json-patch-operation-path-combiner';\nimport { JsonPatchOperationsBuilder } from '../../../core/json-patch/builder/json-patch-operations-builder';\nimport { WorkspaceitemSectionSherpaPoliciesObject } from '../../../core/submission/models/workspaceitem-section-sherpa-policies.model';\nimport { AlertComponent } from '../../../shared/alert/alert.component';\nimport { AlertType } from '../../../shared/alert/alert-type';\nimport {\n  hasValue,\n  isEmpty,\n} from '../../../shared/empty.util';\nimport { VarDirective } from '../../../shared/utils/var.directive';\nimport { SubmissionService } from '../../submission.service';\nimport { SectionModelComponent } from '../models/section.model';\nimport { SectionDataObject } from '../models/section-data.model';\nimport { SectionsService } from '../sections.service';\nimport { MetadataInformationComponent } from './metadata-information/metadata-information.component';\nimport { PublicationInformationComponent } from './publication-information/publication-information.component';\nimport { PublisherPolicyComponent } from './publisher-policy/publisher-policy.component';\n\n/**\n * This component represents a section for the sherpa policy informations structure.\n */\n@Component({\n  selector: 'ds-section-sherpa-policies',\n  templateUrl: './section-sherpa-policies.component.html',\n  styleUrls: ['./section-sherpa-policies.component.scss'],\n  imports: [\n    MetadataInformationComponent,\n    NgbCollapseModule,\n    AlertComponent,\n    TranslateModule,\n    PublisherPolicyComponent,\n    NgIf,\n    PublicationInformationComponent,\n    AsyncPipe,\n    VarDirective,\n    NgForOf,\n  ],\n  standalone: true,\n})\nexport class SubmissionSectionSherpaPoliciesComponent extends SectionModelComponent {\n\n  /**\n   * The accesses section data\n   * @type {WorkspaceitemSectionAccessesObject}\n   */\n  public sherpaPoliciesData$: BehaviorSubject<WorkspaceitemSectionSherpaPoliciesObject> = new BehaviorSubject<WorkspaceitemSectionSherpaPoliciesObject>(null);\n\n  /**\n   * The [[JsonPatchOperationPathCombiner]] object\n   * @type {JsonPatchOperationPathCombiner}\n   */\n  protected pathCombiner: JsonPatchOperationPathCombiner;\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  protected subs: Subscription[] = [];\n\n  /**\n   * A boolean representing if div should start collapsed\n   */\n  public isCollapsed = false;\n\n\n  /**\n   * The AlertType enumeration\n   * @type {AlertType}\n   */\n  public AlertTypeEnum = AlertType;\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {SectionsService} sectionService\n   * @param {SectionDataObject} injectedSectionData\n   * @param {JsonPatchOperationsBuilder} operationsBuilder\n   * @param {SubmissionService} submissionService\n   * @param {string} injectedSubmissionId\n   */\n  constructor(\n    protected sectionService: SectionsService,\n    protected operationsBuilder: JsonPatchOperationsBuilder,\n    private submissionService: SubmissionService,\n    @Inject('sectionDataProvider') public injectedSectionData: SectionDataObject,\n    @Inject('submissionIdProvider') public injectedSubmissionId: string) {\n    super(undefined, injectedSectionData, injectedSubmissionId);\n  }\n\n  /**\n   * Unsubscribe from all subscriptions\n   */\n  onSectionDestroy() {\n\n    this.subs\n      .filter((subscription) => hasValue(subscription))\n      .forEach((subscription) => subscription.unsubscribe());\n  }\n\n\n  /**\n   * Initialize all instance variables and retrieve collection default access conditions\n   */\n  protected onSectionInit(): void {\n    this.pathCombiner = new JsonPatchOperationPathCombiner('sections', this.sectionData.id);\n    this.subs.push(\n      this.sectionService.getSectionData(this.submissionId, this.sectionData.id, this.sectionData.sectionType)\n        .subscribe((sherpaPolicies: WorkspaceitemSectionSherpaPoliciesObject) => {\n          this.sherpaPoliciesData$.next(sherpaPolicies);\n        }),\n    );\n  }\n\n  /**\n   * Get section status\n   *\n   * @return Observable<boolean>\n   *     the section status\n   */\n  protected getSectionStatus(): Observable<boolean> {\n    return of(true);\n  }\n\n  /**\n   * Check if section has no data\n   */\n  hasNoData(): boolean {\n    return isEmpty(this.sherpaPoliciesData$.value);\n  }\n\n  /**\n   * Refresh sherpa information\n   */\n  refresh() {\n    this.operationsBuilder.remove(this.pathCombiner.getPath('retrievalTime'));\n    this.submissionService.dispatchSaveSection(this.submissionId, this.sectionData.id);\n  }\n\n}\n","<ds-alert [type]=\"'alert-info'\" *ngIf=\"hasNoData()\" [content]=\"'submission.sections.sherpa-policy.title-empty'\">\n</ds-alert>\n\n<div *ngIf=\"!hasNoData()\" class=\"d-flex flex-column flex-nowrap mt-2 mb-4\">\n  <ds-alert [type]=\"'alert-info'\" >\n    {{'submission.sections.sherpa.publisher.policy.description' | translate}}\n  </ds-alert>\n  <div>\n    <button type=\"button\" class=\"btn btn-secondary float-right\" (click)=\"refresh()\" data-test=\"refresh-btn\">\n      <span><i class=\"fas fa-sync\"></i> {{'submission.sections.sherpa.publisher.policy.refresh' | translate}} </span>\n    </button>\n  </div>\n</div>\n\n<ng-container *ngVar=\"(sherpaPoliciesData$ | async)?.sherpaResponse as sherpaData\">\n    <ng-container *ngIf=\"!hasNoData() && (!!sherpaData && !sherpaData.error)\">\n        <ng-container *ngFor=\"let journal of sherpaData.journals;let j=index;\">\n            <div class=\"mb-3 border-bottom\" data-test=\"collapse\">\n                <div class=\"w-100 d-flex justify-content-between collapse-toggle mb-3\" (click)=\"collapse.toggle()\">\n                    <button type=\"button\" class=\"btn btn-link p-0\" (click)=\"$event.preventDefault()\"\n                        [attr.aria-expanded]=\"!collapse.collapsed\" aria-controls=\"collapseExample\">\n                        {{'submission.sections.sherpa.publication.information' | translate}}\n                    </button>\n                    <div class=\"d-inline-block\">\n                        <span *ngIf=\"collapse.collapsed\" class=\"fas fa-chevron-down\"></span>\n                        <span *ngIf=\"!collapse.collapsed\" class=\"fas fa-chevron-up\"></span>\n                    </div>\n                </div>\n                <div #collapse=\"ngbCollapse\" [ngbCollapse]=\"isCollapsed\">\n                    <ds-publication-information [journal]=\"journal\"></ds-publication-information>\n                </div>\n            </div>\n            <div *ngFor=\"let policy of journal.policies; let p=index;\" class=\"mb-3 border-bottom\" data-test=\"collapse\">\n                <div class=\"w-100 d-flex justify-content-between collapse-toggle mb-3\" (click)=\"collapse.toggle()\">\n                    <button type=\"button\" class=\"btn btn-link p-0\" (click)=\"$event.preventDefault()\"\n                        [attr.aria-expanded]=\"!collapse.collapsed\" aria-controls=\"collapseExample\">\n                        {{'submission.sections.sherpa.publisher.policy' | translate}}\n                    </button>\n                    <div class=\"d-inline-block\">\n                        <span *ngIf=\"collapse.collapsed\" class=\"fas fa-chevron-down\"></span>\n                        <span *ngIf=\"!collapse.collapsed\" class=\"fas fa-chevron-up\"></span>\n                    </div>\n                </div>\n                <div #collapse=\"ngbCollapse\" [ngbCollapse]=\"isCollapsed\">\n                    <ds-publisher-policy [policy]=\"policy\"></ds-publisher-policy>\n                </div>\n            </div>\n        </ng-container>\n\n        <div class=\"mb-3 border-bottom\" data-test=\"collapse\">\n            <div class=\"w-100 d-flex justify-content-between collapse-toggle mb-3\" (click)=\"collapse.toggle()\">\n                <button type=\"button\" class=\"btn btn-link p-0\" (click)=\"$event.preventDefault()\"\n                    [attr.aria-expanded]=\"!collapse.collapsed\" aria-controls=\"collapseExample\">\n                    {{'submission.sections.sherpa.record.information' | translate}}\n                </button>\n                <div class=\"d-inline-block\">\n                    <span *ngIf=\"collapse.collapsed\" class=\"fas fa-chevron-down\"></span>\n                    <span *ngIf=\"!collapse.collapsed\" class=\"fas fa-chevron-up\"></span>\n                </div>\n            </div>\n            <div #collapse=\"ngbCollapse\" [ngbCollapse]=\"isCollapsed\">\n                <ds-metadata-information [metadata]=\"sherpaData.metadata\"></ds-metadata-information>\n            </div>\n        </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"!!sherpaData && sherpaData.error\">\n        <ds-alert [type]=\"AlertTypeEnum.Error\"\n            [content]=\"!!sherpaData.message ? sherpaData.message : 'submission.sections.sherpa.error.message'| translate\">\n        </ds-alert>\n    </ng-container>\n</ng-container>\n","import {\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\n\nimport { DSONameService } from '../../../../core/breadcrumbs/dso-name.service';\nimport { RemoteData } from '../../../../core/data/remote-data';\nimport { GroupDataService } from '../../../../core/eperson/group-data.service';\nimport { Group } from '../../../../core/eperson/models/group.model';\nimport { ResourcePolicy } from '../../../../core/resource-policy/models/resource-policy.model';\nimport { getFirstCompletedRemoteData } from '../../../../core/shared/operators';\nimport { isEmpty } from '../../../../shared/empty.util';\n\n/**\n * This component represents a badge that describe an access condition\n */\n@Component({\n  selector: 'ds-submission-section-upload-access-conditions',\n  templateUrl: './submission-section-upload-access-conditions.component.html',\n  imports: [\n    NgForOf,\n    NgIf,\n  ],\n  standalone: true,\n})\nexport class SubmissionSectionUploadAccessConditionsComponent implements OnInit {\n\n  /**\n   * The list of resource policy\n   * @type {Array}\n   */\n  @Input() accessConditions: ResourcePolicy[];\n\n  /**\n   * The list of access conditions\n   * @type {Array}\n   */\n  public accessConditionsList: ResourcePolicy[] = [];\n\n  constructor(\n    public dsoNameService: DSONameService,\n    protected groupService: GroupDataService,\n  ) {\n  }\n\n  /**\n   * Retrieve access conditions list\n   */\n  ngOnInit() {\n    this.accessConditions.forEach((accessCondition: ResourcePolicy) => {\n      if (isEmpty(accessCondition.name)) {\n        this.groupService.findByHref(accessCondition._links.group.href).pipe(\n          getFirstCompletedRemoteData(),\n        ).subscribe((rd: RemoteData<Group>) => {\n          if (rd.hasSucceeded) {\n            const group: Group = rd.payload;\n            const accessConditionEntry = Object.assign({}, accessCondition);\n            accessConditionEntry.name = this.dsoNameService.getName(group);\n            this.accessConditionsList.push(accessConditionEntry);\n          }\n        });\n      } else {\n        this.accessConditionsList.push(accessCondition);\n      }\n    });\n  }\n}\n","<ng-container *ngFor=\"let accessCondition of accessConditionsList\">\n  <span *ngIf=\"accessCondition.action === 'DEFAULT_BITSTREAM_READ'\" class=\"badge badge-primary mt-3 mr-2\">\n    {{accessCondition.name}} {{accessCondition.startDate}} {{accessCondition.endDate}}\n  </span>\n  <span *ngIf=\"accessCondition.name === 'lease'\" class=\"badge badge-primary mt-3 mr-2\">{{accessCondition.name}} from {{accessCondition.endDate}}</span>\n  <span *ngIf=\"accessCondition.name === 'embargo'\" class=\"badge badge-dark mt-3 mr-2\">{{accessCondition.name}} until {{accessCondition.startDate}}</span>\n  <br>\n</ng-container>\n","import { NgIf } from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER,\n  DynamicDatePickerModel,\n  DynamicFormArrayModel,\n  DynamicFormControlEvent,\n  DynamicFormControlModel,\n  DynamicFormGroupModel,\n  DynamicSelectModel,\n  MATCH_ENABLED,\n  OR_OPERATOR,\n} from '@ng-dynamic-forms/core';\nimport { DynamicDateControlValue } from '@ng-dynamic-forms/core/lib/model/dynamic-date-control.model';\nimport { DynamicFormControlCondition } from '@ng-dynamic-forms/core/lib/model/misc/dynamic-form-control-relation.model';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Subscription } from 'rxjs';\nimport {\n  filter,\n  mergeMap,\n  take,\n} from 'rxjs/operators';\nimport { SubmissionObject } from 'src/app/core/submission/models/submission-object.model';\nimport { WorkspaceitemSectionUploadObject } from 'src/app/core/submission/models/workspaceitem-section-upload.model';\nimport { DynamicCustomSwitchModel } from 'src/app/shared/form/builder/ds-dynamic-form-ui/models/custom-switch/custom-switch.model';\n\nimport { AccessConditionOption } from '../../../../../core/config/models/config-access-condition-option.model';\nimport { SubmissionFormsModel } from '../../../../../core/config/models/config-submission-forms.model';\nimport { JsonPatchOperationPathCombiner } from '../../../../../core/json-patch/builder/json-patch-operation-path-combiner';\nimport { JsonPatchOperationsBuilder } from '../../../../../core/json-patch/builder/json-patch-operations-builder';\nimport { WorkspaceitemSectionUploadFileObject } from '../../../../../core/submission/models/workspaceitem-section-upload-file.model';\nimport { SubmissionJsonPatchOperationsService } from '../../../../../core/submission/submission-json-patch-operations.service';\nimport { BtnDisabledDirective } from '../../../../../shared/btn-disabled.directive';\nimport { dateToISOFormat } from '../../../../../shared/date.util';\nimport {\n  hasNoValue,\n  hasValue,\n  isNotEmpty,\n  isNotNull,\n} from '../../../../../shared/empty.util';\nimport { FormBuilderService } from '../../../../../shared/form/builder/form-builder.service';\nimport { FormFieldModel } from '../../../../../shared/form/builder/models/form-field.model';\nimport { FormComponent } from '../../../../../shared/form/form.component';\nimport { FormService } from '../../../../../shared/form/form.service';\nimport { SubmissionService } from '../../../../submission.service';\nimport { SectionUploadService } from '../../section-upload.service';\nimport { POLICY_DEFAULT_WITH_LIST } from '../../section-upload-constants';\nimport {\n  BITSTREAM_ACCESS_CONDITION_GROUP_CONFIG,\n  BITSTREAM_ACCESS_CONDITION_GROUP_LAYOUT,\n  BITSTREAM_ACCESS_CONDITIONS_FORM_ARRAY_CONFIG,\n  BITSTREAM_ACCESS_CONDITIONS_FORM_ARRAY_LAYOUT,\n  BITSTREAM_FORM_ACCESS_CONDITION_END_DATE_CONFIG,\n  BITSTREAM_FORM_ACCESS_CONDITION_END_DATE_LAYOUT,\n  BITSTREAM_FORM_ACCESS_CONDITION_START_DATE_CONFIG,\n  BITSTREAM_FORM_ACCESS_CONDITION_START_DATE_LAYOUT,\n  BITSTREAM_FORM_ACCESS_CONDITION_TYPE_CONFIG,\n  BITSTREAM_FORM_ACCESS_CONDITION_TYPE_LAYOUT,\n  BITSTREAM_FORM_PRIMARY,\n  BITSTREAM_FORM_PRIMARY_LAYOUT,\n  BITSTREAM_METADATA_FORM_GROUP_CONFIG,\n  BITSTREAM_METADATA_FORM_GROUP_LAYOUT,\n} from './section-upload-file-edit.model';\n\n/**\n * This component represents the edit form for bitstream\n */\n@Component({\n  selector: 'ds-submission-section-upload-file-edit',\n  styleUrls: ['./section-upload-file-edit.component.scss'],\n  templateUrl: './section-upload-file-edit.component.html',\n  imports: [\n    FormComponent,\n    NgIf,\n    TranslateModule,\n    BtnDisabledDirective,\n  ],\n  standalone: true,\n})\nexport class SubmissionSectionUploadFileEditComponent\nimplements OnInit, OnDestroy {\n\n  /**\n   * The FormComponent reference\n   */\n  @ViewChild('formRef') public formRef: FormComponent;\n\n  /**\n   * The indicator is the primary bitstream\n   * it will be null if no primary bitstream is set for the ORIGINAL bundle\n   * @type {boolean, null}\n   */\n  isPrimary: boolean;\n\n  /**\n   * The list of available access condition\n   * @type {Array}\n   */\n  public availableAccessConditionOptions: any[];\n\n  /**\n   * The submission id\n   * @type {string}\n   */\n  public collectionId: string;\n\n  /**\n   * Define if collection access conditions policy type :\n   * POLICY_DEFAULT_NO_LIST : is not possible to define additional access group/s for the single file\n   * POLICY_DEFAULT_WITH_LIST : is possible to define additional access group/s for the single file\n   * @type {number}\n   */\n  public collectionPolicyType: number;\n\n  /**\n   * The configuration for the bitstream's metadata form\n   * @type {SubmissionFormsModel}\n   */\n  public configMetadataForm: SubmissionFormsModel;\n\n  /**\n   * The bitstream's metadata data\n   * @type {WorkspaceitemSectionUploadFileObject}\n   */\n  public fileData: WorkspaceitemSectionUploadFileObject;\n\n  /**\n   * The bitstream id\n   * @type {string}\n   */\n  public fileId: string;\n\n  /**\n   * The bitstream array key\n   * @type {string}\n   */\n  public fileIndex: string;\n\n  /**\n   * The form id\n   * @type {string}\n   */\n  public formId: string;\n\n  /**\n   * The section id\n   * @type {string}\n   */\n  public sectionId: string;\n\n  /**\n   * The submission id\n   * @type {string}\n   */\n  public submissionId: string;\n\n  /**\n   * The list of all available metadata\n   */\n  formMetadata: string[] = [];\n\n  /**\n   * The form model\n   * @type {DynamicFormControlModel[]}\n   */\n  formModel: DynamicFormControlModel[];\n\n  /**\n   * When `true` form controls are deactivated\n   */\n  isSaving = false;\n\n  /**\n   * The [JsonPatchOperationPathCombiner] object\n   * @type {JsonPatchOperationPathCombiner}\n   */\n  protected pathCombiner: JsonPatchOperationPathCombiner;\n\n  protected subscriptions: Subscription[] = [];\n\n  /**\n   * Initialize instance variables\n   *\n   * @param activeModal\n   * @param {ChangeDetectorRef} cdr\n   * @param {FormBuilderService} formBuilderService\n   * @param {FormService} formService\n   * @param {SubmissionService} submissionService\n   * @param {JsonPatchOperationsBuilder} operationsBuilder\n   * @param {SubmissionJsonPatchOperationsService} operationsService\n   * @param {SectionUploadService} uploadService\n   */\n  constructor(\n    protected activeModal: NgbActiveModal,\n    private cdr: ChangeDetectorRef,\n    private formBuilderService: FormBuilderService,\n    private formService: FormService,\n    private submissionService: SubmissionService,\n    private operationsBuilder: JsonPatchOperationsBuilder,\n    private operationsService: SubmissionJsonPatchOperationsService,\n    private uploadService: SectionUploadService,\n  ) {\n  }\n\n  /**\n   * Initialize form model values\n   *\n   * @param formModel\n   *    The form model\n   */\n  public initModelData(formModel: DynamicFormControlModel[]) {\n\n    const primaryBitstreamModel: any = this.formBuilderService.findById('primary', formModel, this.fileIndex);\n    primaryBitstreamModel.value = this.isPrimary || false;\n\n    this.fileData.accessConditions.forEach((accessCondition, index) => {\n      Array.of('name', 'startDate', 'endDate')\n        .filter((key) => accessCondition.hasOwnProperty(key) && isNotEmpty(accessCondition[key]))\n        .forEach((key) => {\n          const metadataModel: any = this.formBuilderService.findById(key, formModel, index);\n          if (metadataModel) {\n            if (metadataModel.type === DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER) {\n              const date = new Date(accessCondition[key]);\n              metadataModel.value = {\n                year: date.getUTCFullYear(),\n                month: date.getUTCMonth() + 1,\n                day: date.getUTCDate(),\n              };\n            } else {\n              metadataModel.value = accessCondition[key];\n            }\n          }\n        });\n    });\n  }\n\n  /**\n   * Dispatch form model update when changing an access condition\n   *\n   * @param event\n   *    The event emitted\n   */\n  onChange(event: DynamicFormControlEvent) {\n    if (event.model.id === 'name') {\n      this.setOptions(event.model, event.control);\n    }\n  }\n\n  onModalClose() {\n    this.activeModal.dismiss();\n  }\n\n  onSubmit() {\n    this.isSaving = true;\n    this.saveBitstreamData();\n  }\n\n  /**\n   * Update `startDate`, 'groupUUID' and 'endDate' model\n   *\n   * @param model\n   *    The [[DynamicFormControlModel]] object\n   * @param control\n   *    The [[FormControl]] object\n   */\n  public setOptions(model: DynamicFormControlModel, control: UntypedFormControl) {\n    let accessCondition: AccessConditionOption = null;\n    this.availableAccessConditionOptions.filter((element) => element.name === control.value)\n      .forEach((element) => accessCondition = element );\n    if (isNotEmpty(accessCondition)) {\n      const startDateControl: UntypedFormControl = control.parent.get('startDate') as UntypedFormControl;\n      const endDateControl: UntypedFormControl = control.parent.get('endDate') as UntypedFormControl;\n\n      // Clear previous state\n      startDateControl?.markAsUntouched();\n      endDateControl?.markAsUntouched();\n\n      startDateControl?.setValue(null);\n      control.parent.markAsDirty();\n      endDateControl?.setValue(null);\n    }\n  }\n\n  /**\n   * Dispatch form model init\n   */\n  ngOnInit() {\n    if (this.fileData && this.formId) {\n      this.formModel = this.buildFileEditForm();\n      this.cdr.detectChanges();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeAll();\n  }\n\n  protected retrieveValueFromField(field: any) {\n    const temp = Array.isArray(field) ? field[0] : field;\n    return (temp) ? temp.value : undefined;\n  }\n\n  /**\n   * Initialize form model\n   */\n  protected buildFileEditForm() {\n    const configDescr: FormFieldModel = Object.assign({}, this.configMetadataForm.rows[0].fields[0]);\n    configDescr.repeatable = false;\n    const configForm = Object.assign({}, this.configMetadataForm, {\n      fields: Object.assign([], this.configMetadataForm.rows[0].fields[0], [\n        this.configMetadataForm.rows[0].fields[0],\n        configDescr,\n      ]),\n    });\n    const formModel: DynamicFormControlModel[] = [];\n\n    formModel.push(new DynamicCustomSwitchModel(BITSTREAM_FORM_PRIMARY, BITSTREAM_FORM_PRIMARY_LAYOUT));\n\n    const metadataGroupModelConfig = Object.assign({}, BITSTREAM_METADATA_FORM_GROUP_CONFIG);\n    metadataGroupModelConfig.group = this.formBuilderService.modelFromConfiguration(\n      this.submissionId,\n      configForm,\n      this.collectionId,\n      this.fileData.metadata,\n      this.submissionService.getSubmissionScope(),\n    );\n    formModel.push(new DynamicFormGroupModel(metadataGroupModelConfig, BITSTREAM_METADATA_FORM_GROUP_LAYOUT));\n    const accessConditionTypeModelConfig = Object.assign({}, BITSTREAM_FORM_ACCESS_CONDITION_TYPE_CONFIG);\n    const accessConditionsArrayConfig = Object.assign({}, BITSTREAM_ACCESS_CONDITIONS_FORM_ARRAY_CONFIG);\n    const accessConditionTypeOptions = [];\n\n    if (this.collectionPolicyType === POLICY_DEFAULT_WITH_LIST) {\n      for (const accessCondition of this.availableAccessConditionOptions) {\n        accessConditionTypeOptions.push(\n          {\n            label: accessCondition.name,\n            value: accessCondition.name,\n          },\n        );\n      }\n      accessConditionTypeModelConfig.options = accessConditionTypeOptions;\n\n      // Dynamically assign of relation in config. For startDate and endDate.\n      const startDateCondition: DynamicFormControlCondition[] = [];\n      const endDateCondition: DynamicFormControlCondition[] = [];\n      let maxStartDate: DynamicDateControlValue;\n      let maxEndDate: DynamicDateControlValue;\n      this.availableAccessConditionOptions.forEach((condition) => {\n\n        if (condition.hasStartDate) {\n          startDateCondition.push({ id: 'name', value: condition.name });\n          if (condition.maxStartDate) {\n            const min = new Date(condition.maxStartDate);\n            maxStartDate = {\n              year: min.getUTCFullYear(),\n              month: min.getUTCMonth() + 1,\n              day: min.getUTCDate(),\n            };\n          }\n        }\n        if (condition.hasEndDate) {\n          endDateCondition.push({ id: 'name', value: condition.name });\n          if (condition.maxEndDate) {\n            const max = new Date(condition.maxEndDate);\n            maxEndDate = {\n              year: max.getUTCFullYear(),\n              month: max.getUTCMonth() + 1,\n              day: max.getUTCDate(),\n            };\n          }\n        }\n      });\n      const confStart = { relations: [{ match: MATCH_ENABLED, operator: OR_OPERATOR, when: startDateCondition }] };\n      const confEnd = { relations: [{ match: MATCH_ENABLED, operator: OR_OPERATOR, when: endDateCondition }] };\n      const hasStartDate = startDateCondition.length > 0;\n      const hasEndDate = endDateCondition.length > 0;\n\n      accessConditionsArrayConfig.groupFactory = () => {\n        const type = new DynamicSelectModel(accessConditionTypeModelConfig, BITSTREAM_FORM_ACCESS_CONDITION_TYPE_LAYOUT);\n        const startDateConfig = Object.assign({}, BITSTREAM_FORM_ACCESS_CONDITION_START_DATE_CONFIG, confStart);\n        if (maxStartDate) {\n          startDateConfig.max = maxStartDate;\n        }\n\n        const endDateConfig = Object.assign({}, BITSTREAM_FORM_ACCESS_CONDITION_END_DATE_CONFIG, confEnd);\n        if (maxEndDate) {\n          endDateConfig.max = maxEndDate;\n        }\n\n        const startDate = new DynamicDatePickerModel(startDateConfig, BITSTREAM_FORM_ACCESS_CONDITION_START_DATE_LAYOUT);\n        const endDate = new DynamicDatePickerModel(endDateConfig, BITSTREAM_FORM_ACCESS_CONDITION_END_DATE_LAYOUT);\n        const accessConditionGroupConfig = Object.assign({}, BITSTREAM_ACCESS_CONDITION_GROUP_CONFIG);\n        accessConditionGroupConfig.group = [type];\n        if (hasStartDate) {\n          accessConditionGroupConfig.group.push(startDate);\n        }\n        if (hasEndDate) {\n          accessConditionGroupConfig.group.push(endDate);\n        }\n        return [new DynamicFormGroupModel(accessConditionGroupConfig, BITSTREAM_ACCESS_CONDITION_GROUP_LAYOUT)];\n      };\n\n      // Number of access conditions blocks in form\n      accessConditionsArrayConfig.initialCount = isNotEmpty(this.fileData.accessConditions) ? this.fileData.accessConditions.length : 1;\n      formModel.push(\n        new DynamicFormArrayModel(accessConditionsArrayConfig, BITSTREAM_ACCESS_CONDITIONS_FORM_ARRAY_LAYOUT),\n      );\n\n    }\n    this.initModelData(formModel);\n    return formModel;\n  }\n\n\n  /**\n   * Save bitstream metadata\n   */\n  saveBitstreamData() {\n\n    const pathFragment = ['files', this.fileIndex];\n\n    // validate form\n    this.formService.validateAllFormFields(this.formRef.formGroup);\n    const saveBitstreamDataSubscription = this.formService.isValid(this.formId).pipe(\n      take(1),\n      filter((isValid) => isValid),\n      mergeMap(() => this.formService.getFormData(this.formId)),\n      take(1),\n      mergeMap((formData: any) => {\n        this.uploadService.updatePrimaryBitstreamOperation(this.pathCombiner.getPath('primary'), this.isPrimary, formData.primary[0], this.fileId);\n\n        // collect bitstream metadata\n        Object.keys((formData.metadata))\n          .filter((key) => isNotEmpty(formData.metadata[key]))\n          .forEach((key) => {\n            const metadataKey = key.replace(/_/g, '.');\n            const path = `metadata/${metadataKey}`;\n            this.operationsBuilder.add(this.pathCombiner.getPath([...pathFragment, path]), formData.metadata[key], true);\n          });\n        Object.keys((this.fileData.metadata))\n          .filter((key) => isNotEmpty(this.fileData.metadata[key]))\n          .filter((key) => hasNoValue(formData.metadata[key]))\n          .filter((key) => this.formMetadata.includes(key))\n          .forEach((key) => {\n            const metadataKey = key.replace(/_/g, '.');\n            const path = `metadata/${metadataKey}`;\n            this.operationsBuilder.remove(this.pathCombiner.getPath([...pathFragment, path]));\n          });\n        const accessConditionsToSave = [];\n        if (formData.hasOwnProperty('accessConditions')) {\n          formData.accessConditions\n            .filter((accessConditions) => isNotNull(accessConditions))\n            .map((accessConditions) => accessConditions.accessConditionGroup)\n            .filter((accessCondition) => isNotEmpty(accessCondition))\n            .forEach((accessCondition) => {\n              let accessConditionOpt;\n\n              this.availableAccessConditionOptions\n                .filter((element) => isNotNull(accessCondition.name) && element.name === accessCondition.name[0].value)\n                .forEach((element) => accessConditionOpt = element);\n\n              if (accessConditionOpt) {\n                const currentAccessCondition = Object.assign({}, accessCondition);\n                currentAccessCondition.name = this.retrieveValueFromField(accessCondition.name);\n\n                /* When start and end date fields are deactivated, their values may be still present in formData,\n              therefore it is necessary to delete them if they're not allowed by the current access condition option. */\n                if (!accessConditionOpt.hasStartDate) {\n                  delete currentAccessCondition.startDate;\n                } else if (accessCondition.startDate) {\n                  const startDate = this.retrieveValueFromField(accessCondition.startDate);\n                  // Clamp the start date to the maximum, if any, since the\n                  // datepicker sometimes exceeds it.\n                  let startDateDate = new Date(startDate);\n                  if (accessConditionOpt.maxStartDate) {\n                    const maxStartDateDate = new Date(accessConditionOpt.maxStartDate);\n                    if (startDateDate > maxStartDateDate) {\n                      startDateDate = maxStartDateDate;\n                    }\n                  }\n                  currentAccessCondition.startDate = dateToISOFormat(startDateDate);\n                }\n                if (!accessConditionOpt.hasEndDate) {\n                  delete currentAccessCondition.endDate;\n                } else if (accessCondition.endDate) {\n                  const endDate = this.retrieveValueFromField(accessCondition.endDate);\n                  // Clamp the end date to the maximum, if any, since the\n                  // datepicker sometimes exceeds it.\n                  let endDateDate = new Date(endDate);\n                  if (accessConditionOpt.maxEndDate) {\n                    const maxEndDateDate = new Date(accessConditionOpt.maxEndDate);\n                    if (endDateDate > maxEndDateDate) {\n                      endDateDate = maxEndDateDate;\n                    }\n                  }\n                  currentAccessCondition.endDate = dateToISOFormat(endDateDate);\n                }\n                accessConditionsToSave.push(currentAccessCondition);\n              }\n            });\n        }\n        if (isNotEmpty(accessConditionsToSave)) {\n          this.operationsBuilder.add(this.pathCombiner.getPath([...pathFragment, 'accessConditions']), accessConditionsToSave, true);\n        }\n        // dispatch a PATCH request to save metadata\n        return this.operationsService.jsonPatchByResourceID(\n          this.submissionService.getSubmissionObjectLinkName(),\n          this.submissionId,\n          this.pathCombiner.rootElement,\n          this.pathCombiner.subRootElement);\n      }),\n    ).subscribe((result: SubmissionObject[]) => {\n      const section = result[0].sections[this.sectionId];\n      if (!section) {\n        return;\n      }\n      const uploadSection = (section as WorkspaceitemSectionUploadObject);\n\n      this.uploadService.updateFilePrimaryBitstream(this.submissionId, this.sectionId, uploadSection.primary);\n\n      Object.keys(uploadSection.files)\n        .filter((key) => uploadSection.files[key].uuid === this.fileId)\n        .forEach((key) => this.uploadService.updateFileData(\n          this.submissionId, this.sectionId, this.fileId, uploadSection.files[key]),\n        );\n      this.isSaving = false;\n      this.activeModal.close();\n    });\n    this.subscriptions.push(saveBitstreamDataSubscription);\n  }\n\n  private unsubscribeAll() {\n    this.subscriptions.filter((sub) => hasValue(sub)).forEach((sub) => sub.unsubscribe());\n  }\n\n}\n","<div>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\">{{'submission.sections.upload.edit.title' | translate}}</h4>\n    <button type=\"button\" class=\"close\" (click)=\"onModalClose()\" aria-label=\"Close\" [dsBtnDisabled]=\"isSaving\">\n      <span aria-hidden=\"true\">×</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <ds-form *ngIf=\"formModel\"\n             #formRef=\"formComponent\"\n             [formId]=\"formId\"\n             [formModel]=\"formModel\"\n             [displaySubmit]=\"!isSaving\"\n             [displayCancel]=\"!isSaving\"\n             (submitForm)=\"onSubmit()\"\n             (cancel)=\"onModalClose()\"\n             (dfChange)=\"onChange($event)\"></ds-form>\n\n  </div>\n</div>\n","import {\n  DynamicDatePickerModelConfig,\n  DynamicFormArrayModelConfig,\n  DynamicFormControlLayout,\n  DynamicFormGroupModelConfig,\n  DynamicSelectModelConfig,\n  DynamicSwitchModelConfig,\n  MATCH_ENABLED,\n  OR_OPERATOR,\n} from '@ng-dynamic-forms/core';\n\nexport const BITSTREAM_METADATA_FORM_GROUP_CONFIG: DynamicFormGroupModelConfig = {\n  id: 'metadata',\n  group: [],\n};\nexport const BITSTREAM_METADATA_FORM_GROUP_LAYOUT: DynamicFormControlLayout = {\n  element: {\n    container: 'form-group',\n    label: 'col-form-label',\n  },\n  grid: {\n    label: 'col-sm-3',\n  },\n};\nexport const BITSTREAM_ACCESS_CONDITION_GROUP_CONFIG: DynamicFormGroupModelConfig = {\n  id: 'accessConditionGroup',\n  group: [],\n};\n\nexport const BITSTREAM_ACCESS_CONDITION_GROUP_LAYOUT: DynamicFormControlLayout = {\n  element: {\n    host: 'form-group access-condition-group col',\n    container: 'pl-1 pr-1',\n    control: 'form-row ',\n  },\n};\n\nexport const BITSTREAM_ACCESS_CONDITIONS_FORM_ARRAY_CONFIG: DynamicFormArrayModelConfig = {\n  id: 'accessConditions',\n  groupFactory: null,\n};\nexport const BITSTREAM_ACCESS_CONDITIONS_FORM_ARRAY_LAYOUT: DynamicFormControlLayout = {\n  grid: {\n    group: 'form-row pt-4',\n  },\n};\n\nexport const BITSTREAM_FORM_ACCESS_CONDITION_TYPE_CONFIG: DynamicSelectModelConfig<any> = {\n  id: 'name',\n  label: 'submission.sections.upload.form.access-condition-label',\n  hint: 'submission.sections.upload.form.access-condition-hint',\n  options: [],\n};\nexport const BITSTREAM_FORM_ACCESS_CONDITION_TYPE_LAYOUT: DynamicFormControlLayout = {\n  element: {\n    host: 'col-12',\n    label: 'col-form-label name-label',\n  },\n};\nexport const BITSTREAM_FORM_PRIMARY_LAYOUT: DynamicFormControlLayout = {\n  element: {\n    host: 'col-12',\n    container: 'text-right',\n  },\n};\n\nexport const BITSTREAM_FORM_PRIMARY: DynamicSwitchModelConfig = {\n  id: 'primary',\n  name: 'primary',\n  label: 'bitstream.edit.form.primaryBitstream.label',\n};\n\n\nexport const BITSTREAM_FORM_ACCESS_CONDITION_START_DATE_CONFIG: DynamicDatePickerModelConfig = {\n  id: 'startDate',\n  label: 'submission.sections.upload.form.from-label',\n  hint: 'submission.sections.upload.form.from-hint',\n  placeholder: 'submission.sections.upload.form.from-placeholder',\n  inline: false,\n  toggleIcon: 'far fa-calendar-alt',\n  relations: [\n    {\n      match: MATCH_ENABLED,\n      operator: OR_OPERATOR,\n      when: [],\n    },\n  ],\n  required: true,\n  validators: {\n    required: null,\n  },\n  errorMessages: {\n    required: 'submission.sections.upload.form.date-required-from',\n  },\n};\nexport const BITSTREAM_FORM_ACCESS_CONDITION_START_DATE_LAYOUT: DynamicFormControlLayout = {\n  element: {\n    label: 'col-form-label',\n  },\n  grid: {\n    host: 'col-6',\n  },\n};\n\nexport const BITSTREAM_FORM_ACCESS_CONDITION_END_DATE_CONFIG: DynamicDatePickerModelConfig = {\n  id: 'endDate',\n  label: 'submission.sections.upload.form.until-label',\n  hint: 'submission.sections.upload.form.until-hint',\n  placeholder: 'submission.sections.upload.form.until-placeholder',\n  inline: false,\n  toggleIcon: 'far fa-calendar-alt',\n  relations: [\n    {\n      match: MATCH_ENABLED,\n      operator: OR_OPERATOR,\n      when: [],\n    },\n  ],\n  required: true,\n  validators: {\n    required: null,\n  },\n  errorMessages: {\n    required: 'submission.sections.upload.form.date-required-until',\n  },\n};\nexport const BITSTREAM_FORM_ACCESS_CONDITION_END_DATE_LAYOUT: DynamicFormControlLayout = {\n  element: {\n    label: 'col-form-label',\n  },\n  grid: {\n    host: 'col-6',\n  },\n};\n","import {\n  AsyncPipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModalOptions } from '@ng-bootstrap/ng-bootstrap/modal/modal-config';\nimport { DynamicFormControlModel } from '@ng-dynamic-forms/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { SubmissionFormsModel } from '../../../../core/config/models/config-submission-forms.model';\nimport { JsonPatchOperationPathCombiner } from '../../../../core/json-patch/builder/json-patch-operation-path-combiner';\nimport { JsonPatchOperationsBuilder } from '../../../../core/json-patch/builder/json-patch-operations-builder';\nimport { Bitstream } from '../../../../core/shared/bitstream.model';\nimport { WorkspaceitemSectionUploadFileObject } from '../../../../core/submission/models/workspaceitem-section-upload-file.model';\nimport { SubmissionJsonPatchOperationsService } from '../../../../core/submission/submission-json-patch-operations.service';\nimport { BtnDisabledDirective } from '../../../../shared/btn-disabled.directive';\nimport {\n  hasValue,\n  isNotUndefined,\n} from '../../../../shared/empty.util';\nimport { ThemedFileDownloadLinkComponent } from '../../../../shared/file-download-link/themed-file-download-link.component';\nimport { FormService } from '../../../../shared/form/form.service';\nimport { FileSizePipe } from '../../../../shared/utils/file-size-pipe';\nimport { SubmissionService } from '../../../submission.service';\nimport { SectionUploadService } from '../section-upload.service';\nimport { SubmissionSectionUploadFileEditComponent } from './edit/section-upload-file-edit.component';\nimport { SubmissionSectionUploadFileViewComponent } from './view/section-upload-file-view.component';\n\n/**\n * This component represents a single bitstream contained in the submission\n */\n@Component({\n  selector: 'ds-base-submission-upload-section-file',\n  styleUrls: ['./section-upload-file.component.scss'],\n  templateUrl: './section-upload-file.component.html',\n  imports: [\n    TranslateModule,\n    SubmissionSectionUploadFileViewComponent,\n    NgIf,\n    AsyncPipe,\n    ThemedFileDownloadLinkComponent,\n    FileSizePipe,\n    BtnDisabledDirective,\n  ],\n  standalone: true,\n})\nexport class SubmissionSectionUploadFileComponent implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The indicator is the primary bitstream\n   * it will be null if no primary bitstream is set for the ORIGINAL bundle\n   * @type {boolean, null}\n   */\n  @Input() isPrimary: boolean | null;\n\n  /**\n   * The list of available access condition\n   * @type {Array}\n   */\n  @Input() availableAccessConditionOptions: any[];\n\n  /**\n   * The submission id\n   * @type {string}\n   */\n  @Input() collectionId: string;\n\n  /**\n   * Define if collection access conditions policy type :\n   * POLICY_DEFAULT_NO_LIST : is not possible to define additional access group/s for the single file\n   * POLICY_DEFAULT_WITH_LIST : is possible to define additional access group/s for the single file\n   * @type {number}\n   */\n  @Input() collectionPolicyType: number;\n\n  /**\n   * The configuration for the bitstream's metadata form\n   * @type {SubmissionFormsModel}\n   */\n  @Input() configMetadataForm: SubmissionFormsModel;\n\n  /**\n   * The bitstream id\n   * @type {string}\n   */\n  @Input() fileId: string;\n\n  /**\n   * The bitstream array key\n   * @type {string}\n   */\n  @Input() fileIndex: string;\n\n  /**\n   * The bitstream id\n   * @type {string}\n   */\n  @Input() fileName: string;\n\n  /**\n   * The section id\n   * @type {string}\n   */\n  @Input() sectionId: string;\n\n  /**\n   * The submission id\n   * @type {string}\n   */\n  @Input() submissionId: string;\n\n  /**\n   * The [[SubmissionSectionUploadFileEditComponent]] reference\n   * @type {SubmissionSectionUploadFileEditComponent}\n   */\n  @ViewChild(SubmissionSectionUploadFileEditComponent) fileEditComp: SubmissionSectionUploadFileEditComponent;\n\n  /**\n   * A boolean representing if a submission save operation is pending\n   * @type {Observable<boolean>}\n   */\n  public processingSaveStatus$: Observable<boolean>;\n\n  /**\n   * The bitstream's metadata data\n   * @type {WorkspaceitemSectionUploadFileObject}\n   */\n  public fileData: WorkspaceitemSectionUploadFileObject;\n\n  /**\n   * The form id\n   * @type {string}\n   */\n  public formId: string;\n\n  /**\n   * A boolean representing if to show bitstream edit form\n   * @type {boolean}\n   */\n  public readMode: boolean;\n\n  /**\n   * The form model\n   * @type {DynamicFormControlModel[]}\n   */\n  public formModel: DynamicFormControlModel[];\n\n  /**\n   * A boolean representing if a submission delete operation is pending\n   * @type {BehaviorSubject<boolean>}\n   */\n  public processingDelete$ = new BehaviorSubject<boolean>(false);\n\n  /**\n   * The [JsonPatchOperationPathCombiner] object\n   * @type {JsonPatchOperationPathCombiner}\n   */\n  protected pathCombiner: JsonPatchOperationPathCombiner;\n\n  /**\n   * The [JsonPatchOperationPathCombiner] object\n   * @type {JsonPatchOperationPathCombiner}\n   */\n  protected primaryBitstreamPathCombiner: JsonPatchOperationPathCombiner;\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  protected subscriptions: Subscription[] = [];\n\n  /**\n   * Array containing all the form metadata defined in configMetadataForm\n   * @type {Array}\n   */\n  protected formMetadata: string[] = [];\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {ChangeDetectorRef} cdr\n   * @param {FormService} formService\n   * @param {HALEndpointService} halService\n   * @param {NgbModal} modalService\n   * @param {JsonPatchOperationsBuilder} operationsBuilder\n   * @param {SubmissionJsonPatchOperationsService} operationsService\n   * @param {SubmissionService} submissionService\n   * @param {SectionUploadService} uploadService\n   */\n  constructor(\n    private formService: FormService,\n    private modalService: NgbModal,\n    private operationsBuilder: JsonPatchOperationsBuilder,\n    private operationsService: SubmissionJsonPatchOperationsService,\n    private submissionService: SubmissionService,\n    private uploadService: SectionUploadService,\n  ) {\n    this.readMode = true;\n  }\n\n  /**\n   * Retrieve bitstream's metadata\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.availableAccessConditionOptions) {\n      // Retrieve file state\n      this.subscriptions.push(\n        this.uploadService\n          .getFileData(this.submissionId, this.sectionId, this.fileId)\n          .pipe(filter((bitstream) => isNotUndefined(bitstream)))\n          .subscribe((bitstream) => {\n            this.fileData = bitstream;\n          },\n          ),\n      );\n    }\n  }\n\n  /**\n   * Initialize instance variables\n   */\n  ngOnInit() {\n    this.formId = this.formService.getUniqueId(this.fileId);\n    this.processingSaveStatus$ = this.submissionService.getSubmissionSaveProcessingStatus(this.submissionId);\n    this.pathCombiner = new JsonPatchOperationPathCombiner('sections', this.sectionId);\n    this.loadFormMetadata();\n  }\n\n  /**\n   * Show confirmation dialog for delete\n   */\n  public confirmDelete(content) {\n    this.modalService.open(content).result.then(\n      (result) => {\n        if (result === 'ok') {\n          this.processingDelete$.next(true);\n          this.deleteFile();\n        }\n      },\n    );\n  }\n\n  /**\n   * Build a Bitstream object by the current file uuid\n   *\n   * @return Bitstream object\n   */\n  public getBitstream(): Bitstream {\n    return Object.assign(new Bitstream(), {\n      uuid: this.fileData.uuid,\n    });\n  }\n\n  editBitstreamData() {\n\n    const options: NgbModalOptions = {\n      size: 'xl',\n      backdrop: 'static',\n    };\n\n    const activeModal = this.modalService.open(SubmissionSectionUploadFileEditComponent, options);\n\n    activeModal.componentInstance.availableAccessConditionOptions = this.availableAccessConditionOptions;\n    activeModal.componentInstance.collectionId = this.collectionId;\n    activeModal.componentInstance.collectionPolicyType = this.collectionPolicyType;\n    activeModal.componentInstance.configMetadataForm = this.configMetadataForm;\n    activeModal.componentInstance.fileData = this.fileData;\n    activeModal.componentInstance.fileId = this.fileId;\n    activeModal.componentInstance.fileIndex = this.fileIndex;\n    activeModal.componentInstance.formId = this.formId;\n    activeModal.componentInstance.sectionId = this.sectionId;\n    activeModal.componentInstance.formMetadata = this.formMetadata;\n    activeModal.componentInstance.pathCombiner = this.pathCombiner;\n    activeModal.componentInstance.submissionId = this.submissionId;\n    activeModal.componentInstance.isPrimary = this.isPrimary;\n  }\n\n  togglePrimaryBitstream(event) {\n    this.uploadService.updatePrimaryBitstreamOperation(this.pathCombiner.getPath('primary'), this.isPrimary, event.target.checked, this.fileId);\n    this.submissionService.dispatchSaveSection(this.submissionId, this.sectionId);\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeAll();\n  }\n\n  unsubscribeAll() {\n    this.subscriptions.filter((sub) => hasValue(sub)).forEach((sub) => sub.unsubscribe());\n  }\n\n  protected loadFormMetadata() {\n    this.configMetadataForm.rows.forEach((row) => {\n      row.fields.forEach((field) => {\n        field.selectableMetadata.forEach((metadatum) => {\n          this.formMetadata.push(metadatum.metadata);\n        });\n      });\n    },\n    );\n  }\n\n  /**\n   * Delete bitstream from submission\n   */\n  protected deleteFile() {\n    this.operationsBuilder.remove(this.pathCombiner.getPath(['files', this.fileIndex]));\n    if (this.isPrimary) {\n      this.operationsBuilder.remove(this.pathCombiner.getPath('primary'));\n    }\n\n    this.subscriptions.push(this.operationsService.jsonPatchByResourceID(\n      this.submissionService.getSubmissionObjectLinkName(),\n      this.submissionId,\n      this.pathCombiner.rootElement,\n      this.pathCombiner.subRootElement)\n      .subscribe(() => {\n        if (this.isPrimary) {\n          this.uploadService.updateFilePrimaryBitstream(this.submissionId, this.sectionId, null);\n        }\n        this.uploadService.removeUploadedFile(this.submissionId, this.sectionId, this.fileId);\n        this.processingDelete$.next(false);\n      }));\n  }\n\n}\n","<ng-container *ngIf=\"fileData\">\n  <div class=\"row\">\n    <!-- Default switch -->\n    <div class=\"col-md-2 d-flex justify-content-center align-items-center\" >\n      <div class=\"custom-control custom-switch\">\n        <input\n        type=\"checkbox\"\n        class=\"custom-control-input\"\n        id=\"primaryBitstream{{fileIndex}}\"\n        [disabled]=\"processingSaveStatus$ | async\"\n        [checked]=\"isPrimary\"\n        (change)=\"togglePrimaryBitstream($event)\">\n        <label class=\"custom-control-label\" for=\"primaryBitstream{{fileIndex}}\">\n          <span class=\"sr-only\" *ngIf=\"!isPrimary\">{{'submission.sections.upload.primary.make' | translate:{ fileName: fileName } }}</span>\n          <span class=\"sr-only\" *ngIf=\"isPrimary\">{{'submission.sections.upload.primary.remove' | translate:{ fileName: fileName } }}</span>\n        </label>\n      </div>\n    </div>\n    <div class=\"col-md-10\">\n      <div class=\"float-left w-75\">\n        <ds-submission-section-upload-file-view [fileData]=\"fileData\"></ds-submission-section-upload-file-view>\n      </div>\n      <div class=\"float-right w-15\">\n        <ng-container>\n          <ds-file-download-link [cssClasses]=\"'btn btn-link-focus'\" [isBlank]=\"true\"\n                                        [bitstream]=\"getBitstream()\" [enableRequestACopy]=\"false\">\n            <i class=\"fa fa-download fa-2x text-normal\" aria-hidden=\"true\"></i>\n          </ds-file-download-link>\n          <button class=\"btn btn-link-focus\"\n                  [attr.aria-label]=\"'submission.sections.upload.edit.title' | translate\"\n                  title=\"{{ 'submission.sections.upload.edit.title' | translate }}\"\n                  (click)=\"$event.preventDefault();editBitstreamData();\">\n            <i class=\"fa fa-edit fa-2x text-normal\"></i>\n          </button>\n          <button class=\"btn btn-link-focus\"\n                  [attr.aria-label]=\"'submission.sections.upload.delete.confirm.title' | translate\"\n                  title=\"{{ 'submission.sections.upload.delete.confirm.title' | translate }}\"\n                  [dsBtnDisabled]=\"(processingDelete$ | async)\"\n                  (click)=\"$event.preventDefault();confirmDelete(content);\">\n            <i *ngIf=\"(processingDelete$ | async)\" class=\"fas fa-circle-notch fa-spin fa-2x text-danger\"></i>\n            <i *ngIf=\"(processingDelete$ | async) !== true\" class=\"fa fa-trash fa-2x text-danger\"></i>\n          </button>\n        </ng-container>\n      </div>\n      <div class=\"clearfix\"></div>\n    </div>\n  </div>\n</ng-container>\n\n<ng-template #content let-c=\"close\" let-d=\"dismiss\">\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title text-danger\">{{ 'submission.sections.upload.delete.confirm.title' | translate }}</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('cancel')\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <p>{{ 'submission.sections.upload.delete.confirm.info' | translate }}</p>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\"\n            (click)=\"c('cancel')\">{{ 'submission.sections.upload.delete.confirm.cancel' | translate }}</button>\n    <button type=\"button\" class=\"btn btn-danger\"\n            (click)=\"c('ok')\">{{ 'submission.sections.upload.delete.confirm.submit' | translate }}</button>\n  </div>\n</ng-template>\n","import {\n  Component,\n  Input,\n} from '@angular/core';\nimport { SubmissionFormsModel } from 'src/app/core/config/models/config-submission-forms.model';\nimport { ThemedComponent } from 'src/app/shared/theme-support/themed.component';\n\nimport { SubmissionSectionUploadFileComponent } from './section-upload-file.component';\n\n@Component({\n  selector: 'ds-submission-upload-section-file',\n  styleUrls: [],\n  templateUrl: '../../../../shared/theme-support/themed.component.html',\n  standalone: true,\n  imports: [SubmissionSectionUploadFileComponent],\n})\nexport class ThemedSubmissionSectionUploadFileComponent\n  extends ThemedComponent<SubmissionSectionUploadFileComponent> {\n\n  /**\n   * The list of available access condition\n   * @type {Array}\n   */\n  @Input() availableAccessConditionOptions: any[];\n\n   /**\n   * The indicator is the primary bitstream\n   * it will be null if no primary bitstream is set for the ORIGINAL bundle\n   * @type {boolean, null}\n   */\n   @Input() isPrimary: boolean | null;\n\n  /**\n   * The submission id\n   * @type {string}\n   */\n  @Input() collectionId: string;\n\n  /**\n   * Define if collection access conditions policy type :\n   * POLICY_DEFAULT_NO_LIST : is not possible to define additional access group/s for the single file\n   * POLICY_DEFAULT_WITH_LIST : is possible to define additional access group/s for the single file\n   * @type {number}\n   */\n  @Input() collectionPolicyType: number;\n\n  /**\n   * The configuration for the bitstream's metadata form\n   * @type {SubmissionFormsModel}\n   */\n  @Input() configMetadataForm: SubmissionFormsModel;\n\n  /**\n   * The bitstream id\n   * @type {string}\n   */\n  @Input() fileId: string;\n\n  /**\n   * The bitstream array key\n   * @type {string}\n   */\n  @Input() fileIndex: string;\n\n  /**\n   * The bitstream id\n   * @type {string}\n   */\n  @Input() fileName: string;\n\n  /**\n   * The section id\n   * @type {string}\n   */\n  @Input() sectionId: string;\n\n  /**\n   * The submission id\n   * @type {string}\n   */\n  @Input() submissionId: string;\n\n  protected inAndOutputNames: (keyof SubmissionSectionUploadFileComponent & keyof this)[] = [\n    'availableAccessConditionOptions',\n    'isPrimary',\n    'collectionId',\n    'collectionPolicyType',\n    'configMetadataForm',\n    'fileId',\n    'fileIndex',\n    'fileName',\n    'sectionId',\n    'submissionId',\n  ];\n\n  protected getComponentName(): string {\n    return 'SubmissionSectionUploadFileComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../../../themes/${themeName}/app/submission/sections/upload/file/section-upload-file.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./section-upload-file.component`);\n  }\n}\n","import {\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport {\n  MetadataMap,\n  MetadataValue,\n} from '../../../../../core/shared/metadata.models';\nimport { Metadata } from '../../../../../core/shared/metadata.utils';\nimport { WorkspaceitemSectionUploadFileObject } from '../../../../../core/submission/models/workspaceitem-section-upload-file.model';\nimport { isNotEmpty } from '../../../../../shared/empty.util';\nimport { FileSizePipe } from '../../../../../shared/utils/file-size-pipe';\nimport { TruncatePipe } from '../../../../../shared/utils/truncate.pipe';\nimport { SubmissionSectionUploadAccessConditionsComponent } from '../../accessConditions/submission-section-upload-access-conditions.component';\n\n/**\n * This component allow to show bitstream's metadata\n */\n@Component({\n  selector: 'ds-submission-section-upload-file-view',\n  templateUrl: './section-upload-file-view.component.html',\n  imports: [\n    SubmissionSectionUploadAccessConditionsComponent,\n    TranslateModule,\n    TruncatePipe,\n    NgIf,\n    NgForOf,\n    FileSizePipe,\n  ],\n  standalone: true,\n})\nexport class SubmissionSectionUploadFileViewComponent implements OnInit {\n\n  /**\n   * The bitstream's metadata data\n   * @type {WorkspaceitemSectionUploadFileObject}\n   */\n  @Input() fileData: WorkspaceitemSectionUploadFileObject;\n\n  /**\n   * The [[MetadataMap]] object\n   * @type {MetadataMap}\n   */\n  public metadata: MetadataMap = Object.create({});\n\n  /**\n   * The bitstream's title key\n   * @type {string}\n   */\n  public fileTitleKey = 'Title';\n\n  /**\n   * The bitstream's description key\n   * @type {string}\n   */\n  public fileDescrKey = 'Description';\n\n  public fileFormat!: string;\n\n  public fileCheckSum!: {\n    checkSumAlgorithm: string;\n    value: string;\n  };\n\n  /**\n   * Initialize instance variables\n   */\n  ngOnInit() {\n    if (isNotEmpty(this.fileData.metadata)) {\n      this.metadata[this.fileTitleKey] = Metadata.all(this.fileData.metadata, 'dc.title');\n      this.metadata[this.fileDescrKey] = Metadata.all(this.fileData.metadata, 'dc.description');\n    }\n    this.fileCheckSum = this.fileData.checkSum;\n    this.fileFormat = this.fileData.format.shortDescription;\n  }\n\n  /**\n   * Gets all matching metadata in the map(s)\n   *\n   * @param metadataKey\n   *    The metadata key(s) in scope\n   * @returns {MetadataValue[]}\n   *    The matching values\n   */\n  getAllMetadataValue(metadataKey: string): MetadataValue[] {\n    return Metadata.all(this.metadata, metadataKey);\n  }\n}\n","<div>\n  <ng-container *ngIf=\"metadata\">\n    <ng-container *ngFor=\"let entry of getAllMetadataValue(fileTitleKey)\">\n      <ng-container *ngIf=\"entry.value !== ''\">\n        <h3>\n          {{entry.value}}\n          <span class=\"text-muted\">({{fileData?.sizeBytes | dsFileSize}})</span>\n        </h3>\n      </ng-container>\n      <ng-container *ngIf=\"entry.value === ''\">\n        <h5 *ngIf=\"metadata[fileTitleKey].indexOf(entry) === 0\">\n          <span class=\"text-muted\">{{'submission.sections.upload.no-entry' | translate}} {{fileTitleKey}}</span>\n        </h5>\n      </ng-container>\n      <span class=\"clearfix\"></span>\n    </ng-container>\n    <ng-container *ngFor=\"let entry of getAllMetadataValue(fileDescrKey)\">\n      <ng-container *ngIf=\"entry.value !== ''\">\n        {{entry.value | dsTruncate:['150']}}\n      </ng-container>\n      <ng-container *ngIf=\"entry.value === ''\">\n        <span *ngIf=\"metadata[fileDescrKey].indexOf(entry) === 0\"\n              class=\"text-muted\">{{'submission.sections.upload.no-entry' | translate}} {{fileDescrKey}}</span>\n      </ng-container>\n      <span class=\"clearfix\"></span>\n    </ng-container>\n  </ng-container>\n\n\n  <div class=\"mt-1\" *ngIf=\"fileFormat\">\n    {{'admin.registries.bitstream-formats.edit.head' | translate:{format: fileFormat} }}\n  </div>\n  <div class=\"mt-1\" *ngIf=\"fileCheckSum\">\n    Checksum {{fileCheckSum.checkSumAlgorithm}}: {{fileCheckSum.value}}\n  </div>\n  <span class=\"clearfix\"></span>\n  <ds-submission-section-upload-access-conditions [accessConditions]=\"fileData.accessConditions\"></ds-submission-section-upload-access-conditions>\n</div>\n","export const POLICY_DEFAULT_NO_LIST = 1; // Banner1\nexport const POLICY_DEFAULT_WITH_LIST = 2; // Banner2\n","import {\n  AsyncPipe,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  Inject,\n} from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  combineLatest as observableCombineLatest,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  mergeMap,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport { WorkspaceitemSectionUploadObject } from 'src/app/core/submission/models/workspaceitem-section-upload.model';\n\nimport { DSONameService } from '../../../core/breadcrumbs/dso-name.service';\nimport { AccessConditionOption } from '../../../core/config/models/config-access-condition-option.model';\nimport { SubmissionFormsModel } from '../../../core/config/models/config-submission-forms.model';\nimport { SubmissionUploadsModel } from '../../../core/config/models/config-submission-uploads.model';\nimport { SubmissionUploadsConfigDataService } from '../../../core/config/submission-uploads-config-data.service';\nimport { CollectionDataService } from '../../../core/data/collection-data.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { GroupDataService } from '../../../core/eperson/group-data.service';\nimport { Group } from '../../../core/eperson/models/group.model';\nimport { ResourcePolicyDataService } from '../../../core/resource-policy/resource-policy-data.service';\nimport { Collection } from '../../../core/shared/collection.model';\nimport { getFirstSucceededRemoteData } from '../../../core/shared/operators';\nimport { AlertComponent } from '../../../shared/alert/alert.component';\nimport { AlertType } from '../../../shared/alert/alert-type';\nimport {\n  hasValue,\n  isNotEmpty,\n  isNotUndefined,\n  isUndefined,\n} from '../../../shared/empty.util';\nimport { followLink } from '../../../shared/utils/follow-link-config.model';\nimport { SubmissionObjectEntry } from '../../objects/submission-objects.reducer';\nimport { SubmissionService } from '../../submission.service';\nimport { SectionModelComponent } from '../models/section.model';\nimport { SectionDataObject } from '../models/section-data.model';\nimport { SectionsService } from '../sections.service';\nimport { SubmissionSectionUploadAccessConditionsComponent } from './accessConditions/submission-section-upload-access-conditions.component';\nimport { ThemedSubmissionSectionUploadFileComponent } from './file/themed-section-upload-file.component';\nimport { SectionUploadService } from './section-upload.service';\n\nexport const POLICY_DEFAULT_NO_LIST = 1; // Banner1\nexport const POLICY_DEFAULT_WITH_LIST = 2; // Banner2\n\nexport interface AccessConditionGroupsMapEntry {\n  accessCondition: string;\n  groups: Group[];\n}\n\n/**\n * This component represents a section that contains submission's bitstreams\n */\n@Component({\n  selector: 'ds-submission-section-upload',\n  styleUrls: ['./section-upload.component.scss'],\n  templateUrl: './section-upload.component.html',\n  imports: [\n    ThemedSubmissionSectionUploadFileComponent,\n    SubmissionSectionUploadAccessConditionsComponent,\n    NgIf,\n    AlertComponent,\n    TranslateModule,\n    NgForOf,\n    AsyncPipe,\n  ],\n  standalone: true,\n})\nexport class SubmissionSectionUploadComponent extends SectionModelComponent {\n\n  /**\n   * The AlertType enumeration\n   * @type {AlertType}\n   */\n  public AlertTypeEnum = AlertType;\n\n  /**\n   * The uuid of primary bitstream file\n   * @type {Array}\n   */\n  public primaryBitstreamUUID: string | null = null;\n\n  /**\n   * The file list\n   * @type {Array}\n   */\n  public fileList: any[] = [];\n\n  /**\n   * The array containing the name of the files\n   * @type {Array}\n   */\n  public fileNames: string[] = [];\n\n  /**\n   * The collection name this submission belonging to\n   * @type {string}\n   */\n  public collectionName: string;\n\n  /**\n   * Default access conditions of this collection\n   * @type {Array}\n   */\n  public collectionDefaultAccessConditions: any[] = [];\n\n  /**\n   * Define if collection access conditions policy type :\n   * POLICY_DEFAULT_NO_LIST : is not possible to define additional access group/s for the single file\n   * POLICY_DEFAULT_WITH_LIST : is possible to define additional access group/s for the single file\n   * @type {number}\n   */\n  public collectionPolicyType: number;\n\n  /**\n   * The configuration for the bitstream's metadata form\n   */\n  public configMetadataForm$: Observable<SubmissionFormsModel>;\n\n  /**\n   * List of available access conditions that could be set to files\n   */\n  public availableAccessConditionOptions: AccessConditionOption[];  // List of accessConditions that an user can select\n\n  /**\n   * Is the upload required\n   * @type {boolean}\n   */\n  public required$ = new BehaviorSubject<boolean>(true);\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  protected subs: Subscription[] = [];\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {SectionUploadService} bitstreamService\n   * @param {ChangeDetectorRef} changeDetectorRef\n   * @param {CollectionDataService} collectionDataService\n   * @param {GroupDataService} groupService\n   * @param {ResourcePolicyDataService} resourcePolicyService\n   * @param {SectionsService} sectionService\n   * @param {SubmissionService} submissionService\n   * @param {SubmissionUploadsConfigDataService} uploadsConfigService\n   * @param {SectionDataObject} injectedSectionData\n   * @param {string} injectedSubmissionId\n   */\n  constructor(private bitstreamService: SectionUploadService,\n              private changeDetectorRef: ChangeDetectorRef,\n              private collectionDataService: CollectionDataService,\n              private groupService: GroupDataService,\n              private resourcePolicyService: ResourcePolicyDataService,\n              protected sectionService: SectionsService,\n              private submissionService: SubmissionService,\n              private uploadsConfigService: SubmissionUploadsConfigDataService,\n              public dsoNameService: DSONameService,\n              @Inject('sectionDataProvider') public injectedSectionData: SectionDataObject,\n              @Inject('submissionIdProvider') public injectedSubmissionId: string) {\n    super(undefined, injectedSectionData, injectedSubmissionId);\n  }\n\n  /**\n   * Initialize all instance variables and retrieve collection default access conditions\n   */\n  onSectionInit() {\n    const config$ = this.uploadsConfigService.findByHref(this.sectionData.config, true, false, followLink('metadata')).pipe(\n      getFirstSucceededRemoteData(),\n      map((config) => config.payload));\n\n    // retrieve configuration for the bitstream's metadata form\n    this.configMetadataForm$ = config$.pipe(\n      switchMap((config: SubmissionUploadsModel) =>\n        config.metadata.pipe(\n          getFirstSucceededRemoteData(),\n          map((remoteData: RemoteData<SubmissionFormsModel>) => remoteData.payload),\n        ),\n      ));\n\n    this.subs.push(\n      this.submissionService.getSubmissionObject(this.submissionId).pipe(\n        filter((submissionObject: SubmissionObjectEntry) => isNotUndefined(submissionObject) && !submissionObject.isLoading),\n        filter((submissionObject: SubmissionObjectEntry) => isUndefined(this.collectionId) || this.collectionId !== submissionObject.collection),\n        tap((submissionObject: SubmissionObjectEntry) => this.collectionId = submissionObject.collection),\n        mergeMap((submissionObject: SubmissionObjectEntry) => this.collectionDataService.findById(submissionObject.collection)),\n        filter((rd: RemoteData<Collection>) => isNotUndefined((rd.payload))),\n        tap((collectionRemoteData: RemoteData<Collection>) => this.collectionName = this.dsoNameService.getName(collectionRemoteData.payload)),\n        // TODO review this part when https://github.com/DSpace/dspace-angular/issues/575 is resolved\n        /*        mergeMap((collectionRemoteData: RemoteData<Collection>) => {\n          return this.resourcePolicyService.findByHref(\n            (collectionRemoteData.payload as any)._links.defaultAccessConditions.href\n          );\n        }),\n        filter((defaultAccessConditionsRemoteData: RemoteData<ResourcePolicy>) =>\n          defaultAccessConditionsRemoteData.hasSucceeded),\n        tap((defaultAccessConditionsRemoteData: RemoteData<ResourcePolicy>) => {\n          if (isNotEmpty(defaultAccessConditionsRemoteData.payload)) {\n            this.collectionDefaultAccessConditions = Array.isArray(defaultAccessConditionsRemoteData.payload)\n              ? defaultAccessConditionsRemoteData.payload : [defaultAccessConditionsRemoteData.payload];\n          }\n        }),*/\n        mergeMap(() => config$),\n      ).subscribe((config: SubmissionUploadsModel) => {\n        this.required$.next(config.required);\n        this.availableAccessConditionOptions = isNotEmpty(config.accessConditionOptions) ? config.accessConditionOptions : [];\n        this.collectionPolicyType = this.availableAccessConditionOptions.length > 0\n          ? POLICY_DEFAULT_WITH_LIST\n          : POLICY_DEFAULT_NO_LIST;\n        this.changeDetectorRef.detectChanges();\n      }),\n\n      // retrieve submission's bitstream data from state\n      combineLatest([\n        this.configMetadataForm$,\n        this.bitstreamService.getUploadedFilesData(this.submissionId, this.sectionData.id),\n      ]).pipe(\n        filter(([configMetadataForm, sectionUploadObject]: [SubmissionFormsModel, WorkspaceitemSectionUploadObject]) => {\n          return isNotEmpty(configMetadataForm) && isNotEmpty(sectionUploadObject);\n        }),\n        distinctUntilChanged(),\n      ).subscribe(([configMetadataForm, { primary, files }]: [SubmissionFormsModel, WorkspaceitemSectionUploadObject]) => {\n        this.primaryBitstreamUUID = primary;\n        this.fileList = files;\n        this.fileNames = Array.from(files, file => this.getFileName(configMetadataForm, file));\n        this.changeDetectorRef.detectChanges();\n      }),\n    );\n  }\n\n  /**\n   * Return file name from metadata\n   *\n   * @param configMetadataForm\n   *    the bitstream's form configuration\n   * @param fileData\n   *    the file metadata\n   */\n  private getFileName(configMetadataForm: SubmissionFormsModel, fileData: any): string {\n    const metadataName: string = configMetadataForm.rows[0].fields[0].selectableMetadata[0].metadata;\n    let title: string;\n    if (isNotEmpty(fileData.metadata) && isNotEmpty(fileData.metadata[metadataName])) {\n      title = fileData.metadata[metadataName][0].display;\n    } else {\n      title = fileData.uuid;\n    }\n\n    return title;\n  }\n\n  /**\n   * Get section status\n   *\n   * @return Observable<boolean>\n   *     the section status\n   */\n  protected getSectionStatus(): Observable<boolean> {\n    // if not mandatory, always true\n    // if mandatory, at least one file is required\n    return observableCombineLatest(this.required$,\n      this.bitstreamService.getUploadedFileList(this.submissionId, this.sectionData.id),\n      (required,fileList: any[]) => {\n        return (!required || (isNotUndefined(fileList) && fileList.length > 0));\n      });\n  }\n\n  /**\n   * Method provided by Angular. Invoked when the instance is destroyed.\n   */\n  onSectionDestroy() {\n    this.subs\n      .filter((subscription) => hasValue(subscription))\n      .forEach((subscription) => subscription.unsubscribe());\n  }\n\n}\n","<ds-alert [content]=\"'submission.sections.upload.info'\"\n          [dismissible]=\"true\"\n          [type]=\"AlertTypeEnum.Info\"></ds-alert>\n\n<ng-container *ngIf=\"fileList.length > 0; else noFileUploaded\">\n\n  <div *ngIf=\"collectionDefaultAccessConditions.length > 0\" class=\"row\">\n    <div class=\"col-sm-12\" >\n      <ds-alert [type]=\"AlertTypeEnum.Warning\">\n        <ng-container *ngIf=\"collectionPolicyType === 1\">\n          {{ 'submission.sections.upload.header.policy.default.nolist' | translate:{ \"collectionName\": collectionName } }}\n        </ng-container>\n        <ng-container *ngIf=\"collectionPolicyType === 2\">\n          {{ 'submission.sections.upload.header.policy.default.withlist' | translate:{ \"collectionName\": collectionName } }}\n        </ng-container>\n        <span class=\"clearfix\"></span>\n        <ds-submission-section-upload-access-conditions [accessConditions]=\"collectionDefaultAccessConditions\"></ds-submission-section-upload-access-conditions>\n      </ds-alert>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-2\">\n      <span class=\"text-left font-weight-bold\">{{ 'bitstream.edit.form.primaryBitstream.label' | translate }}</span>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <hr/>\n    </div>\n  </div>\n  <ng-container *ngFor=\"let fileEntry of fileList; let i = index;\">\n    <ds-submission-upload-section-file\n                                       [isPrimary]=\"primaryBitstreamUUID ? primaryBitstreamUUID === fileEntry.uuid : null\"\n                                       [availableAccessConditionOptions]=\"availableAccessConditionOptions\"\n                                       [collectionId]=\"collectionId\"\n                                       [collectionPolicyType]=\"collectionPolicyType\"\n                                       [configMetadataForm]=\"(configMetadataForm$ | async)\"\n                                       [fileId]=\"fileEntry.uuid\"\n                                       [fileIndex]=\"i\"\n                                       [fileName]=\"fileNames[i]\"\n                                       [sectionId]=\"sectionData.id\"\n                                       [submissionId]=\"submissionId\"></ds-submission-upload-section-file>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <hr/>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n\n<ng-template #noFileUploaded>\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"text-center h3\"><span class=\"text-muted\">{{'submission.sections.upload.no-file-uploaded' | translate}}</span></div>\n    </div>\n  </div>\n</ng-template>\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n} from 'rxjs/operators';\nimport { JsonPatchOperationPathObject } from 'src/app/core/json-patch/builder/json-patch-operation-path-combiner';\nimport { JsonPatchOperationsBuilder } from 'src/app/core/json-patch/builder/json-patch-operations-builder';\nimport { WorkspaceitemSectionUploadObject } from 'src/app/core/submission/models/workspaceitem-section-upload.model';\n\nimport { WorkspaceitemSectionUploadFileObject } from '../../../core/submission/models/workspaceitem-section-upload-file.model';\nimport { isUndefined } from '../../../shared/empty.util';\nimport {\n  DeleteUploadedFileAction,\n  EditFileDataAction,\n  EditFilePrimaryBitstreamAction,\n  NewUploadedFileAction,\n} from '../../objects/submission-objects.actions';\nimport {\n  submissionSectionDataFromIdSelector,\n  submissionUploadedFileFromUuidSelector,\n  submissionUploadedFilesFromIdSelector,\n} from '../../selectors';\nimport { SubmissionState } from '../../submission.reducers';\n\n/**\n * A service that provides methods to handle submission's bitstream state.\n */\n@Injectable({ providedIn: 'root' })\nexport class SectionUploadService {\n\n  /**\n   * Initialize service variables\n   *\n   * @param {Store<SubmissionState>} store\n   * @param {JsonPatchOperationsBuilder} operationsBuilder\n   */\n  constructor(private store: Store<SubmissionState>, private operationsBuilder: JsonPatchOperationsBuilder) {}\n\n  /**\n   * Define and add an operation based on a change\n   *\n   * @param path\n   *    The path to endpoint\n   * @param intitialPrimary\n   *    The initial primary indicator\n   * @param primary\n   *    the new primary indicator\n    * @param fileId\n   *    The file id\n   * @returns {void}\n   */\n  public updatePrimaryBitstreamOperation(path: JsonPatchOperationPathObject, intitialPrimary: boolean | null, primary: boolean | null, fileId: string): void {\n    if (intitialPrimary === null && primary) {\n      this.operationsBuilder.add(path, fileId, false, true);\n      return;\n    }\n\n    if (intitialPrimary !== primary) {\n      if (primary) {\n        this.operationsBuilder.replace(path, fileId, true);\n        return;\n      }\n      this.operationsBuilder.remove(path);\n    }\n  }\n\n  /**\n   * Return submission's bitstream data from state\n   *\n   * @param submissionId\n   *    The submission id\n   * @param sectionId\n   *    The section id\n   * @returns {WorkspaceitemSectionUploadObject}\n   *    Returns submission's bitstream data\n   */\n  public getUploadedFilesData(submissionId: string, sectionId: string): Observable<WorkspaceitemSectionUploadObject> {\n    return this.store.select(submissionSectionDataFromIdSelector(submissionId, sectionId)).pipe(\n      map((state) => state),\n      distinctUntilChanged());\n  }\n\n  /**\n   * Return submission's bitstream list from state\n   *\n   * @param submissionId\n   *    The submission id\n   * @param sectionId\n   *    The section id\n   * @returns {Array}\n   *    Returns submission's bitstream list\n   */\n  public getUploadedFileList(submissionId: string, sectionId: string): Observable<any> {\n    return this.store.select(submissionUploadedFilesFromIdSelector(submissionId, sectionId)).pipe(\n      map((state) => state),\n      distinctUntilChanged());\n  }\n\n  /**\n   * Return bitstream's metadata\n   *\n   * @param submissionId\n   *    The submission id\n   * @param sectionId\n   *    The section id\n   * @param fileUUID\n   *    The bitstream UUID\n   * @returns {Observable}\n   *    Emits bitstream's metadata\n   */\n  public getFileData(submissionId: string, sectionId: string, fileUUID: string): Observable<any> {\n    return this.store.select(submissionUploadedFilesFromIdSelector(submissionId, sectionId)).pipe(\n      filter((state) => !isUndefined(state)),\n      map((state) => {\n        let fileState;\n        Object.keys(state)\n          .filter((key) => state[key].uuid === fileUUID)\n          .forEach((key) => fileState = state[key]);\n        return fileState;\n      }),\n      distinctUntilChanged());\n  }\n\n  /**\n   * Return bitstream's default policies\n   *\n   * @param submissionId\n   *    The submission id\n   * @param sectionId\n   *    The section id\n   * @param fileUUID\n   *    The bitstream UUID\n   * @returns {Observable}\n   *    Emits bitstream's default policies\n   */\n  public getDefaultPolicies(submissionId: string, sectionId: string, fileUUID: string): Observable<any> {\n    return this.store.select(submissionUploadedFileFromUuidSelector(submissionId, sectionId, fileUUID)).pipe(\n      map((state) => state),\n      distinctUntilChanged());\n  }\n\n  /**\n   * Add a new bitstream to the state\n   *\n   * @param submissionId\n   *    The submission id\n   * @param sectionId\n   *    The section id\n   * @param fileUUID\n   *    The bitstream UUID\n   * @param data\n   *    The [[WorkspaceitemSectionUploadFileObject]] object\n   */\n  public addUploadedFile(submissionId: string, sectionId: string, fileUUID: string, data: WorkspaceitemSectionUploadFileObject) {\n    this.store.dispatch(\n      new NewUploadedFileAction(submissionId, sectionId, fileUUID, data),\n    );\n  }\n\n  /**\n   * Update primary bitstream into the state\n   *\n   * @param submissionId\n   *    The submission id\n   * @param sectionId\n   *    The section id\n   * @param fileUUID\n   *    The bitstream UUID\n   */\n  public updateFilePrimaryBitstream(submissionId: string, sectionId: string, fileUUID: string | null) {\n    this.store.dispatch(\n      new EditFilePrimaryBitstreamAction(submissionId, sectionId, fileUUID),\n    );\n  }\n\n  /**\n   * Update bitstream metadata into the state\n   *\n   * @param submissionId\n   *    The submission id\n   * @param sectionId\n   *    The section id\n   * @param fileUUID\n   *    The bitstream UUID\n   * @param data\n   *    The [[WorkspaceitemSectionUploadFileObject]] object\n   */\n  public updateFileData(submissionId: string, sectionId: string, fileUUID: string, data: WorkspaceitemSectionUploadFileObject) {\n    this.store.dispatch(\n      new EditFileDataAction(submissionId, sectionId, fileUUID, data),\n    );\n  }\n\n  /**\n   * Remove bitstream from the state\n   *\n   * @param submissionId\n   *    The submission id\n   * @param sectionId\n   *    The section id\n   * @param fileUUID\n   *    The bitstream UUID\n   */\n  public removeUploadedFile(submissionId: string, sectionId: string, fileUUID: string) {\n    this.store.dispatch(\n      new DeleteUploadedFileAction(submissionId, sectionId, fileUUID),\n    );\n  }\n}\n","var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n","var map = {\n\t\"./custom/app/submission/edit/submission-edit.component\": [\n\t\t20473,\n\t\t\"src_themes_custom_app_submission_edit_submission-edit_component_ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 9048;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./custom/app/submission/form/submission-upload-files/submission-upload-files.component.ts\": [\n\t\t19247,\n\t\t\"src_themes_custom_app_submission_form_submission-upload-files_submission-upload-files_component_ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 28767;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./custom/app/submission/sections/upload/file/section-upload-file.component\": [\n\t\t9286,\n\t\t\"src_themes_custom_app_submission_sections_upload_file_section-upload-file_component_ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 96682;\nmodule.exports = webpackAsyncContext;"],"names":["inject","hasNoValue","currentPathFromSnapshot","I18nBreadcrumbsService","i18nBreadcrumbResolver","route","state","breadcrumbService","key","data","breadcrumbKey","Error","url","fullPath","provider","of","observableOf","Breadcrumb","BREADCRUMB_MESSAGE_POSTFIX","getBreadcrumbs","factory","ɵfac","providedIn","map","IdentifiableDataService","getFirstCompletedRemoteData","ConfigDataService","findByHref","href","useCachedVersionIfAvailable","reRequestOnStale","linksToFollow","pipe","rd","hasFailed","findByName","name","findById","RemoteDataBuildService","ObjectCacheService","RequestService","HALEndpointService","SubmissionAccessesConfigDataService","constructor","requestService","rdbService","objectCache","halService","i0","ɵɵinject","i1","i2","i3","i4","SubmissionFormsConfigDataService","SubmissionUploadsConfigDataService","Store","dateToISOFormat","dateToString","isNgbDateStruct","hasValue","isEmpty","isNotEmpty","FormFieldLanguageValueObject","FormFieldMetadataValueObject","VocabularyEntry","FlushPatchOperationAction","NewPatchAddOperationAction","NewPatchMoveOperationAction","NewPatchRemoveOperationAction","NewPatchReplaceOperationAction","JsonPatchOperationsBuilder","store","add","path","value","first","plain","dispatch","rootElement","subRootElement","prepareValue","replace","remove","move","prevPath","flushOperation","operationValue","Array","isArray","forEach","entry","push","prepareObjectValue","Object","create","Date","prepareAuthorityValue","language","hasOwnProperty","authority","keys","WorkspaceitemSectionUploadFileObject","followLink","SUBMISSION_LINKS_TO_FOLLOW","switchMap","SubmissionObjectResolver","dataService","params","id","wfiRD","payload","item","getRemoteDataPayload","SubmissionParentBreadcrumbResolver","resolve","submissionObject","BaseDataService","FindAllDataImpl","SubmissionCcLicenseDataService","linkPath","findAllData","responseMsToLive","findAll","options","RequestParam","SearchDataImpl","getFirstSucceededRemoteData","SubmissionCcLicenseUrlDataService","searchData","searchMethod","getCcLicenseLink","ccLicense","getSearchByHref","searchParams","fields","field","get","response","searchBy","combineLatest","getDSORoute","SubmissionService","DSOBreadcrumbsService","DSONameService","CollectionDataService","SubmissionParentBreadcrumbsService","dsoNameService","dsoBreadcrumbsService","submissionService","collectionService","collection","getSubmissionCollectionId","latestCollectionId","NgIf","EventEmitter","NgbDropdownModule","TranslateModule","BtnDisabledDirective","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ctx_r0","label","DsSelectComponent","toggled","close","selectors","inputs","disabled","outputs","standalone","features","ɵɵStandaloneFeature","ngContentSelectors","_c1","decls","vars","consts","template","DsSelectComponent_Template","rf","ctx","ɵɵlistener","DsSelectComponent_Template_div_openChange_1_listener","$event","emit","ɵɵtemplate","DsSelectComponent_div_2_Template","DsSelectComponent_Template_button_blur_3_listener","DsSelectComponent_Template_button_click_3_listener","ɵɵprojection","ɵɵproperty","NgbDropdown","NgbDropdownToggle","NgbDropdownMenu","TranslatePipe","styles","isEqual","FormFieldPreviousValueObject","_path","_value","delete","isPathEqual","TruncatePipe","transform","args","limit","length","parseInt","substring","pure","ChangeDetectorRef","ActivatedRoute","Router","TranslateService","BehaviorSubject","debounceTime","filter","ItemDataService","getAllSucceededRemoteData","SubmissionJsonPatchOperationsService","isNotEmptyOperator","isNotNull","NotificationsService","SubmissionFormComponent","parseSectionErrors","SubmissionEditComponent","changeDetectorRef","notificationsService","router","itemDataService","translate","submissionJsonPatchOperationsService","collectionModifiable","subs","itemLink$","undefined","ngOnInit","snapshot","paramMap","retrieveSubmission","submissionObjectRD","subscribe","hasSucceeded","info","navigate","errors","submissionErrors","submissionId","toString","collectionId","selfUrl","_links","self","sections","next","submissionDefinition","statusCode","skipLocationChange","itemLink","itemRd","detectChanges","ngOnDestroy","sub","unsubscribe","deletePendingJsonPatchOperations","ɵɵdirectiveInject","i5","i6","SubmissionEditComponent_Template","ɵɵelement","ThemedComponent","ThemedSubmissionEditComponent","getComponentName","importThemedComponent","themeName","importUnthemedComponent","t","ɵɵInheritDefinitionFeature","_c0","ThemedSubmissionEditComponent_Template","ThemedSubmissionEditComponent_ng_template_0_Template","ɵɵtemplateRefExtractor","CommonModule","SimpleChanges","find","mergeMap","JsonPatchOperationPathCombiner","getFirstSucceededRemoteDataPayload","CollectionDropdownComponent","ThemedCollectionDropdownComponent","SectionsService","SectionsType","ɵɵtextInterpolate","selectedCollectionName$","SubmissionFormCollectionComponent_div_3_Template_div_openChange_0_listener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","SubmissionFormCollectionComponent_div_3_Template_button_blur_6_listener","onClose","SubmissionFormCollectionComponent_div_3_Template_button_click_6_listener","SubmissionFormCollectionComponent_div_3_span_8_Template","SubmissionFormCollectionComponent_div_3_span_10_Template","SubmissionFormCollectionComponent_div_3_Template_ds_collection_dropdown_selectionChange_13_listener","onSelect","processingChange$","isReadonly","SubmissionFormCollectionComponent","cdr","collectionDataService","operationsBuilder","operationsService","sectionsService","collectionChange","ngOnChanges","changes","currentCollectionId","currentValue","selectedCollectionId","collectionRD","getName","pathCombiner","available$","isSectionTypeAvailable","Collection","event","getPath","jsonPatchByResourceID","getSubmissionObjectLinkName","changeSubmissionCollection","collectionDropdown","reset","isOpen","viewQuery","SubmissionFormCollectionComponent_Query","SubmissionFormCollectionComponent_div_1_Template","SubmissionFormCollectionComponent_div_3_Template","i7","AsyncPipe","i8","i9","NgbModal","SubmissionRestService","SubmissionScopeType","BrowserOnlyPipe","SubmissionFormFooterComponent_div_0_button_2_Template_button_click_0_listener","ctx_r2","content_r4","ɵɵreference","preventDefault","confirmDiscard","processingSaveStatus","processingDepositStatus","ɵɵstyleProp","SubmissionFormFooterComponent_div_0_div_13_div_2_Template","SubmissionFormFooterComponent_div_0_div_13_div_4_Template","SubmissionFormFooterComponent_div_0_button_35_Template_button_click_0_listener","_r5","deposit","SubmissionFormFooterComponent_div_0_button_2_Template","SubmissionFormFooterComponent_div_0_span_5_Template","SubmissionFormFooterComponent_div_0_span_9_Template","SubmissionFormFooterComponent_div_0_div_13_Template","SubmissionFormFooterComponent_div_0_Template_button_click_17_listener","_r1","save","SubmissionFormFooterComponent_div_0_Template_button_click_25_listener","saveLater","SubmissionFormFooterComponent_div_0_button_35_Template","showDepositAndDiscard","hasUnsavedModification","ɵɵclassProp","SubmissionFormFooterComponent_ng_template_1_Template_button_click_4_listener","d_r7","_r6","dismiss","SubmissionFormFooterComponent_ng_template_1_Template_button_click_12_listener","c_r8","SubmissionFormFooterComponent_ng_template_1_Template_button_click_15_listener","SubmissionFormFooterComponent","modalService","restService","submissionIsInvalid","getSubmissionStatus","isValid","getSubmissionSaveProcessingStatus","getSubmissionDepositProcessingStatus","getSubmissionScope","WorkspaceItem","dispatchSave","dispatchSaveForLater","dispatchDeposit","content","open","result","then","dispatchDiscard","ɵɵNgOnChangesFeature","SubmissionFormFooterComponent_Template","SubmissionFormFooterComponent_div_0_Template","SubmissionFormFooterComponent_ng_template_1_Template","HostWindowService","ɵɵelementContainerStart","hasSections$","ɵɵpureFunction1","windowService","isXs","SubmissionFormSectionAddComponent_button_8_Template_button_click_0_listener","listItem_r3","$implicit","addSection","header","SubmissionFormSectionAddComponent","sectionService","sectionList$","getDisabledSectionsList","list","sectionId","SubmissionFormSectionAddComponent_Template","SubmissionFormSectionAddComponent_ng_container_2_Template","SubmissionFormSectionAddComponent_button_6_Template","SubmissionFormSectionAddComponent_button_8_Template","NgClass","NgForOf","distinctUntilChanged","AuthService","SubmissionDefinitionsModel","Item","WorkspaceitemSectionsObject","isNotUndefined","ThemedLoadingComponent","UploaderOptions","SubmissionSectionContainerComponent","VisibilityType","ThemedSubmissionUploadFilesComponent","uploadFilesOptions","SubmissionFormComponent_div_1_ng_container_4_Template_ds_submission_form_collection_collectionChange_1_listener","onCollectionChange","definitionId","isSectionReadonly","SubmissionFormComponent_div_1_div_1_Template","SubmissionFormComponent_div_1_ng_container_4_Template","uploadEnabled$","isSectionHidden","object_r3","authService","loading","isActive","submissionSections","getSubmissionObject","submission","isLoading","getSectionsList","Upload","getEndpoint","endpointURL","authToken","buildAuthHeader","concat","dispatchInit","startAutoSave","getCollectionVisibility","submissionSectionModel","page","section","sectionType","visibility","main","HIDDEN","other","READONLY","stopAutoSave","resetAllSubmissionObjects","subscription","resetSubmissionObject","getSubmissionSections","SubmissionFormComponent_Template","SubmissionFormComponent_div_1_Template","SubmissionFormComponent_ds_loading_4_Template","SubmissionFormComponent_ng_container_6_Template","SubmissionFormComponent_div_8_Template","take","normalizeSectionData","UploaderComponent","SubmissionUploadFilesComponent_ds_uploader_0_Template_ds_uploader_onCompleteItem_0_listener","ctx_r1","onCompleteItem","SubmissionUploadFilesComponent_ds_uploader_0_Template_ds_uploader_onUploadError_0_listener","onUploadError","dropMsg","dropOverDocumentMsg","enableDragOverDocument","onBeforeUpload","SubmissionUploadFilesComponent","uploadEnabled","jsonPatchByResourceType","workspaceitem","isUploadEnabled","errorsList","sectionData","sectionErrors","isSectionType","isUpload","success","error","updateSectionData","SubmissionUploadFilesComponent_Template","SubmissionUploadFilesComponent_ds_uploader_0_Template","encapsulation","inAndOutputNames","ThemedSubmissionUploadFilesComponent_Template","ThemedSubmissionUploadFilesComponent_ng_template_0_Template","DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX","DYNAMIC_FORM_CONTROL_TYPE_DATEPICKER","DynamicCheckboxModel","DynamicDatePickerModel","DynamicFormArrayModel","DynamicFormGroupModel","DynamicSelectModel","MATCH_ENABLED","OR_OPERATOR","FormBuilderService","FormComponent","FormService","SectionFormOperationsService","SectionModelComponent","ACCESS_CONDITION_GROUP_CONFIG","ACCESS_CONDITION_GROUP_LAYOUT","ACCESS_CONDITIONS_FORM_ARRAY_CONFIG","ACCESS_CONDITIONS_FORM_ARRAY_LAYOUT","ACCESS_FORM_CHECKBOX_CONFIG","ACCESS_FORM_CHECKBOX_LAYOUT","FORM_ACCESS_CONDITION_END_DATE_CONFIG","FORM_ACCESS_CONDITION_END_DATE_LAYOUT","FORM_ACCESS_CONDITION_START_DATE_CONFIG","FORM_ACCESS_CONDITION_START_DATE_LAYOUT","FORM_ACCESS_CONDITION_TYPE_CONFIG","FORM_ACCESS_CONDITION_TYPE_LAYOUT","SectionAccessesService","SubmissionSectionAccessesComponent_ds_form_0_Template_ds_form_dfChange_0_listener","onChange","SubmissionSectionAccessesComponent_ds_form_0_Template_ds_form_removeArrayItem_0_listener","onRemove","formId","formModel","SubmissionSectionAccessesComponent","formBuilderService","accessesConfigService","accessesService","formOperationsService","formService","injectedSectionData","injectedSubmissionId","initModelData","accessesData","accessConditions","accessCondition","index","metadataModel","type","date","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","model","getFieldPathSegmentedFromChangeEvent","getFieldValueFromChangeEvent","startDateControl","control","parent","endDateControl","markAsUntouched","setValue","markAsDirty","validateAllFormFields","formRef","formGroup","getFormData","formData","accessConditionsToSave","accessConditionGroup","accessConditionOpt","availableAccessConditionOptions","element","currentAccessCondition","assign","retrieveValueFromField","hasStartDate","startDate","hasEndDate","endDate","fieldIndex","getArrayIndexFromEvent","fieldPath","onSectionDestroy","onSectionInit","getUniqueId","config$","config","accessData$","getAccessesData","accessData","accessConditionOptions","canChangeDiscoverable","buildFileEditForm","getSectionStatus","discoverableCheckboxConfig","instant","hint","discoverable","accessConditionTypeModelConfig","accessConditionsArrayConfig","accessConditionTypeOptions","startDateCondition","endDateCondition","maxStartDate","maxEndDate","condition","min","max","confStart","relations","match","operator","when","confEnd","groupFactory","startDateConfig","endDateConfig","accessConditionGroupConfig","group","initialCount","temp","SubmissionSectionAccessesComponent_Query","SubmissionSectionAccessesComponent_ds_form_0_Template","container","host","grid","placeholder","inline","toggleIcon","required","validators","errorMessages","submissionSectionDataFromIdSelector","select","FormsModule","InfiniteScrollModule","tap","ConfigurationDataService","SubmissionCcLicence","VarDirective","SubmissionSectionCcLicensesComponent_Conditional_0_Conditional_8_For_1_Template_button_click_0_listener","license_r4","_r3","selectCcLicense","ɵɵrepeaterCreate","SubmissionSectionCcLicensesComponent_Conditional_0_Conditional_8_For_1_Template","_forTrack0","ɵɵrepeater","submissionCcLicenses","ɵɵtwoWayListener","SubmissionSectionCcLicensesComponent_Conditional_0_Template_input_ngModelChange_2_listener","ɵɵtwoWayBindingSet","selectedCcLicense","SubmissionSectionCcLicensesComponent_Conditional_0_Template_div_scroll_6_listener","onScroll","SubmissionSectionCcLicensesComponent_Conditional_0_Conditional_7_Template","SubmissionSectionCcLicensesComponent_Conditional_0_Conditional_8_Template","ɵɵpropertyInterpolate","storedCcLicenseLink","ɵɵtwoWayProperty","ɵɵpureFunction0","ɵɵconditional","value_r8","description","ɵɵsanitizeHtml","SubmissionSectionCcLicensesComponent_ng_container_1_div_1_ng_template_6_Template_button_click_6_listener","_r7","closeInfoModal","SubmissionSectionCcLicensesComponent_ng_container_1_div_1_ng_template_6_div_10_Template","field_r9","enums","option_r10","SubmissionSectionCcLicensesComponent_ng_container_1_div_1_ds_select_8_ng_container_1_span_1_Template","SubmissionSectionCcLicensesComponent_ng_container_1_div_1_ds_select_8_ng_container_1_span_2_Template","SubmissionSectionCcLicensesComponent_ng_container_1_div_1_ds_select_8_button_4_Template_button_click_0_listener","option_r12","_r11","selectOption","getSelectedCcLicense","SubmissionSectionCcLicensesComponent_ng_container_1_div_1_ds_select_8_ng_container_1_Template","SubmissionSectionCcLicensesComponent_ng_container_1_div_1_ds_select_8_button_4_Template","defaultJurisdiction","getSelectedOption","SubmissionSectionCcLicensesComponent_ng_container_1_div_1_ng_container_9_div_1_Template_div_click_1_listener","option_r14","_r13","isSelectedOption","SubmissionSectionCcLicensesComponent_ng_container_1_div_1_ng_container_9_div_1_Template","SubmissionSectionCcLicensesComponent_ng_container_1_div_1_Template_button_click_4_listener","infoModal_r6","openInfoModal","SubmissionSectionCcLicensesComponent_ng_container_1_div_1_ng_template_6_Template","SubmissionSectionCcLicensesComponent_ng_container_1_div_1_ds_select_8_Template","SubmissionSectionCcLicensesComponent_ng_container_1_div_1_ng_container_9_Template","ɵɵclassMapInterpolate1","SubmissionSectionCcLicensesComponent_ng_container_1_div_1_Template","SubmissionSectionCcLicensesComponent_ng_container_2_ng_container_1_div_2_Template_div_click_7_listener","_r15","setAccepted","accepted","licenseLink_r16","ɵɵsanitizeUrl","SubmissionSectionCcLicensesComponent_ng_container_2_ng_container_1_div_1_Template","SubmissionSectionCcLicensesComponent_ng_container_2_ng_container_1_div_2_Template","SubmissionSectionCcLicensesComponent_ng_container_2_ng_container_1_Template","getCcLicenseLink$","SubmissionSectionCcLicensesComponent","uri","submissionCcLicensesDataService","submissionCcLicenseUrlDataService","configService","ref","injectedCollectionId","subscriptions","ccLicenceOptions","elementsPerPage","currentPage","option","some","Map","modalRef","getSectionState","CcLicense","sectionState","errorsToShow","link","findByPropertyName","remoteData","values","loadCcLicences","updateSectionStatus","target","scrollTop","clientHeight","scrollHeight","_isLastPage","pageInfo","totalPages","licenses","SubmissionSectionCcLicensesComponent_Template","SubmissionSectionCcLicensesComponent_Conditional_0_Template","SubmissionSectionCcLicensesComponent_ng_container_1_Template","SubmissionSectionCcLicensesComponent_ng_container_2_Template","DefaultValueAccessor","NgControlStatus","NgModel","InfiniteScrollDirective","NgComponentOutlet","Injector","NgbAccordionModule","AlertComponent","AlertType","SectionsDirective","rendersSectionType","_c2","sectionRef_r2","isInfo","SubmissionSectionContainerComponent_ngb_accordion_2_ng_template_3_a_16_Template_a_click_0_listener","ctx_r3","removeSection","SubmissionSectionContainerComponent_ngb_accordion_2_ng_template_3_i_4_Template","SubmissionSectionContainerComponent_ngb_accordion_2_ng_template_3_i_6_Template","SubmissionSectionContainerComponent_ngb_accordion_2_ng_template_3_i_7_Template","SubmissionSectionContainerComponent_ngb_accordion_2_ng_template_3_i_9_Template","SubmissionSectionContainerComponent_ngb_accordion_2_ng_template_3_span_14_Template","SubmissionSectionContainerComponent_ngb_accordion_2_ng_template_3_span_15_Template","SubmissionSectionContainerComponent_ngb_accordion_2_ng_template_3_a_16_Template","hasErrors","isMandatory","SubmissionSectionContainerComponent_ngb_accordion_2_ng_template_4_div_0_ds_alert_1_Template_ds_alert_close_0_listener","i_r7","removeError","error_r8","AlertTypeEnum","SubmissionSectionContainerComponent_ngb_accordion_2_ng_template_4_div_0_ds_alert_1_Template","ɵɵpropertyInterpolate1","getErrors","ɵɵelementContainer","SubmissionSectionContainerComponent_ngb_accordion_2_ng_template_4_div_0_Template","SubmissionSectionContainerComponent_ngb_accordion_2_ng_template_4_Template_div_click_1_listener","setFocus","SubmissionSectionContainerComponent_ngb_accordion_2_ng_template_4_ng_container_2_Template","hasGenericErrors","getSectionContent","objectInjector","SubmissionSectionContainerComponent_ngb_accordion_2_Template_ngb_accordion_panelChange_0_listener","sectionChange","SubmissionSectionContainerComponent_ngb_accordion_2_ng_template_3_Template","SubmissionSectionContainerComponent_ngb_accordion_2_ng_template_4_Template","injector","providers","provide","useFactory","deps","stopPropagation","sectionRef","SubmissionSectionContainerComponent_Query","SubmissionSectionContainerComponent_ngb_accordion_2_Template","isSectionActive","mandatory","isEnabled","NgbAccordion","NgbPanel","NgbPanelTitle","NgbPanelContent","Metadata","URLCombiner","getItemModuleRoute","ɵɵtextInterpolate2","metadatum_r1","SubmissionSectionDuplicatesComponent_div_0_ng_container_2_div_4_div_3_Template","SubmissionSectionDuplicatesComponent_div_0_ng_container_2_div_4_p_4_Template","SubmissionSectionDuplicatesComponent_div_0_ng_container_2_div_4_p_5_Template","getItemLink","dupe_r2","uuid","title","toViewModelList","metadata","workspaceItemId","workflowItemId","SubmissionSectionDuplicatesComponent_div_0_ng_container_2_div_4_Template","data_r4","potentialDuplicates","SubmissionSectionDuplicatesComponent_div_0_ng_container_1_Template","SubmissionSectionDuplicatesComponent_div_0_ng_container_2_Template","SubmissionSectionDuplicatesComponent","isReadOnly","getDuplicateData","getSectionData","SubmissionSectionDuplicatesComponent_Template","SubmissionSectionDuplicatesComponent_div_0_Template","DYNAMIC_FORM_CONTROL_TYPE_ARRAY","DYNAMIC_FORM_CONTROL_TYPE_GROUP","DynamicFormArrayGroupModel","isDynamicFormControlEvent","deepClone","isObject","VocabularyEntryDetail","isNull","isUndefined","formBuilder","dispatchOperationsFromEvent","previousValue","hasStoredValue","dispatchOperationsFromRemoveEvent","dispatchOperationsFromChangeEvent","dispatchOperationsFromMoveEvent","context","isPartOfArrayOfGroup","getQualdropValueMap","metadataValueMap","isQualdropGroup","groups","arrayModel","groupModel","metadataValueList","qualdropId","set","getFieldPathFromEvent","fieldId","getQualdropItemPathFromEvent","getId","fieldValue","isModelInCustomGroup","isRelationGroup","getGroupValue","hasLanguages","hasAuthority","getValueMap","items","dispatchOperationsFromMap","handleArrayGroupPatch","dispatchOperationsFromAddEvent","place","valuesInGroup","g","reduce","accumulator","v","segmentedPath","hasArrayGroupValue","previousIndex","moveTo","moveFrom","valueMap","currentValueMap","arrayValue","getValueFromModel","findIndex","observableCombineLatest","environment","WorkflowItem","SubmissionObjectDataService","difference","SubmissionSectionFormComponent_ds_form_1_Template_ds_form_dfChange_0_listener","SubmissionSectionFormComponent_ds_form_1_Template_ds_form_dfFocus_0_listener","onFocus","SubmissionSectionFormComponent_ds_form_1_Template_ds_form_remove_0_listener","SubmissionSectionFormComponent_ds_form_1_Template_ds_form_ngbEvent_0_listener","onCustomEvent","SubmissionSectionFormComponent_ds_form_1_Template_ds_form_removeArrayItem_0_listener","SubmissionSectionFormComponent","formConfigService","submissionObjectService","isUpdating","fieldsOnTheirWayToBeRemoved","dispatchSetSectionFormId","configData","formConfig","isSectionReadOnly","initForm","serverValidationErrors","formStatus$","serverValidationStatus$","getSectionServerErrors","validationErrors","formValidation","serverSideValidation","hasMetadataEnrichment","sectionDataToCheck","inCurrentSubmissionScope","diffResult","diffObj","scope","rows","row","selectableMetadata","selectableRelationship","relationshipType","valueOf","modelFromConfiguration","sectionMetadata","computeSectionConfiguredMetadata","e","msg","sectionError","message","console","stack","setSectionError","updateForm","checksForErrors","isFormInitialized","status","checkSectionErrors","autosave","indexOf","hasRelatedCustomError","medatata","validator","form","validatorMap","hasMappedGroupValue","has","indexes","isFieldToRemove","includes","i10","i11","SubmissionSectionFormComponent_Query","SubmissionSectionFormComponent_ds_loading_0_Template","SubmissionSectionFormComponent_ds_form_1_Template","Observable","identifier_r1","identifierType","SubmissionSectionIdentifiersComponent_ng_container_0_ng_container_1_ng_container_6_ng_container_1_Template","identifierData_r2","displayTypes","SubmissionSectionIdentifiersComponent_ng_container_0_ng_container_1_ng_container_6_Template","identifiers","SubmissionSectionIdentifiersComponent_ng_container_0_ng_container_1_Template","SubmissionSectionIdentifiersComponent","identifierData$","getIdentifierData","SubmissionSectionIdentifiersComponent_Template","SubmissionSectionIdentifiersComponent_ng_container_0_Template","startWith","SECTION_LICENSE_FORM_LAYOUT","SECTION_LICENSE_FORM_MODEL","SubmissionSectionLicenseComponent_ds_form_4_Template_ds_form_dfChange_0_listener","formLayout","displaySubmit","SubmissionSectionLicenseComponent","translateService","fromJSON","granted","licenseText$","collectionData","license","licenseData","text","getSectionErrors","newErrors","checked","dispatchRemoveSectionErrors","ngAfterViewChecked","valueChanges","dispatchSaveSection","SubmissionSectionLicenseComponent_Query","SubmissionSectionLicenseComponent_Template","SubmissionSectionLicenseComponent_ds_form_4_Template","notgranted","sectionStatusSub","sectionStatus","setSectionStatus","SectionModelComponent_Template","CreateDataImpl","DeleteDataImpl","PatchDataImpl","MultipartPostRequest","CoarNotifyConfigDataService","deleteData","constructIdEndpoint","patchData","comparator","createData","object","patch","operations","update","commitUpdates","method","createPatchFromCache","objectId","copyVirtualMetadata","deleteByHref","invoke","serviceName","serviceId","files","requestId","generateRequestId","getBrowseEndpoint","endpoint","body","getInvocationFormData","request","send","buildFromRequestUUID","FormData","file","append","LdnServicesService","getPaginatedListPayload","SubmissionSectionCoarNotifyComponent_ng_container_1_div_1_div_1_div_4_div_1_button_12_Template_button_click_0_listener","serviceIndex_r4","ldnPattern_r5","ctx_r5","pattern","SubmissionSectionCoarNotifyComponent_ng_container_1_div_1_div_1_div_4_div_1_button_14_Template_button_click_0_listener","serviceOption_r8","ldnServiceByPattern","services","SubmissionSectionCoarNotifyComponent_ng_container_1_div_1_div_1_div_4_div_1_button_16_Template_button_click_0_listener","_r9","removeService","ɵɵpipeBind2","error_r10","SubmissionSectionCoarNotifyComponent_ng_container_1_div_1_div_1_div_4_div_1_ng_container_18_small_1_Template","getShownSectionErrors$","SubmissionSectionCoarNotifyComponent_ng_container_1_div_1_div_1_div_4_div_1_div_20_div_7_Template","SubmissionSectionCoarNotifyComponent_ng_container_1_div_1_div_1_div_4_div_1_div_20_ng_template_8_Template","noDesc_r11","SubmissionSectionCoarNotifyComponent_ng_container_1_div_1_div_1_div_4_div_1_div_24_Template_div_click_0_listener","_r12","addNewService","SubmissionSectionCoarNotifyComponent_ng_container_1_div_1_div_1_div_4_div_1_Template_input_click_6_listener","myDropdown_r2","SubmissionSectionCoarNotifyComponent_ng_container_1_div_1_div_1_div_4_div_1_button_10_Template","SubmissionSectionCoarNotifyComponent_ng_container_1_div_1_div_1_div_4_div_1_button_12_Template","SubmissionSectionCoarNotifyComponent_ng_container_1_div_1_div_1_div_4_div_1_button_14_Template","SubmissionSectionCoarNotifyComponent_ng_container_1_div_1_div_1_div_4_div_1_button_16_Template","SubmissionSectionCoarNotifyComponent_ng_container_1_div_1_div_1_div_4_div_1_small_17_Template","SubmissionSectionCoarNotifyComponent_ng_container_1_div_1_div_1_div_4_div_1_ng_container_18_Template","SubmissionSectionCoarNotifyComponent_ng_container_1_div_1_div_1_div_4_div_1_div_20_Template","SubmissionSectionCoarNotifyComponent_ng_container_1_div_1_div_1_div_4_div_1_div_21_Template","SubmissionSectionCoarNotifyComponent_ng_container_1_div_1_div_1_div_4_div_1_div_24_Template","tmp_13_0","tmp_19_0","filterServices","tmp_20_0","tmp_24_0","tmp_26_0","multipleRequest","SubmissionSectionCoarNotifyComponent_ng_container_1_div_1_div_1_div_4_div_1_Template","SubmissionSectionCoarNotifyComponent_ng_container_1_div_1_div_1_div_4_Template","SubmissionSectionCoarNotifyComponent_ng_container_1_div_1_div_1_Template","tmp_4_0","SubmissionSectionCoarNotifyComponent_ng_container_1_div_1_Template","patterns","SubmissionSectionCoarNotifyComponent","ldnServicesService","coarNotifyConfigDataService","chd","hasSectionData","previousServices","filteredServicesByPattern","setCoarNotifyConfig","getSectionServerErrorsAndSetErrorsToDisplay","initSelectedServicesByPattern","selectedService","allowsMultipleRequests","ldnPattern","hasPrevValueStored","service","selection","s","addService","newService","serviceIndex","splice","findByInboundPattern","res","hasInboundPattern","patternType","notifyServiceInboundPatterns","getShownSectionErrors","ɵɵProvidersFeature","SubmissionSectionCoarNotifyComponent_Template","SubmissionSectionCoarNotifyComponent_ng_container_1_Template","SubmissionSectionCoarNotifyComponent_ng_container_2_Template","SubmissionSectionSherpaPoliciesComponent","SubmissionSectionUploadComponent","submissionSectionsMap","AccessesCondition","License","SherpaPolicies","SubmissionForm","Identifiers","CoarNotify","Duplicates","renderSectionFor","decorator","objectElement","uniq","parseSectionErrorPaths","genericSectionErrors","allSectionErrors","active","valid","isSectionValid","resetErrors","errorItem","parsedErrors","getActiveSectionId","activeSectionId","previousActive","enabled","isSectionEnabled","nextState","setActiveSection","getIsInformational","exportAs","TitleCasePipe","NgbCollapseModule","version","embargo","amount","units","locations","ContentAccordionComponent_span_13_span_2_Template","ContentAccordionComponent_div_21_div_1_p_7_Template","ContentAccordionComponent_div_21_div_1_ng_template_8_Template","noEmbargo_r4","license_r5","ContentAccordionComponent_div_21_div_2_p_7_Template","prerequisite_r6","ContentAccordionComponent_div_21_div_3_p_7_Template","prerequisites","location_r7","ContentAccordionComponent_div_21_div_4_p_7_Template","condition_r8","ContentAccordionComponent_div_21_div_5_p_7_Template","conditions","ContentAccordionComponent_div_21_div_1_Template","ContentAccordionComponent_div_21_div_2_Template","ContentAccordionComponent_div_21_div_3_Template","ContentAccordionComponent_div_21_div_4_Template","ContentAccordionComponent_div_21_div_5_Template","ContentAccordionComponent","isCollapsed","ContentAccordionComponent_Template","ContentAccordionComponent_Template_div_click_1_listener","collapse_r2","toggle","ContentAccordionComponent_Template_button_click_3_listener","ContentAccordionComponent_span_8_Template","ContentAccordionComponent_ng_template_9_Template","ContentAccordionComponent_span_13_Template","ContentAccordionComponent_ng_template_14_Template","ContentAccordionComponent_span_17_Template","ContentAccordionComponent_span_18_Template","ContentAccordionComponent_div_21_Template","articleVersion","noEmbargoTitle_r9","noLocations_r10","collapsed","NgbCollapse","DatePipe","dateCreated","dateModified","MetadataInformationComponent","MetadataInformationComponent_Template","MetadataInformationComponent_div_1_Template","MetadataInformationComponent_div_2_Template","MetadataInformationComponent_div_3_Template","MetadataInformationComponent_div_4_Template","title_r1","PublicationInformationComponent_div_1_p_6_Template","journal","titles","issn_r3","PublicationInformationComponent_div_2_p_6_Template","issns","publisher_r4","PublicationInformationComponent_div_4_div_5_Template","publishers","romeoPub","zetoPub","PublicationInformationComponent","PublicationInformationComponent_Template","PublicationInformationComponent_div_1_Template","PublicationInformationComponent_div_2_Template","PublicationInformationComponent_div_3_Template","PublicationInformationComponent_div_4_Template","PublicationInformationComponent_div_5_Template","PublicationInformationComponent_div_6_Template","KeyValuePipe","permittedVersions_r1","url_r2","PublisherPolicyComponent_div_2_li_6_Template","policy","urls","PublisherPolicyComponent","PublisherPolicyComponent_Template","PublisherPolicyComponent_ds_content_accordion_1_Template","PublisherPolicyComponent_div_2_Template","permittedVersions","SubmissionSectionSherpaPoliciesComponent_div_1_Template_button_click_5_listener","refresh","SubmissionSectionSherpaPoliciesComponent_ng_container_2_ng_container_1_ng_container_1_div_12_Template_div_click_1_listener","collapse_r7","SubmissionSectionSherpaPoliciesComponent_ng_container_2_ng_container_1_ng_container_1_div_12_Template_button_click_2_listener","SubmissionSectionSherpaPoliciesComponent_ng_container_2_ng_container_1_ng_container_1_div_12_span_6_Template","SubmissionSectionSherpaPoliciesComponent_ng_container_2_ng_container_1_ng_container_1_div_12_span_7_Template","policy_r8","SubmissionSectionSherpaPoliciesComponent_ng_container_2_ng_container_1_ng_container_1_Template_div_click_2_listener","_r4","collapse_r5","SubmissionSectionSherpaPoliciesComponent_ng_container_2_ng_container_1_ng_container_1_Template_button_click_3_listener","SubmissionSectionSherpaPoliciesComponent_ng_container_2_ng_container_1_ng_container_1_span_7_Template","SubmissionSectionSherpaPoliciesComponent_ng_container_2_ng_container_1_ng_container_1_span_8_Template","SubmissionSectionSherpaPoliciesComponent_ng_container_2_ng_container_1_ng_container_1_div_12_Template","journal_r9","policies","SubmissionSectionSherpaPoliciesComponent_ng_container_2_ng_container_1_ng_container_1_Template","SubmissionSectionSherpaPoliciesComponent_ng_container_2_ng_container_1_Template_div_click_3_listener","collapse_r10","SubmissionSectionSherpaPoliciesComponent_ng_container_2_ng_container_1_Template_button_click_4_listener","SubmissionSectionSherpaPoliciesComponent_ng_container_2_ng_container_1_span_8_Template","SubmissionSectionSherpaPoliciesComponent_ng_container_2_ng_container_1_span_9_Template","sherpaData_r11","journals","SubmissionSectionSherpaPoliciesComponent_ng_container_2_ng_container_1_Template","SubmissionSectionSherpaPoliciesComponent_ng_container_2_ng_container_2_Template","hasNoData","sherpaPoliciesData$","sherpaPolicies","SubmissionSectionSherpaPoliciesComponent_Template","SubmissionSectionSherpaPoliciesComponent_ds_alert_0_Template","SubmissionSectionSherpaPoliciesComponent_div_1_Template","SubmissionSectionSherpaPoliciesComponent_ng_container_2_Template","tmp_2_0","sherpaResponse","GroupDataService","ɵɵtextInterpolate3","accessCondition_r1","SubmissionSectionUploadAccessConditionsComponent_ng_container_0_span_1_Template","SubmissionSectionUploadAccessConditionsComponent_ng_container_0_span_2_Template","SubmissionSectionUploadAccessConditionsComponent_ng_container_0_span_3_Template","action","SubmissionSectionUploadAccessConditionsComponent","groupService","accessConditionsList","accessConditionEntry","SubmissionSectionUploadAccessConditionsComponent_Template","SubmissionSectionUploadAccessConditionsComponent_ng_container_0_Template","NgbActiveModal","DynamicCustomSwitchModel","SectionUploadService","POLICY_DEFAULT_WITH_LIST","BITSTREAM_ACCESS_CONDITION_GROUP_CONFIG","BITSTREAM_ACCESS_CONDITION_GROUP_LAYOUT","BITSTREAM_ACCESS_CONDITIONS_FORM_ARRAY_CONFIG","BITSTREAM_ACCESS_CONDITIONS_FORM_ARRAY_LAYOUT","BITSTREAM_FORM_ACCESS_CONDITION_END_DATE_CONFIG","BITSTREAM_FORM_ACCESS_CONDITION_END_DATE_LAYOUT","BITSTREAM_FORM_ACCESS_CONDITION_START_DATE_CONFIG","BITSTREAM_FORM_ACCESS_CONDITION_START_DATE_LAYOUT","BITSTREAM_FORM_ACCESS_CONDITION_TYPE_CONFIG","BITSTREAM_FORM_ACCESS_CONDITION_TYPE_LAYOUT","BITSTREAM_FORM_PRIMARY","BITSTREAM_FORM_PRIMARY_LAYOUT","BITSTREAM_METADATA_FORM_GROUP_CONFIG","BITSTREAM_METADATA_FORM_GROUP_LAYOUT","SubmissionSectionUploadFileEditComponent_ds_form_9_Template_ds_form_submitForm_0_listener","onSubmit","SubmissionSectionUploadFileEditComponent_ds_form_9_Template_ds_form_cancel_0_listener","onModalClose","SubmissionSectionUploadFileEditComponent_ds_form_9_Template_ds_form_dfChange_0_listener","isSaving","SubmissionSectionUploadFileEditComponent","activeModal","uploadService","formMetadata","primaryBitstreamModel","fileIndex","isPrimary","fileData","setOptions","saveBitstreamData","unsubscribeAll","configDescr","configMetadataForm","repeatable","configForm","metadataGroupModelConfig","collectionPolicyType","pathFragment","saveBitstreamDataSubscription","updatePrimaryBitstreamOperation","primary","fileId","metadataKey","startDateDate","maxStartDateDate","endDateDate","maxEndDateDate","uploadSection","updateFilePrimaryBitstream","updateFileData","SubmissionSectionUploadFileEditComponent_Query","SubmissionSectionUploadFileEditComponent_Template_button_click_5_listener","SubmissionSectionUploadFileEditComponent_ds_form_9_Template","SubmissionFormsModel","Bitstream","ThemedFileDownloadLinkComponent","SubmissionSectionUploadFileViewComponent","fileName","SubmissionSectionUploadFileComponent_ng_container_0_Template_input_change_4_listener","togglePrimaryBitstream","SubmissionSectionUploadFileComponent_ng_container_0_span_7_Template","SubmissionSectionUploadFileComponent_ng_container_0_span_8_Template","SubmissionSectionUploadFileComponent_ng_container_0_Template_button_click_16_listener","editBitstreamData","SubmissionSectionUploadFileComponent_ng_container_0_Template_button_click_20_listener","content_r3","confirmDelete","SubmissionSectionUploadFileComponent_ng_container_0_i_24_Template","SubmissionSectionUploadFileComponent_ng_container_0_i_26_Template","processingSaveStatus$","getBitstream","processingDelete$","SubmissionSectionUploadFileComponent_ng_template_1_Template_button_click_4_listener","d_r5","SubmissionSectionUploadFileComponent_ng_template_1_Template_button_click_12_listener","c_r6","SubmissionSectionUploadFileComponent_ng_template_1_Template_button_click_15_listener","SubmissionSectionUploadFileComponent","readMode","getFileData","bitstream","loadFormMetadata","deleteFile","size","backdrop","componentInstance","metadatum","removeUploadedFile","SubmissionSectionUploadFileComponent_Query","SubmissionSectionUploadFileComponent_ng_container_0_Template","SubmissionSectionUploadFileComponent_ng_template_1_Template","ThemedSubmissionSectionUploadFileComponent","ThemedSubmissionSectionUploadFileComponent_Template","ThemedSubmissionSectionUploadFileComponent_ng_template_0_Template","FileSizePipe","entry_r1","sizeBytes","fileTitleKey","SubmissionSectionUploadFileViewComponent_ng_container_1_ng_container_1_ng_container_2_h5_1_Template","SubmissionSectionUploadFileViewComponent_ng_container_1_ng_container_1_ng_container_1_Template","SubmissionSectionUploadFileViewComponent_ng_container_1_ng_container_1_ng_container_2_Template","entry_r3","fileDescrKey","SubmissionSectionUploadFileViewComponent_ng_container_1_ng_container_2_ng_container_2_span_1_Template","SubmissionSectionUploadFileViewComponent_ng_container_1_ng_container_2_ng_container_1_Template","SubmissionSectionUploadFileViewComponent_ng_container_1_ng_container_2_ng_container_2_Template","SubmissionSectionUploadFileViewComponent_ng_container_1_ng_container_1_Template","SubmissionSectionUploadFileViewComponent_ng_container_1_ng_container_2_Template","getAllMetadataValue","fileFormat","fileCheckSum","checkSumAlgorithm","all","checkSum","format","shortDescription","SubmissionSectionUploadFileViewComponent_Template","SubmissionSectionUploadFileViewComponent_ng_container_1_Template","SubmissionSectionUploadFileViewComponent_div_2_Template","SubmissionSectionUploadFileViewComponent_div_3_Template","POLICY_DEFAULT_NO_LIST","ResourcePolicyDataService","collectionName","SubmissionSectionUploadComponent_ng_container_1_div_1_ng_container_3_Template","SubmissionSectionUploadComponent_ng_container_1_div_1_ng_container_4_Template","Warning","collectionDefaultAccessConditions","primaryBitstreamUUID","fileEntry_r2","configMetadataForm$","i_r3","fileNames","SubmissionSectionUploadComponent_ng_container_1_div_1_Template","SubmissionSectionUploadComponent_ng_container_1_ng_container_10_Template","fileList","bitstreamService","resourcePolicyService","uploadsConfigService","required$","collectionRemoteData","getUploadedFilesData","sectionUploadObject","from","getFileName","metadataName","display","getUploadedFileList","SubmissionSectionUploadComponent_Template","SubmissionSectionUploadComponent_ng_container_1_Template","SubmissionSectionUploadComponent_ng_template_2_Template","Info","noFileUploaded_r4","DeleteUploadedFileAction","EditFileDataAction","EditFilePrimaryBitstreamAction","NewUploadedFileAction","submissionUploadedFileFromUuidSelector","submissionUploadedFilesFromIdSelector","intitialPrimary","fileUUID","fileState","getDefaultPolicies","addUploadedFile","baseUniq","require","array","module","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[82]}