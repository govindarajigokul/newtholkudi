{"version":3,"file":"src_app_admin_admin-ldn-services_admin-ldn-services-routes_ts.js","mappings":"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","sources":["./src/app/admin/admin-ldn-services/admin-ldn-services-routes.ts","./src/app/admin/admin-ldn-services/ldn-service-form/ldn-service-form.component.ts","./src/app/admin/admin-ldn-services/ldn-service-form/ldn-service-form.component.html","./src/app/admin/admin-ldn-services/ldn-services-directory/ldn-services-directory.component.ts","./src/app/admin/admin-ldn-services/ldn-services-directory/ldn-services-directory.component.html","./src/app/admin/admin-ldn-services/ldn-services-model/ldn-service-patterns.model.ts","./src/app/admin/admin-ldn-services/ldn-services-patterns/ldn-service-coar-patterns.ts","./src/app/core/breadcrumbs/navigation-breadcrumb.resolver.ts","./src/app/core/breadcrumbs/navigation-breadcrumb.service.ts","./src/app/shared/utils/ipV4.validator.ts"],"sourcesContent":["import { Routes } from '@angular/router';\n\nimport { i18nBreadcrumbResolver } from '../../core/breadcrumbs/i18n-breadcrumb.resolver';\nimport { navigationBreadcrumbResolver } from '../../core/breadcrumbs/navigation-breadcrumb.resolver';\nimport { LdnServiceFormComponent } from './ldn-service-form/ldn-service-form.component';\nimport { LdnServicesOverviewComponent } from './ldn-services-directory/ldn-services-directory.component';\n\nconst moduleRoutes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: LdnServicesOverviewComponent,\n    resolve: { breadcrumb: i18nBreadcrumbResolver },\n    data: { title: 'ldn-registered-services.title', breadcrumbKey: 'ldn-registered-services.new' },\n  },\n  {\n    path: 'new',\n    resolve: { breadcrumb: navigationBreadcrumbResolver },\n    component: LdnServiceFormComponent,\n    data: { title: 'ldn-register-new-service.title', breadcrumbKey: 'ldn-register-new-service' },\n  },\n  {\n    path: 'edit/:serviceId',\n    resolve: { breadcrumb: navigationBreadcrumbResolver },\n    component: LdnServiceFormComponent,\n    data: { title: 'ldn-edit-service.title', breadcrumbKey: 'ldn-edit-service' },\n  },\n];\n\nexport const ROUTES = moduleRoutes.map(route => {\n  return { ...route, data: {\n    ...route.data,\n    relatedRoutes: moduleRoutes.filter(relatedRoute => relatedRoute.path !== route.path)\n      .map((relatedRoute) => {\n        return { path: relatedRoute.path, data: relatedRoute.data };\n      }),\n  } };\n});\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport {\n  AsyncPipe,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormArray,\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport {\n  ActivatedRoute,\n  Router,\n} from '@angular/router';\nimport {\n  NgbDropdownModule,\n  NgbModal,\n} from '@ng-bootstrap/ng-bootstrap';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport { Operation } from 'fast-json-patch';\nimport {\n  combineLatestWith,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport { RemoteData } from 'src/app/core/data/remote-data';\n\nimport { FindListOptions } from '../../../core/data/find-list-options.model';\nimport { PaginatedList } from '../../../core/data/paginated-list.model';\nimport { PaginationService } from '../../../core/pagination/pagination.service';\nimport { getFirstCompletedRemoteData } from '../../../core/shared/operators';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { IpV4Validator } from '../../../shared/utils/ipV4.validator';\nimport { LdnItemfiltersService } from '../ldn-services-data/ldn-itemfilters-data.service';\nimport { LdnServicesService } from '../ldn-services-data/ldn-services-data.service';\nimport { LDN_SERVICE } from '../ldn-services-model/ldn-service.resource-type';\nimport { Itemfilter } from '../ldn-services-model/ldn-service-itemfilters';\nimport { NotifyServicePattern } from '../ldn-services-model/ldn-service-patterns.model';\nimport { LdnService } from '../ldn-services-model/ldn-services.model';\nimport { notifyPatterns } from '../ldn-services-patterns/ldn-service-coar-patterns';\n\n/**\n * Component for editing LDN service through a form that allows to create or edit the properties of a service\n */\n@Component({\n  selector: 'ds-ldn-service-form',\n  templateUrl: './ldn-service-form.component.html',\n  styleUrls: ['./ldn-service-form.component.scss'],\n  standalone: true,\n  animations: [\n    trigger('toggleAnimation', [\n      state('true', style({})),\n      state('false', style({})),\n      transition('true <=> false', animate('300ms ease-in')),\n    ]),\n  ],\n  imports: [\n    ReactiveFormsModule,\n    TranslateModule,\n    NgIf,\n    NgbDropdownModule,\n    NgForOf,\n    AsyncPipe,\n  ],\n})\nexport class LdnServiceFormComponent implements OnInit, OnDestroy {\n  formModel: FormGroup;\n\n  @ViewChild('confirmModal', { static: true }) confirmModal: TemplateRef<any>;\n  @ViewChild('resetFormModal', { static: true }) resetFormModal: TemplateRef<any>;\n\n  public inboundPatterns: string[] = notifyPatterns;\n  public isNewService: boolean;\n  public areControlsInitialized: boolean;\n  public itemFiltersRD$: Observable<RemoteData<PaginatedList<Itemfilter>>>;\n  public config: FindListOptions = Object.assign(new FindListOptions(), {\n    elementsPerPage: 20,\n  });\n  public markedForDeletionInboundPattern: number[] = [];\n  public selectedInboundPatterns: string[];\n\n  protected serviceId: string;\n\n  private deletedInboundPatterns: number[] = [];\n  private modalRef: any;\n  private ldnService: LdnService;\n  private selectPatternDefaultLabelI18Key = 'ldn-service.form.label.placeholder.default-select';\n  private routeSubscription: Subscription;\n\n  constructor(\n    protected ldnServicesService: LdnServicesService,\n    private ldnItemFiltersService: LdnItemfiltersService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private cdRef: ChangeDetectorRef,\n    protected modalService: NgbModal,\n    private notificationService: NotificationsService,\n    private translateService: TranslateService,\n    protected paginationService: PaginationService,\n  ) {\n\n    this.formModel = this.formBuilder.group({\n      id: [''],\n      name: ['', Validators.required],\n      description: [''],\n      url: ['', Validators.required],\n      ldnUrl: ['', Validators.required],\n      lowerIp: ['', [Validators.required, new IpV4Validator()]],\n      upperIp: ['', [Validators.required, new IpV4Validator()]],\n      score: ['', [Validators.required, Validators.pattern('^0*(\\.[0-9]+)?$|^1(\\.0+)?$')]], inboundPattern: [''],\n      constraintPattern: [''],\n      enabled: [''],\n      type: LDN_SERVICE.value,\n    });\n  }\n\n  ngOnInit(): void {\n    this.routeSubscription =  this.route.params.pipe(\n      combineLatestWith(this.route.url),\n    ).subscribe(([params, segment]) => {\n      this.serviceId = params.serviceId;\n      this.isNewService = segment[0].path === 'new';\n      this.formModel.addControl('notifyServiceInboundPatterns', this.formBuilder.array([this.createInboundPatternFormGroup()]));\n      this.areControlsInitialized = true;\n      if (this.serviceId && !this.isNewService) {\n        this.fetchServiceData(this.serviceId);\n      }\n    });\n    this.setItemFilters();\n  }\n\n  ngOnDestroy(): void {\n    this.routeSubscription.unsubscribe();\n  }\n\n  /**\n   * Sets item filters using LDN item filters service\n   */\n  setItemFilters() {\n    this.itemFiltersRD$ = this.ldnItemFiltersService.findAll().pipe(\n      getFirstCompletedRemoteData());\n  }\n\n  /**\n   * Handles the creation of an LDN service by retrieving and validating form fields,\n   * and submitting the form data to the LDN services endpoint.\n   */\n  createService() {\n    this.formModel.markAllAsTouched();\n\n    if (this.formModel.invalid) {\n      this.closeModal();\n      return;\n    }\n\n    this.formModel.value.notifyServiceInboundPatterns = this.formModel.value.notifyServiceInboundPatterns.map((pattern: {\n      pattern: string;\n      patternLabel: string,\n      constraintFormatted: string;\n    }) => {\n      const { patternLabel, ...rest } = pattern;\n      delete rest.constraintFormatted;\n      return rest;\n    });\n\n    const values = { ...this.formModel.value, enabled: true };\n\n    const ldnServiceData = this.ldnServicesService.create(values);\n\n    ldnServiceData.pipe(\n      getFirstCompletedRemoteData(),\n    ).subscribe((rd: RemoteData<LdnService>) => {\n      if (rd.hasSucceeded) {\n        this.notificationService.success(this.translateService.get('ldn-service-notification.created.success.title'),\n          this.translateService.get('ldn-service-notification.created.success.body'));\n        this.closeModal();\n        this.sendBack();\n      } else {\n        if (!this.formModel.errors) {\n          this.setLdnUrlError();\n        }\n        this.notificationService.error(this.translateService.get('ldn-service-notification.created.failure.title'),\n          this.translateService.get('ldn-service-notification.created.failure.body'));\n        this.closeModal();\n      }\n    });\n  }\n\n  /**\n   * Checks if at least one pattern in the specified form array has a value.\n   *\n   * @param {FormArray} formArray - The form array containing patterns to check.\n   * @returns {boolean} - True if at least one pattern has a value, otherwise false.\n   */\n  checkPatterns(formArray: FormArray): boolean {\n    for (let i = 0; i < formArray.length; i++) {\n      const pattern = formArray.at(i).get('pattern').value;\n      if (pattern) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Fetches LDN service data by ID and updates the form\n   * @param serviceId - The ID of the LDN service\n   */\n  fetchServiceData(serviceId: string): void {\n    this.ldnServicesService.findById(serviceId).pipe(\n      getFirstCompletedRemoteData(),\n    ).subscribe(\n      (data: RemoteData<LdnService>) => {\n        if (data.hasSucceeded) {\n          this.ldnService = data.payload;\n          this.formModel.patchValue({\n            id: this.ldnService.id,\n            name: this.ldnService.name,\n            description: this.ldnService.description,\n            url: this.ldnService.url,\n            score: this.ldnService.score,\n            ldnUrl: this.ldnService.ldnUrl,\n            type: this.ldnService.type,\n            enabled: this.ldnService.enabled,\n            lowerIp: this.ldnService.lowerIp,\n            upperIp: this.ldnService.upperIp,\n          });\n          this.filterPatternObjectsAndAssignLabel('notifyServiceInboundPatterns');\n          const notifyServiceInboundPatternsFormArray = this.formModel.get('notifyServiceInboundPatterns') as FormArray;\n          notifyServiceInboundPatternsFormArray.controls.forEach(\n            control => {\n              const controlFormGroup = control as FormGroup;\n              const controlConstraint = controlFormGroup.get('constraint').value;\n              controlFormGroup.patchValue({\n                constraintFormatted: controlConstraint ? this.translateService.instant((controlConstraint as string) + '.label') : '',\n              });\n            },\n          );\n        }\n      },\n    );\n  }\n\n  /**\n   * Filters pattern objects, initializes form groups, assigns labels, and adds them to the specified form array so the correct string is shown in the dropdown.\n   * @param formArrayName - The name of the form array to be populated\n   */\n  filterPatternObjectsAndAssignLabel(formArrayName: string) {\n    const PatternsArray = this.formModel.get(formArrayName) as FormArray;\n    PatternsArray.clear();\n\n    const servicesToUse = [...this.ldnService.notifyServiceInboundPatterns];\n    if (servicesToUse.length === 0) {\n      servicesToUse.push({ pattern: '', constraint: '', automatic: 'false' });\n    }\n\n    servicesToUse.forEach((patternObj: NotifyServicePattern) => {\n      const patternFormGroup = this.initializeInboundPatternFormGroup();\n      const patternLabel = patternObj?.pattern ? 'ldn-service.form.pattern.' + patternObj?.pattern + '.label' : 'ldn-service.form.label.placeholder.default-select';\n      const newPatternObjWithLabel = Object.assign(new NotifyServicePattern(), {\n        ...patternObj,\n        patternLabel: this.translateService.instant(patternLabel),\n      });\n      patternFormGroup.patchValue(newPatternObjWithLabel);\n\n      PatternsArray.push(patternFormGroup);\n      this.cdRef.detectChanges();\n    });\n  }\n\n  /**\n   * Generates an array of patch operations based on form changes\n   * @returns Array of patch operations\n   */\n  generatePatchOperations(): any[] {\n    const patchOperations: any[] = [];\n\n    this.createReplaceOperation(patchOperations, 'name', '/name');\n    this.createReplaceOperation(patchOperations, 'description', '/description');\n    this.createReplaceOperation(patchOperations, 'ldnUrl', '/ldnurl');\n    this.createReplaceOperation(patchOperations, 'url', '/url');\n    this.createReplaceOperation(patchOperations, 'score', '/score');\n    this.createReplaceOperation(patchOperations, 'lowerIp', '/lowerIp');\n    this.createReplaceOperation(patchOperations, 'upperIp', '/upperIp');\n\n    this.handlePatterns(patchOperations, 'notifyServiceInboundPatterns');\n    this.deletedInboundPatterns.forEach(index => {\n      const removeOperation: Operation = {\n        op: 'remove',\n        path: `notifyServiceInboundPatterns[${index}]`,\n      };\n      patchOperations.push(removeOperation);\n    });\n\n    return patchOperations;\n  }\n\n  /**\n   * Submits the form by opening the confirmation modal\n   */\n  onSubmit() {\n    this.openConfirmModal(this.confirmModal);\n  }\n\n  /**\n   * Adds a new inbound pattern form group to the array of inbound patterns in the form\n   */\n  addInboundPattern() {\n    const notifyServiceInboundPatternsArray = this.formModel.get('notifyServiceInboundPatterns') as FormArray;\n    notifyServiceInboundPatternsArray.push(this.createInboundPatternFormGroup());\n  }\n\n  /**\n   * Selects an inbound pattern by updating its values based on the provided pattern value and index\n   * @param patternValue - The selected pattern value\n   * @param index - The index of the inbound pattern in the array\n   */\n  selectInboundPattern(patternValue: string, index: number): void {\n    const patternArray = (this.formModel.get('notifyServiceInboundPatterns') as FormArray);\n    patternArray.controls[index].patchValue({ pattern: patternValue });\n    patternArray.controls[index].patchValue({ patternLabel: this.translateService.instant('ldn-service.form.pattern.' + patternValue + '.label') });\n  }\n\n  /**\n   * Selects an inbound item filter by updating its value based on the provided filter value and index\n   * @param filterValue - The selected filter value\n   * @param index - The index of the inbound pattern in the array\n   */\n  selectInboundItemFilter(filterValue: string, index: number): void {\n    const filterArray = (this.formModel.get('notifyServiceInboundPatterns') as FormArray);\n    filterArray.controls[index].patchValue({\n      constraint: filterValue,\n      constraintFormatted: this.translateService.instant((filterValue !== '' ? filterValue : 'ldn.no-filter') + '.label'),\n    });\n    filterArray.markAllAsTouched();\n  }\n\n  /**\n   * Toggles the automatic property of an inbound pattern at the specified index\n   * @param i - The index of the inbound pattern in the array\n   */\n  toggleAutomatic(i: number) {\n    const automaticControl = this.formModel.get(`notifyServiceInboundPatterns.${i}.automatic`);\n    if (automaticControl) {\n      automaticControl.markAsTouched();\n      automaticControl.setValue(!automaticControl.value);\n    }\n  }\n\n  /**\n   * Toggles the enabled status of the LDN service by sending a patch request\n   */\n  toggleEnabled() {\n    const newStatus = !this.formModel.get('enabled').value;\n\n    const patchOperation: Operation = {\n      op: 'replace',\n      path: '/enabled',\n      value: newStatus,\n    };\n\n    this.ldnServicesService.patch(this.ldnService, [patchOperation]).pipe(\n      getFirstCompletedRemoteData(),\n    ).subscribe(\n      () => {\n        this.formModel.get('enabled').setValue(newStatus);\n        this.cdRef.detectChanges();\n      },\n    );\n  }\n\n  /**\n   * Closes the modal\n   */\n  closeModal() {\n    this.modalRef.close();\n    this.cdRef.detectChanges();\n  }\n\n  /**\n   * Opens a confirmation modal with the specified content\n   * @param content - The content to be displayed in the modal\n   */\n  openConfirmModal(content) {\n    this.modalRef = this.modalService.open(content);\n  }\n\n  /**\n   * Patches the LDN service by retrieving and sending patch operations generated in generatePatchOperations()\n   */\n  patchService() {\n    this.deleteMarkedInboundPatterns();\n\n    const patchOperations = this.generatePatchOperations();\n    this.formModel.markAllAsTouched();\n    // If the form is invalid, close the modal and return\n    if (this.formModel.invalid) {\n      this.closeModal();\n      return;\n    }\n\n    this.ldnServicesService.patch(this.ldnService, patchOperations).pipe(\n      getFirstCompletedRemoteData(),\n    ).subscribe(\n      (rd: RemoteData<LdnService>) => {\n        if (rd.hasSucceeded) {\n          this.closeModal();\n          this.sendBack();\n          this.notificationService.success(this.translateService.get('admin.registries.services-formats.modify.success.head'),\n            this.translateService.get('admin.registries.services-formats.modify.success.content'));\n        } else {\n          if (!this.formModel.errors) {\n            this.setLdnUrlError();\n          }\n          this.notificationService.error(this.translateService.get('admin.registries.services-formats.modify.failure.head'),\n            this.translateService.get('admin.registries.services-formats.modify.failure.content'));\n          this.closeModal();\n        }\n      });\n  }\n\n  /**\n   * Resets the form and navigates back to the LDN services page\n   */\n  resetFormAndLeave() {\n    this.sendBack();\n  }\n\n  /**\n   * Marks the specified inbound pattern for deletion\n   * @param index - The index of the inbound pattern in the array\n   */\n  markForInboundPatternDeletion(index: number) {\n    if (!this.markedForDeletionInboundPattern.includes(index)) {\n      this.markedForDeletionInboundPattern.push(index);\n    }\n  }\n\n  /**\n   * Unmarks the specified inbound pattern for deletion\n   * @param index - The index of the inbound pattern in the array\n   */\n  unmarkForInboundPatternDeletion(index: number) {\n    const i = this.markedForDeletionInboundPattern.indexOf(index);\n    if (i !== -1) {\n      this.markedForDeletionInboundPattern.splice(i, 1);\n    }\n  }\n\n  /**\n   * Deletes marked inbound patterns from the form model\n   */\n  deleteMarkedInboundPatterns() {\n    this.markedForDeletionInboundPattern.sort((a, b) => b - a);\n    const patternsArray = this.formModel.get('notifyServiceInboundPatterns') as FormArray;\n\n    for (const index of this.markedForDeletionInboundPattern) {\n      if (index >= 0 && index < patternsArray.length) {\n        const patternGroup = patternsArray.at(index) as FormGroup;\n        const patternValue = patternGroup.value;\n        if (patternValue.isNew) {\n          patternsArray.removeAt(index);\n        } else {\n          this.deletedInboundPatterns.push(index);\n        }\n      }\n    }\n\n    this.markedForDeletionInboundPattern = [];\n  }\n\n  /**\n   * Creates a replace operation and adds it to the patch operations if the form control is dirty\n   * @param patchOperations - The array to store patch operations\n   * @param formControlName - The name of the form control\n   * @param path - The JSON Patch path for the operation\n   */\n  private createReplaceOperation(patchOperations: any[], formControlName: string, path: string): void {\n    if (this.formModel.get(formControlName).dirty) {\n      patchOperations.push({\n        op: 'replace',\n        path,\n        value: this.formModel.get(formControlName).value.toString(),\n      });\n    }\n  }\n\n  /**\n   * Handles patterns in the form array, checking if an add or replace operations is required\n   * @param patchOperations - The array to store patch operations\n   * @param formArrayName - The name of the form array\n   */\n  private handlePatterns(patchOperations: any[], formArrayName: string): void {\n    const patternsArray = this.formModel.get(formArrayName) as FormArray;\n\n    for (let i = 0; i < patternsArray.length; i++) {\n      const patternGroup = patternsArray.at(i) as FormGroup;\n\n      const patternValue = patternGroup.value;\n      delete patternValue.constraintFormatted;\n      if (patternGroup.touched && patternGroup.valid) {\n        delete patternValue?.patternLabel;\n        if (patternValue.isNew) {\n          delete patternValue.isNew;\n          const addOperation = {\n            op: 'add',\n            path: `${formArrayName}/-`,\n            value: patternValue,\n          };\n          patchOperations.push(addOperation);\n        } else {\n          const replaceOperation = {\n            op: 'replace',\n            path: `${formArrayName}[${i}]`,\n            value: patternValue,\n          };\n          patchOperations.push(replaceOperation);\n        }\n      }\n    }\n  }\n\n  /**\n   * Navigates back to the LDN services page\n   */\n  private sendBack() {\n    this.router.navigateByUrl('admin/ldn/services');\n  }\n\n  /**\n   * Creates a form group for inbound patterns\n   * @returns The form group for inbound patterns\n   */\n  private createInboundPatternFormGroup(): FormGroup {\n    const inBoundFormGroup = {\n      pattern: '',\n      patternLabel: this.translateService.instant(this.selectPatternDefaultLabelI18Key),\n      constraint: '',\n      constraintFormatted: '',\n      automatic: false,\n      isNew: true,\n    };\n\n    if (this.isNewService) {\n      delete inBoundFormGroup.isNew;\n    }\n\n    return this.formBuilder.group(inBoundFormGroup);\n  }\n\n  /**\n   * Initializes an existing form group for inbound patterns\n   * @returns The initialized form group for inbound patterns\n   */\n  private initializeInboundPatternFormGroup(): FormGroup {\n    return this.formBuilder.group({\n      pattern: '',\n      patternLabel: '',\n      constraint: '',\n      constraintFormatted: '',\n      automatic: '',\n    });\n  }\n\n\n  /**\n   * set ldnUrl error in case of unprocessable entity and provided value\n   */\n  private setLdnUrlError(): void {\n    const control = this.formModel.controls.ldnUrl;\n    const controlErrors = control.errors || {};\n    control.setErrors({ ...controlErrors, ldnUrlAlreadyAssociated: true });\n  }\n}\n","<div class=\"container\">\n  <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"formModel\">\n    <div class=\"d-flex\">\n      <h1 class=\"flex-grow-1\">{{ isNewService ? ('ldn-create-service.title' | translate) : ('ldn-edit-registered-service.title' | translate) }}</h1>\n    </div>\n    <!-- In the toggle section -->\n    <div class=\"toggle-switch-container\" *ngIf=\"!isNewService\">\n      <label class=\"status-label font-weight-bold\" for=\"enabled\">{{ 'ldn-service-status' | translate }}</label>\n      <div>\n        <input formControlName=\"enabled\" hidden id=\"enabled\" name=\"enabled\" type=\"checkbox\">\n        <div (click)=\"toggleEnabled()\" [class.checked]=\"formModel.get('enabled').value\" class=\"toggle-switch\">\n          <div class=\"slider\"></div>\n        </div>\n      </div>\n    </div>\n    <!-- In the Name section -->\n    <div class=\"mb-5\">\n      <label for=\"name\" class=\"font-weight-bold\">{{ 'ldn-new-service.form.label.name' | translate }}</label>\n      <input [class.invalid-field]=\"formModel.get('name').invalid && formModel.get('name').touched\"\n             [placeholder]=\"'ldn-new-service.form.placeholder.name' | translate\" class=\"form-control\"\n             formControlName=\"name\"\n             id=\"name\"\n             name=\"name\"\n             type=\"text\">\n      <div *ngIf=\"formModel.get('name').invalid && formModel.get('name').touched\" class=\"error-text\">\n        {{ 'ldn-new-service.form.error.name' | translate }}\n      </div>\n    </div>\n\n    <!-- In the description section -->\n    <div class=\"mb-5 mt-5 d-flex flex-column\">\n      <label for=\"description\" class=\"font-weight-bold\">{{ 'ldn-new-service.form.label.description' | translate }}</label>\n      <textarea [placeholder]=\"'ldn-new-service.form.placeholder.description' | translate\"\n                class=\"form-control\" formControlName=\"description\" id=\"description\" name=\"description\"></textarea>\n    </div>\n\n    <div class=\"mb-5 mt-5\">\n      <!-- In the url section -->\n      <div class=\"d-flex align-items-center\">\n        <div class=\"d-flex flex-column w-50 mr-2\">\n          <label for=\"url\" class=\"font-weight-bold\">{{ 'ldn-new-service.form.label.url' | translate }}</label>\n          <input [class.invalid-field]=\"formModel.get('url').invalid && formModel.get('url').touched\"\n                 [placeholder]=\"'ldn-new-service.form.placeholder.url' | translate\" class=\"form-control\"\n                 formControlName=\"url\"\n                 id=\"url\"\n                 name=\"url\"\n                 type=\"text\">\n          <div *ngIf=\"formModel.get('url').invalid && formModel.get('url').touched\" class=\"error-text\">\n            {{ 'ldn-new-service.form.error.url' | translate }}\n          </div>\n        </div>\n\n        <div class=\"d-flex flex-column w-50\">\n          <label for=\"score\" class=\"font-weight-bold\">{{ 'ldn-new-service.form.label.score' | translate }}</label>\n          <input [class.invalid-field]=\"formModel.get('score').invalid && formModel.get('score').touched\"\n                 [placeholder]=\"'ldn-new-service.form.placeholder.score' | translate\" formControlName=\"score\"\n                 id=\"score\"\n                 name=\"score\"\n                 min=\"0\"\n                 max=\"1\"\n                 step=\".01\"\n                 class=\"form-control\"\n                 type=\"number\">\n          <div *ngIf=\"formModel.get('score').invalid && formModel.get('score').touched\" class=\"error-text\">\n            {{ 'ldn-new-service.form.error.score' | translate }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- In the IP range section -->\n    <div class=\"mb-5 mt-5\">\n      <label for=\"lowerIp\" class=\"font-weight-bold\">{{ 'ldn-new-service.form.label.ip-range' | translate }}</label>\n      <div class=\"d-flex\">\n        <input [class.invalid-field]=\"formModel.get('lowerIp').invalid && formModel.get('lowerIp').touched\"\n               [placeholder]=\"'ldn-new-service.form.placeholder.lowerIp' | translate\" class=\"form-control mr-2\"\n               formControlName=\"lowerIp\"\n               id=\"lowerIp\"\n               name=\"lowerIp\"\n               type=\"text\">\n        <input [class.invalid-field]=\"formModel.get('upperIp').invalid && formModel.get('upperIp').touched\"\n               [placeholder]=\"'ldn-new-service.form.placeholder.upperIp' | translate\" class=\"form-control\"\n               formControlName=\"upperIp\"\n               id=\"upperIp\"\n               name=\"upperIp\"\n               type=\"text\">\n      </div>\n      <div *ngIf=\"(formModel.get('lowerIp').invalid && formModel.get('lowerIp').touched) || (formModel.get('upperIp').invalid && formModel.get('upperIp').touched)\" class=\"error-text\">\n        {{ 'ldn-new-service.form.error.ipRange' | translate }}\n      </div>\n      <div class=\"text-muted\">\n        {{ 'ldn-new-service.form.hint.ipRange' | translate }}\n      </div>\n    </div>\n\n    <!-- In the ldnUrl section -->\n    <div class=\"mb-5 mt-5\">\n      <label for=\"ldnUrl\" class=\"font-weight-bold\">{{ 'ldn-new-service.form.label.ldnUrl' | translate }}</label>\n      <input [class.invalid-field]=\"formModel.get('ldnUrl').invalid && formModel.get('ldnUrl').touched\"\n             [placeholder]=\"'ldn-new-service.form.placeholder.ldnUrl' | translate\" class=\"form-control\"\n             formControlName=\"ldnUrl\"\n             id=\"ldnUrl\"\n             name=\"ldnUrl\"\n             type=\"text\">\n      <div *ngIf=\"formModel.get('ldnUrl').invalid && formModel.get('ldnUrl').touched\" >\n        <div *ngIf=\"formModel.get('ldnUrl').errors['required']\" class=\"error-text\">\n          {{ 'ldn-new-service.form.error.ldnurl' | translate }}\n        </div>\n        <div *ngIf=\"formModel.get('ldnUrl').errors['ldnUrlAlreadyAssociated']\" class=\"error-text\">\n          {{ 'ldn-new-service.form.error.ldnurl.ldnUrlAlreadyAssociated' | translate }}\n        </div>\n      </div>\n    </div>\n\n\n    <!-- In the Inbound Patterns Labels section -->\n    <div class=\"row mb-1 mt-5\" *ngIf=\"areControlsInitialized\">\n      <div class=\"col\">\n        <label class=\"font-weight-bold\">{{ 'ldn-new-service.form.label.inboundPattern' | translate }} </label>\n      </div>\n      <ng-container *ngIf=\"formModel.get('notifyServiceInboundPatterns')['controls'][0]?.value?.pattern\">\n        <div class=\"col\">\n          <label class=\"font-weight-bold\">{{ 'ldn-new-service.form.label.ItemFilter' | translate }}</label>\n        </div>\n        <div class=\"col-sm-1\">\n          <label class=\"font-weight-bold\">{{ 'ldn-new-service.form.label.automatic' | translate }}</label>\n        </div>\n      </ng-container>\n      <div class=\"col-sm-2\">\n      </div>\n    </div>\n\n    <!-- In the Inbound Patterns section -->\n    <div *ngIf=\"areControlsInitialized\">\n      <div *ngFor=\"let patternGroup of formModel.get('notifyServiceInboundPatterns')['controls']; let i = index\"\n           [class.marked-for-deletion]=\"markedForDeletionInboundPattern.includes(i)\"\n           formGroupName=\"notifyServiceInboundPatterns\">\n\n        <ng-container [formGroupName]=\"i\">\n\n\n          <div class=\"row mb-1 align-items-center\">\n            <div class=\"col\">\n              <div #inboundPatternDropdown=\"ngbDropdown\" class=\"w-80\" display=\"dynamic\"\n                   id=\"additionalInboundPattern{{i}}\"\n                   ngbDropdown placement=\"top-start\">\n                <div class=\"position-relative right-addon\" role=\"combobox\"  aria-expanded=\"false\" aria-controls=\"inboundPatternDropdownButton\">\n                  <i aria-hidden=\"true\" class=\"position-absolute scrollable-dropdown-toggle\"\n                     ngbDropdownToggle></i>\n                  <input\n                    (click)=\"inboundPatternDropdown.open();\"\n                    [readonly]=\"true\"\n                    [value]=\"selectedInboundPatterns\"\n                    class=\"form-control w-80 scrollable-dropdown-input\"\n                    formControlName=\"patternLabel\"\n                    id=\"inboundPatternDropdownButton\"\n                    ngbDropdownAnchor\n                    type=\"text\"\n                    [attr.aria-label]=\"'ldn-service-input-inbound-pattern-dropdown' | translate\"\n                  />\n                  <div aria-labelledby=\"inboundPatternDropdownButton\"\n                       class=\"dropdown-menu dropdown-menu-top w-100 \"\n                       ngbDropdownMenu>\n                    <div class=\"scrollable-menu\" role=\"listbox\">\n                      <button (click)=\"selectInboundPattern(pattern, i); $event.stopPropagation()\"\n                              *ngFor=\"let pattern of inboundPatterns; let internalIndex = index\"\n                              [title]=\"'ldn-service.form.pattern.' + pattern + '.description' | translate\"\n                              class=\"dropdown-item collection-item text-truncate w-100\"\n                              ngbDropdownItem\n                              type=\"button\">\n                        <div>{{ 'ldn-service.form.pattern.' + pattern + '.label' | translate }}</div>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"col\">\n              <ng-container\n                *ngIf=\"formModel.get('notifyServiceInboundPatterns')['controls'][i].value.pattern\">\n                <div #inboundItemfilterDropdown=\"ngbDropdown\" class=\"w-100\" id=\"constraint{{i}}\" ngbDropdown\n                     placement=\"top-start\">\n                  <div class=\"position-relative right-addon\" aria-expanded=\"false\" aria-controls=\"inboundItemfilterDropdown\" role=\"combobox\">\n                    <i aria-hidden=\"true\" class=\"position-absolute scrollable-dropdown-toggle\"\n                       ngbDropdownToggle></i>\n                    <input\n                      [readonly]=\"true\"\n                      class=\"form-control d-none w-100 scrollable-dropdown-input\"\n                      formControlName=\"constraint\"\n                      id=\"inboundItemfilterDropdown\"\n                      ngbDropdownAnchor\n                      type=\"text\"\n                      [attr.aria-label]=\"'ldn-service-input-inbound-item-filter-dropdown' | translate\"\n                    />\n                    <input\n                      (click)=\"inboundItemfilterDropdown.open();\"\n                      [readonly]=\"true\"\n                      class=\"form-control w-100 scrollable-dropdown-input\"\n                      formControlName=\"constraintFormatted\"\n                      id=\"inboundItemfilterDropdownPrettified\"\n                      ngbDropdownAnchor\n                      type=\"text\"\n                      [attr.aria-label]=\"'ldn-service-input-inbound-item-filter-dropdown' | translate\"\n                    />\n                    <div aria-labelledby=\"inboundItemfilterDropdownButton\"\n                         class=\"dropdown-menu scrollable-dropdown-menu w-100 \"\n                         ngbDropdownMenu>\n                      <div class=\"scrollable-menu\" role=\"listbox\">\n                        <button (click)=\"selectInboundItemFilter('', i); $event.stopPropagation()\"\n                                class=\"dropdown-item collection-item text-truncate w-100\" ngbDropdownItem type=\"button\">\n                          <span> {{'ldn-service.control-constaint-select-none' | translate}} </span>\n                        </button>\n                        <button (click)=\"selectInboundItemFilter(constraint.id, i); $event.stopPropagation()\"\n                                *ngFor=\"let constraint of (itemFiltersRD$ | async)?.payload?.page; let internalIndex = index\"\n                                class=\"dropdown-item collection-item text-truncate w-100\"\n                                ngbDropdownItem\n                                type=\"button\">\n                          <div>{{ constraint.id + '.label' | translate }}</div>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </ng-container>\n            </div>\n\n            <div\n              [style.visibility]=\"formModel.get('notifyServiceInboundPatterns')['controls'][i].value.pattern ? 'visible' : 'hidden'\"\n              class=\"col-sm-1\">\n              <input formControlName=\"automatic\" hidden id=\"automatic{{i}}\" name=\"automatic{{i}}\"\n                     type=\"checkbox\">\n              <div (click)=\"toggleAutomatic(i)\"\n                   [class.checked]=\"formModel.get('notifyServiceInboundPatterns.' + i + '.automatic').value\"\n                   class=\"toggle-switch\">\n                <div class=\"slider\"></div>\n              </div>\n            </div>\n\n\n            <div class=\"col-sm-2\">\n              <div class=\"btn-group\">\n                <button (click)=\"markForInboundPatternDeletion(i)\" class=\"btn btn-outline-dark trash-button\"\n                        [title]=\"'ldn-service-button-mark-inbound-deletion' | translate\"\n                        type=\"button\">\n                  <i class=\"fas fa-trash\"></i>\n                </button>\n\n\n                <button (click)=\"unmarkForInboundPatternDeletion(i)\"\n                        *ngIf=\"markedForDeletionInboundPattern.includes(i)\"\n                        [title]=\"'ldn-service-button-unmark-inbound-deletion' | translate\"\n                        class=\"btn btn-warning \"\n                        type=\"button\">\n                  <i class=\"fas fa-undo\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n    <span (click)=\"addInboundPattern()\"\n          class=\"add-pattern-link mb-2\">{{ 'ldn-new-service.form.label.addPattern' | translate }}</span>\n    <hr>\n    <div class=\"form-group row\">\n      <div class=\"col text-right space-children-mr\">\n        <ng-content select=\"[before]\"></ng-content>\n        <button (click)=\"resetFormAndLeave()\" class=\"btn btn-outline-secondary\" type=\"button\">\n          <span>&nbsp;{{ 'submission.general.back.submit' | translate }}</span>\n        </button>\n        <button class=\"btn btn-primary\" type=\"submit\">\n          <span><i class=\"fas fa-save\"></i>&nbsp;{{ 'ldn-new-service.form.label.submit' | translate }}</span>\n        </button>\n\n      </div>\n    </div>\n  </form>\n</div>\n<ng-template #confirmModal>\n    <div class=\"modal-header\">\n      <h4 *ngIf=\"!isNewService\">{{'service.overview.edit.modal' | translate }}</h4>\n      <h4 *ngIf=\"isNewService\">{{'service.overview.create.modal' | translate }}</h4>\n      <button (click)=\"closeModal()\" aria-label=\"Close\"\n              class=\"close\" type=\"button\">\n        <span aria-hidden=\"true\">×</span>\n      </button>\n    </div>\n\n    <div class=\"modal-body\">\n      <div *ngIf=\"!isNewService\">\n        {{ 'service.overview.edit.body' | translate }}\n      </div>\n      <span *ngIf=\"isNewService\">\n        {{ 'service.overview.create.body' | translate }}\n      </span>\n    </div>\n      <div class=\"modal-footer\">\n        <div *ngIf=\"!isNewService\">\n          <button (click)=\"closeModal()\" class=\"btn btn-outline-secondary mr-2\"\n                  id=\"delete-confirm-edit\">{{ 'service.detail.return' | translate }}\n          </button>\n          <button *ngIf=\"!isNewService\" (click)=\"patchService()\"\n                  class=\"btn btn-primary\">{{ 'service.detail.update' | translate }}\n          </button>\n        </div>\n        <div *ngIf=\"isNewService\">\n          <button (click)=\"closeModal()\" class=\"btn btn-outline-secondary mr-2 \"\n                  id=\"delete-confirm-new\">{{ 'service.refuse.create' | translate }}\n          </button>\n          <button (click)=\"createService()\"\n                  class=\"btn btn-primary\">{{ 'service.confirm.create' | translate }}\n          </button>\n        </div>\n      </div>\n</ng-template>\n\n\n","import {\n  AsyncPipe,\n  NgClass,\n  NgFor,\n  NgIf,\n} from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport { Operation } from 'fast-json-patch';\nimport {\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  map,\n  switchMap,\n} from 'rxjs/operators';\nimport { LdnServicesService } from 'src/app/admin/admin-ldn-services/ldn-services-data/ldn-services-data.service';\nimport { PaginationService } from 'src/app/core/pagination/pagination.service';\n\nimport { FindListOptions } from '../../../core/data/find-list-options.model';\nimport { PaginatedList } from '../../../core/data/paginated-list.model';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { getFirstCompletedRemoteData } from '../../../core/shared/operators';\nimport { hasValue } from '../../../shared/empty.util';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { PaginationComponent } from '../../../shared/pagination/pagination.component';\nimport { PaginationComponentOptions } from '../../../shared/pagination/pagination-component-options.model';\nimport { TruncatableComponent } from '../../../shared/truncatable/truncatable.component';\nimport { TruncatablePartComponent } from '../../../shared/truncatable/truncatable-part/truncatable-part.component';\nimport { LdnService } from '../ldn-services-model/ldn-services.model';\n\n/**\n * The `LdnServicesOverviewComponent` is a component that provides an overview of LDN (Linked Data Notifications) services.\n * It displays a paginated list of LDN services, allows users to edit and delete services,\n * toggle the status of each service directly form the page and allows for creation of new services redirecting the user on the creation/edit form\n */\n@Component({\n  selector: 'ds-ldn-services-directory',\n  templateUrl: './ldn-services-directory.component.html',\n  styleUrls: ['./ldn-services-directory.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default,\n  imports: [\n    NgIf,\n    NgFor,\n    TranslateModule,\n    AsyncPipe,\n    PaginationComponent,\n    TruncatableComponent,\n    TruncatablePartComponent,\n    NgClass,\n    RouterLink,\n  ],\n  standalone: true,\n})\nexport class LdnServicesOverviewComponent implements OnInit, OnDestroy {\n\n  selectedServiceId: string | number | null = null;\n  servicesData: any[] = [];\n  @ViewChild('deleteModal', { static: true }) deleteModal: TemplateRef<any>;\n  ldnServicesRD$: Observable<RemoteData<PaginatedList<LdnService>>>;\n  config: FindListOptions = Object.assign(new FindListOptions(), {\n    elementsPerPage: 10,\n  });\n  pageConfig: PaginationComponentOptions = Object.assign(new PaginationComponentOptions(), {\n    id: 'po',\n    pageSize: 10,\n  });\n  isProcessingSub: Subscription;\n  modalRef: any;\n\n\n  constructor(\n    protected ldnServicesService: LdnServicesService,\n    protected paginationService: PaginationService,\n    protected modalService: NgbModal,\n    public cdRef: ChangeDetectorRef,\n    private notificationService: NotificationsService,\n    private translateService: TranslateService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.setLdnServices();\n  }\n\n  /**\n   * Sets up the LDN services by fetching and observing the paginated list of services.\n   */\n  setLdnServices() {\n    this.ldnServicesRD$ = this.paginationService.getFindListOptions(this.pageConfig.id, this.config).pipe(\n      switchMap((config) => this.ldnServicesService.findAll(config, false, false).pipe(\n        getFirstCompletedRemoteData(),\n      )),\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.paginationService.clearPagination(this.pageConfig.id);\n    if (hasValue(this.isProcessingSub)) {\n      this.isProcessingSub.unsubscribe();\n    }\n  }\n\n  /**\n   * Opens the delete confirmation modal.\n   *\n   * @param {any} content - The content of the modal.\n   */\n  openDeleteModal(content) {\n    this.modalRef = this.modalService.open(content);\n  }\n\n  /**\n   * Closes the currently open modal and triggers change detection.\n   */\n  closeModal() {\n    this.modalRef.close();\n    this.cdRef.detectChanges();\n  }\n\n  /**\n   * Sets the selected LDN service ID for deletion and opens the delete confirmation modal.\n   *\n   * @param {number} serviceId - The ID of the service to be deleted.\n   */\n  selectServiceToDelete(serviceId: number) {\n    this.selectedServiceId = serviceId;\n    this.openDeleteModal(this.deleteModal);\n  }\n\n  /**\n   * Deletes the selected LDN service.\n   *\n   * @param {string} serviceId - The ID of the service to be deleted.\n   * @param {LdnServicesService} ldnServicesService - The service for managing LDN services.\n   */\n  deleteSelected(serviceId: string, ldnServicesService: LdnServicesService): void {\n    if (this.selectedServiceId !== null) {\n      ldnServicesService.delete(serviceId).pipe(getFirstCompletedRemoteData()).subscribe((rd: RemoteData<LdnService>) => {\n        if (rd.hasSucceeded) {\n          this.servicesData = this.servicesData.filter(service => service.id !== serviceId);\n          this.ldnServicesRD$ = this.ldnServicesRD$.pipe(\n            map((remoteData: RemoteData<PaginatedList<LdnService>>) => {\n              if (remoteData.hasSucceeded) {\n                remoteData.payload.page = remoteData.payload.page.filter(service => service.id.toString() !== serviceId);\n              }\n              return remoteData;\n            }),\n          );\n          this.cdRef.detectChanges();\n          this.closeModal();\n          this.notificationService.success(this.translateService.get('ldn-service-delete.notification.success.title'),\n            this.translateService.get('ldn-service-delete.notification.success.content'));\n        } else {\n          this.notificationService.error(this.translateService.get('ldn-service-delete.notification.error.title'),\n            this.translateService.get('ldn-service-delete.notification.error.content'));\n          this.cdRef.detectChanges();\n        }\n      });\n    }\n  }\n\n  /**\n   * Toggles the status (enabled/disabled) of an LDN service.\n   *\n   * @param {any} ldnService - The LDN service object.\n   * @param {LdnServicesService} ldnServicesService - The service for managing LDN services.\n   */\n  toggleStatus(ldnService: any, ldnServicesService: LdnServicesService): void {\n    const newStatus = !ldnService.enabled;\n    const originalStatus = ldnService.enabled;\n\n    const patchOperation: Operation = {\n      op: 'replace',\n      path: '/enabled',\n      value: newStatus,\n    };\n\n    ldnServicesService.patch(ldnService, [patchOperation]).pipe(getFirstCompletedRemoteData()).subscribe(\n      (rd: RemoteData<LdnService>) => {\n        if (rd.hasSucceeded) {\n          ldnService.enabled = newStatus;\n          this.notificationService.success(this.translateService.get('ldn-enable-service.notification.success.title'),\n            this.translateService.get('ldn-enable-service.notification.success.content'));\n        } else {\n          ldnService.enabled = originalStatus;\n          this.notificationService.error(this.translateService.get('ldn-enable-service.notification.error.title'),\n            this.translateService.get('ldn-enable-service.notification.error.content'));\n        }\n      },\n    );\n  }\n}\n","<div class=\"container\">\n  <div class=\"d-flex\">\n    <h1 class=\"flex-grow-1\">{{ 'ldn-registered-services.title' | translate }}</h1>\n  </div>\n  <div class=\"d-flex justify-content-end\">\n    <button class=\"btn btn-success\" routerLink=\"/admin/ldn/services/new\"><i\n      class=\"fas fa-plus pr-2\"></i>{{ 'process.overview.new' | translate }}</button>\n  </div>\n  <ds-pagination *ngIf=\"(ldnServicesRD$ | async)?.payload?.totalElements > 0\"\n                 [collectionSize]=\"(ldnServicesRD$ | async)?.payload?.totalElements\"\n                 [hideGear]=\"true\"\n                 [hidePagerWhenSinglePage]=\"true\"\n                 [paginationOptions]=\"pageConfig\">\n    <div class=\"table-responsive\">\n      <table class=\"table table-striped table-hover\">\n        <thead>\n        <tr>\n          <th scope=\"col\">{{ 'service.overview.table.name' | translate }}</th>\n          <th scope=\"col\">{{ 'service.overview.table.description' | translate }}</th>\n          <th scope=\"col\">{{ 'service.overview.table.status' | translate }}</th>\n          <th scope=\"col\">{{ 'service.overview.table.actions' | translate }}</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let ldnService of (ldnServicesRD$ | async)?.payload?.page\">\n          <td class=\"col-3\">{{ ldnService.name }}</td>\n          <td>\n            <ds-truncatable [id]=\"ldnService.id\">\n              <ds-truncatable-part [id]=\"ldnService.id\" [minLines]=\"2\">\n                <div>\n                  {{ ldnService.description }}\n                </div>\n              </ds-truncatable-part>\n            </ds-truncatable>\n          </td>\n          <td>\n                        <span (click)=\"toggleStatus(ldnService, ldnServicesService)\"\n                              [ngClass]=\"{ 'status-enabled': ldnService.enabled, 'status-disabled': !ldnService.enabled }\"\n                              [title]=\"ldnService.enabled ? ('ldn-service.overview.table.clickToDisable' | translate) : ('ldn-service.overview.table.clickToEnable' | translate)\"\n                              class=\"status-indicator\">\n                            {{ ldnService.enabled ? ('ldn-service.overview.table.enabled' | translate) : ('ldn-service.overview.table.disabled' | translate) }}\n                        </span>\n          </td>\n          <td>\n            <div class=\"btn-group\">\n              <button\n                (click)=\"selectServiceToDelete(ldnService.id)\"\n                [attr.aria-label]=\"'ldn-service-overview-select-delete' | translate\"\n                class=\"btn btn-outline-danger\">\n                <i class=\"fas fa-trash\"></i>\n              </button>\n              <button [routerLink]=\"['/admin/ldn/services/edit/', ldnService.id]\"\n                      [attr.aria-label]=\"'ldn-service-overview-select-edit' | translate\"\n                      class=\"btn btn-outline-dark\">\n                <i class=\"fas fa-edit\"></i>\n              </button>\n            </div>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </ds-pagination>\n</div>\n\n<ng-template #deleteModal>\n\n  <div>\n\n    <div class=\"modal-header\">\n      <div>\n        <h4>{{'service.overview.delete.header' | translate }}</h4>\n      </div>\n      <button (click)=\"closeModal()\" aria-label=\"Close\"\n              [attr.aria-label]=\"'ldn-service-overview-close-modal' | translate\"\n              class=\"close\" type=\"button\">\n        <span aria-hidden=\"true\">×</span>\n      </button>\n    </div>\n\n    <div class=\"modal-body\">\n      <div>\n        {{ 'service.overview.delete.body' | translate }}\n      </div>\n      <div class=\"mt-4 text-right\">\n        <button (click)=\"closeModal()\"\n                [attr.aria-label]=\"'ldn-service-overview-close-modal' | translate\"\n                class=\"btn btn-outline-secondary mr-2\">{{ 'service.detail.delete.cancel' | translate }}</button>\n        <button (click)=\"deleteSelected(this.selectedServiceId.toString(), ldnServicesService)\"\n                class=\"btn btn-danger\"\n                [attr.aria-label]=\"'ldn-service-overview-select-delete' | translate\"\n                id=\"delete-confirm\">{{ 'service.overview.delete' | translate }}\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n","import { autoserialize } from 'cerialize';\n\n/**\n * A single notify service pattern and his properties\n */\nexport class NotifyServicePattern {\n  @autoserialize\n  pattern: string;\n  @autoserialize\n  constraint: string;\n  @autoserialize\n  automatic: string;\n}\n","/**\n * All available patterns for LDN service creation.\n * They are used to populate a dropdown in the LDN service form creation\n */\n\nexport const notifyPatterns = [\n\n  'request-endorsement',\n\n  'request-ingest',\n\n  'request-review',\n\n  'announce-relationship',\n\n];\n\n\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { BreadcrumbConfig } from '../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { NavigationBreadcrumbsService } from './navigation-breadcrumb.service';\n\n/**\n * Method for resolving an I18n breadcrumb configuration object\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {NavigationBreadcrumbsService} breadcrumbService\n * @returns BreadcrumbConfig object\n */\nexport const navigationBreadcrumbResolver: ResolveFn<BreadcrumbConfig<string>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  breadcrumbService: NavigationBreadcrumbsService = inject(NavigationBreadcrumbsService),\n): BreadcrumbConfig<string> => {\n  const parentRoutes: ActivatedRouteSnapshot[] = [];\n  getParentRoutes(route, parentRoutes);\n  const relatedRoutes = route.data.relatedRoutes;\n  const parentPaths = parentRoutes.map(parent => parent.routeConfig?.path);\n  const relatedParentRoutes = relatedRoutes.filter(relatedRoute => parentPaths.includes(relatedRoute.path));\n  const baseUrlSegmentPath = route.parent.url[route.parent.url.length - 1].path;\n  const baseUrl = state.url.substring(0, state.url.lastIndexOf(baseUrlSegmentPath) + baseUrlSegmentPath.length);\n\n\n  const combinedParentBreadcrumbKeys = relatedParentRoutes.reduce((previous, current) => {\n    return `${previous}:${current.data.breadcrumbKey}`;\n  }, route.data.breadcrumbKey);\n  const combinedUrls = relatedParentRoutes.reduce((previous, current) => {\n    return `${previous}:${baseUrl}${current.path}`;\n  }, state.url);\n\n  return { provider: breadcrumbService, key: combinedParentBreadcrumbKeys, url: combinedUrls };\n};\n\n/**\n * Method to collect all parent routes snapshot from current route snapshot\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {ActivatedRouteSnapshot[]} parentRoutes\n */\nfunction getParentRoutes(route: ActivatedRouteSnapshot, parentRoutes: ActivatedRouteSnapshot[]): void {\n  if (route.parent) {\n    parentRoutes.push(route.parent);\n    getParentRoutes(route.parent, parentRoutes);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs';\n\nimport { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport { BreadcrumbsProviderService } from './breadcrumbsProviderService';\n\n/**\n * The postfix for i18n breadcrumbs\n */\nexport const BREADCRUMB_MESSAGE_POSTFIX = '.breadcrumbs';\n\n/**\n * Service to calculate i18n breadcrumbs for a single part of the route\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigationBreadcrumbsService implements BreadcrumbsProviderService<string> {\n\n  /**\n   * Method to calculate the breadcrumbs\n   * @param key The key used to resolve the breadcrumb\n   * @param url The url to use as a link for this breadcrumb\n   */\n  getBreadcrumbs(key: string, url: string): Observable<Breadcrumb[]> {\n    const keys = key.split(':');\n    const urls = url.split(':');\n    const breadcrumbs = keys.map((currentKey, index) => new Breadcrumb(currentKey + BREADCRUMB_MESSAGE_POSTFIX, urls[index] ));\n    return observableOf(breadcrumbs.reverse());\n  }\n}\n","import { Directive } from '@angular/core';\nimport {\n  NG_VALIDATORS,\n  UntypedFormControl,\n  Validator,\n} from '@angular/forms';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[ipV4format]',\n  providers: [\n    { provide: NG_VALIDATORS, useExisting: IpV4Validator, multi: true },\n  ],\n  standalone: true,\n})\n/**\n * Validator to validate if an Ip is in the right format\n */\nexport class IpV4Validator implements Validator {\n  validate(formControl: UntypedFormControl): {[key: string]: boolean} | null {\n    const ipv4Regex = /^(\\d{1,3}\\.){3}\\d{1,3}$/;\n    const ipValue = formControl.value;\n    const ipParts = ipValue?.split('.');\n\n    if (ipv4Regex.test(ipValue) && ipParts.every(part => parseInt(part, 10) <= 255)) {\n      return null;\n    }\n\n    return { isValidIp: false };\n  }\n}\n"],"names":["i18nBreadcrumbResolver","navigationBreadcrumbResolver","LdnServiceFormComponent","LdnServicesOverviewComponent","moduleRoutes","path","pathMatch","component","resolve","breadcrumb","data","title","breadcrumbKey","ROUTES","map","route","relatedRoutes","filter","relatedRoute","animate","state","style","transition","trigger","AsyncPipe","NgForOf","NgIf","ChangeDetectorRef","TemplateRef","FormBuilder","ReactiveFormsModule","Validators","ActivatedRoute","Router","NgbDropdownModule","NgbModal","TranslateModule","TranslateService","combineLatestWith","FindListOptions","PaginationService","getFirstCompletedRemoteData","NotificationsService","IpV4Validator","LdnItemfiltersService","LdnServicesService","LDN_SERVICE","NotifyServicePattern","notifyPatterns","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","LdnServiceFormComponent_div_7_Template_div_click_6_listener","ɵɵrestoreView","_r2","ctx_r2","ɵɵnextContext","ɵɵresetView","toggleEnabled","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵclassProp","formModel","get","value","ɵɵtextInterpolate1","ɵɵtemplate","LdnServiceFormComponent_div_56_div_1_Template","LdnServiceFormComponent_div_56_div_2_Template","ɵɵproperty","errors","ɵɵelementContainerStart","LdnServiceFormComponent_div_57_ng_container_5_Template","tmp_3_0","pattern","LdnServiceFormComponent_div_58_div_1_button_12_Template_button_click_0_listener","$event","pattern_r7","_r6","$implicit","i_r8","index","selectInboundPattern","stopPropagation","LdnServiceFormComponent_div_58_div_1_ng_container_14_button_15_Template_button_click_0_listener","constraint_r12","_r11","selectInboundItemFilter","id","LdnServiceFormComponent_div_58_div_1_ng_container_14_Template_input_click_7_listener","_r9","inboundItemfilterDropdown_r10","ɵɵreference","open","LdnServiceFormComponent_div_58_div_1_ng_container_14_Template_button_click_11_listener","LdnServiceFormComponent_div_58_div_1_ng_container_14_button_15_Template","ɵɵpropertyInterpolate1","tmp_14_0","itemFiltersRD$","payload","page","LdnServiceFormComponent_div_58_div_1_button_24_Template_button_click_0_listener","_r13","unmarkForInboundPatternDeletion","LdnServiceFormComponent_div_58_div_1_Template_input_click_8_listener","_r4","inboundPatternDropdown_r5","LdnServiceFormComponent_div_58_div_1_button_12_Template","LdnServiceFormComponent_div_58_div_1_ng_container_14_Template","LdnServiceFormComponent_div_58_div_1_Template_div_click_17_listener","toggleAutomatic","LdnServiceFormComponent_div_58_div_1_Template_button_click_21_listener","markForInboundPatternDeletion","LdnServiceFormComponent_div_58_div_1_button_24_Template","markedForDeletionInboundPattern","includes","selectedInboundPatterns","inboundPatterns","ɵɵstyleProp","LdnServiceFormComponent_div_58_div_1_Template","LdnServiceFormComponent_ng_template_75_div_10_button_4_Template_button_click_0_listener","_r16","patchService","LdnServiceFormComponent_ng_template_75_div_10_Template_button_click_1_listener","_r15","closeModal","LdnServiceFormComponent_ng_template_75_div_10_button_4_Template","isNewService","LdnServiceFormComponent_ng_template_75_div_11_Template_button_click_1_listener","_r17","LdnServiceFormComponent_ng_template_75_div_11_Template_button_click_4_listener","createService","LdnServiceFormComponent_ng_template_75_h4_1_Template","LdnServiceFormComponent_ng_template_75_h4_2_Template","LdnServiceFormComponent_ng_template_75_Template_button_click_3_listener","_r14","LdnServiceFormComponent_ng_template_75_div_7_Template","LdnServiceFormComponent_ng_template_75_span_8_Template","LdnServiceFormComponent_ng_template_75_div_10_Template","LdnServiceFormComponent_ng_template_75_div_11_Template","constructor","ldnServicesService","ldnItemFiltersService","formBuilder","router","cdRef","modalService","notificationService","translateService","paginationService","config","Object","assign","elementsPerPage","deletedInboundPatterns","selectPatternDefaultLabelI18Key","group","name","required","description","url","ldnUrl","lowerIp","upperIp","score","inboundPattern","constraintPattern","enabled","type","ngOnInit","routeSubscription","params","pipe","subscribe","segment","serviceId","addControl","array","createInboundPatternFormGroup","areControlsInitialized","fetchServiceData","setItemFilters","ngOnDestroy","unsubscribe","findAll","markAllAsTouched","invalid","notifyServiceInboundPatterns","patternLabel","rest","constraintFormatted","values","ldnServiceData","create","rd","hasSucceeded","success","sendBack","setLdnUrlError","error","checkPatterns","formArray","i","length","at","findById","ldnService","patchValue","filterPatternObjectsAndAssignLabel","notifyServiceInboundPatternsFormArray","controls","forEach","control","controlFormGroup","controlConstraint","instant","formArrayName","PatternsArray","clear","servicesToUse","push","constraint","automatic","patternObj","patternFormGroup","initializeInboundPatternFormGroup","newPatternObjWithLabel","detectChanges","generatePatchOperations","patchOperations","createReplaceOperation","handlePatterns","removeOperation","op","onSubmit","openConfirmModal","confirmModal","addInboundPattern","notifyServiceInboundPatternsArray","patternValue","patternArray","filterValue","filterArray","automaticControl","markAsTouched","setValue","newStatus","patchOperation","patch","modalRef","close","content","deleteMarkedInboundPatterns","resetFormAndLeave","indexOf","splice","sort","a","b","patternsArray","patternGroup","isNew","removeAt","formControlName","dirty","toString","touched","valid","addOperation","replaceOperation","navigateByUrl","inBoundFormGroup","controlErrors","setErrors","ldnUrlAlreadyAssociated","ɵɵdirectiveInject","i1","i2","i3","i4","i5","i6","i7","i8","selectors","viewQuery","LdnServiceFormComponent_Query","rf","ctx","LdnServiceFormComponent_Template_form_ngSubmit_1_listener","_r1","LdnServiceFormComponent_div_7_Template","LdnServiceFormComponent_div_14_Template","LdnServiceFormComponent_div_29_Template","LdnServiceFormComponent_div_36_Template","LdnServiceFormComponent_div_46_Template","LdnServiceFormComponent_div_56_Template","LdnServiceFormComponent_div_57_Template","LdnServiceFormComponent_div_58_Template","LdnServiceFormComponent_Template_span_click_59_listener","ɵɵprojection","LdnServiceFormComponent_Template_button_click_66_listener","LdnServiceFormComponent_ng_template_75_Template","ɵɵtemplateRefExtractor","ɵNgNoValidate","DefaultValueAccessor","NumberValueAccessor","CheckboxControlValueAccessor","NgControlStatus","NgControlStatusGroup","MinValidator","MaxValidator","FormGroupDirective","FormControlName","FormGroupName","TranslatePipe","NgbDropdown","NgbDropdownAnchor","NgbDropdownToggle","NgbDropdownMenu","NgbDropdownItem","styles","animation","NgClass","NgFor","RouterLink","switchMap","hasValue","PaginationComponent","PaginationComponentOptions","TruncatableComponent","TruncatablePartComponent","LdnServicesOverviewComponent_ds_pagination_10_tr_19_Template_span_click_9_listener","ldnService_r2","toggleStatus","LdnServicesOverviewComponent_ds_pagination_10_tr_19_Template_button_click_17_listener","selectServiceToDelete","ɵɵpureFunction2","_c1","ɵɵpureFunction1","_c2","LdnServicesOverviewComponent_ds_pagination_10_tr_19_Template","tmp_2_0","ldnServicesRD$","totalElements","pageConfig","tmp_10_0","LdnServicesOverviewComponent_ng_template_12_Template_button_click_6_listener","LdnServicesOverviewComponent_ng_template_12_Template_button_click_15_listener","LdnServicesOverviewComponent_ng_template_12_Template_button_click_19_listener","deleteSelected","selectedServiceId","servicesData","pageSize","setLdnServices","getFindListOptions","clearPagination","isProcessingSub","openDeleteModal","deleteModal","delete","service","remoteData","originalStatus","LdnServicesOverviewComponent_Query","LdnServicesOverviewComponent_ds_pagination_10_Template","LdnServicesOverviewComponent_ng_template_12_Template","autoserialize","__decorate","inject","NavigationBreadcrumbsService","breadcrumbService","parentRoutes","getParentRoutes","parentPaths","parent","routeConfig","relatedParentRoutes","baseUrlSegmentPath","baseUrl","substring","lastIndexOf","combinedParentBreadcrumbKeys","reduce","previous","current","combinedUrls","provider","key","of","observableOf","Breadcrumb","BREADCRUMB_MESSAGE_POSTFIX","getBreadcrumbs","keys","split","urls","breadcrumbs","currentKey","reverse","factory","ɵfac","providedIn","NG_VALIDATORS","UntypedFormControl","validate","formControl","ipv4Regex","ipValue","ipParts","test","every","part","parseInt","isValidIp","standalone","features","ɵɵProvidersFeature","provide","useExisting","multi"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}