{"version":3,"file":"src_app_system-wide-alert_system-wide-alert-routes_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGyB;AAYD;AACiB;AAKL;AAIP;AAIR;AAC0B;AAIjC;AAIU;AAIyC;AAC2B;AAClB;AACC;AAI1C;AACuD;AAC3B;;;;;;;;;;;;;;;;;;;;;IC/BrC0B,4DAAA,WAAiC;IAC7BA,oDAAA,GACJ;;IAAAA,0DAAA,EAAO;;;IADHA,uDAAA,EACJ;IADIA,gEAAA,MAAAA,yDAAA,oDACJ;;;;;IAJJA,4DAAA,cAC2C;IACvCA,wDAAA,IAAAQ,mDAAA,mBAAiC;IAGrCR,0DAAA,EAAM;;;;IAHKA,uDAAA,EAAwB;IAAxBA,wDAAA,SAAAU,MAAA,CAAAC,WAAA,CAAAC,MAAA,CAAwB;;;;;;IAmBnCZ,4DAJhB,UAAoC,aACf,cACmB,cACH,mBAE4E;IADlCA,8DAAA,2BAAAc,4EAAAC,MAAA;MAAAf,2DAAA,CAAAiB,GAAA;MAAA,MAAAP,MAAA,GAAAV,2DAAA;MAAAA,gEAAA,CAAAU,MAAA,CAAAU,IAAA,EAAAL,MAAA,MAAAL,MAAA,CAAAU,IAAA,GAAAL,MAAA;MAAA,OAAAf,yDAAA,CAAAe,MAAA;IAAA,EAAkB;IACxBf,wDAAA,2BAAAc,4EAAA;MAAAd,2DAAA,CAAAiB,GAAA;MAAA,MAAAP,MAAA,GAAAV,2DAAA;MAAA,OAAAA,yDAAA,CAAiBU,MAAA,CAAAa,iBAAA,EAAmB;IAAA,EAAC;IAD9FvB,0DAAA,EACiG;IACjGA,4DAAA,iBACyF;;IAArFA,wDAAA,mBAAAwB,qEAAA;MAAAxB,2DAAA,CAAAiB,GAAA;MAAA,MAAAQ,IAAA,GAAAzB,yDAAA;MAAA,OAAAA,yDAAA,CAASyB,IAAA,CAAAE,MAAA,EAAU;IAAA,EAAC;IAGhC3B,0DAFQ,EAAS,EACP,EACJ;IAGEA,4DAFR,cAA8B,cACD,0BACoD;IAAzDA,8DAAA,2BAAA4B,sFAAAb,MAAA;MAAAf,2DAAA,CAAAiB,GAAA;MAAA,MAAAP,MAAA,GAAAV,2DAAA;MAAAA,gEAAA,CAAAU,MAAA,CAAAmB,IAAA,EAAAd,MAAA,MAAAL,MAAA,CAAAmB,IAAA,GAAAd,MAAA;MAAA,OAAAf,yDAAA,CAAAe,MAAA;IAAA,EAAkB;IAACf,wDAAA,2BAAA4B,sFAAA;MAAA5B,2DAAA,CAAAiB,GAAA;MAAA,MAAAP,MAAA,GAAAV,2DAAA;MAAA,OAAAA,yDAAA,CAAiBU,MAAA,CAAAa,iBAAA,EAAmB;IAAA,EAAC;IAEhFvB,0DAFiF,EAAiB,EACxF,EACJ;IAGEA,4DAFR,eAA0D,eAC7B,0BACoD;IAAzDA,8DAAA,2BAAA8B,sFAAAf,MAAA;MAAAf,2DAAA,CAAAiB,GAAA;MAAA,MAAAP,MAAA,GAAAV,2DAAA;MAAAA,gEAAA,CAAAU,MAAA,CAAAmB,IAAA,EAAAd,MAAA,MAAAL,MAAA,CAAAmB,IAAA,GAAAd,MAAA;MAAA,OAAAf,yDAAA,CAAAe,MAAA;IAAA,EAAkB;IAACf,wDAAA,2BAAA8B,sFAAA;MAAA9B,2DAAA,CAAAiB,GAAA;MAAA,MAAAP,MAAA,GAAAV,2DAAA;MAAA,OAAAA,yDAAA,CAAiBU,MAAA,CAAAa,iBAAA,EAAmB;IAAA,EAAC;IAIxFvB,0DAJyF,EAAiB,EACxF,EACJ,EACJ,EACJ;;;;IAlByEA,uDAAA,GAAkB;IAAlBA,8DAAA,YAAAU,MAAA,CAAAU,IAAA,CAAkB;IAC7EpB,wDAAA,YAAAU,MAAA,CAAAsB,OAAA,CAAmB;IACfhC,uDAAA,GAAgF;;IAOxEA,uDAAA,GAAkB;IAAlBA,8DAAA,YAAAU,MAAA,CAAAmB,IAAA,CAAkB;IAKlB7B,uDAAA,GAAkB;IAAlBA,8DAAA,YAAAU,MAAA,CAAAmB,IAAA,CAAkB;;;;;IAgBtC7B,4DAAA,WAAyE;IACrEA,oDAAA,GACJ;;IAAAA,0DAAA,EAAO;;;IADHA,uDAAA,EACJ;IADIA,gEAAA,MAAAA,yDAAA,yDACJ;;;;;IACAA,4DAAA,WAA8B;IAC1BA,oDAAA,GACJ;;IAAAA,0DAAA,EAAO;;;;IADHA,uDAAA,EACJ;IADIA,gEAAA,MAAAA,yDAAA,kDAAAA,6DAAA,IAAAmC,GAAA,EAAAzB,MAAA,CAAA0B,WAAA,QACJ;;;;;IACApC,4DAAA,WAAmD;IAC/CA,oDAAA,GACJ;;IAAAA,0DAAA,EAAO;;;;IADHA,uDAAA,EACJ;IADIA,gEAAA,MAAAA,yDAAA,mDAAAA,6DAAA,IAAAqC,GAAA,EAAA3B,MAAA,CAAA4B,YAAA,QACJ;;;;;IACAtC,4DAAA,WAAyE;IACrEA,oDAAA,GACJ;;IAAAA,0DAAA,EAAO;;;;IADHA,uDAAA,EACJ;IADIA,gEAAA,MAAAA,yDAAA,qDAAAA,6DAAA,IAAAuC,GAAA,EAAA7B,MAAA,CAAA8B,cAAA,QACJ;;;;;IAhBAxC,4DAHZ,UAA+B,aACV,aACI,YACN;IAAAA,oDAAA,GAAuD;;IAEtEA,0DAFsE,EAAQ,EACpE,EACJ;IAEFA,4DADJ,cAA2C,eACR;IAU3BA,wDATA,IAAAyC,mDAAA,mBAAyE,IAAAC,mDAAA,mBAG3C,KAAAC,oDAAA,mBAGqB,KAAAC,oDAAA,mBAGsB;IAG7E5C,0DAAA,EAAO;IACPA,uDAAA,gBAA6C;IAErDA,0DADI,EAAM,EACJ;;;;IApBaA,uDAAA,GAAuD;IAAvDA,+DAAA,CAAAA,yDAAA,+CAAuD;IAKvDA,uDAAA,GAA+D;IAA/DA,wDAAA,SAAAU,MAAA,CAAA0B,WAAA,QAAA1B,MAAA,CAAA4B,YAAA,QAAA5B,MAAA,CAAA8B,cAAA,KAA+D;IAG/DxC,uDAAA,EAAqB;IAArBA,wDAAA,SAAAU,MAAA,CAAA0B,WAAA,KAAqB;IAGrBpC,uDAAA,EAAyC;IAAzCA,wDAAA,SAAAU,MAAA,CAAA0B,WAAA,QAAA1B,MAAA,CAAA4B,YAAA,KAAyC;IAGzCtC,uDAAA,EAA+D;IAA/DA,wDAAA,SAAAU,MAAA,CAAA0B,WAAA,QAAA1B,MAAA,CAAA4B,YAAA,QAAA5B,MAAA,CAAA8B,cAAA,KAA+D;IAIpExC,uDAAA,EAA+B;IAA/BA,wDAAA,cAAAU,MAAA,CAAAC,WAAA,CAAAoC,KAAA,EAAA/C,4DAAA,CAA+B;;;AD5BjD;;;AAUM,MAAOiD,4BAA4B;EAqDvCC,YACYC,0BAAsD,EACtDC,oBAA0C,EAC1CC,MAAc,EACdC,cAA8B,EAC9BC,gBAAkC;IAJlC,KAAAJ,0BAA0B,GAA1BA,0BAA0B;IAC1B,KAAAC,oBAAoB,GAApBA,oBAAoB;IACpB,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,gBAAgB,GAAhBA,gBAAgB;IA1B5B;;;IAGA,KAAAC,eAAe,GAA6B,IAAInE,iDAAe,CAAU,KAAK,CAAC;EAyB/E;EAEAoE,QAAQA,CAAA;IACN,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACP,0BAA0B,CAACQ,OAAO,EAAE,CAACC,IAAI,CACpElE,mFAA2B,EAAE,EAC7BH,mDAAG,CAAEsE,EAAE,IAAI;MACT,IAAIA,EAAE,CAACC,YAAY,EAAE;QACnB,OAAOD,EAAE,CAACE,OAAO;MACnB,CAAC,MAAM;QACL,IAAI,CAACX,oBAAoB,CAACY,KAAK,CAAC,wCAAwC,CAAC;MAC3E;IACF,CAAC,CAAC,EACFzE,mDAAG,CAAEwE,OAAuC,IAAKA,OAAO,CAACE,IAAI,CAAC,EAC9D3E,uDAAM,CAAE2E,IAAI,IAAKpE,8DAAU,CAACoE,IAAI,CAAC,CAAC,EAClC1E,mDAAG,CAAE0E,IAAI,IAAKA,IAAI,CAAC,CAAC,CAAC,CAAC,CACvB;IACD,IAAI,CAACC,UAAU,EAAE;IAEjB,MAAMC,WAAW,GAAG,IAAIC,IAAI,EAAE;IAC9B,IAAI,CAACpC,OAAO,GAAG;MAAEqC,IAAI,EAAEF,WAAW,CAACG,WAAW,EAAE;MAAEC,KAAK,EAAEJ,WAAW,CAACK,QAAQ,EAAE,GAAG,CAAC;MAAEC,GAAG,EAAEN,WAAW,CAACO,OAAO;IAAE,CAAE;IAGjH,IAAI,CAAChB,gBAAgB,CAACiB,SAAS,CAAEC,KAAK,IAAI;MACxC,IAAI,CAACC,YAAY,GAAGD,KAAK;MACzB,IAAI,CAACE,cAAc,CAACF,KAAK,CAAC;IAC5B,CAAC,CAAC;EACJ;EAEA;;;EAGAV,UAAUA,CAAA;IACR,IAAI,CAACa,SAAS,GAAG,IAAIrG,+DAAkB,EAAE,CAACsG,KAAK,CAAC;MAC9CrE,WAAW,EAAE,IAAIhC,+DAAkB,CAAC,EAAE,EAAE;QACtCsG,UAAU,EAAE,CAACrG,uDAAU,CAACsG,QAAQ;OACjC,CAAC;MACFC,UAAU,EAAE,IAAIxG,+DAAkB,CAAC,KAAK;KACzC,CACA;IACD,IAAI,CAACyG,WAAW,CAAC,IAAIhB,IAAI,EAAE,CAAC;EAC9B;EAEA;;;;EAIAU,cAAcA,CAACF,KAAsB;IACnC,IAAI,CAACjE,WAAW,CAAC0E,UAAU,CAACT,KAAK,CAACU,OAAO,CAAC;IAC1C,IAAI,CAACH,UAAU,CAACE,UAAU,CAACT,KAAK,CAACW,MAAM,CAAC;IACxC,MAAMC,WAAW,GAAGrG,4DAAc,CAACyF,KAAK,CAACa,WAAW,EAAE,KAAK,CAAC;IAC5D,IAAID,WAAW,CAACE,OAAO,EAAE,GAAG,IAAItB,IAAI,EAAE,CAACsB,OAAO,EAAE,GAAG,CAAC,EAAE;MACpD,IAAI,CAAClC,eAAe,CAACmC,IAAI,CAAC,IAAI,CAAC;MAC/B,IAAI,CAACP,WAAW,CAACI,WAAW,CAAC;IAC/B;EAEF;EAEA;;;;;EAKAI,SAASA,CAACL,MAAe;IACvB,IAAI,CAACJ,UAAU,CAACE,UAAU,CAACE,MAAM,CAAC;IAClC,IAAI,CAACM,IAAI,CAAC,KAAK,CAAC;EAClB;EAEA;;;;EAIAC,iBAAiBA,CAACC,OAAgB;IAChC,IAAI,CAACvC,eAAe,CAACmC,IAAI,CAACI,OAAO,CAAC;IAClC,IAAI,CAACA,OAAO,EAAE;MACZ,IAAI,CAACvD,cAAc,GAAG,CAAC;MACvB,IAAI,CAACF,YAAY,GAAG,CAAC;MACrB,IAAI,CAACF,WAAW,GAAG,CAAC;IACtB,CAAC,MAAM;MACL,IAAI,CAACb,iBAAiB,EAAE;IAC1B;EACF;EAGQ6D,WAAWA,CAACY,SAAS;IAC3B,IAAI,CAACnE,IAAI,GAAG;MAAEoE,IAAI,EAAED,SAAS,CAACE,QAAQ,EAAE;MAAEC,MAAM,EAAEH,SAAS,CAACI,UAAU;IAAE,CAAE;IAC1E,IAAI,CAAChF,IAAI,GAAG;MAAEiD,IAAI,EAAE2B,SAAS,CAAC1B,WAAW,EAAE;MAAEC,KAAK,EAAEyB,SAAS,CAACxB,QAAQ,EAAE,GAAG,CAAC;MAAEC,GAAG,EAAEuB,SAAS,CAACtB,OAAO;IAAE,CAAE;IAExG,IAAI,CAACnD,iBAAiB,EAAE;EAC1B;EAEA;;;EAGAA,iBAAiBA,CAAA;IACf,MAAMiE,WAAW,GAAG,IAAIpB,IAAI,CAAC,IAAI,CAAChD,IAAI,CAACiD,IAAI,EAAE,IAAI,CAACjD,IAAI,CAACmD,KAAK,GAAG,CAAC,EAAE,IAAI,CAACnD,IAAI,CAACqD,GAAG,EAAE,IAAI,CAAC5C,IAAI,CAACoE,IAAI,EAAE,IAAI,CAACpE,IAAI,CAACsE,MAAM,CAAC;IAClH,MAAME,cAAc,GAAGb,WAAW,CAACE,OAAO,EAAE,GAAG,IAAItB,IAAI,EAAE,CAACsB,OAAO,EAAE;IACnE,IAAI,CAACY,iBAAiB,CAACD,cAAc,CAAC;EACxC;EAEA;;;;EAIQC,iBAAiBA,CAACD,cAAc;IACtC,IAAI,CAAC7D,cAAc,GAAG+D,IAAI,CAACC,KAAK,CAAEH,cAAc,IAAK,IAAI,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;IACrE,IAAI,CAAC/D,YAAY,GAAGiE,IAAI,CAACC,KAAK,CAAEH,cAAc,IAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;IACxE,IAAI,CAACjE,WAAW,GAAGmE,IAAI,CAACC,KAAK,CAAEH,cAAc,IAAK,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EACzE;EAGA,IAAI1F,WAAWA,CAAA;IACb,OAAO,IAAI,CAACoE,SAAS,CAAC0B,GAAG,CAAC,aAAa,CAAC;EAC1C;EAEA,IAAItB,UAAUA,CAAA;IACZ,OAAO,IAAI,CAACJ,SAAS,CAAC0B,GAAG,CAAC,YAAY,CAAC;EACzC;EAEA;;;;;;;EAOAZ,IAAIA,CAACa,kBAAkB,GAAI,IAAI;IAC7B,MAAM9B,KAAK,GAAG,IAAI7E,qEAAe,EAAE;IACnC6E,KAAK,CAACU,OAAO,GAAG,IAAI,CAAC3E,WAAW,CAACoC,KAAK;IACtC6B,KAAK,CAACW,MAAM,GAAG,IAAI,CAACJ,UAAU,CAACpC,KAAK;IACpC,IAAI,IAAI,CAACS,eAAe,CAACmD,QAAQ,EAAE,EAAE;MACnC,MAAMnB,WAAW,GAAG,IAAIpB,IAAI,CAAC,IAAI,CAAChD,IAAI,CAACiD,IAAI,EAAE,IAAI,CAACjD,IAAI,CAACmD,KAAK,GAAG,CAAC,EAAE,IAAI,CAACnD,IAAI,CAACqD,GAAG,EAAE,IAAI,CAAC5C,IAAI,CAACoE,IAAI,EAAE,IAAI,CAACpE,IAAI,CAACsE,MAAM,CAAC;MAClHvB,KAAK,CAACa,WAAW,GAAGvG,4DAAc,CAACsG,WAAW,EAAE,KAAK,CAAC,CAACoB,WAAW,EAAE;IACtE,CAAC,MAAM;MACLhC,KAAK,CAACa,WAAW,GAAG,IAAI;IAC1B;IACA,IAAI,IAAI,CAACV,SAAS,CAAC8B,KAAK,EAAE;MACxB,IAAIjH,4DAAQ,CAAC,IAAI,CAACiF,YAAY,CAAC,EAAE;QAC/B,MAAMiC,YAAY,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAIjH,qEAAe,EAAE,EAAE,IAAI,CAAC8E,YAAY,EAAED,KAAK,CAAC;QACnF,IAAI,CAACqC,cAAc,CAAC,IAAI,CAAC9D,0BAA0B,CAAC+D,GAAG,CAACJ,YAAY,CAAC,EAAE,+BAA+B,EAAEJ,kBAAkB,CAAC;MAC7H,CAAC,MAAM;QACL,IAAI,CAACO,cAAc,CAAC,IAAI,CAAC9D,0BAA0B,CAACgE,MAAM,CAACvC,KAAK,CAAC,EAAE,+BAA+B,EAAE8B,kBAAkB,CAAC;MACzH;IACF;EACF;EAEQO,cAAcA,CAACG,SAAkD,EAAEC,aAAa,EAAEX,kBAA2B;IACnHU,SAAS,CAACxD,IAAI,CACZlE,mFAA2B,EAAE,CAC9B,CAACiF,SAAS,CAAE2C,QAAqC,IAAI;MACpD,IAAIA,QAAQ,CAACxD,YAAY,EAAE;QACzB,IAAI,CAACV,oBAAoB,CAACmE,OAAO,CAAC,IAAI,CAAChE,gBAAgB,CAACkD,GAAG,CAAC,GAAGY,aAAa,UAAU,CAAC,CAAC;QACxF,IAAI,CAAC/D,cAAc,CAACkE,uBAAuB,CAAC,kBAAkB,CAAC;QAC/D,IAAId,kBAAkB,EAAE;UACtB,IAAI,CAACe,IAAI,EAAE;QACb;MACF,CAAC,MAAM;QACL,IAAI,CAACrE,oBAAoB,CAACY,KAAK,CAAC,IAAI,CAACT,gBAAgB,CAACkD,GAAG,CAAC,GAAGY,aAAa,QAAQ,EAAEC,QAAQ,CAACI,YAAY,CAAC,CAAC;MAC7G;IACF,CAAC,CAAC;EACJ;EAEA;;;EAGAD,IAAIA,CAAA;IACF,IAAI,CAACpE,MAAM,CAACsE,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;;;uBAlOW1E,4BAA4B,EAAAjD,+DAAA,CAAA6H,iGAAA,GAAA7H,+DAAA,CAAA8H,6FAAA,GAAA9H,+DAAA,CAAA+H,oDAAA,GAAA/H,+DAAA,CAAAgI,sEAAA,GAAAhI,+DAAA,CAAAiI,kEAAA;IAAA;EAAA;;;YAA5BhF,4BAA4B;MAAAiF,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAApI,iEAAA;MAAAsI,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,sCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UC/DrC3I,4DADJ,aAAuB,YACH;UAAAA,oDAAA,GAA+C;;UAAAA,0DAAA,EAAK;UAKpDA,4DAJhB,aAAoD,aACxB,aACE,aACD,mBAGiD;;;UAA7BA,wDAAA,oBAAA6I,kEAAA9H,MAAA;YAAA,OAAU6H,GAAA,CAAAhD,SAAA,CAAA7E,MAAA,CAAiB;UAAA,EAAC;UAErEf,0DAFsE,EAAY,EACxE,EACJ;UAGEA,4DAFR,cAAiB,cACI,gBACY;UAAAA,oDAAA,IAAwD;;UAAAA,0DAAA,EAAQ;UACzFA,4DAAA,oBAEkC;UACtCA,oDAAA;UAAAA,0DAAA,EAAW;UACPA,wDAAA,KAAA8I,4CAAA,kBAC2C;UAQ3D9I,0DAHY,EAAM,EACJ,EACJ,EACJ;UAGEA,4DAFR,cAAiB,eACgC,qBAEmC;;;UAArCA,wDAAA,oBAAA+I,mEAAAhI,MAAA;YAAA,OAAU6H,GAAA,CAAA9C,iBAAA,CAAA/E,MAAA,CAAyB;UAAA,EAAC;UAACf,0DAAA,EAAY;UACxFA,4DAAA,gBAAmB;UAAAA,oDAAA,IAAmE;;UAE9FA,0DAF8F,EAAO,EAC3F,EACJ;UACNA,wDAAA,KAAAgJ,4CAAA,mBAAoC;;UAwBhChJ,4DADJ,eAAkB,gBACW;UAAAA,oDAAA,IAAiE;;UAC9FA,0DAD8F,EAAO,EAC/F;UACNA,wDAAA,KAAAiJ,4CAAA,mBAA+B;UAyB3BjJ,4DADJ,eAAwD,kBACO;UAAnDA,wDAAA,mBAAAkJ,+DAAA;YAAA,OAASN,GAAA,CAAAnB,IAAA,EAAM;UAAA,EAAC;UACpBzH,uDAAA,aAAiC;UAACA,oDAAA,IACtC;;UAAAA,0DAAA,EAAS;UACTA,4DAAA,kBAAqF;UAAjBA,wDAAA,mBAAAmJ,+DAAA;YAAA,OAASP,GAAA,CAAA/C,IAAA,EAAM;UAAA,EAAC;UAChF7F,uDAAA,aAA0B;UAACA,oDAAA,IAC/B;;UAERA,0DAFQ,EAAS,EACP,EACJ;;;UA5FcA,uDAAA,GAA+C;UAA/CA,+DAAA,CAAAA,yDAAA,yCAA+C;UAClCA,uDAAA,GAAsB;UAAtBA,wDAAA,cAAsB;UAA9CA,wDAAA,cAAA4I,GAAA,CAAA7D,SAAA,CAAuB;UAID/E,uDAAA,GAAkE;UAEzEA,wDAFO,iBAAAA,yDAAA,+CAAkE,mBAAAA,yDAAA,kDACH,YAAA4I,GAAA,CAAAzD,UAAA,CAAApC,KAAA,CAC1C;UAKP/C,uDAAA,GAAwD;UAAxDA,+DAAA,CAAAA,yDAAA,iDAAwD;UAE7EA,uDAAA,GAA6H;UAA7HA,wDAAA,cAAA4I,GAAA,CAAAjI,WAAA,CAAA0I,OAAA,KAAAT,GAAA,CAAAjI,WAAA,CAAA2I,KAAA,IAAAV,GAAA,CAAAjI,WAAA,CAAA4I,OAAA,+CAA6H;UAG3HvJ,uDAAA,GAAuE;UAAvEA,wDAAA,SAAA4I,GAAA,CAAAjI,WAAA,CAAA0I,OAAA,KAAAT,GAAA,CAAAjI,WAAA,CAAA2I,KAAA,IAAAV,GAAA,CAAAjI,WAAA,CAAA4I,OAAA,EAAuE;UAY7DvJ,uDAAA,GAA2E;UAC/FA,wDADoB,cAAAA,yDAAA,4DAA2E,YAAAA,yDAAA,SAAA4I,GAAA,CAAApF,eAAA,EAC7D;UACnBxD,uDAAA,GAAmE;UAAnEA,+DAAA,CAAAA,yDAAA,4DAAmE;UAGxFA,uDAAA,GAA4B;UAA5BA,wDAAA,SAAAA,yDAAA,SAAA4I,GAAA,CAAApF,eAAA,EAA4B;UAwBLxD,uDAAA,GAAiE;UAAjEA,+DAAA,CAAAA,yDAAA,0DAAiE;UAExFA,uDAAA,GAAuB;UAAvBA,wDAAA,SAAA4I,GAAA,CAAAjI,WAAA,CAAAoC,KAAA,CAAuB;UA0Ba/C,uDAAA,GACtC;UADsCA,gEAAA,MAAAA,yDAAA,+CACtC;UACgCA,uDAAA,GAAmC;UAAnCA,wDAAA,kBAAA4I,GAAA,CAAA7D,SAAA,CAAAsE,OAAA,CAAmC;UACpCrJ,uDAAA,GAC/B;UAD+BA,gEAAA,MAAAA,yDAAA,6CAC/B;;;qBD7BIxB,wDAAW,EAAAgL,iEAAA,EAAAA,4DAAA,EAAAA,iEAAA,EAAAA,oDAAA,EAAE/K,gEAAmB,EAAA+K,+DAAA,EAAAA,4DAAA,EAAEpK,0DAAc,EAAA2K,6DAAA,EAAExL,kDAAI,EAAEO,4EAAmB,EAAAmL,2EAAA,EAAElL,4EAAmB,EAAAkL,sEAAA,EAAE3L,uDAAS,EAAEU,iEAAe,EAAAiJ,+DAAA,EAAEtI,gFAAoB;MAAA0K,MAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;AE5D7B;AACpC;AAEtF,MAAME,MAAM,GAAY,CAC7B;EACEC,IAAI,EAAE,EAAE;EACRC,WAAW,EAAE,CAACH,yIAAsB,CAAC;EACrCI,SAAS,EAAEzH,sGAA4BA;CACxC,CAEF","sources":["./src/app/system-wide-alert/alert-form/system-wide-alert-form.component.ts","./src/app/system-wide-alert/alert-form/system-wide-alert-form.component.html","./src/app/system-wide-alert/system-wide-alert-routes.ts"],"sourcesContent":["import {\n  AsyncPipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n  UntypedFormBuilder,\n  UntypedFormControl,\n  UntypedFormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {\n  NgbDatepickerModule,\n  NgbDateStruct,\n  NgbTimepickerModule,\n} from '@ng-bootstrap/ng-bootstrap';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  utcToZonedTime,\n  zonedTimeToUtc,\n} from 'date-fns-tz';\nimport { UiSwitchModule } from 'ngx-ui-switch';\nimport {\n  BehaviorSubject,\n  Observable,\n} from 'rxjs';\nimport {\n  filter,\n  map,\n} from 'rxjs/operators';\n\nimport { PaginatedList } from '../../core/data/paginated-list.model';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { RequestService } from '../../core/data/request.service';\nimport { SystemWideAlertDataService } from '../../core/data/system-wide-alert-data.service';\nimport { getFirstCompletedRemoteData } from '../../core/shared/operators';\nimport { BtnDisabledDirective } from '../../shared/btn-disabled.directive';\nimport {\n  hasValue,\n  isNotEmpty,\n} from '../../shared/empty.util';\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\nimport { SystemWideAlert } from '../system-wide-alert.model';\n\n\n/**\n * Component responsible for rendering the form to update a system-wide alert\n */\n@Component({\n  selector: 'ds-system-wide-alert-form',\n  styleUrls: ['./system-wide-alert-form.component.scss'],\n  templateUrl: './system-wide-alert-form.component.html',\n  standalone: true,\n  imports: [FormsModule, ReactiveFormsModule, UiSwitchModule, NgIf, NgbDatepickerModule, NgbTimepickerModule, AsyncPipe, TranslateModule, BtnDisabledDirective],\n})\nexport class SystemWideAlertFormComponent implements OnInit {\n\n  /**\n   * Observable to track an existing system-wide alert\n   */\n  systemWideAlert$: Observable<SystemWideAlert>;\n\n  /**\n   * The currently configured system-wide alert\n   */\n  currentAlert: SystemWideAlert;\n\n  /**\n   * The form group representing the system-wide alert\n   */\n  alertForm: UntypedFormGroup;\n\n  /**\n   * Date object to store the countdown date part\n   */\n  date: NgbDateStruct;\n\n  /**\n   * The minimum date for the countdown timer\n   */\n  minDate: NgbDateStruct;\n\n  /**\n   * Object to store the countdown time part\n   */\n  time;\n\n  /**\n   * Behaviour subject to track whether the counter is enabled\n   */\n  counterEnabled$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  /**\n   * The amount of minutes to be used in the banner preview\n   */\n  previewMinutes: number;\n\n  /**\n   * The amount of hours to be used in the banner preview\n   */\n  previewHours: number;\n\n  /**\n   * The amount of days to be used in the banner preview\n   */\n  previewDays: number;\n\n\n  constructor(\n    protected systemWideAlertDataService: SystemWideAlertDataService,\n    protected notificationsService: NotificationsService,\n    protected router: Router,\n    protected requestService: RequestService,\n    protected translateService: TranslateService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.systemWideAlert$ = this.systemWideAlertDataService.findAll().pipe(\n      getFirstCompletedRemoteData(),\n      map((rd) => {\n        if (rd.hasSucceeded) {\n          return rd.payload;\n        } else {\n          this.notificationsService.error('system-wide-alert-form.retrieval.error');\n        }\n      }),\n      map((payload: PaginatedList<SystemWideAlert>) => payload.page),\n      filter((page) => isNotEmpty(page)),\n      map((page) => page[0]),\n    );\n    this.createForm();\n\n    const currentDate = new Date();\n    this.minDate = { year: currentDate.getFullYear(), month: currentDate.getMonth() + 1, day: currentDate.getDate() };\n\n\n    this.systemWideAlert$.subscribe((alert) => {\n      this.currentAlert = alert;\n      this.initFormValues(alert);\n    });\n  }\n\n  /**\n   * Creates the form with empty values\n   */\n  createForm() {\n    this.alertForm = new UntypedFormBuilder().group({\n      formMessage: new UntypedFormControl('', {\n        validators: [Validators.required],\n      }),\n      formActive: new UntypedFormControl(false),\n    },\n    );\n    this.setDateTime(new Date());\n  }\n\n  /**\n   * Sets the form values based on the values retrieve from the provided system-wide alert\n   * @param alert   - System-wide alert to use to init the form\n   */\n  initFormValues(alert: SystemWideAlert) {\n    this.formMessage.patchValue(alert.message);\n    this.formActive.patchValue(alert.active);\n    const countDownTo = zonedTimeToUtc(alert.countdownTo, 'UTC');\n    if (countDownTo.getTime() - new Date().getTime() > 0) {\n      this.counterEnabled$.next(true);\n      this.setDateTime(countDownTo);\n    }\n\n  }\n\n  /**\n   * Set whether the system-wide alert is active\n   * Will also save the info in the current system-wide alert\n   * @param active\n   */\n  setActive(active: boolean) {\n    this.formActive.patchValue(active);\n    this.save(false);\n  }\n\n  /**\n   * Set whether the countdown timer is enabled or disabled. This will also update the counter in the preview\n   * @param enabled   - Whether the countdown timer is enabled or disabled.\n   */\n  setCounterEnabled(enabled: boolean) {\n    this.counterEnabled$.next(enabled);\n    if (!enabled) {\n      this.previewMinutes = 0;\n      this.previewHours = 0;\n      this.previewDays = 0;\n    } else {\n      this.updatePreviewTime();\n    }\n  }\n\n\n  private setDateTime(dateToSet) {\n    this.time = { hour: dateToSet.getHours(), minute: dateToSet.getMinutes() };\n    this.date = { year: dateToSet.getFullYear(), month: dateToSet.getMonth() + 1, day: dateToSet.getDate() };\n\n    this.updatePreviewTime();\n  }\n\n  /**\n   * Update the preview time based on the configured countdown date and the current time\n   */\n  updatePreviewTime() {\n    const countDownTo = new Date(this.date.year, this.date.month - 1, this.date.day, this.time.hour, this.time.minute);\n    const timeDifference = countDownTo.getTime() - new Date().getTime();\n    this.allocateTimeUnits(timeDifference);\n  }\n\n  /**\n   * Helper method to push how many days, hours and minutes are left in the countdown to their respective behaviour subject\n   * @param timeDifference  - The time difference to calculate and push the time units for\n   */\n  private allocateTimeUnits(timeDifference) {\n    this.previewMinutes = Math.floor((timeDifference) / (1000 * 60) % 60);\n    this.previewHours = Math.floor((timeDifference) / (1000 * 60 * 60) % 24);\n    this.previewDays = Math.floor((timeDifference) / (1000 * 60 * 60 * 24));\n  }\n\n\n  get formMessage() {\n    return this.alertForm.get('formMessage');\n  }\n\n  get formActive() {\n    return this.alertForm.get('formActive');\n  }\n\n  /**\n   * Save the system-wide alert present in the form\n   * When no alert is present yet on the server, a new one will be created\n   * When one already exists, the existing one will be updated\n   *\n   * @param navigateToHomePage  - Whether the user should be navigated back on successful save or not\n   */\n  save(navigateToHomePage  = true) {\n    const alert = new SystemWideAlert();\n    alert.message = this.formMessage.value;\n    alert.active = this.formActive.value;\n    if (this.counterEnabled$.getValue()) {\n      const countDownTo = new Date(this.date.year, this.date.month - 1, this.date.day, this.time.hour, this.time.minute);\n      alert.countdownTo = utcToZonedTime(countDownTo, 'UTC').toUTCString();\n    } else {\n      alert.countdownTo = null;\n    }\n    if (this.alertForm.valid) {\n      if (hasValue(this.currentAlert)) {\n        const updatedAlert = Object.assign(new SystemWideAlert(), this.currentAlert, alert);\n        this.handleResponse(this.systemWideAlertDataService.put(updatedAlert), 'system-wide-alert.form.update', navigateToHomePage);\n      } else {\n        this.handleResponse(this.systemWideAlertDataService.create(alert), 'system-wide-alert.form.create', navigateToHomePage);\n      }\n    }\n  }\n\n  private handleResponse(response$: Observable<RemoteData<SystemWideAlert>>, messagePrefix, navigateToHomePage: boolean) {\n    response$.pipe(\n      getFirstCompletedRemoteData(),\n    ).subscribe((response: RemoteData<SystemWideAlert>) => {\n      if (response.hasSucceeded) {\n        this.notificationsService.success(this.translateService.get(`${messagePrefix}.success`));\n        this.requestService.setStaleByHrefSubstring('systemwidealerts');\n        if (navigateToHomePage) {\n          this.back();\n        }\n      } else {\n        this.notificationsService.error(this.translateService.get(`${messagePrefix}.error`, response.errorMessage));\n      }\n    });\n  }\n\n  /**\n   * Navigate back to the homepage\n   */\n  back() {\n    this.router.navigate(['/home']);\n  }\n\n\n}\n","<div class=\"container\">\n    <h1 id=\"header\">{{'system-wide-alert.form.header' | translate}}</h1>\n    <div [formGroup]=\"alertForm\" [class]=\"'ng-invalid'\">\n        <div class=\"form-group\">\n            <div class=\"row mb-2\">\n                <div class=\"col\">\n                    <ui-switch [checkedLabel]=\"'system-wide-alert.form.label.active' | translate\"\n                        [uncheckedLabel]=\"'system-wide-alert.form.label.inactive' | translate\"\n                        [checked]=\"formActive.value\" (change)=\"setActive($event)\"></ui-switch>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col\">\n                    <label for=\"formMessage\">{{ 'system-wide-alert.form.label.message' | translate }}</label>\n                    <textarea id=\"formMessage\" rows=\"5\"\n                        [className]=\"(formMessage.invalid) && (formMessage.dirty || formMessage.touched) ? 'form-control is-invalid' :'form-control'\"\n                        formControlName=\"formMessage\">\n                </textarea>\n                    <div *ngIf=\"formMessage.invalid && (formMessage.dirty || formMessage.touched)\"\n                        class=\"invalid-feedback show-feedback\">\n                        <span *ngIf=\"formMessage.errors\">\n                            {{ 'system-wide-alert.form.error.message' | translate }}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col mb-2 d-flex align-items-end\">\n            <ui-switch size=\"small\" [ariaLabel]=\"'system-wide-alert.form.label.countdownTo.enable' | translate\"\n                [checked]=\"counterEnabled$ |async\" (change)=\"setCounterEnabled($event)\"></ui-switch>\n            <span class=\"ml-2\">{{ 'system-wide-alert.form.label.countdownTo.enable' | translate }}</span>\n        </div>\n    </div>\n    <div *ngIf=\"counterEnabled$ |async\">\n        <div class=\"row\">\n            <div class=\"col-sm-12 col-md-6\">\n                <div class=\"input-group\">\n                    <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" [(ngModel)]=\"date\"\n                        [minDate]=\"minDate\" ngbDatepicker #d=\"ngbDatepicker\" (ngModelChange)=\"updatePreviewTime()\" />\n                    <button [attr.aria-label]=\"'system-wide-alert-form.select-date-by-calendar' | translate\"\n                        (click)=\"d.toggle()\" class=\"btn btn-outline-secondary fas fa-calendar\" type=\"button\">\n                    </button>\n                </div>\n            </div>\n            <div class=\"col-12 d-md-none\">\n                <div class=\"input-group\">\n                    <ngb-timepicker [(ngModel)]=\"time\" (ngModelChange)=\"updatePreviewTime()\"></ngb-timepicker>\n                </div>\n            </div>\n            <div class=\"d-none d-md-block col-md-6 timepicker-margin\">\n                <div class=\"input-group\">\n                    <ngb-timepicker [(ngModel)]=\"time\" (ngModelChange)=\"updatePreviewTime()\"></ngb-timepicker>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"mb-2\">\n        <span class=\"text-muted\">{{ 'system-wide-alert.form.label.countdownTo.hint' | translate }}</span>\n    </div>\n    <div *ngIf=\"formMessage.value\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <label>{{ 'system-wide-alert.form.label.preview' | translate}}</label>\n            </div>\n        </div>\n        <div class=\"rounded-0 alert alert-warning\">\n            <span class=\"font-weight-bold\">\n                <span *ngIf=\"previewDays > 0 || previewHours > 0 || previewMinutes > 0 \">\n                    {{ 'system-wide-alert-banner.countdown.prefix' | translate }}\n                </span>\n                <span *ngIf=\"previewDays > 0\">\n                    {{ 'system-wide-alert-banner.countdown.days' | translate: { days: previewDays } }}\n                </span>\n                <span *ngIf=\"previewDays > 0 || previewHours > 0 \">\n                    {{ 'system-wide-alert-banner.countdown.hours' | translate: { hours: previewHours } }}\n                </span>\n                <span *ngIf=\"previewDays > 0 || previewHours > 0 || previewMinutes > 0 \">\n                    {{ 'system-wide-alert-banner.countdown.minutes' | translate: { minutes: previewMinutes } }}\n                </span>\n            </span>\n            <span [innerHTML]=\"formMessage.value\"></span>\n        </div>\n    </div>\n    <div class=\"btn-row float-right space-children-mr mt-2\">\n        <button (click)=\"back()\" class=\"btn btn-outline-secondary\">\n            <i class=\"fas fa-arrow-left\"></i> {{ 'system-wide-alert.form.cancel' | translate }}\n        </button>\n        <button class=\"btn btn-primary\" [dsBtnDisabled]=\"alertForm.invalid\" (click)=\"save()\">\n            <i class=\"fa fa-save\"></i> {{ 'system-wide-alert.form.save' | translate }}\n        </button>\n    </div>\n</div>\n","import { Route } from '@angular/router';\n\nimport { siteAdministratorGuard } from '../core/data/feature-authorization/feature-authorization-guard/site-administrator.guard';\nimport { SystemWideAlertFormComponent } from './alert-form/system-wide-alert-form.component';\n\nexport const ROUTES: Route[] = [\n  {\n    path: '',\n    canActivate: [siteAdministratorGuard],\n    component: SystemWideAlertFormComponent,\n  },\n\n];\n"],"names":["AsyncPipe","NgIf","FormsModule","ReactiveFormsModule","UntypedFormBuilder","UntypedFormControl","Validators","Router","NgbDatepickerModule","NgbTimepickerModule","TranslateModule","TranslateService","utcToZonedTime","zonedTimeToUtc","UiSwitchModule","BehaviorSubject","filter","map","RequestService","SystemWideAlertDataService","getFirstCompletedRemoteData","BtnDisabledDirective","hasValue","isNotEmpty","NotificationsService","SystemWideAlert","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵtemplate","SystemWideAlertFormComponent_div_18_span_1_Template","ɵɵproperty","ctx_r0","formMessage","errors","ɵɵtwoWayListener","SystemWideAlertFormComponent_div_27_Template_input_ngModelChange_4_listener","$event","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵtwoWayBindingSet","date","ɵɵresetView","ɵɵlistener","updatePreviewTime","SystemWideAlertFormComponent_div_27_Template_button_click_6_listener","d_r3","ɵɵreference","toggle","SystemWideAlertFormComponent_div_27_Template_ngb_timepicker_ngModelChange_10_listener","time","SystemWideAlertFormComponent_div_27_Template_ngb_timepicker_ngModelChange_13_listener","ɵɵtwoWayProperty","minDate","ɵɵpipeBind2","ɵɵpureFunction1","_c0","previewDays","_c1","previewHours","_c2","previewMinutes","SystemWideAlertFormComponent_div_33_span_8_Template","SystemWideAlertFormComponent_div_33_span_9_Template","SystemWideAlertFormComponent_div_33_span_10_Template","SystemWideAlertFormComponent_div_33_span_11_Template","ɵɵelement","ɵɵtextInterpolate","value","ɵɵsanitizeHtml","SystemWideAlertFormComponent","constructor","systemWideAlertDataService","notificationsService","router","requestService","translateService","counterEnabled$","ngOnInit","systemWideAlert$","findAll","pipe","rd","hasSucceeded","payload","error","page","createForm","currentDate","Date","year","getFullYear","month","getMonth","day","getDate","subscribe","alert","currentAlert","initFormValues","alertForm","group","validators","required","formActive","setDateTime","patchValue","message","active","countDownTo","countdownTo","getTime","next","setActive","save","setCounterEnabled","enabled","dateToSet","hour","getHours","minute","getMinutes","timeDifference","allocateTimeUnits","Math","floor","get","navigateToHomePage","getValue","toUTCString","valid","updatedAlert","Object","assign","handleResponse","put","create","response$","messagePrefix","response","success","setStaleByHrefSubstring","back","errorMessage","navigate","ɵɵdirectiveInject","i1","i2","i3","i4","i5","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","SystemWideAlertFormComponent_Template","rf","ctx","SystemWideAlertFormComponent_Template_ui_switch_change_8_listener","SystemWideAlertFormComponent_div_18_Template","SystemWideAlertFormComponent_Template_ui_switch_change_21_listener","SystemWideAlertFormComponent_div_27_Template","SystemWideAlertFormComponent_div_33_Template","SystemWideAlertFormComponent_Template_button_click_35_listener","SystemWideAlertFormComponent_Template_button_click_39_listener","ɵɵclassMap","invalid","dirty","touched","i6","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","NgModel","FormGroupDirective","FormControlName","i7","UiSwitchComponent","i8","NgbInputDatepicker","NgbTimepicker","TranslatePipe","styles","siteAdministratorGuard","ROUTES","path","canActivate","component"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}