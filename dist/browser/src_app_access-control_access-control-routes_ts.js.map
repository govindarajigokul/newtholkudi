{"version":3,"file":"src_app_access-control_access-control-routes_ts.js","mappings":"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J;EAAA,QAAAoG,SAAA,oBAAAA,SAAA,KAF+F7vB,+DAAE,CAEN6H,YAAY,EAAc,CAAC;IAC1G8V,IAAI,EAAE+L,+CAAI;IACV0E,IAAI,EAAE,CAAC;MACC9e,IAAI,EAAE,UAAU;MAChBma,IAAI,EAAE;IACV,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAE9L,IAAI,EAAEzS;IAAkB,CAAC,CAAC;EAAE,CAAC;AAAA;;AAEjF;AACA;AACA;AACA;AACA,MAAM6kB,gBAAgB,GAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,MAAMC,cAAc,GAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,MAAMC,2BAA2B,CAAC;EAC9BhsB,WAAWA,CAACiqB,OAAO,EAAEvY,iBAAiB,EAAE;IACpC,IAAI,CAACuY,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACvY,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACua,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,UAAU,GAAG,IAAI/d,uDAAY,CAAC,CAAC;IACpC,IAAI,CAACge,oBAAoB,GA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","sources":["./src/app/access-control/access-control-routes.ts","./src/app/access-control/bulk-access/browse/bulk-access-browse.component.ts","./src/app/access-control/bulk-access/browse/bulk-access-browse.component.html","./src/app/access-control/bulk-access/bulk-access.component.ts","./src/app/access-control/bulk-access/bulk-access.component.html","./src/app/access-control/bulk-access/settings/bulk-access-settings.component.ts","./src/app/access-control/bulk-access/settings/bulk-access-settings.component.html","./src/app/access-control/epeople-registry/epeople-registry.component.ts","./src/app/access-control/epeople-registry/epeople-registry.component.html","./src/app/access-control/epeople-registry/eperson-form/eperson-form.component.ts","./src/app/access-control/epeople-registry/eperson-form/eperson-form.component.html","./src/app/access-control/epeople-registry/eperson-form/validators/email-taken.validator.ts","./src/app/access-control/epeople-registry/eperson-resolver.service.ts","./src/app/access-control/group-registry/group-form/group-form.component.ts","./src/app/access-control/group-registry/group-form/group-form.component.html","./src/app/access-control/group-registry/group-form/subgroup-list/subgroups-list.component.ts","./src/app/access-control/group-registry/group-form/subgroup-list/subgroups-list.component.html","./src/app/access-control/group-registry/group-form/validators/group-exists.validator.ts","./src/app/access-control/group-registry/group-page.guard.ts","./src/app/access-control/group-registry/groups-registry.component.ts","./src/app/access-control/group-registry/groups-registry.component.html","./src/app/breadcrumbs/breadcrumb/breadcrumb.model.ts","./src/app/core/breadcrumbs/i18n-breadcrumb.resolver.ts","./src/app/core/breadcrumbs/i18n-breadcrumbs.service.ts","./src/app/core/eperson/models/group-dto.model.ts","./src/app/core/resolving/resolver.actions.ts","./src/app/shared/utils/has-no-value.pipe.ts","./node_modules/ngx-pagination/fesm2020/ngx-pagination.mjs"],"sourcesContent":["import { AbstractControl } from '@angular/forms';\nimport { Route } from '@angular/router';\nimport {\n  DYNAMIC_ERROR_MESSAGES_MATCHER,\n  DynamicErrorMessagesMatcher,\n} from '@ng-dynamic-forms/core';\n\nimport { i18nBreadcrumbResolver } from '../core/breadcrumbs/i18n-breadcrumb.resolver';\nimport { groupAdministratorGuard } from '../core/data/feature-authorization/feature-authorization-guard/group-administrator.guard';\nimport { siteAdministratorGuard } from '../core/data/feature-authorization/feature-authorization-guard/site-administrator.guard';\nimport {\n  EPERSON_PATH,\n  GROUP_PATH,\n} from './access-control-routing-paths';\nimport { BulkAccessComponent } from './bulk-access/bulk-access.component';\nimport { EPeopleRegistryComponent } from './epeople-registry/epeople-registry.component';\nimport { EPersonFormComponent } from './epeople-registry/eperson-form/eperson-form.component';\nimport { EPersonResolver } from './epeople-registry/eperson-resolver.service';\nimport { GroupFormComponent } from './group-registry/group-form/group-form.component';\nimport { groupPageGuard } from './group-registry/group-page.guard';\nimport { GroupsRegistryComponent } from './group-registry/groups-registry.component';\n\n/**\n * Condition for displaying error messages on email form field\n */\nexport const ValidateEmailErrorStateMatcher: DynamicErrorMessagesMatcher =\n  (control: AbstractControl, model: any, hasFocus: boolean) => {\n    return ( control.touched && !hasFocus ) || ( control.errors?.emailTaken && hasFocus );\n  };\n\nconst providers = [\n  {\n    provide: DYNAMIC_ERROR_MESSAGES_MATCHER,\n    useValue: ValidateEmailErrorStateMatcher,\n  },\n];\nexport const ROUTES: Route[] = [\n  {\n    path: EPERSON_PATH,\n    component: EPeopleRegistryComponent,\n    resolve: {\n      breadcrumb: i18nBreadcrumbResolver,\n    },\n    providers,\n    data: { title: 'admin.access-control.epeople.title', breadcrumbKey: 'admin.access-control.epeople' },\n    canActivate: [siteAdministratorGuard],\n  },\n  {\n    path: `${EPERSON_PATH}/create`,\n    component: EPersonFormComponent,\n    resolve: {\n      breadcrumb: i18nBreadcrumbResolver,\n    },\n    providers,\n    data: { title: 'admin.access-control.epeople.add.title', breadcrumbKey: 'admin.access-control.epeople.add' },\n    canActivate: [siteAdministratorGuard],\n  },\n  {\n    path: `${EPERSON_PATH}/:id/edit`,\n    component: EPersonFormComponent,\n    resolve: {\n      breadcrumb: i18nBreadcrumbResolver,\n      ePerson: EPersonResolver,\n    },\n    providers,\n    data: { title: 'admin.access-control.epeople.edit.title', breadcrumbKey: 'admin.access-control.epeople.edit' },\n    canActivate: [siteAdministratorGuard],\n  },\n  {\n    path: GROUP_PATH,\n    component: GroupsRegistryComponent,\n    resolve: {\n      breadcrumb: i18nBreadcrumbResolver,\n    },\n    providers,\n    data: { title: 'admin.access-control.groups.title', breadcrumbKey: 'admin.access-control.groups' },\n    canActivate: [groupAdministratorGuard],\n  },\n  {\n    path: `${GROUP_PATH}/create`,\n    component: GroupFormComponent,\n    resolve: {\n      breadcrumb: i18nBreadcrumbResolver,\n    },\n    providers,\n    data: {\n      title: 'admin.access-control.groups.title.addGroup',\n      breadcrumbKey: 'admin.access-control.groups.addGroup',\n    },\n    canActivate: [groupAdministratorGuard],\n  },\n  {\n    path: `${GROUP_PATH}/:groupId/edit`,\n    component: GroupFormComponent,\n    resolve: {\n      breadcrumb: i18nBreadcrumbResolver,\n    },\n    providers,\n    data: {\n      title: 'admin.access-control.groups.title.singleGroup',\n      breadcrumbKey: 'admin.access-control.groups.singleGroup',\n    },\n    canActivate: [groupPageGuard],\n  },\n  {\n    path: 'bulk-access',\n    component: BulkAccessComponent,\n    resolve: {\n      breadcrumb: i18nBreadcrumbResolver,\n    },\n    data: { title: 'admin.access-control.bulk-access.title', breadcrumbKey: 'admin.access-control.bulk-access' },\n    canActivate: [siteAdministratorGuard],\n  },\n];\n","import {\n  AsyncPipe,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  NgbAccordionModule,\n  NgbNavModule,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport {\n  BehaviorSubject,\n  Subscription,\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  map,\n} from 'rxjs/operators';\n\nimport {\n  buildPaginatedList,\n  PaginatedList,\n} from '../../../core/data/paginated-list.model';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { PageInfo } from '../../../core/shared/page-info.model';\nimport { SearchConfigurationService } from '../../../core/shared/search/search-configuration.service';\nimport { SEARCH_CONFIG_SERVICE } from '../../../my-dspace-page/my-dspace-configuration.service';\nimport { hasValue } from '../../../shared/empty.util';\nimport { ListableObject } from '../../../shared/object-collection/shared/listable-object.model';\nimport { ListableObjectComponentLoaderComponent } from '../../../shared/object-collection/shared/listable-object/listable-object-component-loader.component';\nimport { SelectableListItemControlComponent } from '../../../shared/object-collection/shared/selectable-list-item-control/selectable-list-item-control.component';\nimport { SelectableListState } from '../../../shared/object-list/selectable-list/selectable-list.reducer';\nimport { SelectableListService } from '../../../shared/object-list/selectable-list/selectable-list.service';\nimport { PaginationComponent } from '../../../shared/pagination/pagination.component';\nimport { PaginationComponentOptions } from '../../../shared/pagination/pagination-component-options.model';\nimport { createSuccessfulRemoteDataObject } from '../../../shared/remote-data.utils';\nimport { ThemedSearchComponent } from '../../../shared/search/themed-search.component';\nimport { BrowserOnlyPipe } from '../../../shared/utils/browser-only.pipe';\n\n@Component({\n  selector: 'ds-bulk-access-browse',\n  templateUrl: 'bulk-access-browse.component.html',\n  styleUrls: ['./bulk-access-browse.component.scss'],\n  providers: [\n    {\n      provide: SEARCH_CONFIG_SERVICE,\n      useClass: SearchConfigurationService,\n    },\n  ],\n  imports: [\n    PaginationComponent,\n    AsyncPipe,\n    NgbAccordionModule,\n    TranslateModule,\n    NgIf,\n    NgbNavModule,\n    ThemedSearchComponent,\n    BrowserOnlyPipe,\n    NgForOf,\n    NgxPaginationModule,\n    SelectableListItemControlComponent,\n    ListableObjectComponentLoaderComponent,\n  ],\n  standalone: true,\n})\nexport class BulkAccessBrowseComponent implements OnInit, OnDestroy {\n\n  /**\n   * The selection list id\n   */\n  @Input() listId!: string;\n\n  /**\n   * The active nav id\n   */\n  activateId = 'search';\n\n  /**\n   * The list of the objects already selected\n   */\n  objectsSelected$: BehaviorSubject<RemoteData<PaginatedList<ListableObject>>> = new BehaviorSubject<RemoteData<PaginatedList<ListableObject>>>(null);\n\n  /**\n   * The pagination options object used for the list of selected elements\n   */\n  paginationOptions$: BehaviorSubject<PaginationComponentOptions> = new BehaviorSubject<PaginationComponentOptions>(Object.assign(new PaginationComponentOptions(), {\n    id: 'bas',\n    pageSize: 5,\n    currentPage: 1,\n  }));\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   */\n  private subs: Subscription[] = [];\n\n  constructor(private selectableListService: SelectableListService) {}\n\n  /**\n   * Subscribe to selectable list updates\n   */\n  ngOnInit(): void {\n\n    this.subs.push(\n      this.selectableListService.getSelectableList(this.listId).pipe(\n        distinctUntilChanged(),\n        map((list: SelectableListState) => this.generatePaginatedListBySelectedElements(list)),\n      ).subscribe(this.objectsSelected$),\n    );\n  }\n\n  pageNext() {\n    this.paginationOptions$.next(Object.assign(new PaginationComponentOptions(), this.paginationOptions$.value, {\n      currentPage: this.paginationOptions$.value.currentPage + 1,\n    }));\n  }\n\n  pagePrev() {\n    this.paginationOptions$.next(Object.assign(new PaginationComponentOptions(), this.paginationOptions$.value, {\n      currentPage: this.paginationOptions$.value.currentPage - 1,\n    }));\n  }\n\n  private calculatePageCount(pageSize, totalCount = 0) {\n    // we suppose that if we have 0 items we want 1 empty page\n    return totalCount < pageSize ? 1 : Math.ceil(totalCount / pageSize);\n  }\n\n  /**\n   * Generate The RemoteData object containing the list of the selected elements\n   * @param list\n   * @private\n   */\n  private generatePaginatedListBySelectedElements(list: SelectableListState): RemoteData<PaginatedList<ListableObject>> {\n    const pageInfo = new PageInfo({\n      elementsPerPage: this.paginationOptions$.value.pageSize,\n      totalElements: list?.selection.length,\n      totalPages: this.calculatePageCount(this.paginationOptions$.value.pageSize, list?.selection.length),\n      currentPage: this.paginationOptions$.value.currentPage,\n    });\n    if (pageInfo.currentPage > pageInfo.totalPages) {\n      pageInfo.currentPage = pageInfo.totalPages;\n      this.paginationOptions$.next(Object.assign(new PaginationComponentOptions(), this.paginationOptions$.value, {\n        currentPage: pageInfo.currentPage,\n      }));\n    }\n    return createSuccessfulRemoteDataObject(buildPaginatedList(pageInfo, list?.selection || []));\n  }\n\n  ngOnDestroy(): void {\n    this.subs\n      .filter((sub) => hasValue(sub))\n      .forEach((sub) => sub.unsubscribe());\n    this.selectableListService.deselectAll(this.listId);\n  }\n}\n","<ngb-accordion #acc=\"ngbAccordion\" [activeIds]=\"'browse'\">\n  <ngb-panel [id]=\"'browse'\">\n    <ng-template ngbPanelHeader>\n      <div class=\"w-100 d-flex gap-3 justify-content-between collapse-toggle\" ngbPanelToggle (click)=\"acc.toggle('browse')\"\n           data-test=\"browse\">\n        <button type=\"button\" class=\"btn btn-link p-0\" (click)=\"$event.preventDefault()\"\n                [attr.aria-expanded]=\"acc.isExpanded('browse')\"\n                aria-controls=\"bulk-access-browse-panel-content\">\n          {{ 'admin.access-control.bulk-access-browse.header' | translate }}\n        </button>\n        <div class=\"text-right d-flex gap-2\">\n          <div class=\"d-flex my-auto\">\n            <span *ngIf=\"acc.isExpanded('browse')\" class=\"fas fa-chevron-up fa-fw\"></span>\n            <span *ngIf=\"!acc.isExpanded('browse')\" class=\"fas fa-chevron-down fa-fw\"></span>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template ngbPanelContent>\n      <div id=\"bulk-access-browse-panel-content\">\n        <ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"activateId\" class=\"nav-pills\">\n          <li [ngbNavItem]=\"'search'\" role=\"presentation\">\n            <a ngbNavLink>{{'admin.access-control.bulk-access-browse.search.header' | translate}}</a>\n            <ng-template ngbNavContent>\n              <div class=\"mx-n3\">\n                <ds-search [configuration]=\"'administrativeBulkAccess'\"\n                                  [selectable]=\"true\"\n                                  [selectionConfig]=\"{ repeatable: true, listId: listId }\"\n                                  [showThumbnails]=\"false\"></ds-search>\n              </div>\n            </ng-template>\n          </li>\n          <li [ngbNavItem]=\"'selected'\" role=\"presentation\">\n            <a ngbNavLink>\n              {{'admin.access-control.bulk-access-browse.selected.header' | translate: {number: ((objectsSelected$ | async)?.payload?.totalElements) ? (objectsSelected$ | async)?.payload?.totalElements : '0'} }}\n            </a>\n            <ng-template ngbNavContent>\n              <ds-pagination\n                [paginationOptions]=\"(paginationOptions$ | async)\"\n                [collectionSize]=\"(objectsSelected$|async)?.payload?.totalElements\"\n                [objects]=\"(objectsSelected$|async)\"\n                [showPaginator]=\"false\"\n                (prev)=\"pagePrev()\"\n                (next)=\"pageNext()\">\n                <ul *ngIf=\"(objectsSelected$|async)?.hasSucceeded\" class=\"list-unstyled ml-4\">\n                  <li *ngFor='let object of (objectsSelected$|async)?.payload?.page | paginate: { itemsPerPage: (paginationOptions$ | async).pageSize,\n                              currentPage: (paginationOptions$ | async).currentPage, totalItems: (objectsSelected$|async)?.payload?.page.length }; let i = index; let last = last '\n                      class=\"mt-4 mb-4 d-flex\"\n                      [attr.data-test]=\"'list-object' | dsBrowserOnly\">\n                    <ds-selectable-list-item-control [index]=\"i\"\n                                                     [object]=\"object\"\n                                                     [selectionConfig]=\"{ repeatable: true, listId: listId }\"></ds-selectable-list-item-control>\n                    <ds-listable-object-component-loader [listID]=\"listId\"\n                                                         [index]=\"i\"\n                                                         [object]=\"object\"\n                                                         [showThumbnails]=\"false\"\n                                                         [viewMode]=\"'list'\"></ds-listable-object-component-loader>\n                  </li>\n                </ul>\n              </ds-pagination>\n            </ng-template>\n          </li>\n        </ul>\n        <div [ngbNavOutlet]=\"nav\" class=\"mt-5\"></div>\n      </div>\n    </ng-template>\n  </ngb-panel>\n</ngb-accordion>\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  Subscription,\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  map,\n} from 'rxjs/operators';\n\nimport { BulkAccessControlService } from '../../shared/access-control-form-container/bulk-access-control.service';\nimport { BtnDisabledDirective } from '../../shared/btn-disabled.directive';\nimport { SelectableListState } from '../../shared/object-list/selectable-list/selectable-list.reducer';\nimport { SelectableListService } from '../../shared/object-list/selectable-list/selectable-list.service';\nimport { BulkAccessBrowseComponent } from './browse/bulk-access-browse.component';\nimport { BulkAccessSettingsComponent } from './settings/bulk-access-settings.component';\n\n@Component({\n  selector: 'ds-bulk-access',\n  templateUrl: './bulk-access.component.html',\n  styleUrls: ['./bulk-access.component.scss'],\n  imports: [\n    TranslateModule,\n    BulkAccessSettingsComponent,\n    BulkAccessBrowseComponent,\n    BtnDisabledDirective,\n  ],\n  standalone: true,\n})\nexport class BulkAccessComponent implements OnInit {\n\n  /**\n   * The selection list id\n   */\n  listId = 'bulk-access-list';\n\n  /**\n   * The list of the objects already selected\n   */\n  objectsSelected$: BehaviorSubject<string[]> = new BehaviorSubject<string[]>([]);\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   */\n  private subs: Subscription[] = [];\n\n  /**\n   * The SectionsDirective reference\n   */\n  @ViewChild('dsBulkSettings') settings: BulkAccessSettingsComponent;\n\n  constructor(\n    private bulkAccessControlService: BulkAccessControlService,\n    private selectableListService: SelectableListService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.subs.push(\n      this.selectableListService.getSelectableList(this.listId).pipe(\n        distinctUntilChanged(),\n        map((list: SelectableListState) => this.generateIdListBySelectedElements(list)),\n      ).subscribe(this.objectsSelected$),\n    );\n  }\n\n  canExport(): boolean {\n    return this.objectsSelected$.value?.length > 0;\n  }\n\n  /**\n   * Reset the form to its initial state\n   * This will also reset the state of the child components (bitstream and item access)\n   */\n  reset(): void {\n    this.settings.reset();\n  }\n\n  /**\n   * Submit the form\n   * This will create a payload file and execute the script\n   */\n  submit(): void {\n    const settings = this.settings.getValue();\n    const bitstreamAccess = settings.bitstream;\n    const itemAccess = settings.item;\n\n    const { file } = this.bulkAccessControlService.createPayloadFile({\n      bitstreamAccess,\n      itemAccess,\n      state: settings.state,\n    });\n\n    this.bulkAccessControlService.executeScript(\n      this.objectsSelected$.value || [],\n      file,\n    ).subscribe();\n  }\n\n  /**\n   * Generate The RemoteData object containing the list of the selected elements\n   * @param list\n   * @private\n   */\n  private generateIdListBySelectedElements(list: SelectableListState): string[] {\n    return list?.selection?.map((entry: any) => entry.indexableObject.uuid);\n  }\n}\n","<div class=\"container\">\n  <h1>{{ 'admin.access-control.bulk-access.title' | translate }}</h1>\n  <ds-bulk-access-browse [listId]=\"listId\"></ds-bulk-access-browse>\n  <div class=\"clearfix mb-3\"></div>\n  <ds-bulk-access-settings #dsBulkSettings ></ds-bulk-access-settings>\n\n  <hr>\n\n  <div class=\"d-flex justify-content-end\">\n    <button class=\"btn btn-outline-primary mr-3\" (click)=\"reset()\">\n      {{ 'access-control-cancel' | translate }}\n    </button>\n    <button class=\"btn btn-primary\" [dsBtnDisabled]=\"!canExport()\" (click)=\"submit()\">\n      {{ 'access-control-execute' | translate }}\n    </button>\n  </div>\n</div>\n\n\n\n","import { NgIf } from '@angular/common';\nimport {\n  Component,\n  ViewChild,\n} from '@angular/core';\nimport { NgbAccordionModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { AccessControlFormContainerComponent } from '../../../shared/access-control-form-container/access-control-form-container.component';\n\n@Component({\n  selector: 'ds-bulk-access-settings',\n  templateUrl: 'bulk-access-settings.component.html',\n  styleUrls: ['./bulk-access-settings.component.scss'],\n  exportAs: 'dsBulkSettings',\n  imports: [\n    NgbAccordionModule,\n    TranslateModule,\n    NgIf,\n    AccessControlFormContainerComponent,\n  ],\n  standalone: true,\n})\nexport class BulkAccessSettingsComponent {\n\n  /**\n   * The SectionsDirective reference\n   */\n  @ViewChild('dsAccessControlForm') controlForm: AccessControlFormContainerComponent<any>;\n\n  /**\n   * Will be used from a parent component to read the value of the form\n   */\n  getValue() {\n    return this.controlForm.getFormValue();\n  }\n\n  /**\n   * Reset the form to its initial state\n   * This will also reset the state of the child components (bitstream and item access)\n   */\n  reset() {\n    this.controlForm.reset();\n  }\n\n}\n","<ngb-accordion #acc=\"ngbAccordion\" [activeIds]=\"'settings'\">\n  <ngb-panel [id]=\"'settings'\">\n    <ng-template ngbPanelHeader>\n      <div class=\"w-100 d-flex gap-3 justify-content-between collapse-toggle\" ngbPanelToggle (click)=\"acc.toggle('settings')\" data-test=\"settings\">\n        <button type=\"button\" class=\"btn btn-link p-0\" (click)=\"$event.preventDefault()\" [attr.aria-expanded]=\"acc.isExpanded('settings')\"\n                aria-controls=\"bulk-access-settings-panel-content\">\n          {{ 'admin.access-control.bulk-access-settings.header' | translate }}\n        </button>\n        <div class=\"text-right d-flex gap-2\">\n          <div class=\"d-flex my-auto\">\n            <span *ngIf=\"acc.isExpanded('settings')\" class=\"fas fa-chevron-up fa-fw\"></span>\n            <span *ngIf=\"!acc.isExpanded('settings')\" class=\"fas fa-chevron-down fa-fw\"></span>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template ngbPanelContent>\n      <ds-access-control-form-container id=\"bulk-access-settings-panel-content\" #dsAccessControlForm [showSubmit]=\"false\"></ds-access-control-form-container>\n    </ng-template>\n  </ngb-panel>\n</ngb-accordion>\n","import {\n  AsyncPipe,\n  NgClass,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  ReactiveFormsModule,\n  UntypedFormBuilder,\n} from '@angular/forms';\nimport {\n  Router,\n  RouterModule,\n} from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  map,\n  switchMap,\n  take,\n} from 'rxjs/operators';\n\nimport { DSONameService } from '../../core/breadcrumbs/dso-name.service';\nimport { AuthorizationDataService } from '../../core/data/feature-authorization/authorization-data.service';\nimport { FeatureID } from '../../core/data/feature-authorization/feature-id';\nimport {\n  buildPaginatedList,\n  PaginatedList,\n} from '../../core/data/paginated-list.model';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { RequestService } from '../../core/data/request.service';\nimport { EPersonDataService } from '../../core/eperson/eperson-data.service';\nimport { EPerson } from '../../core/eperson/models/eperson.model';\nimport { EpersonDtoModel } from '../../core/eperson/models/eperson-dto.model';\nimport { PaginationService } from '../../core/pagination/pagination.service';\nimport { NoContent } from '../../core/shared/NoContent.model';\nimport {\n  getAllSucceededRemoteData,\n  getFirstCompletedRemoteData,\n} from '../../core/shared/operators';\nimport { PageInfo } from '../../core/shared/page-info.model';\nimport { ConfirmationModalComponent } from '../../shared/confirmation-modal/confirmation-modal.component';\nimport { hasValue } from '../../shared/empty.util';\nimport { ThemedLoadingComponent } from '../../shared/loading/themed-loading.component';\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\nimport { PaginationComponent } from '../../shared/pagination/pagination.component';\nimport { PaginationComponentOptions } from '../../shared/pagination/pagination-component-options.model';\nimport {\n  getEPersonEditRoute,\n  getEPersonsRoute,\n} from '../access-control-routing-paths';\nimport { EPersonFormComponent } from './eperson-form/eperson-form.component';\n\n@Component({\n  selector: 'ds-epeople-registry',\n  templateUrl: './epeople-registry.component.html',\n  imports: [\n    TranslateModule,\n    RouterModule,\n    AsyncPipe,\n    NgIf,\n    EPersonFormComponent,\n    ReactiveFormsModule,\n    ThemedLoadingComponent,\n    PaginationComponent,\n    NgClass,\n    NgForOf,\n  ],\n  standalone: true,\n})\n/**\n * A component used for managing all existing epeople within the repository.\n * The admin can create, edit or delete epeople here.\n */\nexport class EPeopleRegistryComponent implements OnInit, OnDestroy {\n\n  labelPrefix = 'admin.access-control.epeople.';\n\n  /**\n   * A list of all the current EPeople within the repository or the result of the search\n   */\n  ePeople$: BehaviorSubject<PaginatedList<EPerson>> = new BehaviorSubject(buildPaginatedList<EPerson>(new PageInfo(), []));\n  /**\n   * A BehaviorSubject with the list of EpersonDtoModel objects made from the EPeople in the repository or\n   * as the result of the search\n   */\n  ePeopleDto$: BehaviorSubject<PaginatedList<EpersonDtoModel>> = new BehaviorSubject<PaginatedList<EpersonDtoModel>>({} as any);\n\n  activeEPerson$: Observable<EPerson>;\n\n  /**\n   * An observable for the pageInfo, needed to pass to the pagination component\n   */\n  pageInfoState$: BehaviorSubject<PageInfo> = new BehaviorSubject<PageInfo>(undefined);\n\n  /**\n   * A boolean representing if a search is pending\n   */\n  searching$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Pagination config used to display the list of epeople\n   */\n  config: PaginationComponentOptions = Object.assign(new PaginationComponentOptions(), {\n    id: 'elp',\n    pageSize: 5,\n    currentPage: 1,\n  });\n\n  // The search form\n  searchForm;\n\n  // Current search in epersons registry\n  currentSearchQuery: string;\n  currentSearchScope: string;\n\n  /**\n   * FindListOptions\n   */\n  findListOptionsSub: Subscription;\n\n  /**\n   * List of subscriptions\n   */\n  subs: Subscription[] = [];\n\n  constructor(private epersonService: EPersonDataService,\n              private translateService: TranslateService,\n              private notificationsService: NotificationsService,\n              private authorizationService: AuthorizationDataService,\n              private formBuilder: UntypedFormBuilder,\n              private router: Router,\n              private modalService: NgbModal,\n              private paginationService: PaginationService,\n              public requestService: RequestService,\n              public dsoNameService: DSONameService,\n  ) {\n    this.currentSearchQuery = '';\n    this.currentSearchScope = 'metadata';\n    this.searchForm = this.formBuilder.group(({\n      scope: 'metadata',\n      query: '',\n    }));\n  }\n\n  ngOnInit() {\n    this.initialisePage();\n  }\n\n  /**\n   * This method will initialise the page\n   */\n  initialisePage() {\n    this.searching$.next(true);\n    this.search({ scope: this.currentSearchScope, query: this.currentSearchQuery });\n    this.activeEPerson$ = this.epersonService.getActiveEPerson();\n    this.subs.push(this.ePeople$.pipe(\n      switchMap((epeople: PaginatedList<EPerson>) => {\n        if (epeople.pageInfo.totalElements > 0) {\n          return combineLatest(epeople.page.map((eperson: EPerson) => {\n            return this.authorizationService.isAuthorized(FeatureID.CanDelete, hasValue(eperson) ? eperson.self : undefined).pipe(\n              map((authorized) => {\n                const epersonDtoModel: EpersonDtoModel = new EpersonDtoModel();\n                epersonDtoModel.ableToDelete = authorized;\n                epersonDtoModel.eperson = eperson;\n                return epersonDtoModel;\n              }),\n            );\n          })).pipe(map((dtos: EpersonDtoModel[]) => {\n            return buildPaginatedList(epeople.pageInfo, dtos);\n          }));\n        } else {\n          // if it's empty, simply forward the empty list\n          return [epeople];\n        }\n      })).subscribe((value: PaginatedList<EpersonDtoModel>) => {\n      this.searching$.next(false);this.ePeopleDto$.next(value);\n      this.pageInfoState$.next(value.pageInfo);\n    }));\n  }\n\n  /**\n   * Search in the EPeople by metadata (default) or email\n   * @param data  Contains scope and query param\n   */\n  search(data: any) {\n    this.searching$.next(true);\n    if (hasValue(this.findListOptionsSub)) {\n      this.findListOptionsSub.unsubscribe();\n    }\n    this.findListOptionsSub = this.paginationService.getCurrentPagination(this.config.id, this.config).pipe(\n      switchMap((findListOptions) => {\n        const query: string = data.query;\n        const scope: string = data.scope;\n        if (query != null && this.currentSearchQuery !== query) {\n          void this.router.navigate([getEPersonsRoute()], {\n            queryParamsHandling: 'merge',\n          });\n          this.currentSearchQuery = query;\n          this.paginationService.resetPage(this.config.id);\n        }\n        if (scope != null && this.currentSearchScope !== scope) {\n          void this.router.navigate([getEPersonsRoute()], {\n            queryParamsHandling: 'merge',\n          });\n          this.currentSearchScope = scope;\n          this.paginationService.resetPage(this.config.id);\n\n        }\n        return this.epersonService.searchByScope(this.currentSearchScope, this.currentSearchQuery, {\n          currentPage: findListOptions.currentPage,\n          elementsPerPage: findListOptions.pageSize,\n        });\n      },\n      ),\n      getAllSucceededRemoteData(),\n    ).subscribe((peopleRD) => {\n      this.ePeople$.next(peopleRD.payload);\n      this.pageInfoState$.next(peopleRD.payload.pageInfo);\n    },\n    );\n  }\n\n  /**\n   * Deletes EPerson, show notification on success/failure & updates EPeople list\n   */\n  deleteEPerson(ePerson: EPerson) {\n    if (hasValue(ePerson.id)) {\n      const modalRef = this.modalService.open(ConfirmationModalComponent);\n      modalRef.componentInstance.name = this.dsoNameService.getName(ePerson);\n      modalRef.componentInstance.headerLabel = 'confirmation-modal.delete-eperson.header';\n      modalRef.componentInstance.infoLabel = 'confirmation-modal.delete-eperson.info';\n      modalRef.componentInstance.cancelLabel = 'confirmation-modal.delete-eperson.cancel';\n      modalRef.componentInstance.confirmLabel = 'confirmation-modal.delete-eperson.confirm';\n      modalRef.componentInstance.brandColor = 'danger';\n      modalRef.componentInstance.confirmIcon = 'fas fa-trash';\n      modalRef.componentInstance.response.pipe(take(1)).subscribe((confirm: boolean) => {\n        if (confirm) {\n          if (hasValue(ePerson.id)) {\n            this.epersonService.deleteEPerson(ePerson).pipe(getFirstCompletedRemoteData()).subscribe((restResponse: RemoteData<NoContent>) => {\n              if (restResponse.hasSucceeded) {\n                this.notificationsService.success(this.translateService.get(this.labelPrefix + 'notification.deleted.success', { name: this.dsoNameService.getName(ePerson) }));\n              } else {\n                this.notificationsService.error(this.translateService.get(this.labelPrefix + 'notification.deleted.success', { id: ePerson.id, statusCode: restResponse.statusCode, errorMessage: restResponse.errorMessage }));\n              }\n            });\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Unsub all subscriptions\n   */\n  ngOnDestroy(): void {\n    this.cleanupSubscribes();\n    this.paginationService.clearPagination(this.config.id);\n  }\n\n\n  cleanupSubscribes() {\n    this.subs.filter((sub) => hasValue(sub)).forEach((sub) => sub.unsubscribe());\n  }\n\n  /**\n   * Reset all input-fields to be empty and search all search\n   */\n  clearFormAndResetResult() {\n    this.searchForm.patchValue({\n      query: '',\n    });\n    this.search({ query: '' });\n  }\n\n  getEditEPeoplePage(id: string): string {\n    return getEPersonEditRoute(id);\n  }\n}\n","<div class=\"container\">\n  <div class=\"epeople-registry row\">\n    <div class=\"col-12\">\n      <div class=\"d-flex justify-content-between border-bottom mb-3\">\n        <h1 id=\"header\" class=\"pb-2\">{{labelPrefix + 'head' | translate}}</h1>\n\n        <div>\n          <button class=\"mr-auto btn btn-success addEPerson-button\"\n                  [routerLink]=\"'create'\">\n            <i class=\"fas fa-plus\"></i>\n            <span class=\"d-none d-sm-inline ml-1\">{{labelPrefix + 'button.add' | translate}}</span>\n          </button>\n        </div>\n      </div>\n\n      <h2 id=\"search\" class=\"border-bottom pb-2\">\n        {{labelPrefix + 'search.head' | translate}}\n      </h2>\n      <form [formGroup]=\"searchForm\" (ngSubmit)=\"search(searchForm.value)\" class=\"d-flex justify-content-between\">\n        <div>\n          <select name=\"scope\" id=\"scope\" formControlName=\"scope\" class=\"form-control\" aria-label=\"Search scope\">\n            <option value=\"metadata\">{{labelPrefix + 'search.scope.metadata' | translate}}</option>\n            <option value=\"email\">{{labelPrefix + 'search.scope.email' | translate}}</option>\n          </select>\n        </div>\n        <div class=\"flex-grow-1 mr-3 ml-3\">\n          <div class=\"form-group input-group\">\n            <input type=\"text\" name=\"query\" id=\"query\" formControlName=\"query\"\n                   class=\"form-control\" [attr.aria-label]=\"labelPrefix + 'search.placeholder' | translate\"\n                   [placeholder]=\"(labelPrefix + 'search.placeholder' | translate)\">\n            <span class=\"input-group-append\">\n                <button type=\"submit\" class=\"search-button btn btn-primary\">\n                  <i class=\"fas fa-search\"></i> {{ labelPrefix + 'search.button' | translate }}\n                </button>\n              </span>\n          </div>\n        </div>\n        <div>\n          <button (click)=\"clearFormAndResetResult();\"\n                  class=\"search-button btn btn-secondary\">{{labelPrefix + 'button.see-all' | translate}}</button>\n        </div>\n      </form>\n\n      <ds-loading *ngIf=\"searching$ | async\"></ds-loading>\n      <ds-pagination\n        *ngIf=\"(pageInfoState$ | async)?.totalElements > 0 && (searching$ | async) !== true\"\n        [paginationOptions]=\"config\"\n        [collectionSize]=\"(pageInfoState$ | async)?.totalElements\"\n        [hideGear]=\"true\"\n        [hidePagerWhenSinglePage]=\"true\">\n\n        <div class=\"table-responsive\">\n          <table id=\"epeople\" class=\"table table-striped table-hover table-bordered\">\n            <thead>\n            <tr>\n              <th scope=\"col\">{{labelPrefix + 'table.id' | translate}}</th>\n              <th scope=\"col\">{{labelPrefix + 'table.name' | translate}}</th>\n              <th scope=\"col\">{{labelPrefix + 'table.email' | translate}}</th>\n              <th>{{labelPrefix + 'table.edit' | translate}}</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let epersonDto of (ePeopleDto$ | async)?.page\"\n                [ngClass]=\"{'table-primary' : (activeEPerson$ | async) === epersonDto.eperson}\">\n              <td>{{epersonDto.eperson.id}}</td>\n              <td>{{ dsoNameService.getName(epersonDto.eperson) }}</td>\n              <td>{{epersonDto.eperson.email}}</td>\n              <td>\n                <div class=\"btn-group edit-field\">\n                  <button [routerLink]=\"getEditEPeoplePage(epersonDto.eperson.id)\"\n                          class=\"btn btn-outline-primary btn-sm access-control-editEPersonButton\"\n                          title=\"{{labelPrefix + 'table.edit.buttons.edit' | translate: { name: dsoNameService.getName(epersonDto.eperson) } }}\">\n                    <i class=\"fas fa-edit fa-fw\"></i>\n                  </button>\n                  <button *ngIf=\"epersonDto.ableToDelete\" (click)=\"deleteEPerson(epersonDto.eperson)\"\n                          class=\"delete-button btn btn-outline-danger btn-sm access-control-deleteEPersonButton\"\n                          title=\"{{labelPrefix + 'table.edit.buttons.remove' | translate: { name: dsoNameService.getName(epersonDto.eperson) } }}\">\n                    <i class=\"fas fa-trash-alt fa-fw\"></i>\n                  </button>\n                </div>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n\n      </ds-pagination>\n\n      <div *ngIf=\"(pageInfoState$ | async)?.totalElements === 0\" class=\"alert alert-info w-100 mb-2\" role=\"alert\">\n        {{labelPrefix + 'no-items' | translate}}\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  AsyncPipe,\n  NgClass,\n  NgFor,\n  NgIf,\n} from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { UntypedFormGroup } from '@angular/forms';\nimport {\n  ActivatedRoute,\n  Router,\n  RouterLink,\n} from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  DynamicCheckboxModel,\n  DynamicFormControlModel,\n  DynamicFormLayout,\n  DynamicInputModel,\n} from '@ng-dynamic-forms/core';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  combineLatest as observableCombineLatest,\n  Observable,\n  of as observableOf,\n  Subscription,\n} from 'rxjs';\nimport {\n  debounceTime,\n  finalize,\n  map,\n  switchMap,\n  take,\n} from 'rxjs/operators';\n\nimport { AuthService } from '../../../core/auth/auth.service';\nimport { DSONameService } from '../../../core/breadcrumbs/dso-name.service';\nimport { EpersonRegistrationService } from '../../../core/data/eperson-registration.service';\nimport { AuthorizationDataService } from '../../../core/data/feature-authorization/authorization-data.service';\nimport { FeatureID } from '../../../core/data/feature-authorization/feature-id';\nimport { PaginatedList } from '../../../core/data/paginated-list.model';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { RequestService } from '../../../core/data/request.service';\nimport { EPersonDataService } from '../../../core/eperson/eperson-data.service';\nimport { GroupDataService } from '../../../core/eperson/group-data.service';\nimport { EPerson } from '../../../core/eperson/models/eperson.model';\nimport { Group } from '../../../core/eperson/models/group.model';\nimport { PaginationService } from '../../../core/pagination/pagination.service';\nimport { NoContent } from '../../../core/shared/NoContent.model';\nimport {\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteData,\n  getRemoteDataPayload,\n} from '../../../core/shared/operators';\nimport { PageInfo } from '../../../core/shared/page-info.model';\nimport { Registration } from '../../../core/shared/registration.model';\nimport { TYPE_REQUEST_FORGOT } from '../../../register-email-form/register-email-form.component';\nimport { BtnDisabledDirective } from '../../../shared/btn-disabled.directive';\nimport { ConfirmationModalComponent } from '../../../shared/confirmation-modal/confirmation-modal.component';\nimport { hasValue } from '../../../shared/empty.util';\nimport { FormBuilderService } from '../../../shared/form/builder/form-builder.service';\nimport { FormComponent } from '../../../shared/form/form.component';\nimport { ThemedLoadingComponent } from '../../../shared/loading/themed-loading.component';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { PaginationComponent } from '../../../shared/pagination/pagination.component';\nimport { PaginationComponentOptions } from '../../../shared/pagination/pagination-component-options.model';\nimport { followLink } from '../../../shared/utils/follow-link-config.model';\nimport { HasNoValuePipe } from '../../../shared/utils/has-no-value.pipe';\nimport { getEPersonsRoute } from '../../access-control-routing-paths';\nimport { ValidateEmailNotTaken } from './validators/email-taken.validator';\n\n@Component({\n  selector: 'ds-eperson-form',\n  templateUrl: './eperson-form.component.html',\n  imports: [\n    FormComponent,\n    NgIf,\n    NgFor,\n    AsyncPipe,\n    TranslateModule,\n    NgClass,\n    ThemedLoadingComponent,\n    PaginationComponent,\n    RouterLink,\n    HasNoValuePipe,\n    BtnDisabledDirective,\n  ],\n  standalone: true,\n})\n/**\n * A form used for creating and editing EPeople\n */\nexport class EPersonFormComponent implements OnInit, OnDestroy {\n\n  labelPrefix = 'admin.access-control.epeople.form.';\n\n  /**\n   * A unique id used for ds-form\n   */\n  formId = 'eperson-form';\n\n  /**\n   * The labelPrefix for all messages related to this form\n   */\n  messagePrefix = 'admin.access-control.epeople.form';\n\n  /**\n   * Dynamic input models for the inputs of form\n   */\n  firstName: DynamicInputModel;\n  lastName: DynamicInputModel;\n  email: DynamicInputModel;\n  // booleans\n  canLogIn: DynamicCheckboxModel;\n  requireCertificate: DynamicCheckboxModel;\n\n  /**\n   * A list of all dynamic input models\n   */\n  formModel: DynamicFormControlModel[];\n\n  /**\n   * Layout used for structuring the form inputs\n   */\n  formLayout: DynamicFormLayout = {\n    firstName: {\n      grid: {\n        host: 'row',\n      },\n    },\n    lastName: {\n      grid: {\n        host: 'row',\n      },\n    },\n    email: {\n      grid: {\n        host: 'row',\n      },\n    },\n    canLogIn: {\n      grid: {\n        host: 'col col-sm-6 d-inline-block',\n      },\n    },\n    requireCertificate: {\n      grid: {\n        host: 'col col-sm-6 d-inline-block',\n      },\n    },\n  };\n\n  /**\n   * A FormGroup that combines all inputs\n   */\n  formGroup: UntypedFormGroup;\n\n  /**\n   * An EventEmitter that's fired whenever the form is being submitted\n   */\n  @Output() submitForm: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * An EventEmitter that's fired whenever the form is cancelled\n   */\n  @Output() cancelForm: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Observable whether or not the admin is allowed to reset the EPerson's password\n   * TODO: Initialize the observable once the REST API supports this (currently hardcoded to return false)\n   */\n  canReset$: Observable<boolean>;\n\n  /**\n   * Observable whether or not the admin is allowed to delete the EPerson\n   */\n  canDelete$: Observable<boolean>;\n\n  /**\n   * Observable whether or not the admin is allowed to impersonate the EPerson\n   */\n  canImpersonate$: Observable<boolean>;\n\n  /**\n   * The current {@link EPerson}\n   */\n  activeEPerson$: Observable<EPerson>;\n\n  /**\n   * List of subscriptions\n   */\n  subs: Subscription[] = [];\n\n  /**\n   * A list of all the groups this EPerson is a member of\n   */\n  groups$: Observable<RemoteData<PaginatedList<Group>>>;\n\n  /**\n   * The pagination of the {@link groups$} list.\n   */\n  groupsPageInfoState$: Observable<PageInfo>;\n\n  /**\n   * Pagination config used to display the list of groups\n   */\n  config: PaginationComponentOptions = Object.assign(new PaginationComponentOptions(), {\n    id: 'gem',\n    pageSize: 5,\n    currentPage: 1,\n  });\n\n  /**\n   * Try to retrieve initial active eperson, to fill in checkboxes at component creation\n   */\n  epersonInitial: EPerson;\n\n  /**\n   * Whether or not this EPerson is currently being impersonated\n   */\n  isImpersonated = false;\n\n  /**\n   * A boolean that indicate if to display EPersonForm's Rest password button\n   */\n  displayResetPassword = false;\n\n  /**\n   * A string that indicate the label of Submit button\n   */\n  submitLabel = 'form.create';\n  /**\n   * Subscription to email field value change\n   */\n  emailValueChangeSubscribe: Subscription;\n\n  constructor(\n    protected changeDetectorRef: ChangeDetectorRef,\n    public epersonService: EPersonDataService,\n    public groupsDataService: GroupDataService,\n    private formBuilderService: FormBuilderService,\n    private translateService: TranslateService,\n    private notificationsService: NotificationsService,\n    private authService: AuthService,\n    private authorizationService: AuthorizationDataService,\n    private modalService: NgbModal,\n    private paginationService: PaginationService,\n    public requestService: RequestService,\n    private epersonRegistrationService: EpersonRegistrationService,\n    public dsoNameService: DSONameService,\n    protected route: ActivatedRoute,\n    protected router: Router,\n  ) {\n  }\n\n  ngOnInit() {\n    this.activeEPerson$ = this.epersonService.getActiveEPerson();\n    this.subs.push(this.activeEPerson$.subscribe((eperson: EPerson) => {\n      this.epersonInitial = eperson;\n      if (hasValue(eperson)) {\n        this.isImpersonated = this.authService.isImpersonatingUser(eperson.id);\n        this.displayResetPassword = true;\n        this.submitLabel = 'form.submit';\n      }\n    }));\n    this.initialisePage();\n  }\n\n  /**\n   * This method will initialise the page\n   */\n  initialisePage() {\n    if (this.route.snapshot.params.id) {\n      this.subs.push(this.epersonService.findById(this.route.snapshot.params.id).subscribe((ePersonRD: RemoteData<EPerson>) => {\n        this.epersonService.editEPerson(ePersonRD.payload);\n      }));\n    }\n    this.firstName = new DynamicInputModel({\n      id: 'firstName',\n      label: this.translateService.instant(`${this.messagePrefix}.firstName`),\n      name: 'firstName',\n      validators: {\n        required: null,\n      },\n      required: true,\n    });\n    this.lastName = new DynamicInputModel({\n      id: 'lastName',\n      label: this.translateService.instant(`${this.messagePrefix}.lastName`),\n      name: 'lastName',\n      validators: {\n        required: null,\n      },\n      required: true,\n    });\n    this.email = new DynamicInputModel({\n      id: 'email',\n      label: this.translateService.instant(`${this.messagePrefix}.email`),\n      name: 'email',\n      validators: {\n        required: null,\n        pattern: '^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$',\n      },\n      required: true,\n      errorMessages: {\n        emailTaken: 'error.validation.emailTaken',\n        pattern: 'error.validation.NotValidEmail',\n      },\n      hint: this.translateService.instant(`${this.messagePrefix}.emailHint`),\n    });\n    this.canLogIn = new DynamicCheckboxModel(\n      {\n        id: 'canLogIn',\n        label: this.translateService.instant(`${this.messagePrefix}.canLogIn`),\n        name: 'canLogIn',\n        value: (this.epersonInitial != null ? this.epersonInitial.canLogIn : true),\n      });\n    this.requireCertificate = new DynamicCheckboxModel(\n      {\n        id: 'requireCertificate',\n        label: this.translateService.instant(`${this.messagePrefix}.requireCertificate`),\n        name: 'requireCertificate',\n        value: (this.epersonInitial != null ? this.epersonInitial.requireCertificate : false),\n      });\n    this.formModel = [\n      this.firstName,\n      this.lastName,\n      this.email,\n      this.canLogIn,\n      this.requireCertificate,\n    ];\n    this.formGroup = this.formBuilderService.createFormGroup(this.formModel);\n    this.subs.push(this.activeEPerson$.subscribe((eperson: EPerson) => {\n      if (eperson != null) {\n        this.groups$ = this.groupsDataService.findListByHref(eperson._links.groups.href, {\n          currentPage: 1,\n          elementsPerPage: this.config.pageSize,\n        }, undefined, undefined, followLink('object'));\n      }\n      this.formGroup.patchValue({\n        firstName: eperson != null ? eperson.firstMetadataValue('eperson.firstname') : '',\n        lastName: eperson != null ? eperson.firstMetadataValue('eperson.lastname') : '',\n        email: eperson != null ? eperson.email : '',\n        canLogIn: eperson != null ? eperson.canLogIn : true,\n        requireCertificate: eperson != null ? eperson.requireCertificate : false,\n      });\n\n      if (eperson === null && !!this.formGroup.controls.email) {\n        this.formGroup.controls.email.setAsyncValidators(ValidateEmailNotTaken.createValidator(this.epersonService));\n        this.emailValueChangeSubscribe = this.email.valueChanges.pipe(debounceTime(300)).subscribe(() => {\n          this.changeDetectorRef.detectChanges();\n        });\n      }\n    }));\n\n    this.groups$ = this.activeEPerson$.pipe(\n      switchMap((eperson) => {\n        return observableCombineLatest([observableOf(eperson), this.paginationService.getFindListOptions(this.config.id, {\n          currentPage: 1,\n          elementsPerPage: this.config.pageSize,\n        })]);\n      }),\n      switchMap(([eperson, findListOptions]) => {\n        if (eperson != null) {\n          return this.groupsDataService.findListByHref(eperson._links.groups.href, findListOptions, true, true, followLink('object'));\n        }\n        return observableOf(undefined);\n      }),\n    );\n\n    this.groupsPageInfoState$ = this.groups$.pipe(\n      map(groupsRD => groupsRD.payload.pageInfo),\n    );\n\n    this.canImpersonate$ = this.activeEPerson$.pipe(\n      switchMap((eperson) => {\n        if (hasValue(eperson)) {\n          return this.authorizationService.isAuthorized(FeatureID.LoginOnBehalfOf, eperson.self);\n        } else {\n          return observableOf(false);\n        }\n      }),\n    );\n    this.canDelete$ = this.activeEPerson$.pipe(\n      switchMap((eperson) => this.authorizationService.isAuthorized(FeatureID.CanDelete, hasValue(eperson) ? eperson.self : undefined)),\n    );\n    this.canReset$ = observableOf(true);\n  }\n\n  /**\n   * Stop editing the currently selected eperson\n   */\n  onCancel() {\n    this.epersonService.cancelEditEPerson();\n    this.cancelForm.emit();\n    void this.router.navigate([getEPersonsRoute()]);\n  }\n\n  /**\n   * Submit the form\n   * When the eperson has an id attached -> Edit the eperson\n   * When the eperson has no id attached -> Create new eperson\n   * Emit the updated/created eperson using the EventEmitter submitForm\n   */\n  onSubmit() {\n    this.activeEPerson$.pipe(take(1)).subscribe(\n      (ePerson: EPerson) => {\n        const values = {\n          metadata: {\n            'eperson.firstname': [\n              {\n                value: this.firstName.value,\n              },\n            ],\n            'eperson.lastname': [\n              {\n                value: this.lastName.value,\n              },\n            ],\n          },\n          email: this.email.value,\n          canLogIn: this.canLogIn.value,\n          requireCertificate: this.requireCertificate.value,\n        };\n        if (ePerson == null) {\n          this.createNewEPerson(values);\n        } else {\n          this.editEPerson(ePerson, values);\n        }\n      },\n    );\n  }\n\n  /**\n   * Creates new EPerson based on given values from form\n   * @param values\n   */\n  createNewEPerson(values) {\n    const ePersonToCreate = Object.assign(new EPerson(), values);\n\n    const response = this.epersonService.create(ePersonToCreate);\n    response.pipe(\n      getFirstCompletedRemoteData(),\n    ).subscribe((rd: RemoteData<EPerson>) => {\n      if (rd.hasSucceeded) {\n        this.notificationsService.success(this.translateService.get(this.labelPrefix + 'notification.created.success', { name: this.dsoNameService.getName(ePersonToCreate) }));\n        this.submitForm.emit(ePersonToCreate);\n        this.epersonService.clearEPersonRequests();\n        void this.router.navigateByUrl(getEPersonsRoute());\n      } else {\n        this.notificationsService.error(this.translateService.get(this.labelPrefix + 'notification.created.failure', { name: this.dsoNameService.getName(ePersonToCreate) }));\n        this.cancelForm.emit();\n      }\n    });\n    this.showNotificationIfEmailInUse(ePersonToCreate, 'created');\n  }\n\n  /**\n   * Edits existing EPerson based on given values from form and old EPerson\n   * @param ePerson   ePerson to edit\n   * @param values    new ePerson values (of form)\n   */\n  editEPerson(ePerson: EPerson, values) {\n    const editedEperson = Object.assign(new EPerson(), {\n      id: ePerson.id,\n      metadata: {\n        'eperson.firstname': [\n          {\n            value: (this.firstName.value ? this.firstName.value : ePerson.firstMetadataValue('eperson.firstname')),\n          },\n        ],\n        'eperson.lastname': [\n          {\n            value: (this.lastName.value ? this.lastName.value : ePerson.firstMetadataValue('eperson.lastname')),\n          },\n        ],\n      },\n      email: (hasValue(values.email) ? values.email : ePerson.email),\n      canLogIn: (hasValue(values.canLogIn) ? values.canLogIn : ePerson.canLogIn),\n      requireCertificate: (hasValue(values.requireCertificate) ? values.requireCertificate : ePerson.requireCertificate),\n      _links: ePerson._links,\n    });\n\n    const response = this.epersonService.updateEPerson(editedEperson);\n    response.pipe(getFirstCompletedRemoteData()).subscribe((rd: RemoteData<EPerson>) => {\n      if (rd.hasSucceeded) {\n        this.notificationsService.success(this.translateService.get(this.labelPrefix + 'notification.edited.success', { name: this.dsoNameService.getName(editedEperson) }));\n        this.submitForm.emit(editedEperson);\n        void this.router.navigateByUrl(getEPersonsRoute());\n      } else {\n        this.notificationsService.error(this.translateService.get(this.labelPrefix + 'notification.edited.failure', { name: this.dsoNameService.getName(editedEperson) }));\n        this.cancelForm.emit();\n      }\n    });\n\n    if (values.email != null && values.email !== ePerson.email) {\n      this.showNotificationIfEmailInUse(editedEperson, 'edited');\n    }\n  }\n\n  /**\n   * Event triggered when the user changes page\n   * @param event\n   */\n  onPageChange(event) {\n    this.updateGroups({\n      currentPage: event,\n      elementsPerPage: this.config.pageSize,\n    });\n  }\n\n  /**\n   * Start impersonating the EPerson\n   */\n  impersonate() {\n    this.authService.impersonate(this.epersonInitial.id);\n    this.isImpersonated = true;\n  }\n\n  /**\n   * Deletes the EPerson from the Repository. The EPerson will be the only that this form is showing.\n   * It'll either show a success or error message depending on whether the delete was successful or not.\n   */\n  delete(): void {\n    this.activeEPerson$.pipe(\n      take(1),\n      switchMap((eperson: EPerson) => {\n        const modalRef = this.modalService.open(ConfirmationModalComponent);\n        modalRef.componentInstance.name = this.dsoNameService.getName(eperson);\n        modalRef.componentInstance.headerLabel = 'confirmation-modal.delete-eperson.header';\n        modalRef.componentInstance.infoLabel = 'confirmation-modal.delete-eperson.info';\n        modalRef.componentInstance.cancelLabel = 'confirmation-modal.delete-eperson.cancel';\n        modalRef.componentInstance.confirmLabel = 'confirmation-modal.delete-eperson.confirm';\n        modalRef.componentInstance.brandColor = 'danger';\n        modalRef.componentInstance.confirmIcon = 'fas fa-trash';\n\n        return modalRef.componentInstance.response.pipe(\n          take(1),\n          switchMap((confirm: boolean) => {\n            if (confirm && hasValue(eperson.id)) {\n              this.canDelete$ = observableOf(false);\n              return this.epersonService.deleteEPerson(eperson).pipe(\n                getFirstCompletedRemoteData(),\n                map((restResponse: RemoteData<NoContent>) => ({ restResponse, eperson })),\n              );\n            } else {\n              return observableOf(null);\n            }\n          }),\n          finalize(() => this.canDelete$ = observableOf(true)),\n        );\n      }),\n    ).subscribe(({ restResponse, eperson }: { restResponse: RemoteData<NoContent> | null, eperson: EPerson }) => {\n      if (restResponse?.hasSucceeded) {\n        this.notificationsService.success(this.translateService.get(this.labelPrefix + 'notification.deleted.success', { name: this.dsoNameService.getName(eperson) }));\n        void this.router.navigate([getEPersonsRoute()]);\n      } else {\n        this.notificationsService.error(`Error occurred when trying to delete EPerson with id: ${eperson?.id} with code: ${restResponse?.statusCode} and message: ${restResponse?.errorMessage}`);\n      }\n      this.cancelForm.emit();\n    });\n  }\n\n  /**\n   * Stop impersonating the EPerson\n   */\n  stopImpersonating() {\n    this.authService.stopImpersonatingAndRefresh();\n    this.isImpersonated = false;\n  }\n\n  /**\n   * Sends an email to current eperson address with the information\n   * to reset password\n   */\n  resetPassword() {\n    if (hasValue(this.epersonInitial.email)) {\n      this.epersonRegistrationService.registerEmail(this.epersonInitial.email, null, TYPE_REQUEST_FORGOT).pipe(getFirstCompletedRemoteData())\n        .subscribe((response: RemoteData<Registration>) => {\n          if (response.hasSucceeded) {\n            this.notificationsService.success(this.translateService.get('admin.access-control.epeople.actions.reset'),\n              this.translateService.get('forgot-email.form.success.content', { email: this.epersonInitial.email }));\n          } else {\n            this.notificationsService.error(this.translateService.get('forgot-email.form.error.head'),\n              this.translateService.get('forgot-email.form.error.content', { email: this.epersonInitial.email }));\n          }\n        },\n        );\n    }\n  }\n\n  /**\n   * Cancel the current edit when component is destroyed & unsub all subscriptions\n   */\n  ngOnDestroy(): void {\n    this.subs.filter((sub) => hasValue(sub)).forEach((sub) => sub.unsubscribe());\n    this.paginationService.clearPagination(this.config.id);\n    if (hasValue(this.emailValueChangeSubscribe)) {\n      this.emailValueChangeSubscribe.unsubscribe();\n    }\n  }\n\n  /**\n   * Checks for the given ePerson if there is already an ePerson in the system with that email\n   * and shows notification if this is the case\n   * @param ePerson               ePerson values to check\n   * @param notificationSection   whether in create or edit\n   */\n  private showNotificationIfEmailInUse(ePerson: EPerson, notificationSection: string) {\n    // Relevant message for email in use\n    this.subs.push(this.epersonService.searchByScope('email', ePerson.email, {\n      currentPage: 1,\n      elementsPerPage: 0,\n    }).pipe(getFirstSucceededRemoteData(), getRemoteDataPayload())\n      .subscribe((list: PaginatedList<EPerson>) => {\n        if (list.totalElements > 0) {\n          this.notificationsService.error(this.translateService.get(this.labelPrefix + 'notification.' + notificationSection + '.failure.emailInUse', {\n            name: this.dsoNameService.getName(ePerson),\n            email: ePerson.email,\n          }));\n        }\n      }));\n  }\n\n  /**\n   * Update the list of groups by fetching it from the rest api or cache\n   */\n  private updateGroups(options) {\n    this.subs.push(this.activeEPerson$.subscribe((eperson: EPerson) => {\n      this.groups$ = this.groupsDataService.findListByHref(eperson._links.groups.href, options);\n    }));\n  }\n}\n","<div class=\"container\">\n  <div class=\"group-form row\">\n    <div class=\"col-12\">\n\n      <div *ngIf=\"activeEPerson$ | async; then editHeader; else createHeader\"></div>\n\n      <ng-template #createHeader>\n        <h1 class=\"border-bottom pb-2\">{{messagePrefix + '.create' | translate}}</h1>\n      </ng-template>\n\n      <ng-template #editHeader>\n        <h1 class=\"border-bottom pb-2\">{{messagePrefix + '.edit' | translate}}</h1>\n      </ng-template>\n\n      <ds-form [formId]=\"formId\"\n               [formModel]=\"formModel\"\n               [formGroup]=\"formGroup\"\n               [formLayout]=\"formLayout\"\n               [displayCancel]=\"false\"\n               [submitLabel]=\"submitLabel\"\n               (submitForm)=\"onSubmit()\">\n        <div before class=\"btn-group\">\n          <button (click)=\"onCancel()\" type=\"button\" class=\"btn btn-outline-secondary\">\n            <i class=\"fas fa-arrow-left\"></i> {{messagePrefix + '.return' | translate}}\n          </button>\n        </div>\n        <div *ngIf=\"displayResetPassword\" between class=\"btn-group\">\n          <button class=\"btn btn-primary\" [dsBtnDisabled]=\"(canReset$ | async) !== true\" type=\"button\" (click)=\"resetPassword()\">\n            <i class=\"fa fa-key\"></i> {{'admin.access-control.epeople.actions.reset' | translate}}\n          </button>\n        </div>\n        <div *ngIf=\"canImpersonate$ | async\" between class=\"btn-group\">\n          <button *ngIf=\"!isImpersonated\" class=\"btn btn-primary\" type=\"button\" (click)=\"impersonate()\">\n            <i class=\"fa fa-user-secret\"></i> {{'admin.access-control.epeople.actions.impersonate' | translate}}\n          </button>\n          <button *ngIf=\"isImpersonated\" class=\"btn btn-primary\" type=\"button\" (click)=\"stopImpersonating()\">\n            <i class=\"fa fa-user-secret\"></i> {{'admin.access-control.epeople.actions.stop-impersonating' | translate}}\n          </button>\n        </div>\n        <button *ngIf=\"canDelete$ | async\" after class=\"btn btn-danger delete-button\" type=\"button\" (click)=\"delete()\">\n          <i class=\"fas fa-trash\"></i> {{'admin.access-control.epeople.actions.delete' | translate}}\n        </button>\n      </ds-form>\n\n      <ds-loading [showMessage]=\"false\" *ngIf=\"!formGroup\"></ds-loading>\n\n      <div *ngIf=\"activeEPerson$ | async\">\n        <h2>{{messagePrefix + '.groupsEPersonIsMemberOf' | translate}}</h2>\n\n        <ds-loading [showMessage]=\"false\" *ngIf=\"groups$ | async | dsHasNoValue\"></ds-loading>\n\n        <ds-pagination\n          *ngIf=\"(groups$ | async)?.payload?.totalElements > 0\"\n          [paginationOptions]=\"config\"\n          [collectionSize]=\"(groups$ | async)?.payload?.totalElements\"\n          [hideGear]=\"true\"\n          [hidePagerWhenSinglePage]=\"true\"\n          (pageChange)=\"onPageChange($event)\">\n\n          <div class=\"table-responsive\">\n            <table id=\"groups\" class=\"table table-striped table-hover table-bordered\">\n              <thead>\n              <tr>\n                <th scope=\"col\" class=\"align-middle\">{{messagePrefix + '.table.id' | translate}}</th>\n                <th scope=\"col\" class=\"align-middle\">{{messagePrefix + '.table.name' | translate}}</th>\n                <th scope=\"col\" class=\"align-middle\">{{messagePrefix + '.table.collectionOrCommunity' | translate}}</th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr *ngFor=\"let group of (groups$ | async)?.payload?.page\">\n                <td class=\"align-middle\">{{group.id}}</td>\n                <td class=\"align-middle\">\n                  <a (click)=\"groupsDataService.startEditingNewGroup(group)\"\n                     [routerLink]=\"[groupsDataService.getGroupEditPageRouterLink(group)]\">\n                    {{ dsoNameService.getName(group) }}\n                  </a>\n                </td>\n                <td class=\"align-middle\">\n                  {{ dsoNameService.getName((group.object | async)?.payload) }}\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </div>\n\n        </ds-pagination>\n\n        <div *ngIf=\"(groups$ | async)?.payload?.totalElements === 0\" class=\"alert alert-info w-100 mb-2\" role=\"alert\">\n          <div>{{messagePrefix + '.memberOfNoGroups' | translate}}</div>\n          <div>\n            <button [routerLink]=\"[groupsDataService.getGroupRegistryRouterLink()]\"\n                    class=\"btn btn-primary\">{{messagePrefix + '.goToGroups' | translate}}</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  AbstractControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { EPersonDataService } from '../../../../core/eperson/eperson-data.service';\nimport { getFirstSucceededRemoteData } from '../../../../core/shared/operators';\n\nexport class ValidateEmailNotTaken {\n\n  /**\n   * This method will create the validator with the ePersonDataService requested from component\n   * @param ePersonDataService the service with DI in the component that this validator is being utilized.\n   */\n  static createValidator(ePersonDataService: EPersonDataService) {\n    return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n      return ePersonDataService.getEPersonByEmail(control.value)\n        .pipe(\n          getFirstSucceededRemoteData(),\n          map(res => {\n            return res.payload ? { emailTaken: true } : null;\n          }),\n        );\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { RemoteData } from '../../core/data/remote-data';\nimport { EPersonDataService } from '../../core/eperson/eperson-data.service';\nimport { EPerson } from '../../core/eperson/models/eperson.model';\nimport { ResolvedAction } from '../../core/resolving/resolver.actions';\nimport { getFirstCompletedRemoteData } from '../../core/shared/operators';\nimport {\n  followLink,\n  FollowLinkConfig,\n} from '../../shared/utils/follow-link-config.model';\n\nexport const EPERSON_EDIT_FOLLOW_LINKS: FollowLinkConfig<EPerson>[] = [\n  followLink('groups'),\n];\n\n/**\n * This class represents a resolver that requests a specific {@link EPerson} before the route is activated\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class EPersonResolver  {\n\n  constructor(\n    protected ePersonService: EPersonDataService,\n    protected store: Store<any>,\n  ) {\n  }\n\n  /**\n   * Method for resolving a {@link EPerson} based on the parameters in the current route\n   * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n   * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n   * @returns `Observable<<RemoteData<EPerson>>` Emits the found {@link EPerson} based on the parameters in the current\n   * route, or an error if something went wrong\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<RemoteData<EPerson>> {\n    const ePersonRD$: Observable<RemoteData<EPerson>> = this.ePersonService.findById(route.params.id,\n      true,\n      false,\n      ...EPERSON_EDIT_FOLLOW_LINKS,\n    ).pipe(\n      getFirstCompletedRemoteData(),\n    );\n\n    ePersonRD$.subscribe((ePersonRD: RemoteData<EPerson>) => {\n      this.store.dispatch(new ResolvedAction(state.url, ePersonRD.payload));\n    });\n\n    return ePersonRD$;\n  }\n\n}\n","import {\n  AsyncPipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  HostListener,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  UntypedFormGroup,\n} from '@angular/forms';\nimport {\n  ActivatedRoute,\n  Router,\n} from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  DynamicFormControlModel,\n  DynamicFormLayout,\n  DynamicInputModel,\n  DynamicTextAreaModel,\n} from '@ng-dynamic-forms/core';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport { Operation } from 'fast-json-patch';\nimport {\n  combineLatest as observableCombineLatest,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  debounceTime,\n  map,\n  switchMap,\n  take,\n} from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { getCollectionEditRolesRoute } from '../../../collection-page/collection-page-routing-paths';\nimport { getCommunityEditRolesRoute } from '../../../community-page/community-page-routing-paths';\nimport { DSONameService } from '../../../core/breadcrumbs/dso-name.service';\nimport { DSpaceObjectDataService } from '../../../core/data/dspace-object-data.service';\nimport { AuthorizationDataService } from '../../../core/data/feature-authorization/authorization-data.service';\nimport { FeatureID } from '../../../core/data/feature-authorization/feature-id';\nimport { PaginatedList } from '../../../core/data/paginated-list.model';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { RequestService } from '../../../core/data/request.service';\nimport { GroupDataService } from '../../../core/eperson/group-data.service';\nimport { Group } from '../../../core/eperson/models/group.model';\nimport { Collection } from '../../../core/shared/collection.model';\nimport { Community } from '../../../core/shared/community.model';\nimport { DSpaceObject } from '../../../core/shared/dspace-object.model';\nimport { NoContent } from '../../../core/shared/NoContent.model';\nimport {\n  getAllCompletedRemoteData,\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteData,\n  getRemoteDataPayload,\n} from '../../../core/shared/operators';\nimport { AlertComponent } from '../../../shared/alert/alert.component';\nimport { AlertType } from '../../../shared/alert/alert-type';\nimport { ConfirmationModalComponent } from '../../../shared/confirmation-modal/confirmation-modal.component';\nimport { ContextHelpDirective } from '../../../shared/context-help.directive';\nimport {\n  hasValue,\n  hasValueOperator,\n  isNotEmpty,\n} from '../../../shared/empty.util';\nimport { FormBuilderService } from '../../../shared/form/builder/form-builder.service';\nimport { FormComponent } from '../../../shared/form/form.component';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { followLink } from '../../../shared/utils/follow-link-config.model';\nimport {\n  getGroupEditRoute,\n  getGroupsRoute,\n} from '../../access-control-routing-paths';\nimport { MembersListComponent } from './members-list/members-list.component';\nimport { SubgroupsListComponent } from './subgroup-list/subgroups-list.component';\nimport { ValidateGroupExists } from './validators/group-exists.validator';\n\n@Component({\n  selector: 'ds-group-form',\n  templateUrl: './group-form.component.html',\n  imports: [\n    FormComponent,\n    AlertComponent,\n    NgIf,\n    AsyncPipe,\n    TranslateModule,\n    ContextHelpDirective,\n    MembersListComponent,\n    SubgroupsListComponent,\n  ],\n  standalone: true,\n})\n/**\n * A form used for creating and editing groups\n */\nexport class GroupFormComponent implements OnInit, OnDestroy {\n\n  messagePrefix = 'admin.access-control.groups.form';\n\n  /**\n   * A unique id used for ds-form\n   */\n  formId = 'group-form';\n\n  /**\n   * Dynamic models for the inputs of form\n   */\n  groupName: AbstractControl;\n  groupCommunity: AbstractControl;\n  groupDescription: AbstractControl;\n\n  /**\n   * A list of all dynamic input models\n   */\n  formModel: DynamicFormControlModel[];\n\n  /**\n   * Layout used for structuring the form inputs\n   */\n  formLayout: DynamicFormLayout = {\n    groupName: {\n      grid: {\n        host: 'row',\n      },\n    },\n    groupDescription: {\n      grid: {\n        host: 'row',\n      },\n    },\n  };\n\n  /**\n   * A FormGroup that combines all inputs\n   */\n  formGroup: UntypedFormGroup;\n\n  /**\n   * An EventEmitter that's fired whenever the form is being submitted\n   */\n  @Output() submitForm: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * An EventEmitter that's fired whenever the form is cancelled\n   */\n  @Output() cancelForm: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * List of subscriptions\n   */\n  subs: Subscription[] = [];\n\n  /**\n   * Observable whether or not the logged in user is allowed to delete the Group & doesn't have a linked object (community / collection linked to workspace group\n   */\n  canEdit$: Observable<boolean>;\n\n  /**\n   * The current {@link Group}\n   */\n  activeGroup$: Observable<Group>;\n\n  /**\n   * The current {@link Group}'s linked {@link Community}/{@link Collection}\n   */\n  activeGroupLinkedDSO$: Observable<DSpaceObject>;\n\n  /**\n   * Link to the current {@link Group}'s {@link Community}/{@link Collection} edit role tab\n   */\n  linkedEditRolesRoute$: Observable<string>;\n\n  /**\n   * The AlertType enumeration\n   */\n  public readonly AlertType = AlertType;\n\n  /**\n   * Subscription to email field value change\n   */\n  groupNameValueChangeSubscribe: Subscription;\n\n\n  constructor(\n    public groupDataService: GroupDataService,\n    protected dSpaceObjectDataService: DSpaceObjectDataService,\n    protected formBuilderService: FormBuilderService,\n    protected translateService: TranslateService,\n    protected notificationsService: NotificationsService,\n    protected route: ActivatedRoute,\n    protected router: Router,\n    protected authorizationService: AuthorizationDataService,\n    protected modalService: NgbModal,\n    public requestService: RequestService,\n    protected changeDetectorRef: ChangeDetectorRef,\n    public dsoNameService: DSONameService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (this.route.snapshot.params.groupId !== 'newGroup') {\n      this.setActiveGroup(this.route.snapshot.params.groupId);\n    }\n    this.activeGroup$ = this.groupDataService.getActiveGroup();\n    this.activeGroupLinkedDSO$ = this.getActiveGroupLinkedDSO();\n    this.linkedEditRolesRoute$ = this.getLinkedEditRolesRoute();\n    this.canEdit$ = this.activeGroupLinkedDSO$.pipe(\n      switchMap((dso: DSpaceObject) => {\n        if (hasValue(dso)) {\n          return [false];\n        } else {\n          return this.activeGroup$.pipe(\n            hasValueOperator(),\n            switchMap((group: Group) => this.authorizationService.isAuthorized(FeatureID.CanDelete, group.self)),\n          );\n        }\n      }),\n    );\n    this.initialisePage();\n  }\n\n  initialisePage() {\n    const groupNameModel = new DynamicInputModel({\n      id: 'groupName',\n      label: this.translateService.instant(`${this.messagePrefix}.groupName`),\n      name: 'groupName',\n      validators: {\n        required: null,\n      },\n      required: true,\n    });\n    const groupCommunityModel = new DynamicInputModel({\n      id: 'groupCommunity',\n      label: this.translateService.instant(`${this.messagePrefix}.groupCommunity`),\n      name: 'groupCommunity',\n      required: false,\n      readOnly: true,\n    });\n    const groupDescriptionModel = new DynamicTextAreaModel({\n      id: 'groupDescription',\n      label: this.translateService.instant(`${this.messagePrefix}.groupDescription`),\n      name: 'groupDescription',\n      required: false,\n      spellCheck: environment.form.spellCheck,\n    });\n    this.formModel = [\n      groupNameModel,\n      groupDescriptionModel,\n    ];\n    this.formGroup = this.formBuilderService.createFormGroup(this.formModel);\n    this.groupName = this.formGroup.get('groupName');\n    this.groupDescription = this.formGroup.get('groupDescription');\n\n    if (hasValue(this.groupName)) {\n      this.groupName.setAsyncValidators(ValidateGroupExists.createValidator(this.groupDataService));\n      this.groupNameValueChangeSubscribe = this.groupName.valueChanges.pipe(debounceTime(300)).subscribe(() => {\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n\n    this.subs.push(\n      observableCombineLatest([\n        this.activeGroup$,\n        this.canEdit$,\n        this.activeGroupLinkedDSO$,\n      ]).subscribe(([activeGroup, canEdit, linkedObject]) => {\n\n        if (activeGroup != null) {\n\n          // Disable group name exists validator\n          this.formGroup.controls.groupName.clearAsyncValidators();\n\n          if (isNotEmpty(linkedObject?.name)) {\n            if (!this.formGroup.controls.groupCommunity) {\n              this.formBuilderService.insertFormGroupControl(1, this.formGroup, this.formModel, groupCommunityModel);\n              this.groupDescription = this.formGroup.get('groupCommunity');\n            }\n            this.formGroup.patchValue({\n              groupName: activeGroup.name,\n              groupCommunity: linkedObject?.name ?? '',\n              groupDescription: activeGroup.firstMetadataValue('dc.description'),\n            });\n          } else {\n            this.formModel = [\n              groupNameModel,\n              groupDescriptionModel,\n            ];\n            this.formGroup.patchValue({\n              groupName: activeGroup.name,\n              groupDescription: activeGroup.firstMetadataValue('dc.description'),\n            });\n          }\n          if (!canEdit || activeGroup.permanent) {\n            this.formGroup.disable();\n          } else {\n            this.formGroup.enable();\n          }\n        }\n      }),\n    );\n  }\n\n  /**\n   * Stop editing the currently selected group\n   */\n  onCancel() {\n    this.groupDataService.cancelEditGroup();\n    this.cancelForm.emit();\n    void this.router.navigate([getGroupsRoute()]);\n  }\n\n  /**\n   * Submit the form\n   * When the eperson has an id attached -> Edit the eperson\n   * When the eperson has no id attached -> Create new eperson\n   * Emit the updated/created eperson using the EventEmitter submitForm\n   */\n  onSubmit() {\n    this.activeGroup$.pipe(take(1)).subscribe((group: Group) => {\n      if (group === null) {\n        this.createNewGroup({\n          name: this.groupName.value,\n          metadata: {\n            'dc.description': [\n              {\n                value: this.groupDescription.value,\n              },\n            ],\n          },\n        });\n      } else {\n        this.editGroup(group);\n      }\n    });\n  }\n\n  /**\n   * Creates new Group based on given values from form\n   * @param values\n   */\n  createNewGroup(values) {\n    const groupToCreate = Object.assign(new Group(), values);\n    this.groupDataService.create(groupToCreate).pipe(\n      getFirstCompletedRemoteData(),\n    ).subscribe((rd: RemoteData<Group>) => {\n      if (rd.hasSucceeded) {\n        this.notificationsService.success(this.translateService.get(this.messagePrefix + '.notification.created.success', { name: groupToCreate.name }));\n        this.submitForm.emit(groupToCreate);\n        if (isNotEmpty(rd.payload)) {\n          const groupSelfLink = rd.payload._links.self.href;\n          this.setActiveGroupWithLink(groupSelfLink);\n          this.groupDataService.clearGroupsRequests();\n          void this.router.navigateByUrl(getGroupEditRoute(rd.payload.uuid));\n        }\n      } else {\n        this.notificationsService.error(this.translateService.get(this.messagePrefix + '.notification.created.failure', { name: groupToCreate.name }));\n        this.showNotificationIfNameInUse(groupToCreate, 'created');\n        this.cancelForm.emit();\n      }\n    });\n  }\n\n  /**\n   * Checks for the given group if there is already a group in the system with that group name and shows error if that\n   * is the case\n   * @param group                 group to check\n   * @param notificationSection   whether in create or edit\n   */\n  private showNotificationIfNameInUse(group: Group, notificationSection: string) {\n    // Relevant message for group name in use\n    this.subs.push(this.groupDataService.searchGroups(group.name, {\n      currentPage: 1,\n      elementsPerPage: 0,\n    }).pipe(getFirstSucceededRemoteData(), getRemoteDataPayload())\n      .subscribe((list: PaginatedList<Group>) => {\n        if (list.totalElements > 0) {\n          this.notificationsService.error(this.translateService.get(this.messagePrefix + '.notification.' + notificationSection + '.failure.groupNameInUse', {\n            name: this.dsoNameService.getName(group),\n          }));\n        }\n      }));\n  }\n\n  /**\n   * Edit existing Group based on given values from form and old Group\n   * @param group   Group to edit and old values contained within\n   */\n  editGroup(group: Group) {\n    let operations: Operation[] = [];\n\n    if (hasValue(this.groupDescription.value)) {\n      operations = [...operations, {\n        op: 'add',\n        path: '/metadata/dc.description',\n        value: this.groupDescription.value,\n      }];\n    }\n\n    if (hasValue(this.groupName.value)) {\n      operations = [...operations, {\n        op: 'replace',\n        path: '/name',\n        value: this.groupName.value,\n      }];\n    }\n\n    this.groupDataService.patch(group, operations).pipe(\n      getFirstCompletedRemoteData(),\n    ).subscribe((rd: RemoteData<Group>) => {\n      if (rd.hasSucceeded) {\n        this.notificationsService.success(this.translateService.get(this.messagePrefix + '.notification.edited.success', { name: this.dsoNameService.getName(rd.payload) }));\n        this.submitForm.emit(rd.payload);\n      } else {\n        this.notificationsService.error(this.translateService.get(this.messagePrefix + '.notification.edited.failure', { name: this.dsoNameService.getName(group) }));\n        this.cancelForm.emit();\n      }\n    });\n  }\n\n  /**\n   * Start editing the selected group\n   * @param groupId   ID of group to set as active\n   */\n  setActiveGroup(groupId: string) {\n    this.groupDataService.cancelEditGroup();\n    this.groupDataService.findById(groupId)\n      .pipe(\n        getFirstSucceededRemoteData(),\n        getRemoteDataPayload())\n      .subscribe((group: Group) => {\n        this.groupDataService.editGroup(group);\n      });\n  }\n\n  /**\n   * Start editing the selected group\n   * @param groupSelfLink   SelfLink of group to set as active\n   */\n  setActiveGroupWithLink(groupSelfLink: string) {\n    this.activeGroup$.pipe(take(1)).subscribe((activeGroup: Group) => {\n      if (activeGroup === null) {\n        this.groupDataService.cancelEditGroup();\n        this.groupDataService.findByHref(groupSelfLink, false, false, followLink('subgroups'), followLink('epersons'), followLink('object'))\n          .pipe(\n            getFirstSucceededRemoteData(),\n            getRemoteDataPayload())\n          .subscribe((group: Group) => {\n            this.groupDataService.editGroup(group);\n          });\n      }\n    });\n  }\n\n  /**\n   * Deletes the Group from the Repository. The Group will be the only that this form is showing.\n   * It'll either show a success or error message depending on whether the delete was successful or not.\n   */\n  delete() {\n    this.activeGroup$.pipe(take(1)).subscribe((group: Group) => {\n      const modalRef = this.modalService.open(ConfirmationModalComponent);\n      modalRef.componentInstance.name = this.dsoNameService.getName(group);\n      modalRef.componentInstance.headerLabel = this.messagePrefix + '.delete-group.modal.header';\n      modalRef.componentInstance.infoLabel = this.messagePrefix + '.delete-group.modal.info';\n      modalRef.componentInstance.cancelLabel = this.messagePrefix + '.delete-group.modal.cancel';\n      modalRef.componentInstance.confirmLabel = this.messagePrefix + '.delete-group.modal.confirm';\n      modalRef.componentInstance.brandColor = 'danger';\n      modalRef.componentInstance.confirmIcon = 'fas fa-trash';\n      modalRef.componentInstance.response.pipe(take(1)).subscribe((confirm: boolean) => {\n        if (confirm) {\n          if (hasValue(group.id)) {\n            this.groupDataService.delete(group.id).pipe(getFirstCompletedRemoteData())\n              .subscribe((rd: RemoteData<NoContent>) => {\n                if (rd.hasSucceeded) {\n                  this.notificationsService.success(this.translateService.get(this.messagePrefix + '.notification.deleted.success', { name: this.dsoNameService.getName(group) }));\n                  this.onCancel();\n                } else {\n                  this.notificationsService.error(\n                    this.translateService.get(this.messagePrefix + '.notification.deleted.failure.title', { name: this.dsoNameService.getName(group) }),\n                    this.translateService.get(this.messagePrefix + '.notification.deleted.failure.content', { cause: rd.errorMessage }));\n                }\n              });\n          }\n        }\n      });\n    });\n  }\n\n  /**\n   * Cancel the current edit when component is destroyed & unsub all subscriptions\n   */\n  @HostListener('window:beforeunload')\n  ngOnDestroy(): void {\n    this.groupDataService.cancelEditGroup();\n    this.subs.filter((sub) => hasValue(sub)).forEach((sub) => sub.unsubscribe());\n\n    if (hasValue(this.groupNameValueChangeSubscribe)) {\n      this.groupNameValueChangeSubscribe.unsubscribe();\n    }\n\n  }\n\n  /**\n   * Get the active {@link Group}'s linked object if it has one ({@link Community} or {@link Collection} linked to a\n   * workflow group)\n   */\n  getActiveGroupLinkedDSO(): Observable<DSpaceObject> {\n    return this.activeGroup$.pipe(\n      hasValueOperator(),\n      switchMap((group: Group) => {\n        if (group.object === undefined) {\n          return this.dSpaceObjectDataService.findByHref(group._links.object.href);\n        }\n        return group.object;\n      }),\n      getAllCompletedRemoteData(),\n      getRemoteDataPayload(),\n    );\n  }\n\n  /**\n   * Get the route to the edit roles tab of the active {@link Group}'s linked object (community or collection linked\n   * to a workflow group) if it has one\n   */\n  getLinkedEditRolesRoute(): Observable<string> {\n    return this.activeGroupLinkedDSO$.pipe(\n      hasValueOperator(),\n      map((dso: DSpaceObject) => {\n        switch ((dso as any).type) {\n          case Community.type.value:\n            return getCommunityEditRolesRoute(dso.id);\n          case Collection.type.value:\n            return getCollectionEditRolesRoute(dso.id);\n        }\n      }),\n    );\n  }\n}\n","<div class=\"container\">\n  <div class=\"group-form row\">\n    <div class=\"col-12\">\n\n      <div *ngIf=\"activeGroup$ | async; then editHeader; else createHeader\"></div>\n\n      <ng-template #createHeader>\n        <h1 class=\"border-bottom pb-2\">{{messagePrefix + '.head.create' | translate}}</h1>\n      </ng-template>\n\n      <ng-template #editHeader>\n        <h1 class=\"border-bottom pb-2\">\n          <span\n            *dsContextHelp=\"{\n              content: 'admin.access-control.groups.form.tooltip.editGroupPage',\n              id: 'edit-group-page',\n              iconPlacement: 'right',\n              tooltipPlacement: ['right', 'bottom']\n            }\"\n          >\n            {{messagePrefix + '.head.edit' | translate}}\n          </span>\n        </h1>\n      </ng-template>\n\n      <ng-container *ngIf=\"(activeGroup$ | async) as groupBeingEdited\">\n        <ds-alert *ngIf=\"groupBeingEdited?.permanent\" [type]=\"AlertType.Warning\"\n                  [content]=\"messagePrefix + '.alert.permanent'\"></ds-alert>\n        <ng-container *ngIf=\"(activeGroupLinkedDSO$ | async) as activeGroupLinkedDSO\">\n          <ds-alert *ngIf=\"(canEdit$ | async) !== true\" [type]=\"AlertType.Warning\"\n                    [content]=\"(messagePrefix + '.alert.workflowGroup' | translate:{ name: dsoNameService.getName(activeGroupLinkedDSO), comcol: activeGroupLinkedDSO.type, comcolEditRolesRoute: (linkedEditRolesRoute$ | async) })\">\n          </ds-alert>\n        </ng-container>\n      </ng-container>\n\n      <ds-form [formId]=\"formId\"\n               [formModel]=\"formModel\"\n               [formGroup]=\"formGroup\"\n               [formLayout]=\"formLayout\"\n               [displayCancel]=\"false\"\n               (submitForm)=\"onSubmit()\">\n        <div before class=\"btn-group\">\n          <button (click)=\"onCancel()\" type=\"button\"\n                  class=\"btn btn-outline-secondary\"><i class=\"fas fa-arrow-left\"></i> {{messagePrefix + '.return' | translate}}</button>\n        </div>\n        <div after *ngIf=\"(canEdit$ | async) && !(activeGroup$ | async)?.permanent\" class=\"btn-group\">\n          <button (click)=\"delete()\" class=\"btn btn-danger delete-button\" type=\"button\">\n            <i class=\"fa fa-trash\"></i> {{ messagePrefix + '.actions.delete' | translate}}\n          </button>\n        </div>\n      </ds-form>\n\n      <ng-container *ngIf=\"(activeGroup$ | async) as groupBeingEdited\">\n        <div class=\"mb-5\">\n          <ds-members-list *ngIf=\"groupBeingEdited !== undefined\"\n                           [messagePrefix]=\"messagePrefix + '.members-list'\"></ds-members-list>\n        </div>\n        <ds-subgroups-list *ngIf=\"groupBeingEdited !== undefined\"\n                           [messagePrefix]=\"messagePrefix + '.subgroups-list'\"></ds-subgroups-list>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import {\n  AsyncPipe,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  ReactiveFormsModule,\n  UntypedFormBuilder,\n} from '@angular/forms';\nimport {\n  Router,\n  RouterLink,\n} from '@angular/router';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  map,\n  switchMap,\n  take,\n} from 'rxjs/operators';\n\nimport { DSONameService } from '../../../../core/breadcrumbs/dso-name.service';\nimport { PaginatedList } from '../../../../core/data/paginated-list.model';\nimport { RemoteData } from '../../../../core/data/remote-data';\nimport { GroupDataService } from '../../../../core/eperson/group-data.service';\nimport { Group } from '../../../../core/eperson/models/group.model';\nimport { PaginationService } from '../../../../core/pagination/pagination.service';\nimport { NoContent } from '../../../../core/shared/NoContent.model';\nimport {\n  getAllCompletedRemoteData,\n  getFirstCompletedRemoteData,\n} from '../../../../core/shared/operators';\nimport { PageInfo } from '../../../../core/shared/page-info.model';\nimport { ContextHelpDirective } from '../../../../shared/context-help.directive';\nimport { NotificationsService } from '../../../../shared/notifications/notifications.service';\nimport { PaginationComponent } from '../../../../shared/pagination/pagination.component';\nimport { PaginationComponentOptions } from '../../../../shared/pagination/pagination-component-options.model';\nimport { followLink } from '../../../../shared/utils/follow-link-config.model';\n\n/**\n * Keys to keep track of specific subscriptions\n */\nenum SubKey {\n  Members,\n  ActiveGroup,\n  SearchResults,\n}\n\n@Component({\n  selector: 'ds-subgroups-list',\n  templateUrl: './subgroups-list.component.html',\n  imports: [\n    RouterLink,\n    AsyncPipe,\n    NgForOf,\n    ContextHelpDirective,\n    TranslateModule,\n    ReactiveFormsModule,\n    PaginationComponent,\n    NgIf,\n  ],\n  standalone: true,\n})\n/**\n * The list of subgroups in the edit group page\n */\nexport class SubgroupsListComponent implements OnInit, OnDestroy {\n\n  @Input()\n  messagePrefix: string;\n\n  /**\n   * Result of search groups, initially all groups\n   */\n  searchResults$: BehaviorSubject<RemoteData<PaginatedList<Group>>> = new BehaviorSubject(undefined);\n  /**\n   * List of all subgroups of group being edited\n   */\n  subGroups$: BehaviorSubject<RemoteData<PaginatedList<Group>>> = new BehaviorSubject(undefined);\n\n  subGroupsPageInfoState$: Observable<PageInfo>;\n\n  /**\n   * Map of active subscriptions\n   */\n  subs: Map<SubKey, Subscription> = new Map();\n\n  /**\n   * Pagination config used to display the list of groups that are result of groups search\n   */\n  configSearch: PaginationComponentOptions = Object.assign(new PaginationComponentOptions(), {\n    id: 'ssgl',\n    pageSize: 5,\n    currentPage: 1,\n  });\n  /**\n   * Pagination config used to display the list of subgroups of currently active group being edited\n   */\n  config: PaginationComponentOptions = Object.assign(new PaginationComponentOptions(), {\n    id: 'sgl',\n    pageSize: 5,\n    currentPage: 1,\n  });\n\n  // The search form\n  searchForm;\n\n  // Current search in edit group - groups search form\n  currentSearchQuery: string;\n\n  // Whether or not user has done a Groups search yet\n  searchDone: boolean;\n\n  // current active group being edited\n  groupBeingEdited: Group;\n\n  constructor(public groupDataService: GroupDataService,\n              private translateService: TranslateService,\n              private notificationsService: NotificationsService,\n              private formBuilder: UntypedFormBuilder,\n              private paginationService: PaginationService,\n              private router: Router,\n              public dsoNameService: DSONameService,\n  ) {\n    this.currentSearchQuery = '';\n  }\n\n  ngOnInit() {\n    this.searchForm = this.formBuilder.group(({\n      query: '',\n    }));\n    this.subs.set(SubKey.ActiveGroup, this.groupDataService.getActiveGroup().subscribe((activeGroup: Group) => {\n      if (activeGroup != null) {\n        this.groupBeingEdited = activeGroup;\n        this.retrieveSubGroups();\n        this.search({ query: '' });\n      }\n    }));\n    this.subGroupsPageInfoState$ = this.subGroups$.pipe(\n      map(subGroupsRD => subGroupsRD?.payload?.pageInfo),\n    );\n  }\n\n  /**\n   * Retrieve the Subgroups that are members of the group\n   *\n   * @param page the number of the page to retrieve\n   * @private\n   */\n  private retrieveSubGroups() {\n    this.unsubFrom(SubKey.Members);\n    this.subs.set(\n      SubKey.Members,\n      this.paginationService.getCurrentPagination(this.config.id, this.config).pipe(\n        switchMap((config) => this.groupDataService.findListByHref(this.groupBeingEdited._links.subgroups.href, {\n          currentPage: config.currentPage,\n          elementsPerPage: config.pageSize,\n        },\n        true,\n        true,\n        followLink('object'),\n        )),\n      ).subscribe((rd: RemoteData<PaginatedList<Group>>) => {\n        this.subGroups$.next(rd);\n      }));\n  }\n\n  /**\n   * Deletes given subgroup from the group currently being edited\n   * @param subgroup  Group we want to delete from the subgroups of the group currently being edited\n   */\n  deleteSubgroupFromGroup(subgroup: Group) {\n    this.groupDataService.getActiveGroup().pipe(take(1)).subscribe((activeGroup: Group) => {\n      if (activeGroup != null) {\n        const response = this.groupDataService.deleteSubGroupFromGroup(activeGroup, subgroup);\n        this.showNotifications('deleteSubgroup', response, this.dsoNameService.getName(subgroup), activeGroup);\n        // Reload search results (if there is an active query).\n        // This will potentially add this deleted subgroup into the list of search results.\n        if (this.currentSearchQuery != null) {\n          this.search({ query: this.currentSearchQuery });\n        }\n      } else {\n        this.notificationsService.error(this.translateService.get(this.messagePrefix + '.notification.failure.noActiveGroup'));\n      }\n    });\n  }\n\n  /**\n   * Adds given subgroup to the group currently being edited\n   * @param subgroup  Subgroup to add to group currently being edited\n   */\n  addSubgroupToGroup(subgroup: Group) {\n    this.groupDataService.getActiveGroup().pipe(take(1)).subscribe((activeGroup: Group) => {\n      if (activeGroup != null) {\n        if (activeGroup.uuid !== subgroup.uuid) {\n          const response = this.groupDataService.addSubGroupToGroup(activeGroup, subgroup);\n          this.showNotifications('addSubgroup', response, this.dsoNameService.getName(subgroup), activeGroup);\n          // Reload search results (if there is an active query).\n          // This will potentially remove this added subgroup from search results.\n          if (this.currentSearchQuery != null) {\n            this.search({ query: this.currentSearchQuery });\n          }\n        } else {\n          this.notificationsService.error(this.translateService.get(this.messagePrefix + '.notification.failure.subgroupToAddIsActiveGroup'));\n        }\n      } else {\n        this.notificationsService.error(this.translateService.get(this.messagePrefix + '.notification.failure.noActiveGroup'));\n      }\n    });\n  }\n\n  /**\n   * Search all non-member groups (searches by group name and by uuid exact match).  Used to search for\n   * groups that could be added to current group as a subgroup.\n   * @param data  Contains query param\n   */\n  search(data: any) {\n    this.unsubFrom(SubKey.SearchResults);\n    this.subs.set(SubKey.SearchResults,\n      this.paginationService.getCurrentPagination(this.configSearch.id, this.configSearch).pipe(\n        switchMap((paginationOptions) => {\n          const query: string = data.query;\n          if (query != null && this.currentSearchQuery !== query && this.groupBeingEdited) {\n            this.currentSearchQuery = query;\n            this.paginationService.resetPage(this.configSearch.id);\n          }\n          this.searchDone = true;\n\n          return this.groupDataService.searchNonMemberGroups(this.currentSearchQuery, this.groupBeingEdited.id, {\n            currentPage: paginationOptions.currentPage,\n            elementsPerPage: paginationOptions.pageSize,\n          }, false, true, followLink('object'));\n        }),\n        getAllCompletedRemoteData(),\n        map((rd: RemoteData<any>) => {\n          if (rd.hasFailed) {\n            this.notificationsService.error(this.translateService.get(this.messagePrefix + '.notification.failure', { cause: rd.errorMessage }));\n          } else {\n            return rd;\n          }\n        }))\n        .subscribe((rd: RemoteData<PaginatedList<Group>>) => {\n          this.searchResults$.next(rd);\n        }));\n  }\n\n  /**\n   * Unsubscribe from a subscription if it's still subscribed, and remove it from the map of\n   * active subscriptions\n   *\n   * @param key The key of the subscription to unsubscribe from\n   * @private\n   */\n  private unsubFrom(key: SubKey) {\n    if (this.subs.has(key)) {\n      this.subs.get(key).unsubscribe();\n      this.subs.delete(key);\n    }\n  }\n\n  /**\n   * unsub all subscriptions\n   */\n  ngOnDestroy(): void {\n    for (const key of this.subs.keys()) {\n      this.unsubFrom(key);\n    }\n    this.paginationService.clearPagination(this.config.id);\n    this.paginationService.clearPagination(this.configSearch.id);\n  }\n\n  /**\n   * Shows a notification based on the success/failure of the request\n   * @param messageSuffix   Suffix for message\n   * @param response        RestResponse observable containing success/failure request\n   * @param nameObject      Object request was about\n   * @param activeGroup     Group currently being edited\n   */\n  showNotifications(messageSuffix: string, response: Observable<RemoteData<Group|NoContent>>, nameObject: string, activeGroup: Group) {\n    response.pipe(getFirstCompletedRemoteData()).subscribe((rd: RemoteData<Group>) => {\n      if (rd.hasSucceeded) {\n        this.notificationsService.success(this.translateService.get(this.messagePrefix + '.notification.success.' + messageSuffix, { name: nameObject }));\n        this.groupDataService.clearGroupLinkRequests(activeGroup._links.subgroups.href);\n      } else {\n        this.notificationsService.error(this.translateService.get(this.messagePrefix + '.notification.failure.' + messageSuffix, { name: nameObject }));\n      }\n    });\n  }\n\n  /**\n   * Reset all input-fields to be empty and search all search\n   */\n  clearFormAndResetResult() {\n    this.searchForm.patchValue({\n      query: '',\n    });\n    this.search({ query: '' });\n  }\n}\n","<ng-container>\n  <h3 class=\"border-bottom pb-2\">{{messagePrefix + '.head' | translate}}</h3>\n\n  <h4>{{messagePrefix + '.headSubgroups' | translate}}</h4>\n\n  <ds-pagination *ngIf=\"(subGroups$ | async)?.payload?.totalElements > 0\"\n                 [paginationOptions]=\"config\"\n                 [collectionSize]=\"(subGroups$ | async)?.payload?.totalElements\"\n                 [hideGear]=\"true\"\n                 [hidePagerWhenSinglePage]=\"true\">\n\n    <div class=\"table-responsive\">\n      <table id=\"subgroupsOfGroup\" class=\"table table-striped table-hover table-bordered\">\n        <thead>\n        <tr>\n          <th scope=\"col\" class=\"align-middle\">{{messagePrefix + '.table.id' | translate}}</th>\n          <th scope=\"col\" class=\"align-middle\">{{messagePrefix + '.table.name' | translate}}</th>\n          <th scope=\"col\" class=\"align-middle\">{{messagePrefix + '.table.collectionOrCommunity' | translate}}</th>\n          <th>{{messagePrefix + '.table.edit' | translate}}</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let group of (subGroups$ | async)?.payload?.page\">\n          <td class=\"align-middle\">{{group.id}}</td>\n          <td class=\"align-middle\">\n            <a (click)=\"groupDataService.startEditingNewGroup(group)\"\n               [routerLink]=\"[groupDataService.getGroupEditPageRouterLink(group)]\">\n            {{ dsoNameService.getName(group) }}\n          </a>\n          </td>\n          <td class=\"align-middle\">{{ dsoNameService.getName((group.object | async)?.payload)}}</td>\n          <td class=\"align-middle\">\n            <div class=\"btn-group edit-field\">\n              <button (click)=\"deleteSubgroupFromGroup(group)\"\n                      class=\"btn btn-outline-danger btn-sm deleteButton\"\n                      title=\"{{messagePrefix + '.table.edit.buttons.remove' | translate: { name: dsoNameService.getName(group) } }}\">\n                <i class=\"fas fa-trash-alt fa-fw\"></i>\n              </button>\n            </div>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </ds-pagination>\n\n  <div *ngIf=\"(subGroups$ | async)?.payload?.totalElements === 0\" class=\"alert alert-info w-100 mb-2\"\n       role=\"alert\">\n    {{messagePrefix + '.no-subgroups-yet' | translate}}\n  </div>\n\n  <h4 id=\"search\" class=\"border-bottom pb-2\">\n    <span *dsContextHelp=\"{\n            content: 'admin.access-control.groups.form.tooltip.editGroup.addSubgroups',\n            id: 'edit-group-add-subgroups',\n            iconPlacement: 'right',\n            tooltipPlacement: ['top', 'right', 'bottom']\n          }\"\n    >\n      {{messagePrefix + '.search.head' | translate}}\n    </span>\n\n  </h4>\n  <form [formGroup]=\"searchForm\" (ngSubmit)=\"search(searchForm.value)\" class=\"d-flex justify-content-between\">\n    <div class=\"flex-grow-1 mr-3\">\n      <div class=\"form-group input-group mr-3\">\n        <input type=\"text\" name=\"query\" id=\"query\" formControlName=\"query\"\n               class=\"form-control\" aria-label=\"Search input\">\n        <span class=\"input-group-append\">\n            <button type=\"submit\" class=\"search-button btn btn-primary\">\n              <i class=\"fas fa-search\"></i> {{ messagePrefix + '.search.button' | translate }}\n            </button>\n        </span>\n\n      </div>\n    </div>\n    <div>\n      <button (click)=\"clearFormAndResetResult();\" class=\"btn btn-secondary float-right\">\n        {{messagePrefix + '.button.see-all' | translate}}\n      </button>\n    </div>\n  </form>\n\n  <ds-pagination *ngIf=\"(searchResults$ | async)?.payload?.totalElements > 0\"\n                 [paginationOptions]=\"configSearch\"\n                 [collectionSize]=\"(searchResults$ | async)?.payload?.totalElements\"\n                 [hideGear]=\"true\"\n                 [hidePagerWhenSinglePage]=\"true\">\n\n    <div class=\"table-responsive\">\n      <table id=\"groupsSearch\" class=\"table table-striped table-hover table-bordered\">\n        <thead>\n        <tr>\n          <th scope=\"col\" class=\"align-middle\">{{messagePrefix + '.table.id' | translate}}</th>\n          <th scope=\"col\" class=\"align-middle\">{{messagePrefix + '.table.name' | translate}}</th>\n          <th scope=\"col\" class=\"align-middle\">{{messagePrefix + '.table.collectionOrCommunity' | translate}}</th>\n          <th class=\"align-middle\">{{messagePrefix + '.table.edit' | translate}}</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let group of (searchResults$ | async)?.payload?.page\">\n          <td class=\"align-middle\">{{group.id}}</td>\n          <td class=\"align-middle\">\n            <a (click)=\"groupDataService.startEditingNewGroup(group)\"\n               [routerLink]=\"[groupDataService.getGroupEditPageRouterLink(group)]\">\n              {{ dsoNameService.getName(group) }}\n            </a>\n          </td>\n          <td class=\"align-middle\">{{ dsoNameService.getName((group.object | async)?.payload) }}</td>\n          <td class=\"align-middle\">\n            <div class=\"btn-group edit-field\">\n              <button (click)=\"addSubgroupToGroup(group)\"\n                      class=\"btn btn-outline-primary btn-sm addButton\"\n                      title=\"{{messagePrefix + '.table.edit.buttons.add' | translate: { name: dsoNameService.getName(group) } }}\">\n                <i class=\"fas fa-plus fa-fw\"></i>\n              </button>\n            </div>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </ds-pagination>\n\n  <div *ngIf=\"(searchResults$ | async)?.payload?.totalElements === 0 && searchDone\" class=\"alert alert-info w-100 mb-2\"\n       role=\"alert\">\n    {{messagePrefix + '.no-items' | translate}}\n  </div>\n\n</ng-container>\n","import {\n  AbstractControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { GroupDataService } from '../../../../core/eperson/group-data.service';\nimport { Group } from '../../../../core/eperson/models/group.model';\nimport { getFirstSucceededRemoteListPayload } from '../../../../core/shared/operators';\n\nexport class ValidateGroupExists {\n\n  /**\n   * This method will create the validator with the groupDataService requested from component\n   * @param groupDataService the service with DI in the component that this validator is being utilized.\n   * @return Observable<ValidationErrors | null>\n   */\n  static createValidator(groupDataService: GroupDataService) {\n    return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n      return groupDataService.searchGroups(control.value, {\n        currentPage: 1,\n        elementsPerPage: 100,\n      })\n        .pipe(\n          getFirstSucceededRemoteListPayload(),\n          map( (groups: Group[]) => {\n            return groups.filter(group => group.name === control.value);\n          }),\n          map( (groups: Group[]) => {\n            return groups.length > 0 ? { groupExists: true } : null;\n          }),\n        );\n    };\n  }\n}\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivateFn,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n  someFeatureAuthorizationGuard,\n  StringGuardParamFn,\n} from '../../core/data/feature-authorization/feature-authorization-guard/some-feature-authorization.guard';\nimport { FeatureID } from '../../core/data/feature-authorization/feature-id';\nimport { HALEndpointService } from '../../core/shared/hal-endpoint.service';\n\nconst defaultGroupPageGetObjectUrl: StringGuardParamFn = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n): Observable<string> => {\n  const halEndpointService = inject(HALEndpointService);\n  const groupsEndpoint = 'groups';\n\n  return halEndpointService.getEndpoint(groupsEndpoint).pipe(\n    map(groupsUrl => `${groupsUrl}/${route?.params?.groupId}`),\n  );\n};\n\nexport const groupPageGuard = (\n  getObjectUrl = defaultGroupPageGetObjectUrl,\n  getEPersonUuid?: StringGuardParamFn,\n): CanActivateFn => someFeatureAuthorizationGuard(\n  () => observableOf([FeatureID.CanManageGroup]),\n  getObjectUrl,\n  getEPersonUuid);\n","import {\n  AsyncPipe,\n  NgForOf,\n  NgIf,\n  NgSwitch,\n  NgSwitchCase,\n} from '@angular/common';\nimport {\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  ReactiveFormsModule,\n  UntypedFormBuilder,\n} from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  combineLatest as observableCombineLatest,\n  EMPTY,\n  Observable,\n  of as observableOf,\n  Subscription,\n} from 'rxjs';\nimport {\n  catchError,\n  defaultIfEmpty,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\n\nimport { DSONameService } from '../../core/breadcrumbs/dso-name.service';\nimport { DSpaceObjectDataService } from '../../core/data/dspace-object-data.service';\nimport { AuthorizationDataService } from '../../core/data/feature-authorization/authorization-data.service';\nimport { FeatureID } from '../../core/data/feature-authorization/feature-id';\nimport {\n  buildPaginatedList,\n  PaginatedList,\n} from '../../core/data/paginated-list.model';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { RequestService } from '../../core/data/request.service';\nimport { EPersonDataService } from '../../core/eperson/eperson-data.service';\nimport { GroupDataService } from '../../core/eperson/group-data.service';\nimport { EPerson } from '../../core/eperson/models/eperson.model';\nimport { Group } from '../../core/eperson/models/group.model';\nimport { GroupDtoModel } from '../../core/eperson/models/group-dto.model';\nimport { PaginationService } from '../../core/pagination/pagination.service';\nimport { RouteService } from '../../core/services/route.service';\nimport { DSpaceObject } from '../../core/shared/dspace-object.model';\nimport { NoContent } from '../../core/shared/NoContent.model';\nimport {\n  getAllSucceededRemoteData,\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteData,\n  getRemoteDataPayload,\n} from '../../core/shared/operators';\nimport { PageInfo } from '../../core/shared/page-info.model';\nimport { BtnDisabledDirective } from '../../shared/btn-disabled.directive';\nimport { hasValue } from '../../shared/empty.util';\nimport { ThemedLoadingComponent } from '../../shared/loading/themed-loading.component';\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\nimport { PaginationComponent } from '../../shared/pagination/pagination.component';\nimport { PaginationComponentOptions } from '../../shared/pagination/pagination-component-options.model';\nimport { followLink } from '../../shared/utils/follow-link-config.model';\n\n@Component({\n  selector: 'ds-groups-registry',\n  templateUrl: './groups-registry.component.html',\n  imports: [\n    ThemedLoadingComponent,\n    TranslateModule,\n    RouterLink,\n    ReactiveFormsModule,\n    AsyncPipe,\n    NgIf,\n    PaginationComponent,\n    NgSwitch,\n    NgSwitchCase,\n    NgbTooltipModule,\n    NgForOf,\n    BtnDisabledDirective,\n  ],\n  standalone: true,\n})\n/**\n * A component used for managing all existing groups within the repository.\n * The admin can create, edit or delete groups here.\n */\nexport class GroupsRegistryComponent implements OnInit, OnDestroy {\n\n  messagePrefix = 'admin.access-control.groups.';\n\n  /**\n   * Pagination config used to display the list of groups\n   */\n  config: PaginationComponentOptions = Object.assign(new PaginationComponentOptions(), {\n    id: 'gl',\n    pageSize: 5,\n    currentPage: 1,\n  });\n\n  /**\n   * A BehaviorSubject with the list of GroupDtoModel objects made from the Groups in the repository or\n   * as the result of the search\n   */\n  groupsDto$: BehaviorSubject<PaginatedList<GroupDtoModel>> = new BehaviorSubject<PaginatedList<GroupDtoModel>>({} as any);\n  deletedGroupsIds: string[] = [];\n\n  /**\n   * An observable for the pageInfo, needed to pass to the pagination component\n   */\n  pageInfoState$: BehaviorSubject<PageInfo> = new BehaviorSubject<PageInfo>(undefined);\n\n  // The search form\n  searchForm;\n\n  /**\n   * A boolean representing if a search is pending\n   */\n  loading$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  // Current search in groups registry\n  currentSearchQuery: string;\n\n  /**\n   * The subscription for the search method\n   */\n  searchSub: Subscription;\n\n  paginationSub: Subscription;\n\n  /**\n   * List of subscriptions\n   */\n  subs: Subscription[] = [];\n\n  constructor(public groupService: GroupDataService,\n              private ePersonDataService: EPersonDataService,\n              private dSpaceObjectDataService: DSpaceObjectDataService,\n              private translateService: TranslateService,\n              private notificationsService: NotificationsService,\n              private formBuilder: UntypedFormBuilder,\n              protected routeService: RouteService,\n              private authorizationService: AuthorizationDataService,\n              private paginationService: PaginationService,\n              public requestService: RequestService,\n              public dsoNameService: DSONameService,\n  ) {\n    this.currentSearchQuery = '';\n    this.searchForm = this.formBuilder.group(({\n      query: this.currentSearchQuery,\n    }));\n  }\n\n  ngOnInit() {\n    this.search({ query: this.currentSearchQuery });\n  }\n\n  /**\n   * Search in the groups (searches by group name and by uuid exact match)\n   * @param data  Contains query param\n   */\n  search(data: any) {\n    if (hasValue(this.searchSub)) {\n      this.searchSub.unsubscribe();\n      this.subs = this.subs.filter((sub: Subscription) => sub !== this.searchSub);\n    }\n    this.searchSub = this.paginationService.getCurrentPagination(this.config.id, this.config).pipe(\n      tap(() => this.loading$.next(true)),\n      switchMap((paginationOptions) => {\n        const query: string = data.query;\n        if (query != null && this.currentSearchQuery !== query) {\n          this.currentSearchQuery = query;\n          this.paginationService.updateRouteWithUrl(this.config.id, [], { page: 1 });\n        }\n        return this.groupService.searchGroups(this.currentSearchQuery.trim(), {\n          currentPage: paginationOptions.currentPage,\n          elementsPerPage: paginationOptions.pageSize,\n        }, true, true, followLink('object'));\n      }),\n      getAllSucceededRemoteData(),\n      getRemoteDataPayload(),\n      switchMap((groups: PaginatedList<Group>) => {\n        if (groups.page.length === 0) {\n          return observableOf(buildPaginatedList(groups.pageInfo, []));\n        }\n        return this.authorizationService.isAuthorized(FeatureID.AdministratorOf).pipe(\n          switchMap((isSiteAdmin: boolean) => {\n            return observableCombineLatest([...groups.page.map((group: Group) => {\n              if (hasValue(group) && !this.deletedGroupsIds.includes(group.id)) {\n                return observableCombineLatest([\n                  this.authorizationService.isAuthorized(FeatureID.CanDelete, group.self),\n                  this.canManageGroup$(isSiteAdmin, group),\n                  this.hasLinkedDSO(group),\n                  this.getSubgroups(group),\n                  this.getMembers(group),\n                ]).pipe(\n                  map(([canDelete, canManageGroup, hasLinkedDSO, subgroups, members]:\n                         [boolean, boolean, boolean, RemoteData<PaginatedList<Group>>, RemoteData<PaginatedList<EPerson>>]) => {\n                    const groupDtoModel: GroupDtoModel = new GroupDtoModel();\n                    groupDtoModel.ableToDelete = canDelete && !hasLinkedDSO;\n                    groupDtoModel.ableToEdit = canManageGroup;\n                    groupDtoModel.group = group;\n                    groupDtoModel.subgroups = subgroups.payload;\n                    groupDtoModel.epersons = members.payload;\n                    return groupDtoModel;\n                  },\n                  ),\n                );\n              } else {\n                return EMPTY;\n              }\n            })]).pipe(defaultIfEmpty([]), map((dtos: GroupDtoModel[]) => {\n              return buildPaginatedList(groups.pageInfo, dtos);\n            }));\n          }),\n        );\n      }),\n    ).subscribe((value: PaginatedList<GroupDtoModel>) => {\n      this.groupsDto$.next(value);\n      this.pageInfoState$.next(value.pageInfo);\n      this.loading$.next(false);\n    });\n\n    this.subs.push(this.searchSub);\n  }\n\n  canManageGroup$(isSiteAdmin: boolean, group: Group): Observable<boolean> {\n    if (isSiteAdmin) {\n      return observableOf(true);\n    } else {\n      return this.authorizationService.isAuthorized(FeatureID.CanManageGroup, group.self);\n    }\n  }\n\n  /**\n   * Delete Group\n   */\n  deleteGroup(group: GroupDtoModel) {\n    if (hasValue(group.group.id)) {\n      this.groupService.delete(group.group.id).pipe(getFirstCompletedRemoteData())\n        .subscribe((rd: RemoteData<NoContent>) => {\n          if (rd.hasSucceeded) {\n            this.deletedGroupsIds = [...this.deletedGroupsIds, group.group.id];\n            this.notificationsService.success(this.translateService.get(this.messagePrefix + 'notification.deleted.success', { name: this.dsoNameService.getName(group.group) }));\n          } else {\n            this.notificationsService.error(\n              this.translateService.get(this.messagePrefix + 'notification.deleted.failure.title', { name: this.dsoNameService.getName(group.group) }),\n              this.translateService.get(this.messagePrefix + 'notification.deleted.failure.content', { cause: rd.errorMessage }));\n          }\n        });\n    }\n  }\n\n  /**\n   * Get the members (epersons embedded value of a group)\n   * NOTE: At this time we only grab the *first* member in order to receive the `totalElements` value\n   * needed for our HTML template.\n   * @param group\n   */\n  getMembers(group: Group): Observable<RemoteData<PaginatedList<EPerson>>> {\n    return this.ePersonDataService.findListByHref(group._links.epersons.href, {\n      currentPage: 1,\n      elementsPerPage: 1,\n    }).pipe(getFirstSucceededRemoteData());\n  }\n\n  /**\n   * Get the subgroups (groups embedded value of a group)\n   * NOTE: At this time we only grab the *first* subgroup in order to receive the `totalElements` value\n   * needed for our HTML template.\n   * @param group\n   */\n  getSubgroups(group: Group): Observable<RemoteData<PaginatedList<Group>>> {\n    return this.groupService.findListByHref(group._links.subgroups.href, {\n      currentPage: 1,\n      elementsPerPage: 1,\n    }).pipe(getFirstSucceededRemoteData());\n  }\n\n  /**\n   * Check if group has a linked object (community or collection linked to a workflow group)\n   * @param group\n   */\n  hasLinkedDSO(group: Group): Observable<boolean> {\n    return this.dSpaceObjectDataService.findByHref(group._links.object.href).pipe(\n      getFirstSucceededRemoteData(),\n      map((rd: RemoteData<DSpaceObject>) => hasValue(rd) && hasValue(rd.payload)),\n      catchError(() => observableOf(false)),\n    );\n  }\n\n  /**\n   * Reset all input-fields to be empty and search all search\n   */\n  clearFormAndResetResult() {\n    this.searchForm.patchValue({\n      query: '',\n    });\n    this.search({ query: '' });\n  }\n\n  /**\n   * Unsub all subscriptions\n   */\n  ngOnDestroy(): void {\n    this.cleanupSubscribes();\n    this.paginationService.clearPagination(this.config.id);\n  }\n\n\n  cleanupSubscribes() {\n    if (hasValue(this.paginationSub)) {\n      this.paginationSub.unsubscribe();\n    }\n    this.subs.filter((sub) => hasValue(sub)).forEach((sub) => sub.unsubscribe());\n    this.paginationService.clearPagination(this.config.id);\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"groups-registry row\">\n    <div class=\"col-12\">\n      <div class=\"d-flex justify-content-between border-bottom mb-3\">\n        <h1 id=\"header\" class=\"pb-2\">{{messagePrefix + 'head' | translate}}</h1>\n        <div>\n          <button class=\"mr-auto btn btn-success\"\n                  [routerLink]=\"'create'\">\n            <i class=\"fas fa-plus\"></i>\n            <span class=\"d-none d-sm-inline ml-1\">{{messagePrefix + 'button.add' | translate}}</span>\n          </button>\n        </div>\n      </div>\n\n      <h2 id=\"search\" class=\"border-bottom pb-2\">{{messagePrefix + 'search.head' | translate}}</h2>\n      <form [formGroup]=\"searchForm\" (ngSubmit)=\"search(searchForm.value)\" class=\"d-flex justify-content-between\">\n        <div class=\"flex-grow-1 mr-3\">\n          <div class=\"form-group input-group\">\n            <input type=\"text\" name=\"query\" id=\"query\" formControlName=\"query\"\n                   class=\"form-control\" [attr.aria-label]=\"messagePrefix + 'search.placeholder' | translate\"\n                   [placeholder]=\"(messagePrefix + 'search.placeholder' | translate)\" >\n            <span class=\"input-group-append\">\n              <button type=\"submit\" class=\"search-button btn btn-primary\">\n                <i class=\"fas fa-search\"></i> {{ messagePrefix + 'search.button' | translate }}\n              </button>\n            </span>\n          </div>\n        </div>\n        <div>\n          <button (click)=\"clearFormAndResetResult();\" class=\"btn btn-secondary\">\n            {{messagePrefix + 'button.see-all' | translate}}\n          </button>\n        </div>\n      </form>\n\n      <ds-loading *ngIf=\"loading$ | async\"></ds-loading>\n      <ds-pagination\n        *ngIf=\"(pageInfoState$ | async)?.totalElements > 0 && (loading$ | async) !== true\"\n        [paginationOptions]=\"config\"\n        [collectionSize]=\"(pageInfoState$ | async)?.totalElements\"\n        [hideGear]=\"true\"\n        [hidePagerWhenSinglePage]=\"true\">\n\n        <div  class=\"table-responsive\">\n          <table id=\"groups\" class=\"table table-striped table-hover table-bordered\">\n            <thead>\n            <tr>\n              <th scope=\"col\">{{messagePrefix + 'table.id' | translate}}</th>\n              <th scope=\"col\">{{messagePrefix + 'table.name' | translate}}</th>\n              <th scope=\"col\">{{messagePrefix + 'table.collectionOrCommunity' | translate}}</th>\n              <th scope=\"col\">{{messagePrefix + 'table.members' | translate}}</th>\n              <th>{{messagePrefix + 'table.edit' | translate}}</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let groupDto of (groupsDto$ | async)?.page\">\n              <td>{{groupDto.group.id}}</td>\n              <td>{{ dsoNameService.getName(groupDto.group) }}</td>\n              <td>{{ dsoNameService.getName((groupDto.group.object | async)?.payload) }}</td>\n              <td>{{groupDto.epersons?.totalElements + groupDto.subgroups?.totalElements}}</td>\n              <td>\n                <div class=\"btn-group edit-field\">\n                  <ng-container [ngSwitch]=\"groupDto.ableToEdit\">\n                    <button *ngSwitchCase=\"true\"\n                      [routerLink]=\"groupService.getGroupEditPageRouterLink(groupDto.group)\"\n                      class=\"btn btn-outline-primary btn-sm btn-edit\"\n                      title=\"{{messagePrefix + 'table.edit.buttons.edit' | translate: {name: dsoNameService.getName(groupDto.group) } }}\"\n                    >\n                      <i class=\"fas fa-edit fa-fw\"></i>\n                    </button>\n                    <button *ngSwitchCase=\"false\"\n                      [dsBtnDisabled]=\"true\"\n                      class=\"btn btn-outline-primary btn-sm btn-edit\"\n                      placement=\"left\"\n                      [ngbTooltip]=\"'admin.access-control.epeople.table.edit.buttons.edit-disabled' | translate\"\n                    >\n                      <i class=\"fas fa-edit fa-fw\"></i>\n                    </button>\n                  </ng-container>\n                  <button *ngIf=\"!groupDto.group?.permanent && groupDto.ableToDelete\"\n                          (click)=\"deleteGroup(groupDto)\" class=\"btn btn-outline-danger btn-sm btn-delete\"\n                          title=\"{{messagePrefix + 'table.edit.buttons.remove' | translate: {name: dsoNameService.getName(groupDto.group) } }}\">\n                    <i class=\"fas fa-trash-alt fa-fw\"></i>\n                  </button>\n                </div>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n      </ds-pagination>\n\n      <div *ngIf=\"(pageInfoState$ | async)?.totalElements === 0\" class=\"alert alert-info w-100 mb-2\" role=\"alert\">\n        {{messagePrefix + 'no-items' | translate}}\n      </div>\n\n    </div>\n  </div>\n</div>\n","/**\n * Class representing a single breadcrumb\n */\nexport class Breadcrumb {\n  constructor(\n    /**\n     * The display value of the breadcrumb\n     */\n    public text: string,\n    /**\n     * The optional url of the breadcrumb\n     */\n    public url?: string) {\n  }\n}\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { BreadcrumbConfig } from '../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { hasNoValue } from '../../shared/empty.util';\nimport { currentPathFromSnapshot } from '../../shared/utils/route.utils';\nimport { I18nBreadcrumbsService } from './i18n-breadcrumbs.service';\n\n/**\n * Method for resolving an I18n breadcrumb configuration object\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {I18nBreadcrumbsService} breadcrumbService\n * @returns BreadcrumbConfig object\n */\nexport const i18nBreadcrumbResolver: ResolveFn<BreadcrumbConfig<string>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  breadcrumbService: I18nBreadcrumbsService = inject(I18nBreadcrumbsService),\n): BreadcrumbConfig<string> => {\n  const key = route.data.breadcrumbKey;\n  if (hasNoValue(key)) {\n    throw new Error('You provided an i18nBreadcrumbResolver for url \\\"' + route.url + '\\\" but no breadcrumbKey in the route\\'s data');\n  }\n  const fullPath = currentPathFromSnapshot(route);\n  return { provider: breadcrumbService, key: key, url: fullPath };\n};\n","import { Injectable } from '@angular/core';\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs';\n\nimport { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport { BreadcrumbsProviderService } from './breadcrumbsProviderService';\n\n/**\n * The postfix for i18n breadcrumbs\n */\nexport const BREADCRUMB_MESSAGE_POSTFIX = '.breadcrumbs';\n\n/**\n * Service to calculate i18n breadcrumbs for a single part of the route\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class I18nBreadcrumbsService implements BreadcrumbsProviderService<string> {\n\n  /**\n   * Method to calculate the breadcrumbs\n   * @param key The key used to resolve the breadcrumb\n   * @param url The url to use as a link for this breadcrumb\n   */\n  getBreadcrumbs(key: string, url: string): Observable<Breadcrumb[]> {\n    return observableOf([new Breadcrumb(key + BREADCRUMB_MESSAGE_POSTFIX, url)]);\n  }\n}\n","import { PaginatedList } from '../../data/paginated-list.model';\nimport { EPerson } from './eperson.model';\nimport { Group } from './group.model';\n\n/**\n * This class serves as a Data Transfer Model that contains the Group, whether or not it's able to be deleted and its members\n */\nexport class GroupDtoModel {\n\n  /**\n   * The Group linked to this object\n   */\n  public group: Group;\n\n  /**\n   * Whether or not the linked Group is able to be deleted\n   */\n  public ableToDelete: boolean;\n\n  /**\n   * Whether or not the current user is able to edit the linked group\n   */\n  public ableToEdit: boolean;\n\n  /**\n   * List of subgroups of this group\n   */\n  public subgroups: PaginatedList<Group>;\n\n  /**\n   * List of members of this group\n   */\n  public epersons: PaginatedList<EPerson>;\n\n}\n","import { Action } from '@ngrx/store';\n\nimport { type } from '../../shared/ngrx/type';\nimport { DSpaceObject } from '../shared/dspace-object.model';\n\nexport const ResolverActionTypes = {\n  RESOLVED: type('dspace/resolver/RESOLVED'),\n};\n\n/**\n * An action that indicates a route object has been resolved.\n *\n * It isn't used in a reducer for now. Its purpose is to be able to be notified that an object\n * has been resolved in an effect.\n */\nexport class ResolvedAction implements Action {\n  type = ResolverActionTypes.RESOLVED;\n  payload: {\n    url: string,\n    dso: DSpaceObject\n  };\n\n  constructor(url: string, dso: DSpaceObject) {\n    this.payload = { url, dso };\n  }\n}\n\nexport type ResolverAction = ResolvedAction;\n","import {\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\n\nimport { hasNoValue } from '../empty.util';\n\n/**\n * Returns true if the passed value is null or undefined.\n */\n@Pipe({ standalone: true, name: 'dsHasNoValue' })\nexport class HasNoValuePipe implements PipeTransform {\n  transform(value: any): boolean {\n    return hasNoValue(value);\n  }\n}\n","import * as i0 from '@angular/core';\nimport { EventEmitter, Pipe, Directive, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass PaginationService {\r\n    constructor() {\r\n        this.change = new EventEmitter();\r\n        this.instances = {};\r\n        this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';\r\n    }\r\n    defaultId() { return this.DEFAULT_ID; }\r\n    /**\r\n     * Register a PaginationInstance with this service. Returns a\r\n     * boolean value signifying whether the instance is new or\r\n     * updated (true = new or updated, false = unchanged).\r\n     */\r\n    register(instance) {\r\n        if (instance.id == null) {\r\n            instance.id = this.DEFAULT_ID;\r\n        }\r\n        if (!this.instances[instance.id]) {\r\n            this.instances[instance.id] = instance;\r\n            return true;\r\n        }\r\n        else {\r\n            return this.updateInstance(instance);\r\n        }\r\n    }\r\n    /**\r\n     * Check each property of the instance and update any that have changed. Return\r\n     * true if any changes were made, else return false.\r\n     */\r\n    updateInstance(instance) {\r\n        let changed = false;\r\n        for (let prop in this.instances[instance.id]) {\r\n            if (instance[prop] !== this.instances[instance.id][prop]) {\r\n                this.instances[instance.id][prop] = instance[prop];\r\n                changed = true;\r\n            }\r\n        }\r\n        return changed;\r\n    }\r\n    /**\r\n     * Returns the current page number.\r\n     */\r\n    getCurrentPage(id) {\r\n        if (this.instances[id]) {\r\n            return this.instances[id].currentPage;\r\n        }\r\n        return 1;\r\n    }\r\n    /**\r\n     * Sets the current page number.\r\n     */\r\n    setCurrentPage(id, page) {\r\n        if (this.instances[id]) {\r\n            let instance = this.instances[id];\r\n            let maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n            if (page <= maxPage && 1 <= page) {\r\n                this.instances[id].currentPage = page;\r\n                this.change.emit(id);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Sets the value of instance.totalItems\r\n     */\r\n    setTotalItems(id, totalItems) {\r\n        if (this.instances[id] && 0 <= totalItems) {\r\n            this.instances[id].totalItems = totalItems;\r\n            this.change.emit(id);\r\n        }\r\n    }\r\n    /**\r\n     * Sets the value of instance.itemsPerPage.\r\n     */\r\n    setItemsPerPage(id, itemsPerPage) {\r\n        if (this.instances[id]) {\r\n            this.instances[id].itemsPerPage = itemsPerPage;\r\n            this.change.emit(id);\r\n        }\r\n    }\r\n    /**\r\n     * Returns a clone of the pagination instance object matching the id. If no\r\n     * id specified, returns the instance corresponding to the default id.\r\n     */\r\n    getInstance(id = this.DEFAULT_ID) {\r\n        if (this.instances[id]) {\r\n            return this.clone(this.instances[id]);\r\n        }\r\n        return {};\r\n    }\r\n    /**\r\n     * Perform a shallow clone of an object.\r\n     */\r\n    clone(obj) {\r\n        var target = {};\r\n        for (var i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                target[i] = obj[i];\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n}\n\nconst LARGE_NUMBER = Number.MAX_SAFE_INTEGER;\r\nclass PaginatePipe {\r\n    constructor(service) {\r\n        this.service = service;\r\n        // store the values from the last time the pipe was invoked\r\n        this.state = {};\r\n    }\r\n    transform(collection, args) {\r\n        // When an observable is passed through the AsyncPipe, it will output\r\n        // `null` until the subscription resolves. In this case, we want to\r\n        // use the cached data from the `state` object to prevent the NgFor\r\n        // from flashing empty until the real values arrive.\r\n        if (!(collection instanceof Array)) {\r\n            let _id = args.id || this.service.defaultId();\r\n            if (this.state[_id]) {\r\n                return this.state[_id].slice;\r\n            }\r\n            else {\r\n                return collection;\r\n            }\r\n        }\r\n        let serverSideMode = args.totalItems && args.totalItems !== collection.length;\r\n        let instance = this.createInstance(collection, args);\r\n        let id = instance.id;\r\n        let start, end;\r\n        let perPage = instance.itemsPerPage;\r\n        let emitChange = this.service.register(instance);\r\n        if (!serverSideMode && collection instanceof Array) {\r\n            perPage = +perPage || LARGE_NUMBER;\r\n            start = (instance.currentPage - 1) * perPage;\r\n            end = start + perPage;\r\n            let isIdentical = this.stateIsIdentical(id, collection, start, end);\r\n            if (isIdentical) {\r\n                return this.state[id].slice;\r\n            }\r\n            else {\r\n                let slice = collection.slice(start, end);\r\n                this.saveState(id, collection, slice, start, end);\r\n                this.service.change.emit(id);\r\n                return slice;\r\n            }\r\n        }\r\n        else {\r\n            if (emitChange) {\r\n                this.service.change.emit(id);\r\n            }\r\n            // save the state for server-side collection to avoid null\r\n            // flash as new data loads.\r\n            this.saveState(id, collection, collection, start, end);\r\n            return collection;\r\n        }\r\n    }\r\n    /**\r\n     * Create an PaginationInstance object, using defaults for any optional properties not supplied.\r\n     */\r\n    createInstance(collection, config) {\r\n        this.checkConfig(config);\r\n        return {\r\n            id: config.id != null ? config.id : this.service.defaultId(),\r\n            itemsPerPage: +config.itemsPerPage || 0,\r\n            currentPage: +config.currentPage || 1,\r\n            totalItems: +config.totalItems || collection.length\r\n        };\r\n    }\r\n    /**\r\n     * Ensure the argument passed to the filter contains the required properties.\r\n     */\r\n    checkConfig(config) {\r\n        const required = ['itemsPerPage', 'currentPage'];\r\n        const missing = required.filter(prop => !(prop in config));\r\n        if (0 < missing.length) {\r\n            throw new Error(`PaginatePipe: Argument is missing the following required properties: ${missing.join(', ')}`);\r\n        }\r\n    }\r\n    /**\r\n     * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced\r\n     * array for a given id. This means that the next time the pipe is run on this collection & id, we just\r\n     * need to check that the collection, start and end points are all identical, and if so, return the\r\n     * last sliced array.\r\n     */\r\n    saveState(id, collection, slice, start, end) {\r\n        this.state[id] = {\r\n            collection,\r\n            size: collection.length,\r\n            slice,\r\n            start,\r\n            end\r\n        };\r\n    }\r\n    /**\r\n     * For a given id, returns true if the collection, size, start and end values are identical.\r\n     */\r\n    stateIsIdentical(id, collection, start, end) {\r\n        let state = this.state[id];\r\n        if (!state) {\r\n            return false;\r\n        }\r\n        let isMetaDataIdentical = state.size === collection.length &&\r\n            state.start === start &&\r\n            state.end === end;\r\n        if (!isMetaDataIdentical) {\r\n            return false;\r\n        }\r\n        return state.slice.every((element, index) => element === collection[start + index]);\r\n    }\r\n}\r\nPaginatePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: PaginatePipe, deps: [{ token: PaginationService }], target: i0.ɵɵFactoryTarget.Pipe });\r\nPaginatePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: PaginatePipe, name: \"paginate\", pure: false });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: PaginatePipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'paginate',\r\n                    pure: false\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: PaginationService }]; } });\n\n/**\r\n * The default template and styles for the pagination links are borrowed directly\r\n * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html\r\n */\r\nconst DEFAULT_TEMPLATE = `\r\n    <pagination-template  #p=\"paginationApi\"\r\n                         [id]=\"id\"\r\n                         [maxSize]=\"maxSize\"\r\n                         (pageChange)=\"pageChange.emit($event)\"\r\n                         (pageBoundsCorrection)=\"pageBoundsCorrection.emit($event)\">\r\n    <nav role=\"navigation\" [attr.aria-label]=\"screenReaderPaginationLabel\">\r\n    <ul class=\"ngx-pagination\" \r\n        [class.responsive]=\"responsive\"\r\n        *ngIf=\"!(autoHide && p.pages.length <= 1)\">\r\n\r\n        <li class=\"pagination-previous\" [class.disabled]=\"p.isFirstPage()\" *ngIf=\"directionLinks\"> \r\n            <a tabindex=\"0\" *ngIf=\"1 < p.getCurrent()\" (keyup.enter)=\"p.previous()\" (click)=\"p.previous()\">\r\n                {{ previousLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\r\n            </a>\r\n            <span *ngIf=\"p.isFirstPage()\" aria-disabled=\"true\">\r\n                {{ previousLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\r\n            </span>\r\n        </li> \r\n\r\n        <li class=\"small-screen\">\r\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\r\n        </li>\r\n\r\n        <li [class.current]=\"p.getCurrent() === page.value\" \r\n            [class.ellipsis]=\"page.label === '...'\"\r\n            *ngFor=\"let page of p.pages; trackBy: trackByIndex\">\r\n            <a tabindex=\"0\" (keyup.enter)=\"p.setCurrent(page.value)\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">\r\n                <span class=\"show-for-sr\">{{ screenReaderPageLabel }} </span>\r\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span>\r\n            </a>\r\n            <ng-container *ngIf=\"p.getCurrent() === page.value\">\r\n              <span aria-live=\"polite\">\r\n                <span class=\"show-for-sr\">{{ screenReaderCurrentLabel }} </span>\r\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span> \r\n              </span>\r\n            </ng-container>\r\n        </li>\r\n\r\n        <li class=\"pagination-next\" [class.disabled]=\"p.isLastPage()\" *ngIf=\"directionLinks\">\r\n            <a tabindex=\"0\" *ngIf=\"!p.isLastPage()\" (keyup.enter)=\"p.next()\" (click)=\"p.next()\">\r\n                 {{ nextLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\r\n            </a>\r\n            <span *ngIf=\"p.isLastPage()\" aria-disabled=\"true\">\r\n                 {{ nextLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\r\n            </span>\r\n        </li>\r\n\r\n    </ul>\r\n    </nav>\r\n    </pagination-template>\r\n    `;\r\nconst DEFAULT_STYLES = `\r\n.ngx-pagination {\r\n  margin-left: 0;\r\n  margin-bottom: 1rem; }\r\n  .ngx-pagination::before, .ngx-pagination::after {\r\n    content: ' ';\r\n    display: table; }\r\n  .ngx-pagination::after {\r\n    clear: both; }\r\n  .ngx-pagination li {\r\n    -moz-user-select: none;\r\n    -webkit-user-select: none;\r\n    -ms-user-select: none;\r\n    margin-right: 0.0625rem;\r\n    border-radius: 0; }\r\n  .ngx-pagination li {\r\n    display: inline-block; }\r\n  .ngx-pagination a,\r\n  .ngx-pagination button {\r\n    color: #0a0a0a; \r\n    display: block;\r\n    padding: 0.1875rem 0.625rem;\r\n    border-radius: 0; }\r\n    .ngx-pagination a:hover,\r\n    .ngx-pagination button:hover {\r\n      background: #e6e6e6; }\r\n  .ngx-pagination .current {\r\n    padding: 0.1875rem 0.625rem;\r\n    background: #2199e8;\r\n    color: #fefefe;\r\n    cursor: default; }\r\n  .ngx-pagination .disabled {\r\n    padding: 0.1875rem 0.625rem;\r\n    color: #cacaca;\r\n    cursor: default; } \r\n    .ngx-pagination .disabled:hover {\r\n      background: transparent; }\r\n  .ngx-pagination a, .ngx-pagination button {\r\n    cursor: pointer; }\r\n\r\n.ngx-pagination .pagination-previous a::before,\r\n.ngx-pagination .pagination-previous.disabled::before { \r\n  content: '«';\r\n  display: inline-block;\r\n  margin-right: 0.5rem; }\r\n\r\n.ngx-pagination .pagination-next a::after,\r\n.ngx-pagination .pagination-next.disabled::after {\r\n  content: '»';\r\n  display: inline-block;\r\n  margin-left: 0.5rem; }\r\n\r\n.ngx-pagination .show-for-sr {\r\n  position: absolute !important;\r\n  width: 1px;\r\n  height: 1px;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0); }\r\n.ngx-pagination .small-screen {\r\n  display: none; }\r\n@media screen and (max-width: 601px) {\r\n  .ngx-pagination.responsive .small-screen {\r\n    display: inline-block; } \r\n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\r\n    display: none; }\r\n}\r\n  `;\n\n/**\r\n * This directive is what powers all pagination controls components, including the default one.\r\n * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync\r\n * with the pagination controls.\r\n */\r\nclass PaginationControlsDirective {\r\n    constructor(service, changeDetectorRef) {\r\n        this.service = service;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.maxSize = 7;\r\n        this.pageChange = new EventEmitter();\r\n        this.pageBoundsCorrection = new EventEmitter();\r\n        this.pages = [];\r\n        this.changeSub = this.service.change\r\n            .subscribe(id => {\r\n            if (this.id === id) {\r\n                this.updatePageLinks();\r\n                this.changeDetectorRef.markForCheck();\r\n                this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        if (this.id === undefined) {\r\n            this.id = this.service.defaultId();\r\n        }\r\n        this.updatePageLinks();\r\n    }\r\n    ngOnChanges(changes) {\r\n        this.updatePageLinks();\r\n    }\r\n    ngOnDestroy() {\r\n        this.changeSub.unsubscribe();\r\n    }\r\n    /**\r\n     * Go to the previous page\r\n     */\r\n    previous() {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() - 1);\r\n    }\r\n    /**\r\n     * Go to the next page\r\n     */\r\n    next() {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() + 1);\r\n    }\r\n    /**\r\n     * Returns true if current page is first page\r\n     */\r\n    isFirstPage() {\r\n        return this.getCurrent() === 1;\r\n    }\r\n    /**\r\n     * Returns true if current page is last page\r\n     */\r\n    isLastPage() {\r\n        return this.getLastPage() === this.getCurrent();\r\n    }\r\n    /**\r\n     * Set the current page number.\r\n     */\r\n    setCurrent(page) {\r\n        this.pageChange.emit(page);\r\n    }\r\n    /**\r\n     * Get the current page number.\r\n     */\r\n    getCurrent() {\r\n        return this.service.getCurrentPage(this.id);\r\n    }\r\n    /**\r\n     * Returns the last page number\r\n     */\r\n    getLastPage() {\r\n        let inst = this.service.getInstance(this.id);\r\n        if (inst.totalItems < 1) {\r\n            // when there are 0 or fewer (an error case) items, there are no \"pages\" as such,\r\n            // but it makes sense to consider a single, empty page as the last page.\r\n            return 1;\r\n        }\r\n        return Math.ceil(inst.totalItems / inst.itemsPerPage);\r\n    }\r\n    getTotalItems() {\r\n        return this.service.getInstance(this.id).totalItems;\r\n    }\r\n    checkValidId() {\r\n        if (this.service.getInstance(this.id).id == null) {\r\n            console.warn(`PaginationControlsDirective: the specified id \"${this.id}\" does not match any registered PaginationInstance`);\r\n        }\r\n    }\r\n    /**\r\n     * Updates the page links and checks that the current page is valid. Should run whenever the\r\n     * PaginationService.change stream emits a value matching the current ID, or when any of the\r\n     * input values changes.\r\n     */\r\n    updatePageLinks() {\r\n        let inst = this.service.getInstance(this.id);\r\n        const correctedCurrentPage = this.outOfBoundCorrection(inst);\r\n        if (correctedCurrentPage !== inst.currentPage) {\r\n            setTimeout(() => {\r\n                this.pageBoundsCorrection.emit(correctedCurrentPage);\r\n                this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n            });\r\n        }\r\n        else {\r\n            this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n        }\r\n    }\r\n    /**\r\n     * Checks that the instance.currentPage property is within bounds for the current page range.\r\n     * If not, return a correct value for currentPage, or the current value if OK.\r\n     */\r\n    outOfBoundCorrection(instance) {\r\n        const totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n        if (totalPages < instance.currentPage && 0 < totalPages) {\r\n            return totalPages;\r\n        }\r\n        else if (instance.currentPage < 1) {\r\n            return 1;\r\n        }\r\n        return instance.currentPage;\r\n    }\r\n    /**\r\n     * Returns an array of Page objects to use in the pagination controls.\r\n     */\r\n    createPageArray(currentPage, itemsPerPage, totalItems, paginationRange) {\r\n        // paginationRange could be a string if passed from attribute, so cast to number.\r\n        paginationRange = +paginationRange;\r\n        let pages = [];\r\n        // Return 1 as default page number\r\n        // Make sense to show 1 instead of empty when there are no items\r\n        const totalPages = Math.max(Math.ceil(totalItems / itemsPerPage), 1);\r\n        const halfWay = Math.ceil(paginationRange / 2);\r\n        const isStart = currentPage <= halfWay;\r\n        const isEnd = totalPages - halfWay < currentPage;\r\n        const isMiddle = !isStart && !isEnd;\r\n        let ellipsesNeeded = paginationRange < totalPages;\r\n        let i = 1;\r\n        while (i <= totalPages && i <= paginationRange) {\r\n            let label;\r\n            let pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);\r\n            let openingEllipsesNeeded = (i === 2 && (isMiddle || isEnd));\r\n            let closingEllipsesNeeded = (i === paginationRange - 1 && (isMiddle || isStart));\r\n            if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\r\n                label = '...';\r\n            }\r\n            else {\r\n                label = pageNumber;\r\n            }\r\n            pages.push({\r\n                label: label,\r\n                value: pageNumber\r\n            });\r\n            i++;\r\n        }\r\n        return pages;\r\n    }\r\n    /**\r\n     * Given the position in the sequence of pagination links [i],\r\n     * figure out what page number corresponds to that position.\r\n     */\r\n    calculatePageNumber(i, currentPage, paginationRange, totalPages) {\r\n        let halfWay = Math.ceil(paginationRange / 2);\r\n        if (i === paginationRange) {\r\n            return totalPages;\r\n        }\r\n        else if (i === 1) {\r\n            return i;\r\n        }\r\n        else if (paginationRange < totalPages) {\r\n            if (totalPages - halfWay < currentPage) {\r\n                return totalPages - paginationRange + i;\r\n            }\r\n            else if (halfWay < currentPage) {\r\n                return currentPage - halfWay + i;\r\n            }\r\n            else {\r\n                return i;\r\n            }\r\n        }\r\n        else {\r\n            return i;\r\n        }\r\n    }\r\n}\r\nPaginationControlsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: PaginationControlsDirective, deps: [{ token: PaginationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\r\nPaginationControlsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.9\", type: PaginationControlsDirective, selector: \"pagination-template,[pagination-template]\", inputs: { id: \"id\", maxSize: \"maxSize\" }, outputs: { pageChange: \"pageChange\", pageBoundsCorrection: \"pageBoundsCorrection\" }, exportAs: [\"paginationApi\"], usesOnChanges: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: PaginationControlsDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'pagination-template,[pagination-template]',\r\n                    exportAs: 'paginationApi'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: PaginationService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { id: [{\r\n                type: Input\r\n            }], maxSize: [{\r\n                type: Input\r\n            }], pageChange: [{\r\n                type: Output\r\n            }], pageBoundsCorrection: [{\r\n                type: Output\r\n            }] } });\n\nfunction coerceToBoolean(input) {\r\n    return !!input && input !== 'false';\r\n}\r\n/**\r\n * The default pagination controls component. Actually just a default implementation of a custom template.\r\n */\r\nclass PaginationControlsComponent {\r\n    constructor() {\r\n        this.maxSize = 7;\r\n        this.previousLabel = 'Previous';\r\n        this.nextLabel = 'Next';\r\n        this.screenReaderPaginationLabel = 'Pagination';\r\n        this.screenReaderPageLabel = 'page';\r\n        this.screenReaderCurrentLabel = `You're on page`;\r\n        this.pageChange = new EventEmitter();\r\n        this.pageBoundsCorrection = new EventEmitter();\r\n        this._directionLinks = true;\r\n        this._autoHide = false;\r\n        this._responsive = false;\r\n    }\r\n    get directionLinks() {\r\n        return this._directionLinks;\r\n    }\r\n    set directionLinks(value) {\r\n        this._directionLinks = coerceToBoolean(value);\r\n    }\r\n    get autoHide() {\r\n        return this._autoHide;\r\n    }\r\n    set autoHide(value) {\r\n        this._autoHide = coerceToBoolean(value);\r\n    }\r\n    get responsive() {\r\n        return this._responsive;\r\n    }\r\n    set responsive(value) {\r\n        this._responsive = coerceToBoolean(value);\r\n    }\r\n    trackByIndex(index) {\r\n        return index;\r\n    }\r\n}\r\nPaginationControlsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: PaginationControlsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nPaginationControlsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.9\", type: PaginationControlsComponent, selector: \"pagination-controls\", inputs: { id: \"id\", maxSize: \"maxSize\", directionLinks: \"directionLinks\", autoHide: \"autoHide\", responsive: \"responsive\", previousLabel: \"previousLabel\", nextLabel: \"nextLabel\", screenReaderPaginationLabel: \"screenReaderPaginationLabel\", screenReaderPageLabel: \"screenReaderPageLabel\", screenReaderCurrentLabel: \"screenReaderCurrentLabel\" }, outputs: { pageChange: \"pageChange\", pageBoundsCorrection: \"pageBoundsCorrection\" }, ngImport: i0, template: \"\\n    <pagination-template  #p=\\\"paginationApi\\\"\\n                         [id]=\\\"id\\\"\\n                         [maxSize]=\\\"maxSize\\\"\\n                         (pageChange)=\\\"pageChange.emit($event)\\\"\\n                         (pageBoundsCorrection)=\\\"pageBoundsCorrection.emit($event)\\\">\\n    <nav role=\\\"navigation\\\" [attr.aria-label]=\\\"screenReaderPaginationLabel\\\">\\n    <ul class=\\\"ngx-pagination\\\" \\n        [class.responsive]=\\\"responsive\\\"\\n        *ngIf=\\\"!(autoHide && p.pages.length <= 1)\\\">\\n\\n        <li class=\\\"pagination-previous\\\" [class.disabled]=\\\"p.isFirstPage()\\\" *ngIf=\\\"directionLinks\\\"> \\n            <a tabindex=\\\"0\\\" *ngIf=\\\"1 < p.getCurrent()\\\" (keyup.enter)=\\\"p.previous()\\\" (click)=\\\"p.previous()\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isFirstPage()\\\" aria-disabled=\\\"true\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li> \\n\\n        <li class=\\\"small-screen\\\">\\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\\n        </li>\\n\\n        <li [class.current]=\\\"p.getCurrent() === page.value\\\" \\n            [class.ellipsis]=\\\"page.label === '...'\\\"\\n            *ngFor=\\\"let page of p.pages; trackBy: trackByIndex\\\">\\n            <a tabindex=\\\"0\\\" (keyup.enter)=\\\"p.setCurrent(page.value)\\\" (click)=\\\"p.setCurrent(page.value)\\\" *ngIf=\\\"p.getCurrent() !== page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }} </span>\\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span>\\n            </a>\\n            <ng-container *ngIf=\\\"p.getCurrent() === page.value\\\">\\n              <span aria-live=\\\"polite\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderCurrentLabel }} </span>\\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span> \\n              </span>\\n            </ng-container>\\n        </li>\\n\\n        <li class=\\\"pagination-next\\\" [class.disabled]=\\\"p.isLastPage()\\\" *ngIf=\\\"directionLinks\\\">\\n            <a tabindex=\\\"0\\\" *ngIf=\\\"!p.isLastPage()\\\" (keyup.enter)=\\\"p.next()\\\" (click)=\\\"p.next()\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isLastPage()\\\" aria-disabled=\\\"true\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li>\\n\\n    </ul>\\n    </nav>\\n    </pagination-template>\\n    \", isInline: true, styles: [\".ngx-pagination{margin-left:0;margin-bottom:1rem}.ngx-pagination:before,.ngx-pagination:after{content:\\\" \\\";display:table}.ngx-pagination:after{clear:both}.ngx-pagination li{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;margin-right:.0625rem;border-radius:0}.ngx-pagination li{display:inline-block}.ngx-pagination a,.ngx-pagination button{color:#0a0a0a;display:block;padding:.1875rem .625rem;border-radius:0}.ngx-pagination a:hover,.ngx-pagination button:hover{background:#e6e6e6}.ngx-pagination .current{padding:.1875rem .625rem;background:#2199e8;color:#fefefe;cursor:default}.ngx-pagination .disabled{padding:.1875rem .625rem;color:#cacaca;cursor:default}.ngx-pagination .disabled:hover{background:transparent}.ngx-pagination a,.ngx-pagination button{cursor:pointer}.ngx-pagination .pagination-previous a:before,.ngx-pagination .pagination-previous.disabled:before{content:\\\"\\\\ab\\\";display:inline-block;margin-right:.5rem}.ngx-pagination .pagination-next a:after,.ngx-pagination .pagination-next.disabled:after{content:\\\"\\\\bb\\\";display:inline-block;margin-left:.5rem}.ngx-pagination .show-for-sr{position:absolute!important;width:1px;height:1px;overflow:hidden;clip:rect(0,0,0,0)}.ngx-pagination .small-screen{display:none}@media screen and (max-width: 601px){.ngx-pagination.responsive .small-screen{display:inline-block}.ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next){display:none}}\\n\"], directives: [{ type: PaginationControlsDirective, selector: \"pagination-template,[pagination-template]\", inputs: [\"id\", \"maxSize\"], outputs: [\"pageChange\", \"pageBoundsCorrection\"], exportAs: [\"paginationApi\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], pipes: { \"number\": i2.DecimalPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: PaginationControlsComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'pagination-controls',\r\n                    template: DEFAULT_TEMPLATE,\r\n                    styles: [DEFAULT_STYLES],\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    encapsulation: ViewEncapsulation.None\r\n                }]\r\n        }], propDecorators: { id: [{\r\n                type: Input\r\n            }], maxSize: [{\r\n                type: Input\r\n            }], directionLinks: [{\r\n                type: Input\r\n            }], autoHide: [{\r\n                type: Input\r\n            }], responsive: [{\r\n                type: Input\r\n            }], previousLabel: [{\r\n                type: Input\r\n            }], nextLabel: [{\r\n                type: Input\r\n            }], screenReaderPaginationLabel: [{\r\n                type: Input\r\n            }], screenReaderPageLabel: [{\r\n                type: Input\r\n            }], screenReaderCurrentLabel: [{\r\n                type: Input\r\n            }], pageChange: [{\r\n                type: Output\r\n            }], pageBoundsCorrection: [{\r\n                type: Output\r\n            }] } });\n\nclass NgxPaginationModule {\r\n}\r\nNgxPaginationModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxPaginationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxPaginationModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxPaginationModule, declarations: [PaginatePipe,\r\n        PaginationControlsComponent,\r\n        PaginationControlsDirective], imports: [CommonModule], exports: [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective] });\r\nNgxPaginationModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxPaginationModule, providers: [PaginationService], imports: [[CommonModule]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxPaginationModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [\r\n                        PaginatePipe,\r\n                        PaginationControlsComponent,\r\n                        PaginationControlsDirective\r\n                    ],\r\n                    providers: [PaginationService],\r\n                    exports: [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of ngx-pagination\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgxPaginationModule, PaginatePipe, PaginationControlsComponent, PaginationControlsDirective, PaginationService };\n"],"names":["DYNAMIC_ERROR_MESSAGES_MATCHER","i18nBreadcrumbResolver","groupAdministratorGuard","siteAdministratorGuard","EPERSON_PATH","GROUP_PATH","BulkAccessComponent","EPeopleRegistryComponent","EPersonFormComponent","EPersonResolver","GroupFormComponent","groupPageGuard","GroupsRegistryComponent","ValidateEmailErrorStateMatcher","control","model","hasFocus","touched","errors","emailTaken","providers","provide","useValue","ROUTES","path","component","resolve","breadcrumb","data","title","breadcrumbKey","canActivate","ePerson","AsyncPipe","NgForOf","NgIf","NgbAccordionModule","NgbNavModule","TranslateModule","NgxPaginationModule","BehaviorSubject","distinctUntilChanged","map","buildPaginatedList","PageInfo","SearchConfigurationService","SEARCH_CONFIG_SERVICE","hasValue","ListableObjectComponentLoaderComponent","SelectableListItemControlComponent","SelectableListService","PaginationComponent","PaginationComponentOptions","createSuccessfulRemoteDataObject","ThemedSearchComponent","BrowserOnlyPipe","i0","ɵɵelement","ɵɵelementStart","ɵɵlistener","BulkAccessBrowseComponent_ng_template_3_Template_div_click_0_listener","ɵɵrestoreView","_r1","ɵɵnextContext","acc_r2","ɵɵreference","ɵɵresetView","toggle","BulkAccessBrowseComponent_ng_template_3_Template_button_click_1_listener","$event","preventDefault","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","BulkAccessBrowseComponent_ng_template_3_span_6_Template","BulkAccessBrowseComponent_ng_template_3_span_7_Template","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵproperty","isExpanded","ɵɵpureFunction1","_c1","ctx_r3","listId","i_r7","object_r6","BulkAccessBrowseComponent_ng_template_4_ng_template_14_ul_4_li_1_Template","ɵɵpipeBind2","tmp_5_0","objectsSelected$","payload","page","ɵɵpureFunction3","_c2","paginationOptions$","pageSize","currentPage","length","BulkAccessBrowseComponent_ng_template_4_ng_template_14_Template_ds_pagination_prev_0_listener","_r5","pagePrev","BulkAccessBrowseComponent_ng_template_4_ng_template_14_Template_ds_pagination_next_0_listener","pageNext","BulkAccessBrowseComponent_ng_template_4_ng_template_14_ul_4_Template","totalElements","tmp_8_0","hasSucceeded","ɵɵtwoWayListener","BulkAccessBrowseComponent_ng_template_4_Template_ul_activeIdChange_1_listener","_r3","ɵɵtwoWayBindingSet","activateId","BulkAccessBrowseComponent_ng_template_4_ng_template_7_Template","BulkAccessBrowseComponent_ng_template_4_ng_template_14_Template","ɵɵtwoWayProperty","ɵɵtextInterpolate","_c0","tmp_7_0","nav_r8","BulkAccessBrowseComponent","constructor","selectableListService","Object","assign","id","subs","ngOnInit","push","getSelectableList","pipe","list","generatePaginatedListBySelectedElements","subscribe","next","value","calculatePageCount","totalCount","Math","ceil","pageInfo","elementsPerPage","selection","totalPages","ngOnDestroy","filter","sub","forEach","unsubscribe","deselectAll","ɵɵdirectiveInject","i1","selectors","inputs","standalone","features","ɵɵProvidersFeature","useClass","ɵɵStandaloneFeature","decls","vars","consts","template","BulkAccessBrowseComponent_Template","rf","ctx","BulkAccessBrowseComponent_ng_template_3_Template","BulkAccessBrowseComponent_ng_template_4_Template","i2","NgbAccordion","NgbPanel","NgbPanelContent","NgbPanelHeader","i3","TranslatePipe","NgbNavContent","NgbNav","NgbNavItem","NgbNavLink","NgbNavOutlet","i4","PaginatePipe","styles","BulkAccessControlService","BtnDisabledDirective","BulkAccessSettingsComponent","bulkAccessControlService","generateIdListBySelectedElements","canExport","reset","settings","submit","getValue","bitstreamAccess","bitstream","itemAccess","item","file","createPayloadFile","state","executeScript","entry","indexableObject","uuid","viewQuery","BulkAccessComponent_Query","BulkAccessComponent_Template_button_click_10_listener","BulkAccessComponent_Template_button_click_13_listener","AccessControlFormContainerComponent","BulkAccessSettingsComponent_ng_template_3_Template_div_click_0_listener","BulkAccessSettingsComponent_ng_template_3_Template_button_click_1_listener","BulkAccessSettingsComponent_ng_template_3_span_6_Template","BulkAccessSettingsComponent_ng_template_3_span_7_Template","controlForm","getFormValue","BulkAccessSettingsComponent_Query","BulkAccessSettingsComponent_ng_template_3_Template","BulkAccessSettingsComponent_ng_template_4_Template","NgClass","ReactiveFormsModule","UntypedFormBuilder","Router","RouterModule","NgbModal","TranslateService","combineLatest","switchMap","take","DSONameService","AuthorizationDataService","FeatureID","RequestService","EPersonDataService","EpersonDtoModel","PaginationService","getAllSucceededRemoteData","getFirstCompletedRemoteData","ConfirmationModalComponent","ThemedLoadingComponent","NotificationsService","getEPersonEditRoute","getEPersonsRoute","EPeopleRegistryComponent_ds_pagination_41_tr_19_button_13_Template_button_click_0_listener","epersonDto_r2","$implicit","ctx_r2","deleteEPerson","eperson","ɵɵpropertyInterpolate","labelPrefix","dsoNameService","getName","EPeopleRegistryComponent_ds_pagination_41_tr_19_button_13_Template","activeEPerson$","email","getEditEPeoplePage","ableToDelete","EPeopleRegistryComponent_ds_pagination_41_tr_19_Template","config","tmp_2_0","pageInfoState$","tmp_9_0","ePeopleDto$","epersonService","translateService","notificationsService","authorizationService","formBuilder","router","modalService","paginationService","requestService","ePeople$","undefined","searching$","currentSearchQuery","currentSearchScope","searchForm","group","scope","query","initialisePage","search","getActiveEPerson","epeople","isAuthorized","CanDelete","self","authorized","epersonDtoModel","dtos","findListOptionsSub","getCurrentPagination","findListOptions","navigate","queryParamsHandling","resetPage","searchByScope","peopleRD","modalRef","open","componentInstance","name","headerLabel","infoLabel","cancelLabel","confirmLabel","brandColor","confirmIcon","response","confirm","restResponse","success","get","error","statusCode","errorMessage","cleanupSubscribes","clearPagination","clearFormAndResetResult","patchValue","i5","i6","i7","i8","i9","i10","EPeopleRegistryComponent_Template","EPeopleRegistryComponent_Template_form_ngSubmit_16_listener","EPeopleRegistryComponent_Template_button_click_36_listener","EPeopleRegistryComponent_ds_loading_39_Template","EPeopleRegistryComponent_ds_pagination_41_Template","EPeopleRegistryComponent_div_44_Template","tmp_12_0","tmp_13_0","RouterLink","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","encapsulation","NgFor","ChangeDetectorRef","EventEmitter","ActivatedRoute","DynamicCheckboxModel","DynamicInputModel","observableCombineLatest","of","observableOf","debounceTime","finalize","AuthService","EpersonRegistrationService","GroupDataService","EPerson","getFirstSucceededRemoteData","getRemoteDataPayload","TYPE_REQUEST_FORGOT","FormBuilderService","FormComponent","followLink","HasNoValuePipe","ValidateEmailNotTaken","ctx_r1","messagePrefix","EPersonFormComponent_div_15_Template_button_click_1_listener","resetPassword","canReset$","EPersonFormComponent_div_16_button_1_Template_button_click_0_listener","_r4","impersonate","EPersonFormComponent_div_16_button_2_Template_button_click_0_listener","stopImpersonating","EPersonFormComponent_div_16_button_1_Template","EPersonFormComponent_div_16_button_2_Template","isImpersonated","EPersonFormComponent_button_18_Template_button_click_0_listener","_r6","delete","EPersonFormComponent_div_21_ds_pagination_7_tr_16_Template_a_click_4_listener","group_r9","_r8","groupsDataService","startEditingNewGroup","getGroupEditPageRouterLink","object","EPersonFormComponent_div_21_ds_pagination_7_Template_ds_pagination_pageChange_0_listener","_r7","onPageChange","EPersonFormComponent_div_21_ds_pagination_7_tr_16_Template","groups$","tmp_11_0","getGroupRegistryRouterLink","EPersonFormComponent_div_21_ds_loading_4_Template","EPersonFormComponent_div_21_ds_pagination_7_Template","EPersonFormComponent_div_21_div_9_Template","tmp_6_0","changeDetectorRef","formBuilderService","authService","epersonRegistrationService","route","formId","formLayout","firstName","grid","host","lastName","canLogIn","requireCertificate","submitForm","cancelForm","displayResetPassword","submitLabel","epersonInitial","isImpersonatingUser","snapshot","params","findById","ePersonRD","editEPerson","label","instant","validators","required","pattern","errorMessages","hint","formModel","formGroup","createFormGroup","findListByHref","_links","groups","href","firstMetadataValue","controls","setAsyncValidators","createValidator","emailValueChangeSubscribe","valueChanges","detectChanges","getFindListOptions","groupsPageInfoState$","groupsRD","canImpersonate$","LoginOnBehalfOf","canDelete$","onCancel","cancelEditEPerson","emit","onSubmit","values","metadata","createNewEPerson","ePersonToCreate","create","rd","clearEPersonRequests","navigateByUrl","showNotificationIfEmailInUse","editedEperson","updateEPerson","event","updateGroups","stopImpersonatingAndRefresh","registerEmail","notificationSection","options","i11","i12","i13","outputs","EPersonFormComponent_Template","EPersonFormComponent_div_3_Template","EPersonFormComponent_ng_template_5_Template","ɵɵtemplateRefExtractor","EPersonFormComponent_ng_template_7_Template","EPersonFormComponent_Template_ds_form_submitForm_9_listener","EPersonFormComponent_Template_button_click_11_listener","EPersonFormComponent_div_15_Template","EPersonFormComponent_div_16_Template","EPersonFormComponent_button_18_Template","EPersonFormComponent_ds_loading_20_Template","EPersonFormComponent_div_21_Template","editHeader_r11","createHeader_r10","ePersonDataService","getEPersonByEmail","res","Store","ResolvedAction","EPERSON_EDIT_FOLLOW_LINKS","ePersonService","store","ePersonRD$","dispatch","url","ɵɵinject","factory","ɵfac","providedIn","DynamicTextAreaModel","environment","getCollectionEditRolesRoute","getCommunityEditRolesRoute","DSpaceObjectDataService","Group","Collection","Community","getAllCompletedRemoteData","AlertComponent","AlertType","ContextHelpDirective","hasValueOperator","isNotEmpty","getGroupEditRoute","getGroupsRoute","MembersListComponent","SubgroupsListComponent","ValidateGroupExists","GroupFormComponent_ng_template_7_span_1_Template","ɵɵpureFunction0","Warning","activeGroupLinkedDSO_r3","type","linkedEditRolesRoute$","ɵɵelementContainerStart","GroupFormComponent_ng_container_9_ng_container_2_ds_alert_1_Template","canEdit$","GroupFormComponent_ng_container_9_ds_alert_1_Template","GroupFormComponent_ng_container_9_ng_container_2_Template","groupBeingEdited_r4","permanent","activeGroupLinkedDSO$","GroupFormComponent_div_17_Template_button_click_1_listener","GroupFormComponent_ng_container_20_ds_members_list_2_Template","GroupFormComponent_ng_container_20_ds_subgroups_list_3_Template","groupBeingEdited_r6","groupDataService","dSpaceObjectDataService","groupName","groupDescription","groupId","setActiveGroup","activeGroup$","getActiveGroup","getActiveGroupLinkedDSO","getLinkedEditRolesRoute","dso","groupNameModel","groupCommunityModel","readOnly","groupDescriptionModel","spellCheck","form","groupNameValueChangeSubscribe","activeGroup","canEdit","linkedObject","clearAsyncValidators","groupCommunity","insertFormGroupControl","disable","enable","cancelEditGroup","createNewGroup","editGroup","groupToCreate","groupSelfLink","setActiveGroupWithLink","clearGroupsRequests","showNotificationIfNameInUse","searchGroups","operations","op","patch","findByHref","cause","hostBindings","GroupFormComponent_HostBindings","GroupFormComponent_beforeunload_HostBindingHandler","ɵɵresolveWindow","GroupFormComponent_div_3_Template","GroupFormComponent_ng_template_5_Template","GroupFormComponent_ng_template_7_Template","GroupFormComponent_ng_container_9_Template","GroupFormComponent_Template_ds_form_submitForm_11_listener","GroupFormComponent_Template_button_click_13_listener","GroupFormComponent_div_17_Template","GroupFormComponent_ng_container_20_Template","editHeader_r8","createHeader_r7","SubgroupsListComponent_ds_pagination_7_tr_19_Template_a_click_4_listener","group_r2","SubgroupsListComponent_ds_pagination_7_tr_19_Template_button_click_11_listener","deleteSubgroupFromGroup","_c3","SubgroupsListComponent_ds_pagination_7_tr_19_Template","subGroups$","SubgroupsListComponent_ds_pagination_26_tr_19_Template_a_click_4_listener","group_r5","SubgroupsListComponent_ds_pagination_26_tr_19_Template_button_click_11_listener","addSubgroupToGroup","SubgroupsListComponent_ds_pagination_26_tr_19_Template","configSearch","searchResults$","SubKey","Map","set","ActiveGroup","groupBeingEdited","retrieveSubGroups","subGroupsPageInfoState$","subGroupsRD","unsubFrom","Members","subgroups","subgroup","deleteSubGroupFromGroup","showNotifications","addSubGroupToGroup","SearchResults","paginationOptions","searchDone","searchNonMemberGroups","hasFailed","key","has","keys","messageSuffix","nameObject","clearGroupLinkRequests","SubgroupsListComponent_Template","SubgroupsListComponent_ds_pagination_7_Template","SubgroupsListComponent_div_9_Template","SubgroupsListComponent_span_12_Template","SubgroupsListComponent_Template_form_ngSubmit_13_listener","SubgroupsListComponent_Template_button_click_23_listener","SubgroupsListComponent_ds_pagination_26_Template","SubgroupsListComponent_div_28_Template","tmp_3_0","getFirstSucceededRemoteListPayload","groupExists","inject","someFeatureAuthorizationGuard","HALEndpointService","defaultGroupPageGetObjectUrl","halEndpointService","groupsEndpoint","getEndpoint","groupsUrl","getObjectUrl","getEPersonUuid","CanManageGroup","NgSwitch","NgSwitchCase","NgbTooltipModule","EMPTY","catchError","defaultIfEmpty","tap","GroupDtoModel","RouteService","groupDto_r1","groupService","GroupsRegistryComponent_ds_pagination_33_tr_22_button_15_Template_button_click_0_listener","deleteGroup","GroupsRegistryComponent_ds_pagination_33_tr_22_button_13_Template","GroupsRegistryComponent_ds_pagination_33_tr_22_button_14_Template","GroupsRegistryComponent_ds_pagination_33_tr_22_button_15_Template","epersons","ableToEdit","GroupsRegistryComponent_ds_pagination_33_tr_22_Template","tmp_10_0","groupsDto$","routeService","deletedGroupsIds","loading$","searchSub","updateRouteWithUrl","trim","AdministratorOf","isSiteAdmin","includes","canManageGroup$","hasLinkedDSO","getSubgroups","getMembers","canDelete","canManageGroup","members","groupDtoModel","paginationSub","GroupsRegistryComponent_Template","GroupsRegistryComponent_Template_form_ngSubmit_16_listener","GroupsRegistryComponent_Template_button_click_28_listener","GroupsRegistryComponent_ds_loading_31_Template","GroupsRegistryComponent_ds_pagination_33_Template","GroupsRegistryComponent_div_36_Template","NgbTooltip","Breadcrumb","text","hasNoValue","currentPathFromSnapshot","I18nBreadcrumbsService","breadcrumbService","Error","fullPath","provider","BREADCRUMB_MESSAGE_POSTFIX","getBreadcrumbs","ResolverActionTypes","RESOLVED","transform","pure","Pipe","Directive","Input","Output","Component","ChangeDetectionStrategy","ViewEncapsulation","NgModule","CommonModule","PaginationControlsComponent_ul_3_li_1_a_1_Template","_r2","ɵɵgetCurrentView","PaginationControlsComponent_ul_3_li_1_a_1_Template_a_keyup_enter_0_listener","p_r3","previous","PaginationControlsComponent_ul_3_li_1_a_1_Template_a_click_0_listener","previousLabel","screenReaderPageLabel","PaginationControlsComponent_ul_3_li_1_span_2_Template","PaginationControlsComponent_ul_3_li_1_Template","ɵɵclassProp","isFirstPage","getCurrent","PaginationControlsComponent_ul_3_li_4_a_1_Template","PaginationControlsComponent_ul_3_li_4_a_1_Template_a_keyup_enter_0_listener","page_r6","setCurrent","PaginationControlsComponent_ul_3_li_4_a_1_Template_a_click_0_listener","ɵɵpipe","PaginationControlsComponent_ul_3_li_4_ng_container_2_Template","ɵɵelementContainerEnd","screenReaderCurrentLabel","PaginationControlsComponent_ul_3_li_4_Template","PaginationControlsComponent_ul_3_li_5_a_1_Template","PaginationControlsComponent_ul_3_li_5_a_1_Template_a_keyup_enter_0_listener","PaginationControlsComponent_ul_3_li_5_a_1_Template_a_click_0_listener","nextLabel","PaginationControlsComponent_ul_3_li_5_span_2_Template","PaginationControlsComponent_ul_3_li_5_Template","isLastPage","PaginationControlsComponent_ul_3_Template","responsive","directionLinks","ɵɵtextInterpolate2","getLastPage","pages","trackByIndex","change","instances","DEFAULT_ID","defaultId","register","instance","updateInstance","changed","prop","getCurrentPage","setCurrentPage","maxPage","totalItems","itemsPerPage","setTotalItems","setItemsPerPage","getInstance","clone","obj","target","i","hasOwnProperty","LARGE_NUMBER","Number","MAX_SAFE_INTEGER","service","collection","args","Array","_id","slice","serverSideMode","createInstance","start","end","perPage","emitChange","isIdentical","stateIsIdentical","saveState","checkConfig","missing","join","size","isMetaDataIdentical","every","element","index","PaginatePipe_Factory","t","ɵpipe","ɵɵdefinePipe","ngDevMode","ɵsetClassMetadata","DEFAULT_TEMPLATE","DEFAULT_STYLES","PaginationControlsDirective","maxSize","pageChange","pageBoundsCorrection","changeSub","updatePageLinks","markForCheck","ngOnChanges","changes","checkValidId","inst","getTotalItems","console","warn","correctedCurrentPage","outOfBoundCorrection","setTimeout","createPageArray","paginationRange","max","halfWay","isStart","isEnd","isMiddle","ellipsesNeeded","pageNumber","calculatePageNumber","openingEllipsesNeeded","closingEllipsesNeeded","PaginationControlsDirective_Factory","ɵdir","ɵɵdefineDirective","exportAs","ɵɵNgOnChangesFeature","selector","coerceToBoolean","input","PaginationControlsComponent","screenReaderPaginationLabel","_directionLinks","_autoHide","_responsive","autoHide","PaginationControlsComponent_Factory","ɵcmp","ɵɵdefineComponent","PaginationControlsComponent_Template","PaginationControlsComponent_Template_pagination_template_pageChange_0_listener","PaginationControlsComponent_Template_pagination_template_pageBoundsCorrection_0_listener","ɵɵattribute","dependencies","DecimalPipe","changeDetection","OnPush","None","NgxPaginationModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[27]}