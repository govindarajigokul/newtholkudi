{"version":3,"file":"src_app_item-page_edit-item-page_edit-item-page-routes_ts.js","mappings":"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","sources":["./src/app/item-page/edit-item-page/abstract-item-update/abstract-item-update.component.ts","./src/app/item-page/edit-item-page/edit-item-operators.ts","./src/app/item-page/edit-item-page/edit-item-page-routes.ts","./src/app/item-page/edit-item-page/edit-item-page.component.ts","./src/app/item-page/edit-item-page/edit-item-page.component.html","./src/app/item-page/edit-item-page/item-access-control/item-access-control.component.ts","./src/app/item-page/edit-item-page/item-access-control/item-access-control.component.html","./src/app/item-page/edit-item-page/item-authorizations/item-authorizations.component.ts","./src/app/item-page/edit-item-page/item-authorizations/item-authorizations.component.html","./src/app/item-page/edit-item-page/item-bitstreams/item-bitstreams.component.ts","./src/app/item-page/edit-item-page/item-bitstreams/item-bitstreams.component.html","./src/app/item-page/edit-item-page/item-bitstreams/item-bitstreams.service.ts","./src/app/item-page/edit-item-page/item-bitstreams/item-edit-bitstream-bundle/item-edit-bitstream-bundle.component.ts","./src/app/item-page/edit-item-page/item-bitstreams/item-edit-bitstream-bundle/item-edit-bitstream-bundle.component.html","./src/app/item-page/edit-item-page/item-collection-mapper/item-collection-mapper.component.ts","./src/app/item-page/edit-item-page/item-collection-mapper/item-collection-mapper.component.html","./src/app/item-page/edit-item-page/item-curate/item-curate.component.ts","./src/app/item-page/edit-item-page/item-curate/item-curate.component.html","./src/app/item-page/edit-item-page/item-delete/item-delete.component.ts","./src/app/item-page/edit-item-page/item-delete/item-delete.component.html","./src/app/item-page/edit-item-page/item-move/item-move.component.ts","./src/app/item-page/edit-item-page/item-move/item-move.component.html","./src/app/item-page/edit-item-page/item-operation/item-operation.component.ts","./src/app/item-page/edit-item-page/item-operation/item-operation.component.html","./src/app/item-page/edit-item-page/item-operation/itemOperation.model.ts","./src/app/item-page/edit-item-page/item-page-access-control.guard.ts","./src/app/item-page/edit-item-page/item-page-bitstreams.guard.ts","./src/app/item-page/edit-item-page/item-page-collection-mapper.guard.ts","./src/app/item-page/edit-item-page/item-page-curate.guard.ts","./src/app/item-page/edit-item-page/item-page-delete.guard.ts","./src/app/item-page/edit-item-page/item-page-edit-authorizations.guard.ts","./src/app/item-page/edit-item-page/item-page-metadata.guard.ts","./src/app/item-page/edit-item-page/item-page-move.guard.ts","./src/app/item-page/edit-item-page/item-page-private.guard.ts","./src/app/item-page/edit-item-page/item-page-register-doi.guard.ts","./src/app/item-page/edit-item-page/item-page-reinstate.guard.ts","./src/app/item-page/edit-item-page/item-page-relationships.guard.ts","./src/app/item-page/edit-item-page/item-page-status.guard.ts","./src/app/item-page/edit-item-page/item-page-version-history.guard.ts","./src/app/item-page/edit-item-page/item-page-withdraw.guard.ts","./src/app/item-page/edit-item-page/item-private/item-private.component.ts","./src/app/item-page/edit-item-page/simple-item-action/abstract-simple-item-action.component.html","./src/app/item-page/edit-item-page/item-public/item-public.component.ts","./src/app/item-page/edit-item-page/item-register-doi/item-register-doi.component.ts","./src/app/item-page/edit-item-page/item-register-doi/item-register-doi-component.html","./src/app/item-page/edit-item-page/item-reinstate/item-reinstate.component.ts","./src/app/item-page/edit-item-page/item-relationships/edit-item-relationships.service.ts","./src/app/item-page/edit-item-page/item-relationships/edit-relationship-list-wrapper/edit-relationship-list-wrapper.component.ts","./src/app/item-page/edit-item-page/item-relationships/edit-relationship-list-wrapper/edit-relationship-list-wrapper.component.html","./src/app/item-page/edit-item-page/item-relationships/edit-relationship-list/edit-relationship-list.component.ts","./src/app/item-page/edit-item-page/item-relationships/edit-relationship-list/edit-relationship-list.component.html","./src/app/item-page/edit-item-page/item-relationships/edit-relationship/edit-relationship.component.ts","./src/app/item-page/edit-item-page/item-relationships/edit-relationship/edit-relationship.component.html","./src/app/item-page/edit-item-page/item-relationships/item-relationships.component.ts","./src/app/item-page/edit-item-page/item-relationships/item-relationships.component.html","./src/app/item-page/edit-item-page/item-status/item-status.component.ts","./src/app/item-page/edit-item-page/item-status/item-status.component.html","./src/app/item-page/edit-item-page/item-status/themed-item-status.component.ts","./src/app/shared/theme-support/themed.component.html","./src/app/item-page/edit-item-page/item-version-history/item-version-history.component.ts","./src/app/item-page/edit-item-page/item-version-history/item-version-history.component.html","./src/app/item-page/edit-item-page/item-withdraw/item-withdraw.component.ts","./src/app/item-page/edit-item-page/simple-item-action/abstract-simple-item-action.component.ts","./src/app/item-page/edit-item-page/virtual-metadata/virtual-metadata.component.ts","./src/app/item-page/edit-item-page/virtual-metadata/virtual-metadata.component.html","./src/app/shared/ng-for-track-by-id.directive.ts","./src/app/shared/object-select/collection-select/collection-select.component.ts","./src/app/shared/object-select/collection-select/collection-select.component.html","./src/app/shared/responsive-table-sizes/responsive-column-sizes.ts","./src/app/shared/responsive-table-sizes/responsive-table-sizes.ts","./src/app/shared/utils/object-values-pipe.ts","./src/themes/ lazy ^\\.\\/.*\\/app\\/item\\-page\\/edit\\-item\\-page\\/item\\-status\\/item\\-status\\.component$ namespace object"],"sourcesContent":["import {\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Data,\n  Router,\n} from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  combineLatest as observableCombineLatest,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  map,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { ItemDataService } from '../../../core/data/item-data.service';\nimport { FieldUpdate } from '../../../core/data/object-updates/field-update.model';\nimport { FieldUpdates } from '../../../core/data/object-updates/field-updates.model';\nimport { ObjectUpdatesService } from '../../../core/data/object-updates/object-updates.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { Item } from '../../../core/shared/item.model';\nimport { getAllSucceededRemoteData } from '../../../core/shared/operators';\nimport { hasValue } from '../../../shared/empty.util';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { AbstractTrackableComponent } from '../../../shared/trackable/abstract-trackable.component';\nimport { getItemPageLinksToFollow } from '../../item.resolver';\nimport { getItemPageRoute } from '../../item-page-routing-paths';\n\n@Component({\n  selector: 'ds-abstract-item-update',\n  template: '',\n  standalone: true,\n})\n/**\n * Abstract component for managing object updates of an item\n */\nexport class AbstractItemUpdateComponent extends AbstractTrackableComponent implements OnInit, OnDestroy {\n  /**\n   * The item to display the edit page for\n   */\n  @Input() item: Item;\n  /**\n   * The current values and updates for all this item's fields\n   * Should be initialized in the initializeUpdates method of the child component\n   */\n  updates$: Observable<FieldUpdates>;\n\n  /**\n   * Route to the item's page\n   */\n  itemPageRoute: string;\n\n  /**\n   * A subscription that checks when the item is deleted in cache and reloads the item by sending a new request\n   * This is used to update the item in cache after bitstreams are deleted\n   */\n  itemUpdateSubscription: Subscription;\n\n  constructor(\n    public itemService: ItemDataService,\n    public objectUpdatesService: ObjectUpdatesService,\n    public router: Router,\n    public notificationsService: NotificationsService,\n    public translateService: TranslateService,\n    public route: ActivatedRoute,\n  ) {\n    super(objectUpdatesService, notificationsService, translateService, router);\n  }\n\n  /**\n   * Initialize common properties between item-update components\n   */\n  ngOnInit(): void {\n    if (hasValue(this.item)) {\n      this.setItem(this.item);\n    } else {\n      // The item wasn't provided through an input, retrieve it from the route instead.\n      this.itemUpdateSubscription = observableCombineLatest([this.route.data, this.route.parent.data]).pipe(\n        map(([data, parentData]: [Data, Data]) => Object.assign({}, data, parentData)),\n        map((data: any) => data.dso),\n        tap((rd: RemoteData<Item>) => {\n          this.item = rd.payload;\n        }),\n        switchMap((rd: RemoteData<Item>) => {\n          return this.itemService.findByHref(rd.payload._links.self.href, true, true, ...getItemPageLinksToFollow());\n        }),\n        getAllSucceededRemoteData(),\n      ).subscribe((rd: RemoteData<Item>) => {\n        this.setItem(rd.payload);\n      });\n    }\n    super.ngOnInit();\n\n    this.discardTimeOut = environment.item.edit.undoTimeout;\n    this.hasChanges().pipe(take(1)).subscribe((hasChanges) => {\n      if (!hasChanges) {\n        this.initializeOriginalFields();\n      } else {\n        this.checkLastModified();\n      }\n    });\n\n    this.initializeNotificationsPrefix();\n    this.initializeUpdates();\n  }\n\n  setItem(item: Item) {\n    this.item = item;\n    this.itemPageRoute = getItemPageRoute(this.item);\n    this.postItemInit();\n    this.initializeUpdates();\n  }\n\n  ngOnDestroy() {\n    if (hasValue(this.itemUpdateSubscription)) {\n      this.itemUpdateSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Actions to perform after the item has been initialized\n   * Abstract method: Should be overwritten in the sub class\n   */\n  postItemInit(): void {\n    // Overwrite in subclasses\n  }\n\n  /**\n   * Initialize the values and updates of the current item's fields\n   * Abstract method: Should be overwritten in the sub class\n   */\n  initializeUpdates(): void {\n    // Overwrite in subclasses\n  }\n\n  /**\n   * Initialize the prefix for notification messages\n   * Abstract method: Should be overwritten in the sub class\n   */\n  initializeNotificationsPrefix(): void {\n    // Overwrite in subclasses\n  }\n\n  /**\n   * Sends all initial values of this item to the object updates service\n   * Abstract method: Should be overwritten in the sub class\n   */\n  initializeOriginalFields(): void {\n    // Overwrite in subclasses\n  }\n\n  /**\n   * Submit the current changes\n   * Abstract method: Should be overwritten in the sub class\n   */\n  submit(): void {\n    // Overwrite in subclasses\n  }\n\n  /**\n   * Prevent unnecessary rerendering so fields don't lose focus\n   */\n  trackUpdate(index, update: FieldUpdate) {\n    return update && update.field ? update.field.uuid : undefined;\n  }\n\n  /**\n   * Check if the current page is entirely valid\n   */\n  public isValid() {\n    return this.objectUpdatesService.isValidPage(this.url);\n  }\n\n  /**\n   * Checks if the current item is still in sync with the version in the store\n   * If it's not, a notification is shown and the changes are removed\n   */\n  private checkLastModified() {\n    const currentVersion = this.item.lastModified;\n    this.objectUpdatesService.getLastModified(this.url).pipe(take(1)).subscribe(\n      (updateVersion: Date) => {\n        if (updateVersion.getDate() !== currentVersion.getDate()) {\n          this.notificationsService.warning(this.getNotificationTitle('outdated'), this.getNotificationContent('outdated'));\n          this.initializeOriginalFields();\n        }\n      },\n    );\n  }\n}\n","import { Observable } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { RemoteData } from '../../core/data/remote-data';\nimport { getAllSucceededRemoteData } from '../../core/shared/operators';\n\n/**\n * Return first Observable of a RemoteData object that complies to the provided predicate\n * @param predicate\n */\nexport const findSuccessfulAccordingTo = <T>(predicate: (rd: RemoteData<T>) => boolean) =>\n  (source: Observable<RemoteData<T>>): Observable<RemoteData<T>> =>\n    source.pipe(getAllSucceededRemoteData(),\n      first(predicate));\n","import { Route } from '@angular/router';\n\nimport { i18nBreadcrumbResolver } from '../../core/breadcrumbs/i18n-breadcrumb.resolver';\nimport { ThemedDsoEditMetadataComponent } from '../../dso-shared/dso-edit-metadata/themed-dso-edit-metadata.component';\nimport { ResourcePolicyCreateComponent } from '../../shared/resource-policies/create/resource-policy-create.component';\nimport { ResourcePolicyEditComponent } from '../../shared/resource-policies/edit/resource-policy-edit.component';\nimport { resourcePolicyResolver } from '../../shared/resource-policies/resolvers/resource-policy.resolver';\nimport { resourcePolicyTargetResolver } from '../../shared/resource-policies/resolvers/resource-policy-target.resolver';\nimport { EditItemPageComponent } from './edit-item-page.component';\nimport {\n  ITEM_EDIT_AUTHORIZATIONS_PATH,\n  ITEM_EDIT_DELETE_PATH,\n  ITEM_EDIT_MOVE_PATH,\n  ITEM_EDIT_PRIVATE_PATH,\n  ITEM_EDIT_PUBLIC_PATH,\n  ITEM_EDIT_REGISTER_DOI_PATH,\n  ITEM_EDIT_REINSTATE_PATH,\n  ITEM_EDIT_WITHDRAW_PATH,\n} from './edit-item-page.routing-paths';\nimport { ItemAccessControlComponent } from './item-access-control/item-access-control.component';\nimport { ItemAuthorizationsComponent } from './item-authorizations/item-authorizations.component';\nimport { ItemBitstreamsComponent } from './item-bitstreams/item-bitstreams.component';\nimport { ItemCollectionMapperComponent } from './item-collection-mapper/item-collection-mapper.component';\nimport { ItemCurateComponent } from './item-curate/item-curate.component';\nimport { ItemDeleteComponent } from './item-delete/item-delete.component';\nimport { ItemMoveComponent } from './item-move/item-move.component';\nimport { itemPageAccessControlGuard } from './item-page-access-control.guard';\nimport { itemPageBitstreamsGuard } from './item-page-bitstreams.guard';\nimport { itemPageCollectionMapperGuard } from './item-page-collection-mapper.guard';\nimport { itemPageCurateGuard } from './item-page-curate.guard';\nimport { itemPageDeleteGuard } from './item-page-delete.guard';\nimport { itemPageEditAuthorizationsGuard } from './item-page-edit-authorizations.guard';\nimport { itemPageMetadataGuard } from './item-page-metadata.guard';\nimport { itemPageMoveGuard } from './item-page-move.guard';\nimport { itemPagePrivateGuard } from './item-page-private.guard';\nimport { itemPageRegisterDoiGuard } from './item-page-register-doi.guard';\nimport { itemPageReinstateGuard } from './item-page-reinstate.guard';\nimport { itemPageRelationshipsGuard } from './item-page-relationships.guard';\nimport { itemPageStatusGuard } from './item-page-status.guard';\nimport { itemPageVersionHistoryGuard } from './item-page-version-history.guard';\nimport { itemPageWithdrawGuard } from './item-page-withdraw.guard';\nimport { ItemPrivateComponent } from './item-private/item-private.component';\nimport { ItemPublicComponent } from './item-public/item-public.component';\nimport { ItemRegisterDoiComponent } from './item-register-doi/item-register-doi.component';\nimport { ItemReinstateComponent } from './item-reinstate/item-reinstate.component';\nimport { ItemRelationshipsComponent } from './item-relationships/item-relationships.component';\nimport { ThemedItemStatusComponent } from './item-status/themed-item-status.component';\nimport { ItemVersionHistoryComponent } from './item-version-history/item-version-history.component';\nimport { ItemWithdrawComponent } from './item-withdraw/item-withdraw.component';\n\n/**\n * Routing module that handles the routing for the Edit Item page administrator functionality\n */\n\nexport const ROUTES: Route[] = [\n  {\n    path: '',\n    resolve: {\n      breadcrumb: i18nBreadcrumbResolver,\n    },\n    data: { breadcrumbKey: 'item.edit' },\n    children: [\n      {\n        path: '',\n        component: EditItemPageComponent,\n        children: [\n          {\n            path: '',\n            redirectTo: 'status',\n            pathMatch: 'full',\n          },\n          {\n            path: 'status',\n            component: ThemedItemStatusComponent,\n            data: { title: 'item.edit.tabs.status.title', showBreadcrumbs: true },\n            canActivate: [itemPageStatusGuard],\n          },\n          {\n            path: 'bitstreams',\n            component: ItemBitstreamsComponent,\n            data: { title: 'item.edit.tabs.bitstreams.title', showBreadcrumbs: true },\n            canActivate: [itemPageBitstreamsGuard],\n          },\n          {\n            path: 'metadata',\n            component: ThemedDsoEditMetadataComponent,\n            data: { title: 'item.edit.tabs.metadata.title', showBreadcrumbs: true },\n            canActivate: [itemPageMetadataGuard],\n          },\n          {\n            path: 'curate',\n            component: ItemCurateComponent,\n            data: { title: 'item.edit.tabs.curate.title', showBreadcrumbs: true },\n            canActivate: [itemPageCurateGuard],\n          },\n          {\n            path: 'relationships',\n            component: ItemRelationshipsComponent,\n            data: { title: 'item.edit.tabs.relationships.title', showBreadcrumbs: true },\n            canActivate: [itemPageRelationshipsGuard],\n          },\n          /* TODO - uncomment & fix when view page exists\n          {\n            path: 'view',\n            component: ItemBitstreamsComponent,\n            data: { title: 'item.edit.tabs.view.title', showBreadcrumbs: true }\n          }, */\n          /* TODO - uncomment & fix when curate page exists\n          {\n            path: 'curate',\n            component: ItemBitstreamsComponent,\n            data: { title: 'item.edit.tabs.curate.title', showBreadcrumbs: true }\n          }, */\n          {\n            path: 'versionhistory',\n            component: ItemVersionHistoryComponent,\n            data: { title: 'item.edit.tabs.versionhistory.title', showBreadcrumbs: true },\n            canActivate: [itemPageVersionHistoryGuard],\n          },\n          {\n            path: 'access-control',\n            component: ItemAccessControlComponent,\n            data: { title: 'item.edit.tabs.access-control.title', showBreadcrumbs: true },\n            canActivate: [itemPageAccessControlGuard],\n          },\n          {\n            path: 'mapper',\n            component: ItemCollectionMapperComponent,\n            data: { title: 'item.edit.tabs.item-mapper.title', showBreadcrumbs: true },\n            canActivate: [itemPageCollectionMapperGuard],\n          },\n        ],\n      },\n      {\n        path: 'mapper',\n        component: ItemCollectionMapperComponent,\n      },\n      {\n        path: ITEM_EDIT_WITHDRAW_PATH,\n        component: ItemWithdrawComponent,\n        canActivate: [itemPageWithdrawGuard],\n      },\n      {\n        path: ITEM_EDIT_REINSTATE_PATH,\n        component: ItemReinstateComponent,\n        canActivate: [itemPageReinstateGuard],\n      },\n      {\n        path: ITEM_EDIT_PRIVATE_PATH,\n        component: ItemPrivateComponent,\n        canActivate: [itemPagePrivateGuard],\n      },\n      {\n        path: ITEM_EDIT_PUBLIC_PATH,\n        component: ItemPublicComponent,\n      },\n      {\n        path: ITEM_EDIT_DELETE_PATH,\n        component: ItemDeleteComponent,\n        canActivate: [itemPageDeleteGuard],\n      },\n      {\n        path: ITEM_EDIT_MOVE_PATH,\n        component: ItemMoveComponent,\n        data: { title: 'item.edit.move.title' },\n        canActivate: [itemPageMoveGuard],\n      },\n      {\n        path: ITEM_EDIT_REGISTER_DOI_PATH,\n        component: ItemRegisterDoiComponent,\n        canActivate: [itemPageRegisterDoiGuard],\n        data: { title: 'item.edit.register-doi.title' },\n      },\n      {\n        path: ITEM_EDIT_AUTHORIZATIONS_PATH,\n        children: [\n          {\n            path: 'create',\n            resolve: {\n              resourcePolicyTarget: resourcePolicyTargetResolver,\n            },\n            component: ResourcePolicyCreateComponent,\n            data: { title: 'resource-policies.create.page.title' },\n          },\n          {\n            path: 'edit',\n            resolve: {\n              resourcePolicy: resourcePolicyResolver,\n            },\n            component: ResourcePolicyEditComponent,\n            data: { title: 'resource-policies.edit.page.title' },\n          },\n          {\n            path: '',\n            component: ItemAuthorizationsComponent,\n            data: { title: 'item.edit.authorizations.title' },\n          },\n        ],\n        canActivate: [itemPageEditAuthorizationsGuard],\n      },\n    ],\n  },\n];\n","import {\n  AsyncPipe,\n  NgClass,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Injector,\n  OnInit,\n  runInInjectionContext,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  CanActivateFn,\n  Route,\n  Router,\n  RouterLink,\n  RouterOutlet,\n} from '@angular/router';\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  combineLatest as observableCombineLatest,\n  Observable,\n  of as observableOf,\n} from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { RemoteData } from '../../core/data/remote-data';\nimport { Item } from '../../core/shared/item.model';\nimport {\n  fadeIn,\n  fadeInOut,\n} from '../../shared/animations/fade';\nimport { isNotEmpty } from '../../shared/empty.util';\nimport { getItemPageRoute } from '../item-page-routing-paths';\n\n@Component({\n  selector: 'ds-edit-item-page',\n  templateUrl: './edit-item-page.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    fadeIn,\n    fadeInOut,\n  ],\n  imports: [\n    TranslateModule,\n    NgClass,\n    NgIf,\n    NgForOf,\n    AsyncPipe,\n    NgbTooltipModule,\n    RouterLink,\n    RouterOutlet,\n  ],\n  standalone: true,\n})\n/**\n * Page component for editing an item\n */\nexport class EditItemPageComponent implements OnInit {\n\n  /**\n   * The item to edit\n   */\n  itemRD$: Observable<RemoteData<Item>>;\n\n  /**\n   * The current page outlet string\n   */\n  currentPage: string;\n\n  /**\n   * All possible page outlet strings\n   */\n  pages: { page: string, enabled: Observable<boolean> }[];\n\n  constructor(private route: ActivatedRoute, private router: Router, private injector: Injector) {\n    this.router.events.subscribe(() => this.initPageParamsByRoute());\n  }\n\n  ngOnInit(): void {\n    this.initPageParamsByRoute();\n    this.pages = this.route.routeConfig.children\n      .filter((child: Route) => isNotEmpty(child.path))\n      .map((child: Route) => {\n        let enabled = observableOf(true);\n        if (isNotEmpty(child.canActivate)) {\n          enabled = observableCombineLatest(child.canActivate.map((guardFn: CanActivateFn) => {\n            return runInInjectionContext(this.injector, () => {\n              return guardFn(this.route.snapshot, this.router.routerState.snapshot);\n            });\n          }),\n          ).pipe(\n            map((canActivateOutcomes: any[]) => canActivateOutcomes.every((e) => e === true)),\n          );\n        }\n        return { page: child.path, enabled: enabled };\n      }); // ignore reroutes\n    this.itemRD$ = this.route.data.pipe(map((data) => data.dso));\n  }\n\n  /**\n   * Get the item page url\n   * @param item The item for which the url is requested\n   */\n  getItemPage(item: Item): string {\n    return getItemPageRoute(item);\n  }\n\n  /**\n   * Set page params depending on the route\n   */\n  initPageParamsByRoute() {\n    this.currentPage = this.route.snapshot.firstChild.routeConfig.path;\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <h1 class=\"border-bottom\">{{'item.edit.head' | translate}}</h1>\n            <div class=\"pt-2\">\n              <ul *ngIf=\"pages.length > 0\" class=\"nav nav-tabs justify-content-start\" role=\"tablist\">\n                    <li *ngFor=\"let page of pages\" class=\"nav-item\" role=\"presentation\">\n                        <a *ngIf=\"(page.enabled | async)\"\n                           [attr.aria-selected]=\"page.page === currentPage\"\n                           class=\"nav-link\"\n                           [ngClass]=\"{'active' : page.page === currentPage}\"\n                           [routerLink]=\"['./' + page.page]\"\n                           [attr.data-test]=\"page.page\"\n                           role=\"tab\">\n                            {{'item.edit.tabs.' + page.page + '.head' | translate}}\n                        </a>\n                        <span [ngbTooltip]=\"'item.edit.tabs.disabled.tooltip' | translate\">\n                            <button *ngIf=\"(page.enabled | async) !== true\"\n                                 class=\"nav-link disabled\">\n                                {{'item.edit.tabs.' + page.page + '.head' | translate}}\n                            </button>\n                        </span>\n                    </li>\n                </ul>\n                <div class=\"tab-pane active\">\n                    <div class=\"mb-4\">\n                        <router-outlet></router-outlet>\n                    </div>\n                    <div class=\"button-row bottom\">\n                      <div class=\"text-right\">\n                        <a [routerLink]=\"getItemPage((itemRD$ | async)?.payload)\" role=\"button\" class=\"btn btn-outline-secondary\"><i class=\"fas fa-arrow-left\"></i> {{'item.edit.return' | translate}}</a>\n                      </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import {\n  AsyncPipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { Item } from '../../../core/shared/item.model';\nimport { getFirstSucceededRemoteData } from '../../../core/shared/operators';\nimport { AccessControlFormContainerComponent } from '../../../shared/access-control-form-container/access-control-form-container.component';\n\n@Component({\n  selector: 'ds-item-access-control',\n  templateUrl: './item-access-control.component.html',\n  styleUrls: ['./item-access-control.component.scss'],\n  imports: [\n    AccessControlFormContainerComponent,\n    NgIf,\n    AsyncPipe,\n  ],\n  standalone: true,\n})\nexport class ItemAccessControlComponent implements OnInit {\n\n  itemRD$: Observable<RemoteData<Item>>;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.itemRD$ = this.route.parent.parent.data.pipe(\n      map((data) => data.dso),\n    ).pipe(getFirstSucceededRemoteData()) as Observable<RemoteData<Item>>;\n  }\n\n}\n","<ds-access-control-form-container\n  titleMessage=\"item-access-control-title\"\n  *ngIf=\"itemRD$ | async as itemRD\"\n  [itemRD]=\"itemRD\"\n  [showLimitToSpecificBitstreams]=\"true\">\n</ds-access-control-form-container>\n","import {\n  AsyncPipe,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgbCollapseModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport isEqual from 'lodash/isEqual';\nimport {\n  BehaviorSubject,\n  Observable,\n  of as observableOf,\n  Subscription,\n} from 'rxjs';\nimport {\n  catchError,\n  filter,\n  first,\n  map,\n  mergeMap,\n  take,\n} from 'rxjs/operators';\n\nimport { DSONameService } from '../../../core/breadcrumbs/dso-name.service';\nimport { LinkService } from '../../../core/cache/builders/link.service';\nimport {\n  buildPaginatedList,\n  PaginatedList,\n} from '../../../core/data/paginated-list.model';\nimport { Bitstream } from '../../../core/shared/bitstream.model';\nimport { Bundle } from '../../../core/shared/bundle.model';\nimport { Item } from '../../../core/shared/item.model';\nimport {\n  getFirstSucceededRemoteDataPayload,\n  getFirstSucceededRemoteDataWithNotEmptyPayload,\n} from '../../../core/shared/operators';\nimport { AlertComponent } from '../../../shared/alert/alert.component';\nimport {\n  hasValue,\n  isNotEmpty,\n} from '../../../shared/empty.util';\nimport { NgForTrackByIdDirective } from '../../../shared/ng-for-track-by-id.directive';\nimport { ResourcePoliciesComponent } from '../../../shared/resource-policies/resource-policies.component';\nimport { followLink } from '../../../shared/utils/follow-link-config.model';\n\n/**\n * Interface for a bundle's bitstream map entry\n */\ninterface BundleBitstreamsMapEntry {\n  id: string;\n  bitstreams: Observable<PaginatedList<Bitstream>>;\n}\n\n@Component({\n  selector: 'ds-item-authorizations',\n  templateUrl: './item-authorizations.component.html',\n  styleUrls: ['./item-authorizations.component.scss'],\n  imports: [\n    ResourcePoliciesComponent,\n    NgbCollapseModule,\n    TranslateModule,\n    NgForOf,\n    NgForTrackByIdDirective,\n    AsyncPipe,\n    NgIf,\n    AlertComponent,\n  ],\n  standalone: true,\n})\n/**\n * Component that handles the item Authorizations\n */\nexport class ItemAuthorizationsComponent implements OnInit, OnDestroy {\n\n  /**\n   * A map that contains all bitstream of the item's bundles\n   * @type {Observable<Map<string, Observable<PaginatedList<Bitstream>>>>}\n   */\n  public bundleBitstreamsMap: Map<string, BitstreamMapValue> = new Map<string, BitstreamMapValue>();\n\n  /**\n   * The list of all bundles for the item\n   * @type {Observable<PaginatedList<Bundle>>}\n   */\n  bundles$: BehaviorSubject<Bundle[]> = new BehaviorSubject<Bundle[]>([]);\n\n  /**\n   * The target editing item\n   * @type {Observable<Item>}\n   */\n  private item$: Observable<Item>;\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  private subs: Subscription[] = [];\n\n  /**\n   * The size of the bundles to be loaded on demand\n   * @type {number}\n   */\n  bundlesPerPage = 6;\n\n  /**\n   * The number of current page\n   * @type {number}\n   */\n  bundlesPageSize = 1;\n\n  /**\n   * The flag to show or not the 'Load more' button\n   * based on the condition if all the bundles are loaded or not\n   * @type {boolean}\n   */\n  allBundlesLoaded = false;\n\n  /**\n   * Initial size of loaded bitstreams\n   * The size of incrementation used in bitstream pagination\n   */\n  bitstreamSize = 4;\n\n  /**\n   * The size of the loaded bitstremas at a certain moment\n   * @private\n   */\n  private bitstreamPageSize = 4;\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {LinkService} linkService\n   * @param {ActivatedRoute} route\n   * @param nameService\n   */\n  constructor(\n    private linkService: LinkService,\n    private route: ActivatedRoute,\n    public nameService: DSONameService,\n  ) {\n  }\n\n  /**\n   * Initialize the component, setting up the bundle and bitstream within the item\n   */\n  ngOnInit(): void {\n    this.getBundlesPerItem();\n  }\n\n  /**\n   * Return the item's UUID\n   */\n  getItemUUID(): Observable<string> {\n    return this.item$.pipe(\n      map((item: Item) => item.id),\n      first((UUID: string) => isNotEmpty(UUID)),\n    );\n  }\n\n  /**\n * Return the item's name\n */\n  getItemName(): Observable<string> {\n    return this.item$.pipe(\n      map((item: Item) => this.nameService.getName(item)),\n    );\n  }\n\n  /**\n   * Return all item's bundles\n   *\n   * @return an observable that emits all item's bundles\n   */\n  getItemBundles(): Observable<Bundle[]> {\n    return this.bundles$.asObservable();\n  }\n\n  /**\n   * Get all bundles per item\n   * and all the bitstreams per bundle\n   * @param page number of current page\n   */\n  getBundlesPerItem(page: number = 1) {\n    this.item$ = this.route.data.pipe(\n      map((data) => data.dso),\n      getFirstSucceededRemoteDataWithNotEmptyPayload(),\n      map((item: Item) => this.linkService.resolveLink(\n        item,\n        followLink('bundles', { findListOptions: { currentPage : page, elementsPerPage: this.bundlesPerPage } }, followLink('bitstreams')),\n      )),\n    ) as Observable<Item>;\n\n    const bundles$: Observable<PaginatedList<Bundle>> =  this.item$.pipe(\n      filter((item: Item) => isNotEmpty(item.bundles)),\n      mergeMap((item: Item) => item.bundles),\n      getFirstSucceededRemoteDataWithNotEmptyPayload(),\n      catchError((error: unknown) => {\n        console.error(error);\n        return observableOf(buildPaginatedList(null, []));\n      }),\n    );\n\n    this.subs.push(\n      bundles$.pipe(\n        take(1),\n        map((list: PaginatedList<Bundle>) => list.page),\n      ).subscribe((bundles: Bundle[]) => {\n        if (isEqual(bundles.length,0) || bundles.length < this.bundlesPerPage) {\n          this.allBundlesLoaded = true;\n        }\n        if (isEqual(page, 1)) {\n          this.bundles$.next(bundles);\n        } else {\n          this.bundles$.next(this.bundles$.getValue().concat(bundles));\n        }\n      }),\n      bundles$.pipe(\n        take(1),\n        mergeMap((list: PaginatedList<Bundle>) => list.page),\n        map((bundle: Bundle) => ({ id: bundle.id, bitstreams: this.getBundleBitstreams(bundle) })),\n      ).subscribe((entry: BundleBitstreamsMapEntry) => {\n        const bitstreamMapValues: BitstreamMapValue = {\n          isCollapsed: true,\n          allBitstreamsLoaded: false,\n          bitstreams: null,\n        };\n        bitstreamMapValues.bitstreams = entry.bitstreams.pipe(\n          map((b: PaginatedList<Bitstream>) => {\n            bitstreamMapValues.allBitstreamsLoaded = b?.page.length < this.bitstreamSize;\n            return [...b.page.slice(0, this.bitstreamSize)];\n          }),\n        );\n        this.bundleBitstreamsMap.set(entry.id, bitstreamMapValues);\n      }),\n    );\n  }\n\n  /**\n   * Return all bundle's bitstreams\n   *\n   * @return an observable that emits all item's bundles\n   */\n  private getBundleBitstreams(bundle: Bundle): Observable<PaginatedList<Bitstream>> {\n    return bundle.bitstreams.pipe(\n      getFirstSucceededRemoteDataPayload(),\n      catchError((error: unknown) => {\n        console.error(error);\n        return observableOf(buildPaginatedList(null, []));\n      }),\n    );\n  }\n\n  /**\n   * Changes the collapsible state of the area that contains the bitstream list\n   * @param bundleId Id of bundle responsible for the requested bitstreams\n   */\n  collapseArea(bundleId: string) {\n    this.bundleBitstreamsMap.get(bundleId).isCollapsed = !this.bundleBitstreamsMap.get(bundleId).isCollapsed;\n  }\n\n  /**\n   * Loads as much bundles as initial value of bundleSize to be displayed\n   */\n  onBundleLoad(){\n    this.bundlesPageSize ++;\n    this.getBundlesPerItem(this.bundlesPageSize);\n  }\n\n  /**\n   * Calculates the bitstreams that are going to be loaded on demand,\n   * based on the number configured on this.bitstreamSize.\n   * @param bundle parent of bitstreams that are requested to be shown\n   * @returns Subscription\n   */\n  onBitstreamsLoad(bundle: Bundle) {\n    return this.getBundleBitstreams(bundle).subscribe((res: PaginatedList<Bitstream>) => {\n      const nextBitstreams = res?.page.slice(this.bitstreamPageSize, this.bitstreamPageSize + this.bitstreamSize);\n      const bitstreamsToShow = this.bundleBitstreamsMap.get(bundle.id).bitstreams.pipe(\n        map((existingBits: Bitstream[])=> {\n          return [... existingBits, ...nextBitstreams];\n        }),\n      );\n      this.bitstreamPageSize = this.bitstreamPageSize + this.bitstreamSize;\n      const bitstreamMapValues: BitstreamMapValue = {\n        bitstreams: bitstreamsToShow ,\n        isCollapsed: this.bundleBitstreamsMap.get(bundle.id).isCollapsed,\n        allBitstreamsLoaded: res?.page.length <= this.bitstreamPageSize,\n      };\n      this.bundleBitstreamsMap.set(bundle.id, bitstreamMapValues);\n    });\n  }\n\n  /**\n   * Unsubscribe from all subscriptions\n   */\n  ngOnDestroy(): void {\n    this.subs\n      .filter((subscription) => hasValue(subscription))\n      .forEach((subscription) => subscription.unsubscribe());\n  }\n}\n\nexport interface BitstreamMapValue {\n  bitstreams: Observable<Bitstream[]>;\n  isCollapsed: boolean;\n  allBitstreamsLoaded: boolean;\n}\n","<div class=\"container\">\n  <ds-alert [type]=\"'alert-info'\" [content]=\"'item.edit.authorizations.heading'\"></ds-alert>\n  <ds-resource-policies [resourceType]=\"'item'\" [resourceName]=\"(getItemName() | async)\"\n    [resourceUUID]=\"(getItemUUID() | async)\">\n  </ds-resource-policies>\n  <ng-container *ngFor=\"let bundle of (bundles$ | async); trackById\">\n    <ds-resource-policies [resourceType]=\"'bundle'\" [resourceUUID]=\"bundle.id\" [resourceName]=\"bundle.name\">\n    </ds-resource-policies>\n    <ng-container *ngIf=\"(bundleBitstreamsMap.get(bundle.id)?.bitstreams | async)?.length > 0\">\n      <div class=\"card auth-bitstream-container\">\n        <div class=\"card-header\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"collapseArea(bundle.id)\"\n            [attr.aria-expanded]=\"false\" [attr.aria-controls]=\"bundle.id\">\n            {{ 'collection.edit.item.authorizations.show-bitstreams-button' | translate }} {{ nameService.getName(bundle) }}\n          </button>\n        </div>\n        <div class=\"card-body\" [id]=\"bundle.id\" [ngbCollapse]=\"bundleBitstreamsMap.get(bundle.id).isCollapsed\">\n          <ng-container\n            *ngFor=\"let bitstream of (bundleBitstreamsMap.get(bundle.id).bitstreams | async); trackById\">\n            <ds-resource-policies [resourceType]=\"'bitstream'\" [resourceUUID]=\"bitstream.id\"\n              [resourceName]=\"bitstream.name\"></ds-resource-policies>\n          </ng-container>\n          <div class=\"row justify-content-center\" *ngIf=\"!bundleBitstreamsMap.get(bundle.id).allBitstreamsLoaded\">\n            <button type=\"button\" class=\"btn btn-link\" (click)=\"onBitstreamsLoad(bundle)\">{{ 'collection.edit.item.authorizations.load-more-button' | translate }}</button>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n  </ng-container>\n  <div class=\"row justify-content-center\" *ngIf=\"!allBundlesLoaded\">\n    <button type=\"button\" class=\"btn btn-link\" (click)=\"onBundleLoad()\">{{ 'collection.edit.item.authorizations.load-bundle-button' | translate }}</button>\n  </div>\n</div>\n","import {\n  AsyncPipe,\n  CommonModule,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  HostListener,\n  NgZone,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router,\n  RouterLink,\n} from '@angular/router';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport { Operation } from 'fast-json-patch';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  filter,\n  map,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs/operators';\nimport { AlertComponent } from 'src/app/shared/alert/alert.component';\nimport { AlertType } from 'src/app/shared/alert/alert-type';\n\nimport { ObjectCacheService } from '../../../core/cache/object-cache.service';\nimport { BitstreamDataService } from '../../../core/data/bitstream-data.service';\nimport { BundleDataService } from '../../../core/data/bundle-data.service';\nimport { ItemDataService } from '../../../core/data/item-data.service';\nimport { ObjectUpdatesService } from '../../../core/data/object-updates/object-updates.service';\nimport { PaginatedList } from '../../../core/data/paginated-list.model';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { RequestService } from '../../../core/data/request.service';\nimport { Bundle } from '../../../core/shared/bundle.model';\nimport { NoContent } from '../../../core/shared/NoContent.model';\nimport {\n  getFirstSucceededRemoteData,\n  getRemoteDataPayload,\n} from '../../../core/shared/operators';\nimport { BtnDisabledDirective } from '../../../shared/btn-disabled.directive';\nimport {\n  hasValue,\n  isNotEmpty,\n} from '../../../shared/empty.util';\nimport { ThemedLoadingComponent } from '../../../shared/loading/themed-loading.component';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { PaginationComponentOptions } from '../../../shared/pagination/pagination-component-options.model';\nimport { ResponsiveTableSizes } from '../../../shared/responsive-table-sizes/responsive-table-sizes';\nimport { PaginatedSearchOptions } from '../../../shared/search/models/paginated-search-options.model';\nimport { ObjectValuesPipe } from '../../../shared/utils/object-values-pipe';\nimport { VarDirective } from '../../../shared/utils/var.directive';\nimport { AbstractItemUpdateComponent } from '../abstract-item-update/abstract-item-update.component';\nimport { ItemBitstreamsService } from './item-bitstreams.service';\nimport { ItemEditBitstreamBundleComponent } from './item-edit-bitstream-bundle/item-edit-bitstream-bundle.component';\n\n@Component({\n  selector: 'ds-item-bitstreams',\n  styleUrls: ['./item-bitstreams.component.scss'],\n  templateUrl: './item-bitstreams.component.html',\n  imports: [\n    CommonModule,\n    AsyncPipe,\n    TranslateModule,\n    ItemEditBitstreamBundleComponent,\n    RouterLink,\n    NgIf,\n    VarDirective,\n    NgForOf,\n    ThemedLoadingComponent,\n    AlertComponent,\n    BtnDisabledDirective,\n  ],\n  providers: [ObjectValuesPipe],\n  standalone: true,\n})\n/**\n * Component for displaying an item's bitstreams edit page\n */\nexport class ItemBitstreamsComponent extends AbstractItemUpdateComponent implements OnDestroy {\n\n  // Declared for use in template\n  protected readonly AlertType = AlertType;\n\n  /**\n   * All bundles for the current item\n   */\n  private bundlesSubject = new BehaviorSubject<Bundle[]>([]);\n\n  /**\n   * The page options to use for fetching the bundles\n   */\n  bundlesOptions: PaginationComponentOptions = Object.assign(new PaginationComponentOptions(), {\n    id: 'bundles-pagination-options',\n    currentPage: 1,\n    pageSize: 10,\n  });\n\n  /**\n   * The bootstrap sizes used for the columns within this table\n   */\n  columnSizes: ResponsiveTableSizes;\n\n  /**\n   * Are we currently submitting the changes?\n   * Used to disable any action buttons until the submit finishes\n   */\n  submitting = false;\n\n  /**\n   * A subscription that checks when the item is deleted in cache and reloads the item by sending a new request\n   * This is used to update the item in cache after bitstreams are deleted\n   */\n  itemUpdateSubscription: Subscription;\n\n  /**\n   * The flag indicating to show the load more link\n   */\n  showLoadMoreLink$: BehaviorSubject<boolean> = new BehaviorSubject(true);\n\n  /**\n   * The list of bundles for the current item as an observable\n   */\n  get bundles$(): Observable<Bundle[]> {\n    return this.bundlesSubject.asObservable();\n  }\n\n  /**\n   * An observable which emits a boolean which represents whether the service is currently handling a 'move' request\n   */\n  isProcessingMoveRequest: Observable<boolean>;\n\n  constructor(\n    public itemService: ItemDataService,\n    public objectUpdatesService: ObjectUpdatesService,\n    public router: Router,\n    public notificationsService: NotificationsService,\n    public translateService: TranslateService,\n    public route: ActivatedRoute,\n    public bitstreamService: BitstreamDataService,\n    public objectCache: ObjectCacheService,\n    public requestService: RequestService,\n    public cdRef: ChangeDetectorRef,\n    public bundleService: BundleDataService,\n    public zone: NgZone,\n    public itemBitstreamsService: ItemBitstreamsService,\n  ) {\n    super(itemService, objectUpdatesService, router, notificationsService, translateService, route);\n\n    this.columnSizes = this.itemBitstreamsService.getColumnSizes();\n  }\n\n  /**\n   * Actions to perform after the item has been initialized\n   */\n  postItemInit(): void {\n    this.loadBundles(1);\n  }\n\n  /**\n   * Handles keyboard events that should move the currently selected bitstream up\n   */\n  @HostListener('document:keydown.arrowUp', ['$event'])\n  moveUp(event: KeyboardEvent) {\n    if (this.itemBitstreamsService.hasSelectedBitstream()) {\n      event.preventDefault();\n      this.itemBitstreamsService.moveSelectedBitstreamUp();\n    }\n  }\n\n  /**\n   * Handles keyboard events that should move the currently selected bitstream down\n   */\n  @HostListener('document:keydown.arrowDown', ['$event'])\n  moveDown(event: KeyboardEvent) {\n    if (this.itemBitstreamsService.hasSelectedBitstream()) {\n      event.preventDefault();\n      this.itemBitstreamsService.moveSelectedBitstreamDown();\n    }\n  }\n\n  /**\n   * Handles keyboard events that should cancel the currently selected bitstream.\n   * A cancel means that the selected bitstream is returned to its original position and is no longer selected.\n   * @param event\n   */\n  @HostListener('document:keyup.escape', ['$event'])\n  cancelSelection(event: KeyboardEvent) {\n    if (this.itemBitstreamsService.hasSelectedBitstream()) {\n      event.preventDefault();\n      this.itemBitstreamsService.cancelSelection();\n    }\n  }\n\n  /**\n   * Handles keyboard events that should clear the currently selected bitstream.\n   * A clear means that the selected bitstream remains in its current position but is no longer selected.\n   */\n  @HostListener('document:keydown.enter', ['$event'])\n  @HostListener('document:keydown.space', ['$event'])\n  clearSelection(event: KeyboardEvent) {\n    // Only when no specific element is in focus do we want to clear the currently selected bitstream\n    // Otherwise we might clear the selection when a different action was intended, e.g. clicking a button or selecting\n    // a different bitstream.\n    if (\n      this.itemBitstreamsService.hasSelectedBitstream() &&\n      event.target instanceof Element &&\n      event.target.tagName === 'BODY'\n    ) {\n      event.preventDefault();\n      this.itemBitstreamsService.clearSelection();\n    }\n  }\n\n  /**\n   * Initialize the notification messages prefix\n   */\n  initializeNotificationsPrefix(): void {\n    this.notificationsPrefix = 'item.edit.bitstreams.notifications.';\n  }\n\n  /**\n   * Load bundles for the current item\n   * @param currentPage The current page to load\n   */\n  loadBundles(currentPage?: number) {\n    this.bundlesOptions = Object.assign(new PaginationComponentOptions(), this.bundlesOptions, {\n      currentPage: currentPage || this.bundlesOptions.currentPage + 1,\n    });\n    this.itemService.getBundles(this.item.id, new PaginatedSearchOptions({ pagination: this.bundlesOptions })).pipe(\n      getFirstSucceededRemoteData(),\n      getRemoteDataPayload(),\n      tap((bundlesPL: PaginatedList<Bundle>) =>\n        this.showLoadMoreLink$.next(bundlesPL.pageInfo.currentPage < bundlesPL.pageInfo.totalPages),\n      ),\n      map((bundlePage: PaginatedList<Bundle>) => bundlePage.page),\n    ).subscribe((bundles: Bundle[]) => {\n      this.bundlesSubject.next([...this.bundlesSubject.getValue(), ...bundles]);\n    });\n  }\n\n\n  /**\n   * Submit the current changes\n   * Bitstreams marked as deleted send out a delete request to the rest API\n   * Display notifications and reset the current item/updates\n   */\n  submit() {\n    this.submitting = true;\n\n    const removedResponses$ = this.itemBitstreamsService.removeMarkedBitstreams(this.bundles$.pipe(take(1)));\n\n    // Perform the setup actions from above in order and display notifications\n    removedResponses$.subscribe((responses: RemoteData<NoContent>) => {\n      this.itemBitstreamsService.displayNotifications('item.edit.bitstreams.notifications.remove', [responses]);\n      this.submitting = false;\n    });\n  }\n\n  /**\n   * A bitstream was dropped in a new location. Send out a Move Patch request to the REST API, display notifications,\n   * refresh the bundle's cache (so the lists can properly reload) and call the event's callback function (which will\n   * navigate the user to the correct page)\n   * @param bundle  The bundle to send patch requests to\n   * @param event   The event containing the index the bitstream came from and was dropped to\n   */\n  dropBitstream(bundle: Bundle, event: any) {\n    this.zone.runOutsideAngular(() => {\n      if (hasValue(event) && hasValue(event.fromIndex) && hasValue(event.toIndex) && hasValue(event.finish)) {\n        const moveOperation = {\n          op: 'move',\n          from: `/_links/bitstreams/${event.fromIndex}/href`,\n          path: `/_links/bitstreams/${event.toIndex}/href`,\n        } as Operation;\n        this.bundleService.patch(bundle, [moveOperation]).pipe(take(1)).subscribe((response: RemoteData<Bundle>) => {\n          this.zone.run(() => {\n            this.displayNotifications('item.edit.bitstreams.notifications.move', [response]);\n            // Remove all cached requests from this bundle and call the event's callback when the requests are cleared\n            this.requestService.removeByHrefSubstring(bundle.self).pipe(\n              filter((isCached) => isCached),\n              take(1),\n            ).subscribe(() => event.finish());\n          });\n        });\n      }\n    });\n  }\n\n  /**\n   * Display notifications\n   * - Error notification for each failed response with their message\n   * - Success notification in case there's at least one successful response\n   * @param key       The i18n key for the notification messages\n   * @param responses The returned responses to display notifications for\n   */\n  displayNotifications(key: string, responses: RemoteData<any>[]) {\n    if (isNotEmpty(responses)) {\n      const failedResponses = responses.filter((response: RemoteData<Bundle>) => hasValue(response) && response.hasFailed);\n      const successfulResponses = responses.filter((response: RemoteData<Bundle>) => hasValue(response) && response.hasSucceeded);\n\n      failedResponses.forEach((response: RemoteData<Bundle>) => {\n        this.notificationsService.error(this.translateService.instant(`${key}.failed.title`), response.errorMessage);\n      });\n      if (successfulResponses.length > 0) {\n        this.notificationsService.success(this.translateService.instant(`${key}.saved.title`), this.translateService.instant(`${key}.saved.content`));\n      }\n    }\n  }\n\n  /**\n   * Request the object updates service to discard all current changes to this item\n   * Shows a notification to remind the user that they can undo this\n   */\n  discard() {\n    const undoNotification = this.notificationsService.info(this.getNotificationTitle('discarded'), this.getNotificationContent('discarded'), { timeOut: this.discardTimeOut });\n    this.objectUpdatesService.discardAllFieldUpdates(this.url, undoNotification);\n  }\n\n  /**\n   * Request the object updates service to undo discarding all changes to this item\n   */\n  reinstate() {\n    this.bundles$.pipe(take(1)).subscribe((bundles: Bundle[]) => {\n      bundles.forEach((bundle: Bundle) => {\n        this.objectUpdatesService.reinstateFieldUpdates(bundle.self);\n      });\n    });\n  }\n\n  /**\n   * Checks whether or not the object is currently reinstatable\n   */\n  isReinstatable(): Observable<boolean> {\n    return this.bundles$.pipe(\n      switchMap((bundles: Bundle[]) => combineLatest(bundles.map((bundle: Bundle) => this.objectUpdatesService.isReinstatable(bundle.self)))),\n      map((reinstatable: boolean[]) => reinstatable.includes(true)),\n    );\n  }\n\n  /**\n   * Checks whether or not there are currently updates for this object\n   */\n  hasChanges(): Observable<boolean> {\n    return this.bundles$.pipe(\n      switchMap((bundles: Bundle[]) => combineLatest(bundles.map((bundle: Bundle) => this.objectUpdatesService.hasUpdates(bundle.self)))),\n      map((hasChanges: boolean[]) => hasChanges.includes(true)),\n    );\n  }\n\n  /**\n   * Unsubscribe from open subscriptions whenever the component gets destroyed\n   */\n  ngOnDestroy(): void {\n    if (this.itemUpdateSubscription) {\n      this.itemUpdateSubscription.unsubscribe();\n    }\n  }\n}\n","<div class=\"item-bitstreams\" *ngVar=\"(bundles$ | async) as bundles\">\n  <div class=\"mt-2\" id=\"reorder-description\">\n    <ds-alert [content]=\"'item.edit.bitstreams.info-alert'\" [type]=\"AlertType.Info\"></ds-alert>\n  </div>\n\n  <div class=\"button-row top d-flex mt-2 space-children-mr\">\n    <button class=\"mr-auto btn btn-success\"\n            [attr.aria-label]=\"'item.edit.bitstreams.upload-button' | translate\"\n            [routerLink]=\"[itemPageRoute, 'bitstreams', 'new']\"><i\n            class=\"fas fa-upload\"></i>\n      <span class=\"d-none d-sm-inline\">&nbsp;{{\"item.edit.bitstreams.upload-button\" | translate}}</span>\n    </button>\n    <button class=\"btn btn-warning\" *ngIf=\"isReinstatable$ | async\"\n            [attr.aria-label]=\"'item.edit.bitstreams.reinstate-button' | translate\"\n            (click)=\"reinstate()\"><i\n            class=\"fas fa-undo-alt\"></i>\n      <span class=\"d-none d-sm-inline\">&nbsp;{{\"item.edit.bitstreams.reinstate-button\" | translate}}</span>\n    </button>\n    <button class=\"btn btn-primary\" [dsBtnDisabled]=\"(hasChanges$ | async) !== true || submitting\"\n            [attr.aria-label]=\"'item.edit.bitstreams.save-button' | translate\"\n            (click)=\"submit()\"><i\n            class=\"fas fa-save\"></i>\n      <span class=\"d-none d-sm-inline\">&nbsp;{{\"item.edit.bitstreams.save-button\" | translate}}</span>\n    </button>\n    <button class=\"btn btn-danger\" *ngIf=\"(isReinstatable$ | async) !== true\"\n            [attr.aria-label]=\"'item.edit.bitstreams.discard-button' | translate\"\n            [dsBtnDisabled]=\"(hasChanges$ | async) !== true || submitting\"\n            (click)=\"discard()\"><i\n            class=\"fas fa-times\"></i>\n      <span class=\"d-none d-sm-inline\">&nbsp;{{\"item.edit.bitstreams.discard-button\" | translate}}</span>\n    </button>\n  </div>\n\n  <div *ngIf=\"item && bundles?.length > 0\" class=\"mt-4 table-border scrollable-table\" [ngClass]=\"{'disabled-overlay': (isProcessingMoveRequest | async)}\">\n    <ds-item-edit-bitstream-bundle *ngFor=\"let bundle of bundles; first as isFirst\"\n                                   [bundle]=\"bundle\"\n                                   [item]=\"item\"\n                                   [columnSizes]=\"columnSizes\"\n                                   [isFirstTable]=\"isFirst\"\n                                   aria-describedby=\"reorder-description\">\n    </ds-item-edit-bitstream-bundle>\n    <div class=\"d-flex justify-content-center\" *ngIf=\"showLoadMoreLink$ | async\">\n      <button class=\"btn btn-link my-3\" (click)=\"loadBundles()\"> {{'item.edit.bitstreams.load-more.link' | translate}}</button>\n    </div>\n  </div>\n  <div *ngIf=\"bundles?.length === 0\"\n       class=\"alert alert-info w-100 d-inline-block mt-4\" role=\"alert\">\n    {{'item.edit.bitstreams.empty' | translate}}\n  </div>\n  <ds-loading *ngIf=\"!bundles\" message=\"{{'loading.bitstreams' | translate}}\"></ds-loading>\n\n  <div class=\"button-row bottom\">\n    <div class=\"mt-4 float-right space-children-mr ml-gap\">\n      <button class=\"btn btn-warning\" *ngIf=\"isReinstatable$ | async\"\n              [attr.aria-label]=\"'item.edit.bitstreams.reinstate-button' | translate\"\n              (click)=\"reinstate()\"><i\n        class=\"fas fa-undo-alt\"></i>\n        <span class=\"d-none d-sm-inline\">&nbsp;{{\"item.edit.bitstreams.reinstate-button\" | translate}}</span>\n      </button>\n      <button class=\"btn btn-primary\" [dsBtnDisabled]=\"(hasChanges$ | async) !== true || submitting\"\n              [attr.aria-label]=\"'item.edit.bitstreams.save-button' | translate\"\n              (click)=\"submit()\"><i\n        class=\"fas fa-save\"></i>\n        <span class=\"d-none d-sm-inline\">&nbsp;{{\"item.edit.bitstreams.save-button\" | translate}}</span>\n      </button>\n      <button class=\"btn btn-danger\" *ngIf=\"(isReinstatable$ | async) !== true\"\n              [attr.aria-label]=\"'item.edit.bitstreams.discard-button' | translate\"\n              [dsBtnDisabled]=\"(hasChanges$ | async) !== true || submitting\"\n              (click)=\"discard()\"><i\n        class=\"fas fa-times\"></i>\n        <span class=\"d-none d-sm-inline\">&nbsp;{{\"item.edit.bitstreams.discard-button\" | translate}}</span>\n      </button>\n    </div>\n  </div>\n</div>\n\n<ds-loading *ngIf=\"isProcessingMoveRequest | async\" class=\"loading-overlay\"></ds-loading>\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MoveOperation } from 'fast-json-patch';\nimport {\n  BehaviorSubject,\n  Observable,\n  zip as observableZip,\n} from 'rxjs';\nimport {\n  map,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs/operators';\n\nimport { getBitstreamDownloadRoute } from '../../../app-routing-paths';\nimport { DSONameService } from '../../../core/breadcrumbs/dso-name.service';\nimport { BitstreamDataService } from '../../../core/data/bitstream-data.service';\nimport { BundleDataService } from '../../../core/data/bundle-data.service';\nimport { FieldChangeType } from '../../../core/data/object-updates/field-change-type.model';\nimport { FieldUpdate } from '../../../core/data/object-updates/field-update.model';\nimport { FieldUpdates } from '../../../core/data/object-updates/field-updates.model';\nimport { ObjectUpdatesService } from '../../../core/data/object-updates/object-updates.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { RequestService } from '../../../core/data/request.service';\nimport { Bitstream } from '../../../core/shared/bitstream.model';\nimport { BitstreamFormat } from '../../../core/shared/bitstream-format.model';\nimport { Bundle } from '../../../core/shared/bundle.model';\nimport { NoContent } from '../../../core/shared/NoContent.model';\nimport {\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteDataPayload,\n} from '../../../core/shared/operators';\nimport {\n  hasNoValue,\n  hasValue,\n} from '../../../shared/empty.util';\nimport { LiveRegionService } from '../../../shared/live-region/live-region.service';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { PaginationComponentOptions } from '../../../shared/pagination/pagination-component-options.model';\nimport { ResponsiveColumnSizes } from '../../../shared/responsive-table-sizes/responsive-column-sizes';\nimport { ResponsiveTableSizes } from '../../../shared/responsive-table-sizes/responsive-table-sizes';\n\nexport const MOVE_KEY = 'item.edit.bitstreams.notifications.move';\n\n/**\n * Interface storing all the information necessary to create a row in the bitstream edit table\n */\nexport interface BitstreamTableEntry {\n  /**\n   * The bitstream\n   */\n  bitstream: Bitstream,\n  /**\n   * The uuid of the Bitstream\n   */\n  id: string,\n  /**\n   * The name of the Bitstream\n   */\n  name: string,\n  /**\n   * The name of the Bitstream with all whitespace removed\n   */\n  nameStripped: string,\n  /**\n   * The description of the Bitstream\n   */\n  description: string,\n  /**\n   * Observable emitting the Format of the Bitstream\n   */\n  format: Observable<BitstreamFormat>,\n  /**\n   * The download url of the Bitstream\n   */\n  downloadUrl: string,\n}\n\n/**\n * Interface storing information necessary to highlight and reorder the selected bitstream entry\n */\nexport interface SelectedBitstreamTableEntry {\n  /**\n   * The selected entry\n   */\n  bitstream: BitstreamTableEntry,\n  /**\n   * The bundle the bitstream belongs to\n   */\n  bundle: Bundle,\n  /**\n   * The total number of bitstreams in the bundle\n   */\n  bundleSize: number,\n  /**\n   * The original position of the bitstream within the bundle.\n   */\n  originalPosition: number,\n  /**\n   * The current position of the bitstream within the bundle.\n   */\n  currentPosition: number,\n}\n\n/**\n * Interface storing data regarding a change in selected bitstream\n */\nexport interface SelectionAction {\n  /**\n   * The different types of actions:\n   *  - Selected: Bitstream was selected\n   *  - Moved: Bitstream was moved\n   *  - Cleared: Selection was cleared, bitstream remains at its current position\n   *  - Cancelled: Selection was cancelled, bitstream returns to its original position\n   */\n  action: 'Selected' | 'Moved' | 'Cleared' | 'Cancelled'\n  /**\n   * The table entry to which the selection action applies\n   */\n  selectedEntry: SelectedBitstreamTableEntry,\n}\n\n/**\n * This service handles the selection and updating of the bitstreams and their order on the\n * 'Edit Item' -> 'Bitstreams' page.\n */\n@Injectable(\n  { providedIn: 'root' },\n)\nexport class ItemBitstreamsService {\n\n  /**\n   * BehaviorSubject which emits every time the selected bitstream changes.\n   */\n  protected selectionAction$: BehaviorSubject<SelectionAction> = new BehaviorSubject(null);\n\n  protected isPerformingMoveRequest: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(\n    protected notificationsService: NotificationsService,\n    protected translateService: TranslateService,\n    protected objectUpdatesService: ObjectUpdatesService,\n    protected bitstreamService: BitstreamDataService,\n    protected bundleService: BundleDataService,\n    protected dsoNameService: DSONameService,\n    protected requestService: RequestService,\n    protected liveRegionService: LiveRegionService,\n  ) {\n  }\n\n  /**\n   * Returns the observable emitting the selection actions\n   */\n  getSelectionAction$(): Observable<SelectionAction> {\n    return this.selectionAction$;\n  }\n\n  /**\n   * Returns the latest selection action\n   */\n  getSelectionAction(): SelectionAction {\n    const action = this.selectionAction$.value;\n\n    if (hasNoValue(action)) {\n      return null;\n    }\n\n    return Object.assign({}, action);\n  }\n\n  /**\n   * Returns true if there currently is a selected bitstream\n   */\n  hasSelectedBitstream(): boolean {\n    const selectionAction = this.getSelectionAction();\n\n    if (hasNoValue(selectionAction)) {\n      return false;\n    }\n\n    const action = selectionAction.action;\n\n    return action === 'Selected' || action === 'Moved';\n  }\n\n  /**\n   * Returns a copy of the currently selected bitstream\n   */\n  getSelectedBitstream(): SelectedBitstreamTableEntry {\n    if (!this.hasSelectedBitstream()) {\n      return null;\n    }\n\n    const selectionAction = this.getSelectionAction();\n    return Object.assign({}, selectionAction.selectedEntry);\n  }\n\n  /**\n   * Select the provided entry\n   */\n  selectBitstreamEntry(entry: SelectedBitstreamTableEntry) {\n    if (hasValue(entry) && entry.bitstream !== this.getSelectedBitstream()?.bitstream) {\n      this.announceSelect(entry.bitstream.name);\n      this.updateSelectionAction({ action: 'Selected', selectedEntry: entry });\n    }\n  }\n\n  /**\n   * Makes the {@link selectionAction$} observable emit the provided {@link SelectedBitstreamTableEntry}.\n   * @protected\n   */\n  protected updateSelectionAction(action: SelectionAction) {\n    this.selectionAction$.next(action);\n  }\n\n  /**\n   * Unselects the selected bitstream. Does nothing if no bitstream is selected.\n   */\n  clearSelection() {\n    const selected = this.getSelectedBitstream();\n\n    if (hasValue(selected)) {\n      this.updateSelectionAction({ action: 'Cleared', selectedEntry: selected });\n      this.announceClear(selected.bitstream.name);\n\n      if (selected.currentPosition !== selected.originalPosition) {\n        this.displaySuccessNotification(MOVE_KEY);\n      }\n    }\n  }\n\n  /**\n   * Returns the currently selected bitstream to its original position and unselects the bitstream.\n   * Does nothing if no bitstream is selected.\n   */\n  cancelSelection() {\n    const selected = this.getSelectedBitstream();\n\n    if (hasNoValue(selected) || this.getPerformingMoveRequest()) {\n      return;\n    }\n\n\n    const originalPosition = selected.originalPosition;\n    const currentPosition = selected.currentPosition;\n\n    // If the selected bitstream has not moved, there is no need to return it to its original position\n    if (currentPosition === originalPosition) {\n      this.announceClear(selected.bitstream.name);\n      this.updateSelectionAction({ action: 'Cleared', selectedEntry: selected });\n    } else {\n      this.announceCancel(selected.bitstream.name, originalPosition);\n      this.performBitstreamMoveRequest(selected.bundle, currentPosition, originalPosition);\n      this.updateSelectionAction({ action: 'Cancelled', selectedEntry: selected });\n    }\n  }\n\n  /**\n   * Moves the selected bitstream one position up in the bundle. Does nothing if no bitstream is selected or the\n   * selected bitstream already is at the beginning of the bundle.\n   */\n  moveSelectedBitstreamUp() {\n    const selected = this.getSelectedBitstream();\n\n    if (hasNoValue(selected) || this.getPerformingMoveRequest()) {\n      return;\n    }\n\n    const originalPosition = selected.currentPosition;\n    if (originalPosition > 0) {\n      const newPosition = originalPosition - 1;\n      selected.currentPosition = newPosition;\n\n      const onRequestCompleted = () => {\n        this.announceMove(selected.bitstream.name, newPosition);\n      };\n\n      this.performBitstreamMoveRequest(selected.bundle, originalPosition, newPosition, onRequestCompleted);\n      this.updateSelectionAction({ action: 'Moved', selectedEntry: selected });\n    }\n  }\n\n  /**\n   * Moves the selected bitstream one position down in the bundle. Does nothing if no bitstream is selected or the\n   * selected bitstream already is at the end of the bundle.\n   */\n  moveSelectedBitstreamDown() {\n    const selected = this.getSelectedBitstream();\n\n    if (hasNoValue(selected) || this.getPerformingMoveRequest()) {\n      return;\n    }\n\n    const originalPosition = selected.currentPosition;\n    if (originalPosition < selected.bundleSize - 1) {\n      const newPosition = originalPosition + 1;\n      selected.currentPosition = newPosition;\n\n      const onRequestCompleted = () => {\n        this.announceMove(selected.bitstream.name, newPosition);\n      };\n\n      this.performBitstreamMoveRequest(selected.bundle, originalPosition, newPosition, onRequestCompleted);\n      this.updateSelectionAction({ action: 'Moved', selectedEntry: selected });\n    }\n  }\n\n  /**\n   * Sends out a Move Patch request to the REST API, display notifications,\n   * refresh the bundle's cache (so the lists can properly reload)\n   * @param bundle The bundle to send patch requests to\n   * @param fromIndex The index to move from\n   * @param toIndex The index to move to\n   * @param finish Optional: Function to execute once the response has been received\n   */\n  performBitstreamMoveRequest(bundle: Bundle, fromIndex: number, toIndex: number, finish?: () => void) {\n    if (this.getPerformingMoveRequest()) {\n      console.warn('Attempted to perform move request while previous request has not completed yet');\n      return;\n    }\n\n    const moveOperation: MoveOperation = {\n      op: 'move',\n      from: `/_links/bitstreams/${fromIndex}/href`,\n      path: `/_links/bitstreams/${toIndex}/href`,\n    };\n\n    this.announceLoading();\n    this.isPerformingMoveRequest.next(true);\n    this.bundleService.patch(bundle, [moveOperation]).pipe(\n      getFirstCompletedRemoteData(),\n      tap((response: RemoteData<Bundle>) => this.displayFailedResponseNotifications(MOVE_KEY, [response])),\n      switchMap(() => this.requestService.setStaleByHrefSubstring(bundle.self)),\n      take(1),\n    ).subscribe(() => {\n      this.isPerformingMoveRequest.next(false);\n      finish?.();\n    });\n  }\n\n  /**\n   * Whether the service currently is processing a 'move' request\n   */\n  getPerformingMoveRequest(): boolean {\n    return this.isPerformingMoveRequest.value;\n  }\n\n  /**\n   * Returns an observable which emits when the service starts, or ends, processing a 'move' request\n   */\n  getPerformingMoveRequest$(): Observable<boolean> {\n    return this.isPerformingMoveRequest;\n  }\n\n  /**\n   * Returns the pagination options to use when fetching the bundles\n   */\n  getInitialBundlesPaginationOptions(): PaginationComponentOptions {\n    return Object.assign(new PaginationComponentOptions(), {\n      id: 'bundles-pagination-options',\n      currentPage: 1,\n      pageSize: 9999,\n    });\n  }\n\n  /**\n   * Returns the initial pagination options to use when fetching the bitstreams\n   * @param bundleName The name of the bundle, will be as pagination id.\n   */\n  getInitialBitstreamsPaginationOptions(bundleName: string): PaginationComponentOptions {\n    return Object.assign(new PaginationComponentOptions(),{\n      id: bundleName, // This might behave unexpectedly if the item contains two bundles with the same name\n      currentPage: 1,\n      pageSize: 10,\n    });\n  }\n\n  /**\n   * Returns the {@link ResponsiveTableSizes} for use in the columns of the edit bitstreams table\n   */\n  getColumnSizes(): ResponsiveTableSizes {\n    return new ResponsiveTableSizes([\n      // Name column\n      new ResponsiveColumnSizes(2, 2, 3, 4, 4),\n      // Description column\n      new ResponsiveColumnSizes(2, 3, 3, 3, 3),\n      // Format column\n      new ResponsiveColumnSizes(2, 2, 2, 2, 2),\n      // Actions column\n      new ResponsiveColumnSizes(6, 5, 4, 3, 3),\n    ]);\n  }\n\n  /**\n   * Display notifications\n   * - Error notification for each failed response with their message\n   * - Success notification in case there's at least one successful response\n   * @param key       The i18n key for the notification messages\n   * @param responses The returned responses to display notifications for\n   */\n  displayNotifications(key: string, responses: RemoteData<any>[]) {\n    this.displayFailedResponseNotifications(key, responses);\n    this.displaySuccessFulResponseNotifications(key, responses);\n  }\n\n  /**\n   * Display an error notification for each failed response with their message\n   * @param key       The i18n key for the notification messages\n   * @param responses The returned responses to display notifications for\n   */\n  displayFailedResponseNotifications(key: string, responses: RemoteData<any>[]) {\n    const failedResponses = responses.filter((response: RemoteData<Bundle>) => hasValue(response) && response.hasFailed);\n    failedResponses.forEach((response: RemoteData<Bundle>) => {\n      this.displayErrorNotification(key, response.errorMessage);\n    });\n  }\n\n  /**\n   * Display an error notification with the provided key and message\n   * @param key          The i18n key for the notification messages\n   * @param errorMessage The error message to display\n   */\n  displayErrorNotification(key: string, errorMessage: string) {\n    this.notificationsService.error(this.translateService.instant(`${key}.failed.title`), errorMessage);\n  }\n\n  /**\n   * Display a success notification in case there's at least one successful response\n   * @param key       The i18n key for the notification messages\n   * @param responses The returned responses to display notifications for\n   */\n  displaySuccessFulResponseNotifications(key: string, responses: RemoteData<any>[]) {\n    const successfulResponses = responses.filter((response: RemoteData<Bundle>) => hasValue(response) && response.hasSucceeded);\n    if (successfulResponses.length > 0) {\n      this.displaySuccessNotification(key);\n    }\n  }\n\n  /**\n   * Display a success notification with the provided key\n   * @param key          The i18n key for the notification messages\n   */\n  displaySuccessNotification(key: string) {\n    this.notificationsService.success(this.translateService.instant(`${key}.saved.title`), this.translateService.instant(`${key}.saved.content`));\n  }\n\n  /**\n   * Removes the bitstreams marked for deletion from the Bundles emitted by the provided observable.\n   * @param bundles$\n   */\n  removeMarkedBitstreams(bundles$: Observable<Bundle[]>): Observable<RemoteData<NoContent>> {\n    const bundlesOnce$ = bundles$.pipe(take(1));\n\n    // Fetch all removed bitstreams from the object update service\n    const removedBitstreams$ = bundlesOnce$.pipe(\n      switchMap((bundles: Bundle[]) => observableZip(\n        ...bundles.map((bundle: Bundle) => this.objectUpdatesService.getFieldUpdates(bundle.self, [], true)),\n      )),\n      map((fieldUpdates: FieldUpdates[]) => ([] as FieldUpdate[]).concat(\n        ...fieldUpdates.map((updates: FieldUpdates) => Object.values(updates).filter((fieldUpdate: FieldUpdate) => fieldUpdate.changeType === FieldChangeType.REMOVE)),\n      )),\n      map((fieldUpdates: FieldUpdate[]) => fieldUpdates.map((fieldUpdate: FieldUpdate) => fieldUpdate.field)),\n    );\n\n    // Send out delete requests for all deleted bitstreams\n    return removedBitstreams$.pipe(\n      take(1),\n      switchMap((removedBitstreams: Bitstream[]) => {\n        return this.bitstreamService.removeMultiple(removedBitstreams);\n      }),\n    );\n  }\n\n  /**\n   * Creates an array of {@link BitstreamTableEntry}s from an array of {@link Bitstream}s\n   * @param bitstreams The bitstreams array to map to table entries\n   */\n  mapBitstreamsToTableEntries(bitstreams: Bitstream[]): BitstreamTableEntry[] {\n    return bitstreams.map((bitstream) => {\n      const name = this.dsoNameService.getName(bitstream);\n\n      return {\n        bitstream: bitstream,\n        id: bitstream.uuid,\n        name: name,\n        nameStripped: this.nameToHeader(name),\n        description: bitstream.firstMetadataValue('dc.description'),\n        format: bitstream.format.pipe(getFirstSucceededRemoteDataPayload()),\n        downloadUrl: getBitstreamDownloadRoute(bitstream),\n      };\n    });\n  }\n\n  /**\n   * Returns a string appropriate to be used as header ID\n   * @param name\n   */\n  nameToHeader(name: string): string {\n    // Whitespace is stripped from the Bitstream names for accessibility reasons.\n    // To make it clear which headers are relevant for a specific field in the table, the 'headers' attribute is used to\n    // refer to specific headers. The Bitstream's name is used as header ID for the row containing information regarding\n    // that bitstream. As the 'headers' attribute contains a space-separated string of header IDs, the Bitstream's header\n    // ID can not contain spaces itself.\n    return this.stripWhiteSpace(name);\n  }\n\n  /**\n   * Returns a string equal to the input string with all whitespace removed.\n   * @param str\n   */\n  stripWhiteSpace(str: string): string {\n    // '/\\s+/g' matches all occurrences of any amount of whitespace characters\n    return str.replace(/\\s+/g, '');\n  }\n\n  /**\n   * Adds a message to the live region mentioning that the bitstream with the provided name was selected.\n   * @param bitstreamName The name of the bitstream that was selected.\n   */\n  announceSelect(bitstreamName: string) {\n    const message = this.translateService.instant('item.edit.bitstreams.edit.live.select',\n      { bitstream: bitstreamName });\n    this.liveRegionService.addMessage(message);\n  }\n\n  /**\n   * Adds a message to the live region mentioning that the bitstream with the provided name was moved to the provided\n   * position.\n   * @param bitstreamName The name of the bitstream that moved.\n   * @param toPosition The zero-indexed position that the bitstream moved to.\n   */\n  announceMove(bitstreamName: string, toPosition: number) {\n    const message = this.translateService.instant('item.edit.bitstreams.edit.live.move',\n      { bitstream: bitstreamName, toIndex: toPosition + 1 });\n    this.liveRegionService.addMessage(message);\n  }\n\n  /**\n   * Adds a message to the live region mentioning that the bitstream with the provided name is no longer selected and\n   * was returned to the provided position.\n   * @param bitstreamName The name of the bitstream that is no longer selected\n   * @param toPosition The zero-indexed position the bitstream returned to.\n   */\n  announceCancel(bitstreamName: string, toPosition: number) {\n    const message = this.translateService.instant('item.edit.bitstreams.edit.live.cancel',\n      { bitstream: bitstreamName, toIndex: toPosition + 1 });\n    this.liveRegionService.addMessage(message);\n  }\n\n  /**\n   * Adds a message to the live region mentioning that the bitstream with the provided name is no longer selected.\n   * @param bitstreamName The name of the bitstream that is no longer selected.\n   */\n  announceClear(bitstreamName: string) {\n    const message = this.translateService.instant('item.edit.bitstreams.edit.live.clear',\n      { bitstream: bitstreamName });\n    this.liveRegionService.addMessage(message);\n  }\n\n  /**\n   * Adds a message to the live region mentioning that the\n   */\n  announceLoading() {\n    const message = this.translateService.instant('item.edit.bitstreams.edit.live.loading');\n    this.liveRegionService.addMessage(message);\n  }\n}\n","import {\n  CdkDrag,\n  CdkDragDrop,\n  CdkDropList,\n} from '@angular/cdk/drag-drop';\nimport {\n  AsyncPipe,\n  CommonModule,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport {\n  NgbDropdownModule,\n  NgbTooltipModule,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  Observable,\n  shareReplay,\n  Subscription,\n  switchMap,\n} from 'rxjs';\nimport {\n  filter,\n  map,\n  take,\n  tap,\n} from 'rxjs/operators';\nimport { PaginatedList } from 'src/app/core/data/paginated-list.model';\nimport { RemoteData } from 'src/app/core/data/remote-data';\nimport { Bitstream } from 'src/app/core/shared/bitstream.model';\n\nimport { DSONameService } from '../../../../core/breadcrumbs/dso-name.service';\nimport { BundleDataService } from '../../../../core/data/bundle-data.service';\nimport { FieldChangeType } from '../../../../core/data/object-updates/field-change-type.model';\nimport { FieldUpdate } from '../../../../core/data/object-updates/field-update.model';\nimport { FieldUpdates } from '../../../../core/data/object-updates/field-updates.model';\nimport { ObjectUpdatesService } from '../../../../core/data/object-updates/object-updates.service';\nimport { RequestService } from '../../../../core/data/request.service';\nimport { PaginationService } from '../../../../core/pagination/pagination.service';\nimport { Bundle } from '../../../../core/shared/bundle.model';\nimport { Item } from '../../../../core/shared/item.model';\nimport {\n  getAllSucceededRemoteData,\n  paginatedListToArray,\n} from '../../../../core/shared/operators';\nimport { BtnDisabledDirective } from '../../../../shared/btn-disabled.directive';\nimport {\n  hasNoValue,\n  hasValue,\n} from '../../../../shared/empty.util';\nimport { PaginationComponent } from '../../../../shared/pagination/pagination.component';\nimport { PaginationComponentOptions } from '../../../../shared/pagination/pagination-component-options.model';\nimport { ResponsiveColumnSizes } from '../../../../shared/responsive-table-sizes/responsive-column-sizes';\nimport { ResponsiveTableSizes } from '../../../../shared/responsive-table-sizes/responsive-table-sizes';\nimport { PaginatedSearchOptions } from '../../../../shared/search/models/paginated-search-options.model';\nimport { BrowserOnlyPipe } from '../../../../shared/utils/browser-only.pipe';\nimport { followLink } from '../../../../shared/utils/follow-link-config.model';\nimport { getItemPageRoute } from '../../../item-page-routing-paths';\nimport {\n  BitstreamTableEntry,\n  ItemBitstreamsService,\n  MOVE_KEY,\n  SelectedBitstreamTableEntry,\n  SelectionAction,\n} from '../item-bitstreams.service';\n\n@Component({\n  selector: 'ds-item-edit-bitstream-bundle',\n  styleUrls: ['../item-bitstreams.component.scss', './item-edit-bitstream-bundle.component.scss'],\n  templateUrl: './item-edit-bitstream-bundle.component.html',\n  imports: [\n    CommonModule,\n    TranslateModule,\n    RouterLink,\n    AsyncPipe,\n    PaginationComponent,\n    NgbTooltipModule,\n    CdkDropList,\n    NgbDropdownModule,\n    CdkDrag,\n    BrowserOnlyPipe,\n    BtnDisabledDirective,\n  ],\n  standalone: true,\n})\n/**\n * Component that displays a single bundle of an item on the item bitstreams edit page\n * Creates an embedded view of the contents. This is to ensure the table structure won't break.\n * (which means it'll be added to the parents html without a wrapping ds-item-edit-bitstream-bundle element)\n */\nexport class ItemEditBitstreamBundleComponent implements OnInit, OnDestroy {\n  protected readonly FieldChangeType = FieldChangeType;\n\n  /**\n   * The view on the bundle information and bitstreams\n   */\n  @ViewChild('bundleView', { static: true }) bundleView;\n\n  /**\n   * The view on the pagination component\n   */\n  @ViewChild(PaginationComponent) paginationComponent: PaginationComponent;\n\n  /**\n   * The view on the drag tooltip\n   */\n  @ViewChild('dragTooltip') dragTooltip;\n\n  /**\n   * The bundle to display bitstreams for\n   */\n  @Input() bundle: Bundle;\n\n  /**\n   * The item the bundle belongs to\n   */\n  @Input() item: Item;\n\n  /**\n   * The bootstrap sizes used for the columns within this table\n   */\n  @Input() columnSizes: ResponsiveTableSizes;\n\n  /**\n   * Whether this is the first in a series of bundle tables\n   */\n  @Input() isFirstTable = false;\n\n  /**\n   * The bootstrap sizes used for the Bundle Name column\n   * This column stretches over the first 3 columns and thus is a combination of their sizes processed in ngOnInit\n   */\n  bundleNameColumn: ResponsiveColumnSizes;\n\n  /**\n   * Route to the item's page\n   */\n  itemPageRoute: string;\n\n  /**\n   * The name of the bundle\n   */\n  bundleName: string;\n\n  /**\n   * The number of bitstreams in the bundle\n   */\n  bundleSize: number;\n\n  /**\n   * The bitstreams to show in the table\n   */\n  bitstreamsRD$: Observable<RemoteData<PaginatedList<Bitstream>>>;\n\n  /**\n   * The data to show in the table\n   */\n  tableEntries$: BehaviorSubject<BitstreamTableEntry[]> = new BehaviorSubject([]);\n\n  /**\n   * The initial page options to use for fetching the bitstreams\n   */\n  paginationOptions: PaginationComponentOptions;\n\n  /**\n   * The current page options\n   */\n  currentPaginationOptions$: BehaviorSubject<PaginationComponentOptions>;\n\n  /**\n   * The currently selected page size\n   */\n  pageSize$: BehaviorSubject<number>;\n\n  /**\n   * The self url of the bundle, also used when retrieving fieldUpdates\n   */\n  bundleUrl: string;\n\n  /**\n   * The updates to the current bitstreams\n   */\n  updates$: BehaviorSubject<FieldUpdates> = new BehaviorSubject(null);\n\n  /**\n   * Array containing all subscriptions created by this component\n   */\n  subscriptions: Subscription[] = [];\n\n\n  constructor(\n    protected viewContainerRef: ViewContainerRef,\n    public dsoNameService: DSONameService,\n    protected bundleService: BundleDataService,\n    protected objectUpdatesService: ObjectUpdatesService,\n    protected paginationService: PaginationService,\n    protected requestService: RequestService,\n    protected itemBitstreamsService: ItemBitstreamsService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.bundleNameColumn = this.columnSizes.combineColumns(0, 2);\n    this.viewContainerRef.createEmbeddedView(this.bundleView);\n    this.itemPageRoute = getItemPageRoute(this.item);\n    this.bundleName = this.dsoNameService.getName(this.bundle);\n    this.bundleUrl = this.bundle.self;\n\n    this.initializePagination();\n    this.initializeBitstreams();\n    this.initializeSelectionActions();\n  }\n\n  ngOnDestroy() {\n    this.viewContainerRef.clear();\n    this.subscriptions.forEach(sub => sub?.unsubscribe());\n  }\n\n  protected initializePagination() {\n    this.paginationOptions = this.itemBitstreamsService.getInitialBitstreamsPaginationOptions(this.bundleName);\n\n    this.currentPaginationOptions$ = new BehaviorSubject(this.paginationOptions);\n    this.pageSize$ = new BehaviorSubject(this.paginationOptions.pageSize);\n\n    this.subscriptions.push(\n      this.paginationService.getCurrentPagination(this.paginationOptions.id, this.paginationOptions)\n        .subscribe((pagination) => {\n          this.currentPaginationOptions$.next(pagination);\n          this.pageSize$.next(pagination.pageSize);\n        }),\n    );\n\n  }\n\n  protected initializeBitstreams() {\n    this.bitstreamsRD$ = this.currentPaginationOptions$.pipe(\n      switchMap((page: PaginationComponentOptions) => {\n        const paginatedOptions = new PaginatedSearchOptions({ pagination: Object.assign({}, page) });\n        return this.bundleService.getBitstreamsEndpoint(this.bundle.id, paginatedOptions).pipe(\n          switchMap((href) => this.requestService.hasByHref$(href)),\n          switchMap(() => this.bundleService.getBitstreams(\n            this.bundle.id,\n            paginatedOptions,\n            followLink('format'),\n          )),\n        );\n      }),\n      getAllSucceededRemoteData(),\n      shareReplay({ bufferSize: 1, refCount: true }),\n    );\n\n    this.subscriptions.push(\n      this.bitstreamsRD$.pipe(\n        take(1),\n        tap(bitstreamsRD => this.bundleSize = bitstreamsRD.payload.totalElements),\n        paginatedListToArray(),\n      ).subscribe((bitstreams) => {\n        this.objectUpdatesService.initialize(this.bundleUrl, bitstreams, new Date());\n      }),\n\n      this.bitstreamsRD$.pipe(\n        paginatedListToArray(),\n        switchMap((bitstreams) => this.objectUpdatesService.getFieldUpdatesExclusive(this.bundleUrl, bitstreams)),\n      ).subscribe((updates) => this.updates$.next(updates)),\n\n      this.bitstreamsRD$.pipe(\n        paginatedListToArray(),\n        map((bitstreams) => this.itemBitstreamsService.mapBitstreamsToTableEntries(bitstreams)),\n      ).subscribe((tableEntries) => this.tableEntries$.next(tableEntries)),\n    );\n  }\n\n  protected initializeSelectionActions() {\n    this.subscriptions.push(\n      this.itemBitstreamsService.getSelectionAction$().subscribe(\n        selectionAction => this.handleSelectionAction(selectionAction)),\n    );\n  }\n\n  /**\n   * Handles a change in selected bitstream by changing the pagination if the change happened on a different page\n   * @param selectionAction\n   */\n  handleSelectionAction(selectionAction: SelectionAction) {\n    if (hasNoValue(selectionAction) || selectionAction.selectedEntry.bundle !== this.bundle) {\n      return;\n    }\n\n    if (selectionAction.action === 'Moved') {\n      // If the currently selected bitstream belongs to this bundle, it has possibly moved to a different page.\n      // In that case we want to change the pagination to the new page.\n      this.redirectToCurrentPage(selectionAction.selectedEntry);\n    }\n\n    if (selectionAction.action === 'Cancelled') {\n      // If the selection is cancelled (and returned to its original position), it is possible the previously selected\n      // bitstream is returned to a different page. In that case we want to change the pagination to the place where\n      // the bitstream was returned to.\n      this.redirectToOriginalPage(selectionAction.selectedEntry);\n    }\n\n    if (selectionAction.action === 'Cleared') {\n      // If the selection is cleared, it is possible the previously selected bitstream is on a different page. In that\n      // case we want to change the pagination to the place where the bitstream is.\n      this.redirectToCurrentPage(selectionAction.selectedEntry);\n    }\n  }\n\n  /**\n   * Redirect the user to the current page of the provided bitstream if it is on a different page.\n   * @param bitstreamEntry The entry that the current position will be taken from to determine the page to move to\n   * @protected\n   */\n  protected redirectToCurrentPage(bitstreamEntry: SelectedBitstreamTableEntry) {\n    const currentPage = this.getCurrentPage();\n    const selectedEntryPage = this.bundleIndexToPage(bitstreamEntry.currentPosition);\n\n    if (currentPage !== selectedEntryPage) {\n      this.changeToPage(selectedEntryPage);\n    }\n  }\n\n  /**\n   * Redirect the user to the original page of the provided bitstream if it is on a different page.\n   * @param bitstreamEntry The entry that the original position will be taken from to determine the page to move to\n   * @protected\n   */\n  protected redirectToOriginalPage(bitstreamEntry: SelectedBitstreamTableEntry) {\n    const currentPage = this.getCurrentPage();\n    const originPage = this.bundleIndexToPage(bitstreamEntry.originalPosition);\n\n    if (currentPage !== originPage) {\n      this.changeToPage(originPage);\n    }\n  }\n\n  /**\n   * Check if a user should be allowed to remove this field\n   */\n  canRemove(fieldUpdate: FieldUpdate): boolean {\n    return fieldUpdate.changeType !== FieldChangeType.REMOVE;\n  }\n\n  /**\n   * Check if a user should be allowed to cancel the update to this field\n   */\n  canUndo(fieldUpdate: FieldUpdate): boolean {\n    return fieldUpdate.changeType >= FieldChangeType.UPDATE;\n  }\n\n  /**\n   * Sends a new remove update for this field to the object updates service\n   */\n  remove(bitstream: Bitstream): void {\n    this.objectUpdatesService.saveRemoveFieldUpdate(this.bundleUrl, bitstream);\n  }\n\n  /**\n   * Cancels the current update for this field in the object updates service\n   */\n  undo(bitstream: Bitstream): void {\n    this.objectUpdatesService.removeSingleFieldUpdate(this.bundleUrl, bitstream.uuid);\n  }\n\n  /**\n   * Returns the css class for a table row depending on the state of the table entry.\n   * @param update\n   * @param bitstream\n   */\n  getRowClass(update: FieldUpdate, bitstream: BitstreamTableEntry): string {\n    const selected = this.itemBitstreamsService.getSelectedBitstream();\n\n    if (hasValue(selected) && bitstream.id === selected.bitstream.id) {\n      return 'table-info';\n    }\n\n    switch (update.changeType) {\n      case FieldChangeType.UPDATE:\n        return 'table-warning';\n      case FieldChangeType.ADD:\n        return 'table-success';\n      case FieldChangeType.REMOVE:\n        return 'table-danger';\n      default:\n        return 'bg-white';\n    }\n  }\n\n  /**\n   * Changes the page size to the provided page size.\n   * @param pageSize\n   */\n  public doPageSizeChange(pageSize: number) {\n    this.paginationComponent.doPageSizeChange(pageSize);\n  }\n\n  /**\n   * Handles start of dragging by opening the tooltip mentioning that it is possible to drag a bitstream to a different\n   * page by dropping it on the page number, only if there are multiple pages.\n   */\n  dragStart() {\n    // Only open the drag tooltip when there are multiple pages\n    this.paginationComponent.shouldShowBottomPager.pipe(\n      take(1),\n      filter((hasMultiplePages) => hasMultiplePages),\n    ).subscribe(() => {\n      this.dragTooltip.open();\n    });\n  }\n\n  /**\n   * Handles end of dragging by closing the tooltip.\n   */\n  dragEnd() {\n    this.dragTooltip.close();\n  }\n\n  /**\n   * Handles dropping by calculation the target position, and changing the page if the bitstream was dropped on a\n   * different page.\n   * @param event\n   */\n  drop(event: CdkDragDrop<any>) {\n    const dragIndex = event.previousIndex;\n    let dropIndex = event.currentIndex;\n    const dragPage = this.getCurrentPage();\n    let dropPage = this.getCurrentPage();\n\n    // Check if the user is hovering over any of the pagination's pages at the time of dropping the object\n    const droppedOnElement = document.elementFromPoint(event.dropPoint.x, event.dropPoint.y);\n    if (hasValue(droppedOnElement) && hasValue(droppedOnElement.textContent) && droppedOnElement.classList.contains('page-link')) {\n      // The user is hovering over a page, fetch the page's number from the element\n      let droppedPage = Number(droppedOnElement.textContent);\n      if (hasValue(droppedPage) && !Number.isNaN(droppedPage)) {\n        droppedPage -= 1;\n\n        if (droppedPage !== dragPage) {\n          dropPage = droppedPage;\n\n          if (dropPage > dragPage) {\n            // When moving to later page, place bitstream at the top\n            dropIndex = 0;\n          } else {\n            // When moving to earlier page, place bitstream at the bottom\n            dropIndex = this.getCurrentPageSize() - 1;\n          }\n        }\n      }\n    }\n\n    const fromIndex = this.pageIndexToBundleIndex(dragIndex, dragPage);\n    const toIndex = this.pageIndexToBundleIndex(dropIndex, dropPage);\n\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const selectedBitstream = this.tableEntries$.value[dragIndex];\n\n    const finish = () => {\n      this.itemBitstreamsService.announceMove(selectedBitstream.name, toIndex);\n\n      if (dropPage !== this.getCurrentPage()) {\n        this.changeToPage(dropPage);\n      }\n\n      this.itemBitstreamsService.displaySuccessNotification(MOVE_KEY);\n    };\n\n    this.itemBitstreamsService.performBitstreamMoveRequest(this.bundle, fromIndex, toIndex, finish);\n  }\n\n  /**\n   * Handles a select action for the provided bitstream entry.\n   * If the selected bitstream is currently selected, the selection is cleared.\n   * If no, or a different bitstream, is selected, the provided bitstream becomes the selected bitstream.\n   * @param event The event that triggered the select action\n   * @param bitstream The bitstream that is the target of the select action\n   */\n  select(event: UIEvent, bitstream: BitstreamTableEntry) {\n    event.preventDefault();\n\n    if (event instanceof KeyboardEvent && event.repeat) {\n      // Don't handle hold events, otherwise it would change rapidly between being selected and unselected\n      return;\n    }\n\n    const selectedBitstream = this.itemBitstreamsService.getSelectedBitstream();\n\n    if (hasValue(selectedBitstream) && selectedBitstream.bitstream === bitstream) {\n      this.itemBitstreamsService.cancelSelection();\n    } else {\n      const selectionObject = this.createBitstreamSelectionObject(bitstream);\n\n      if (hasNoValue(selectionObject)) {\n        console.warn('Failed to create selection object');\n        return;\n      }\n\n      this.itemBitstreamsService.selectBitstreamEntry(selectionObject);\n    }\n  }\n\n  /**\n   * Creates a {@link SelectedBitstreamTableEntry} from the provided {@link BitstreamTableEntry} so it can be given\n   * to the {@link ItemBitstreamsService} to select the table entry.\n   * @param bitstream The table entry to create the selection object from.\n   * @protected\n   */\n  protected createBitstreamSelectionObject(bitstream: BitstreamTableEntry): SelectedBitstreamTableEntry {\n    const pageIndex = this.findBitstreamPageIndex(bitstream);\n\n    if (pageIndex === -1) {\n      return null;\n    }\n\n    const position = this.pageIndexToBundleIndex(pageIndex, this.getCurrentPage());\n\n    return {\n      bitstream: bitstream,\n      bundle: this.bundle,\n      bundleSize: this.bundleSize,\n      currentPosition: position,\n      originalPosition: position,\n    };\n  }\n\n  /**\n   * Returns the index of the provided {@link BitstreamTableEntry} relative to the current page\n   * If the current page size is 10, it will return a value from 0 to 9 (inclusive)\n   * Returns -1 if the provided bitstream could not be found\n   * @protected\n   */\n  protected findBitstreamPageIndex(bitstream: BitstreamTableEntry): number {\n    const entries = this.tableEntries$.value;\n    return entries.findIndex(entry => entry === bitstream);\n  }\n\n  /**\n   * Returns the current zero-indexed page\n   * @protected\n   */\n  protected getCurrentPage(): number {\n    // The pagination component uses one-based numbering while zero-based numbering is more convenient for calculations\n    return this.currentPaginationOptions$.value.currentPage - 1;\n  }\n\n  /**\n   * Returns the current page size\n   * @protected\n   */\n  protected getCurrentPageSize(): number {\n    return this.currentPaginationOptions$.value.pageSize;\n  }\n\n  /**\n   * Converts an index relative to the page to an index relative to the bundle\n   * @param index The index relative to the page\n   * @param page  The zero-indexed page number\n   * @protected\n   */\n  protected pageIndexToBundleIndex(index: number, page: number) {\n    return page * this.getCurrentPageSize() + index;\n  }\n\n  /**\n   * Calculates the zero-indexed page number from the index relative to the bundle\n   * @param index The index relative to the bundle\n   * @protected\n   */\n  protected bundleIndexToPage(index: number) {\n    return Math.floor(index / this.getCurrentPageSize());\n  }\n\n  /**\n   * Change the pagination for this bundle to the provided zero-indexed page\n   * @param page The zero-indexed page to change to\n   * @protected\n   */\n  protected changeToPage(page: number) {\n    // Increments page by one because zero-indexing is way easier for calculations but the pagination component\n    // uses one-indexing.\n    this.paginationComponent.doPageChange(page + 1);\n  }\n\n}\n","<ng-template #bundleView>\n\n  <ds-pagination *ngIf=\"(bitstreamsRD$ | async)?.payload as bitstreamsList\"\n                 [hideGear]=\"true\"\n                 [hidePagerWhenSinglePage]=\"true\"\n                 [hidePaginationDetail]=\"true\"\n                 [paginationOptions]=\"paginationOptions\"\n                 [collectionSize]=\"bitstreamsList.totalElements\"\n                 [retainScrollPosition]=\"true\"\n                 [ngbTooltip]=\"'item.edit.bitstreams.bundle.tooltip' | translate\" placement=\"bottom\"\n                 [autoClose]=\"false\" triggers=\"manual\" #dragTooltip=\"ngbTooltip\">\n    <ng-container *ngIf=\"(updates$ | async) as updates\">\n\n      <table class=\"table\" [class.mt-n1]=\"!isFirstTable\"\n             [attr.aria-label]=\"'item.edit.bitstreams.bundle.table.aria-label' | translate: { bundle: bundleName } \">\n        <thead [class.visually-hidden]=\"!isFirstTable\">\n        <tr class=\"header-row font-weight-bold\">\n          <th id=\"name\" scope=\"col\" class=\"{{ columnSizes.columns[0].buildClasses() }}\">\n            {{'item.edit.bitstreams.headers.name' | translate}}\n          </th>\n          <th id=\"description\" scope=\"col\" class=\"{{ columnSizes.columns[1].buildClasses() }}\">\n            {{'item.edit.bitstreams.headers.description' | translate}}\n          </th>\n          <th id=\"format\" scope=\"col\" class=\"{{ columnSizes.columns[2].buildClasses() }}\">\n            {{'item.edit.bitstreams.headers.format' | translate}}\n          </th>\n          <th id=\"actions\" scope=\"col\" class=\"{{ columnSizes.columns[3].buildClasses() }} text-center\">\n            {{'item.edit.bitstreams.headers.actions' | translate}}\n          </th>\n        </tr>\n        </thead>\n\n        <tbody cdkDropList (cdkDropListDropped)=\"drop($event)\">\n        <tr class=\"bundle-row\">\n          <th id=\"{{ bundleName }}\" class=\"span\" colspan=\"3\" scope=\"colgroup\">\n            {{'item.edit.bitstreams.bundle.name' | translate:{ name: bundleName } }}\n          </th>\n          <td class=\"text-center\">\n\n            <div class=\"btn-group\">\n              <button [routerLink]=\"[itemPageRoute, 'bitstreams', 'new']\"\n                      [queryParams]=\"{bundle: bundle.id}\"\n                      [attr.aria-label]=\"'item.edit.bitstreams.bundle.edit.buttons.upload' | translate\"\n                      class=\"btn btn-outline-success btn-sm\"\n                      title=\"{{'item.edit.bitstreams.bundle.edit.buttons.upload' | translate}}\">\n                <i class=\"fas fa-upload fa-fw\"></i>\n              </button>\n              <div ngbDropdown #paginationControls=\"ngbDropdown\" class=\"btn-group float-right btn-sm p-0\"\n                   placement=\"bottom-right\">\n                <button class=\"btn btn-outline-secondary\" id=\"paginationControls\" ngbDropdownToggle\n                        [title]=\"'pagination.options.description' | translate\"\n                        [attr.aria-label]=\"'pagination.options.description' | translate\" aria-haspopup=\"true\"\n                        aria-expanded=\"false\">\n                  <i class=\"fas fa-cog\" aria-hidden=\"true\"></i>\n                </button>\n\n                <ul id=\"paginationControlsDropdownMenu\" aria-labelledby=\"paginationControls\" role=\"menu\"\n                    ngbDropdownMenu>\n                  <li role=\"menuitem\">\n                    <span class=\"dropdown-header\" id=\"pagination-control_results-per-page\"\n                          role=\"heading\">{{ 'pagination.results-per-page' | translate}}</span>\n                    <ul aria-labelledby=\"pagination-control_results-per-page\" class=\"list-unstyled\" role=\"listbox\">\n                      <li *ngFor=\"let size of paginationOptions.pageSizeOptions\" role=\"option\"\n                          [attr.aria-selected]=\"size === (pageSize$ | async)\">\n                        <button (click)=\"doPageSizeChange(size)\" class=\"dropdown-item\">\n                          <i [ngClass]=\"{'invisible': size !== (pageSize$ | async) }\" class=\"fas fa-check\"\n                             aria-hidden=\"true\"></i> {{size}}\n                        </button>\n                      </li>\n                    </ul>\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n          </td>\n        </tr>\n\n        <ng-container *ngFor=\"let entry of (tableEntries$ | async)\">\n          <tr *ngIf=\"updates[entry.id] as update\" [ngClass]=\"getRowClass(update, entry)\" class=\"bitstream-row\" cdkDrag\n              (cdkDragStarted)=\"dragStart()\" (cdkDragEnded)=\"dragEnd()\">\n\n            <th class=\"bitstream-name row-element {{ columnSizes.columns[0].buildClasses() }}\"\n                scope=\"row\" id=\"{{ entry.nameStripped }}\" headers=\"{{ bundleName }} name\">\n              <div class=\"drag-handle text-muted float-left p-1 mr-2\" tabindex=\"0\" cdkDragHandle\n                   (keydown.enter)=\"select($event, entry)\" (keydown.space)=\"select($event, entry)\" (click)=\"select($event, entry)\">\n                <i class=\"fas fa-grip-vertical fa-fw\"\n                   [title]=\"'item.edit.bitstreams.edit.buttons.drag' | translate\"></i>\n              </div>\n              {{ entry.name }}\n            </th>\n            <td class=\"row-element {{ columnSizes.columns[1].buildClasses() }}\"\n                headers=\"{{ entry.nameStripped }} {{ bundleName }} description\">\n              {{ entry.description }}\n            </td>\n            <td class=\"row-element {{ columnSizes.columns[2].buildClasses() }}\"\n                headers=\"{{ entry.nameStripped }} {{ bundleName }} format\">\n              {{ (entry.format | async)?.shortDescription }}\n            </td>\n            <td class=\"row-element {{ columnSizes.columns[3].buildClasses() }}\"\n                headers=\"{{ entry.nameStripped }} {{ bundleName }} actions\">\n              <div class=\"text-center w-100\">\n                <div class=\"btn-group relationship-action-buttons\">\n                  <a [href]=\"entry.downloadUrl\"\n                     [attr.aria-label]=\"'item.edit.bitstreams.edit.buttons.download' | translate\"\n                     class=\"btn btn-outline-primary btn-sm\"\n                     title=\"{{'item.edit.bitstreams.edit.buttons.download' | translate}}\"\n                     [attr.data-test]=\"'download-button' | dsBrowserOnly\">\n                    <i class=\"fas fa-download fa-fw\"></i>\n                  </a>\n                  <button [routerLink]=\"['/bitstreams/', entry.id, 'edit']\" class=\"btn btn-outline-primary btn-sm\"\n                          [attr.aria-label]=\"'item.edit.bitstreams.edit.buttons.edit' | translate\"\n                          title=\"{{'item.edit.bitstreams.edit.buttons.edit' | translate}}\">\n                    <i class=\"fas fa-edit fa-fw\"></i>\n                  </button>\n                  <button [dsBtnDisabled]=\"!canRemove(update)\" (click)=\"remove(entry.bitstream)\"\n                          [attr.aria-label]=\" 'item. edit bitstreams.edit.buttons.remove' | translate\"\n                          class=\"btn btn-outline-danger btn-sm\"\n                          title=\"{{'item.edit.bitstreams.edit.buttons.remove' | translate}}\">\n                    <i class=\"fas fa-trash-alt fa-fw\"></i>\n                  </button>\n                  <button [dsBtnDisabled]=\"!canUndo(update)\" (click)=\"undo(entry.bitstream)\"\n                          [attr.aria-label]=\"'item.edit.bitstreams.edit.buttons.undo' | translate\"\n                          class=\"btn btn-outline-warning btn-sm\"\n                          title=\"{{'item.edit.bitstreams.edit.buttons.undo' | translate}}\">\n                    <i class=\"fas fa-undo-alt fa-fw\"></i>\n                  </button>\n                </div>\n              </div>\n            </td>\n          </tr>\n        </ng-container>\n\n        </tbody>\n      </table>\n\n    </ng-container>\n  </ds-pagination>\n\n</ng-template>\n","import {\n  AsyncPipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router,\n} from '@angular/router';\nimport { NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  combineLatest as observableCombineLatest,\n  Observable,\n} from 'rxjs';\nimport {\n  filter,\n  map,\n  startWith,\n  switchMap,\n  take,\n} from 'rxjs/operators';\n\nimport { DSONameService } from '../../../core/breadcrumbs/dso-name.service';\nimport { CollectionDataService } from '../../../core/data/collection-data.service';\nimport { ItemDataService } from '../../../core/data/item-data.service';\nimport { PaginatedList } from '../../../core/data/paginated-list.model';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { Collection } from '../../../core/shared/collection.model';\nimport { DSpaceObjectType } from '../../../core/shared/dspace-object-type.model';\nimport { Item } from '../../../core/shared/item.model';\nimport { NoContent } from '../../../core/shared/NoContent.model';\nimport {\n  getAllSucceededRemoteData,\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteData,\n  getFirstSucceededRemoteDataPayload,\n  getRemoteDataPayload,\n  toDSpaceObjectListRD,\n} from '../../../core/shared/operators';\nimport { SearchService } from '../../../core/shared/search/search.service';\nimport { SearchConfigurationService } from '../../../core/shared/search/search-configuration.service';\nimport {\n  fadeIn,\n  fadeInOut,\n} from '../../../shared/animations/fade';\nimport {\n  hasValue,\n  isNotEmpty,\n} from '../../../shared/empty.util';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { CollectionSelectComponent } from '../../../shared/object-select/collection-select/collection-select.component';\nimport { PaginatedSearchOptions } from '../../../shared/search/models/paginated-search-options.model';\nimport { ThemedSearchFormComponent } from '../../../shared/search-form/themed-search-form.component';\nimport { getItemPageRoute } from '../../item-page-routing-paths';\n\n@Component({\n  selector: 'ds-item-collection-mapper',\n  styleUrls: ['./item-collection-mapper.component.scss'],\n  templateUrl: './item-collection-mapper.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    fadeIn,\n    fadeInOut,\n  ],\n  imports: [\n    NgbNavModule,\n    CollectionSelectComponent,\n    ThemedSearchFormComponent,\n    AsyncPipe,\n    TranslateModule,\n    NgIf,\n  ],\n  standalone: true,\n})\n/**\n * Component for mapping collections to an item\n */\nexport class ItemCollectionMapperComponent implements OnInit {\n\n  /**\n   * A view on the tabset element\n   * Used to switch tabs programmatically\n   */\n  @ViewChild('tabs') tabs;\n\n  /**\n   * The item to map to collections\n   */\n  itemRD$: Observable<RemoteData<Item>>;\n  itemName$: Observable<string>;\n\n  /**\n   * Search options\n   */\n  searchOptions$: Observable<PaginatedSearchOptions>;\n\n  /**\n   * List of collections to show under the \"Browse\" tab\n   * Collections that are mapped to the item\n   */\n  itemCollectionsRD$: Observable<RemoteData<PaginatedList<Collection>>>;\n\n  /**\n   * List of collections to show under the \"Map\" tab\n   * Collections that are not mapped to the item\n   */\n  mappedCollectionsRD$: Observable<RemoteData<PaginatedList<Collection>>>;\n\n  /**\n   * Firing this observable (shouldUpdate$.next(true)) forces the two lists to reload themselves\n   * Usually fired after the lists their cache is cleared (to force a new request to the REST API)\n   */\n  shouldUpdate$: BehaviorSubject<boolean>;\n\n  /**\n   * Track whether at least one search has been performed or not\n   * As soon as at least one search has been performed, we display the search results\n   */\n  performedSearch = false;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private searchConfigService: SearchConfigurationService,\n              private searchService: SearchService,\n              private notificationsService: NotificationsService,\n              private itemDataService: ItemDataService,\n              private collectionDataService: CollectionDataService,\n              private translateService: TranslateService,\n              private dsoNameService: DSONameService) {\n  }\n\n  ngOnInit(): void {\n    this.itemRD$ = this.route.parent.data.pipe(\n      take(1),\n      map((data) => data.dso),\n    );\n\n    this.itemName$ = this.itemRD$.pipe(\n      filter((rd: RemoteData<Item>) => hasValue(rd)),\n      map((rd: RemoteData<Item>) => {\n        return this.dsoNameService.getName(rd.payload);\n      }),\n    );\n    this.searchOptions$ = this.searchConfigService.paginatedSearchOptions;\n    this.loadCollectionLists();\n  }\n\n  /**\n   * Load itemCollectionsRD$ with a fixed scope to only obtain the collections that own this item\n   * Load mappedCollectionsRD$ to only obtain collections that don't own this item\n   */\n  loadCollectionLists() {\n    this.shouldUpdate$ = new BehaviorSubject<boolean>(true);\n    this.itemCollectionsRD$ = observableCombineLatest(this.itemRD$.pipe(getFirstSucceededRemoteDataPayload()), this.shouldUpdate$).pipe(\n      switchMap(([item, shouldUpdate]) => {\n        if (shouldUpdate === true) {\n          this.shouldUpdate$.next(false);\n        }\n        return this.collectionDataService.findListByHref(\n          this.itemDataService.getMappedCollectionsEndpoint(item.id),\n          undefined,\n          !shouldUpdate,\n          false,\n        ).pipe(\n          getAllSucceededRemoteData(),\n        );\n      }),\n    );\n\n    const owningCollectionRD$ = this.itemRD$.pipe(\n      getFirstSucceededRemoteDataPayload(),\n      switchMap((item: Item) => this.collectionDataService.findOwningCollectionFor(item)),\n      getAllSucceededRemoteData(),\n    );\n    const itemCollectionsAndOptions$ = observableCombineLatest(\n      this.itemCollectionsRD$,\n      owningCollectionRD$,\n      this.searchOptions$,\n    );\n    this.mappedCollectionsRD$ = itemCollectionsAndOptions$.pipe(\n      switchMap(([itemCollectionsRD, owningCollectionRD, searchOptions]) => {\n        return this.searchService.search(Object.assign(new PaginatedSearchOptions(searchOptions), {\n          query: this.buildQuery([...itemCollectionsRD.payload.page, owningCollectionRD.payload], searchOptions.query),\n          dsoTypes: [DSpaceObjectType.COLLECTION],\n        }), 10000).pipe(\n          toDSpaceObjectListRD(),\n          startWith(undefined),\n        );\n      }),\n    ) as Observable<RemoteData<PaginatedList<Collection>>>;\n  }\n\n  /**\n   * Map the item to the selected collections and display notifications\n   * @param {string[]} ids  The list of collection UUID's to map the item to\n   */\n  mapCollections(ids: string[]) {\n    const itemIdAndExcludingIds$ = observableCombineLatest([\n      this.itemRD$.pipe(\n        getFirstSucceededRemoteData(),\n        map((rd: RemoteData<Item>) => rd.payload),\n        map((item: Item) => item.id),\n      ),\n      this.itemCollectionsRD$.pipe(\n        getFirstSucceededRemoteData(),\n        map((rd: RemoteData<PaginatedList<Collection>>) => rd.payload.page),\n        map((collections: Collection[]) => collections.map((collection: Collection) => collection.id)),\n      ),\n    ]);\n\n    // Map the item to the collections found in ids, excluding the collections the item is already mapped to\n    const responses$ = itemIdAndExcludingIds$.pipe(\n      switchMap(([itemId, excludingIds]) =>\n        observableCombineLatest(\n          this.filterIds(ids, excludingIds).map((id: string) =>\n            this.itemDataService.mapToCollection(itemId, id).pipe(getFirstCompletedRemoteData()),\n          )),\n      ),\n    );\n\n    this.showNotifications(responses$, 'item.edit.item-mapper.notifications.add');\n  }\n\n  /**\n   * Remove the mapping of the item to the selected collections and display notifications\n   * @param {string[]} ids  The list of collection UUID's to remove the mapping of the item for\n   */\n  removeMappings(ids: string[]) {\n    const responses$ = this.itemRD$.pipe(\n      getFirstSucceededRemoteData(),\n      map((itemRD: RemoteData<Item>) => itemRD.payload.id),\n      switchMap((itemId: string) => observableCombineLatest(\n        ids.map((id: string) =>\n          this.itemDataService.removeMappingFromCollection(itemId, id).pipe(getFirstCompletedRemoteData()),\n        )),\n      ),\n    );\n\n    this.showNotifications(responses$, 'item.edit.item-mapper.notifications.remove');\n  }\n\n  /**\n   * Filters ids from a given list of ids, which exist in a second given list of ids\n   * @param {string[]} ids          The list of ids to filter out of\n   * @param {string[]} excluding    The ids that should be excluded from the first list\n   * @returns {string[]}\n   */\n  private filterIds(ids: string[], excluding: string[]): string[] {\n    return ids.filter((id: string) => excluding.indexOf(id) < 0);\n  }\n\n  /**\n   * Display notifications\n   * @param {Observable<RestResponse[]>} responses$   The responses after adding/removing a mapping\n   * @param {string} messagePrefix                    The prefix to build the notification messages with\n   */\n  private showNotifications(responses$: Observable<RemoteData<NoContent>[]>, messagePrefix: string) {\n    responses$.subscribe((responses: RemoteData<NoContent>[]) => {\n      const successful = responses.filter((response: RemoteData<NoContent>) => response.hasSucceeded);\n      const unsuccessful = responses.filter((response: RemoteData<NoContent>) => response.hasFailed);\n      if (successful.length > 0) {\n        const successMessages = observableCombineLatest([\n          this.translateService.get(`${messagePrefix}.success.head`),\n          this.translateService.get(`${messagePrefix}.success.content`, { amount: successful.length }),\n        ]);\n\n        successMessages.subscribe(([head, content]) => {\n          this.notificationsService.success(head, content);\n        });\n        this.shouldUpdate$.next(true);\n      }\n      if (unsuccessful.length > 0) {\n        const unsuccessMessages = observableCombineLatest([\n          this.translateService.get(`${messagePrefix}.error.head`),\n          this.translateService.get(`${messagePrefix}.error.content`, { amount: unsuccessful.length }),\n        ]);\n\n        unsuccessMessages.subscribe(([head, content]) => {\n          this.notificationsService.error(head, content);\n        });\n      }\n      this.switchToFirstTab();\n    });\n  }\n\n  /**\n   * Clear url parameters on tab change (temporary fix until pagination is improved)\n   * @param event\n   */\n  tabChange(event) {\n    this.performedSearch = false;\n    this.router.navigateByUrl(this.getCurrentUrl());\n  }\n\n  /**\n   * Get current url without parameters\n   * @returns {string}\n   */\n  getCurrentUrl(): string {\n    if (this.router.url.indexOf('?') > -1) {\n      return this.router.url.substring(0, this.router.url.indexOf('?'));\n    }\n    return this.router.url;\n  }\n\n  /**\n   * Build a query to exclude collections from\n   * @param collections     The collections their UUIDs\n   * @param query           The query to add to it\n   */\n  buildQuery(collections: Collection[], query: string): string {\n    let result = query;\n    for (const collection of collections) {\n      result = this.addExcludeCollection(collection.id, result);\n    }\n    return result;\n  }\n\n  /**\n   * Add an exclusion of a collection to a query\n   * @param collectionId    The collection's UUID\n   * @param query           The query to add the exclusion to\n   */\n  addExcludeCollection(collectionId: string, query: string): string {\n    const excludeQuery = `-search.resourceid:${collectionId}`;\n    if (isNotEmpty(query)) {\n      return `${query} AND ${excludeQuery}`;\n    } else {\n      return excludeQuery;\n    }\n  }\n\n  /**\n   * Switch the view to focus on the first tab\n   */\n  switchToFirstTab() {\n    this.tabs.select('browseTab');\n  }\n\n  /**\n   * When a cancel event is fired, return to the item page\n   */\n  onCancel() {\n    this.itemRD$.pipe(\n      getFirstSucceededRemoteData(),\n      getRemoteDataPayload(),\n      take(1),\n    ).subscribe((item: Item) => {\n      this.router.navigate([getItemPageRoute(item)]);\n    });\n  }\n\n}\n","<div class=\"container mt-2\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h2>{{'item.edit.item-mapper.head' | translate}}</h2>\n      <p [innerHTML]=\"'item.edit.item-mapper.item' | translate:{ name: (itemName$ | async) }\" id=\"item-name\"></p>\n      <p>{{'item.edit.item-mapper.description' | translate}}</p>\n\n      <ul ngbNav (navChange)=\"tabChange($event)\" [destroyOnHide]=\"true\" #tabs=\"ngbNav\" class=\"nav-tabs\">\n        <li [ngbNavItem]=\"'browseTab'\" role=\"presentation\" data-test=\"browseTab\">\n          <a ngbNavLink>{{'item.edit.item-mapper.tabs.browse' | translate}}</a>\n          <ng-template ngbNavContent>\n            <div class=\"mt-2\">\n              <ds-collection-select class=\"mt-2\"\n                [key]=\"'browse'\"\n                [dsoRD$]=\"itemCollectionsRD$\"\n                [paginationOptions]=\"(searchOptions$ | async)?.pagination\"\n                [confirmButton]=\"'item.edit.item-mapper.buttons.remove'\"\n                [cancelButton]=\"'item.edit.item-mapper.cancel'\"\n                [dangerConfirm]=\"true\"\n                (confirm)=\"removeMappings($event)\"\n                (cancel)=\"onCancel()\"></ds-collection-select>\n            </div>\n          </ng-template>\n        </li>\n        <li [ngbNavItem]=\"'mapTab'\" role=\"presentation\" data-test=\"mapTab\">\n          <a ngbNavLink>{{'item.edit.item-mapper.tabs.map' | translate}}</a>\n          <ng-template ngbNavContent>\n            <div class=\"row mt-2\">\n              <div class=\"col-12 col-lg-6\">\n                <ds-search-form id=\"search-form\"\n                                [query]=\"(searchOptions$ | async)?.query\"\n                                [currentUrl]=\"'./'\"\n                                [inPlaceSearch]=\"true\"\n                                [searchPlaceholder]=\"'item.edit.item-mapper.search-form.placeholder' | translate\"\n                                (submitSearch)=\"performedSearch = true\">\n                </ds-search-form>\n              </div>\n            </div>\n\n            <div *ngIf=\"performedSearch\">\n              <ds-collection-select class=\"mt-2\"\n                [key]=\"'map'\"\n                [dsoRD$]=\"mappedCollectionsRD$\"\n                [paginationOptions]=\"(searchOptions$ | async)?.pagination\"\n                [sortOptions]=\"(searchOptions$ | async)?.sort\"\n                [confirmButton]=\"'item.edit.item-mapper.buttons.add'\"\n                [cancelButton]=\"'item.edit.item-mapper.cancel'\"\n                (confirm)=\"mapCollections($event)\"\n                (cancel)=\"onCancel()\"></ds-collection-select>\n            </div>\n            <div *ngIf=\"!performedSearch\" class=\"alert alert-info w-100\" role=\"alert\">\n              {{'item.edit.item-mapper.no-search' | translate}}\n            </div>\n          </ng-template>\n        </li>\n      </ul>\n      <div [ngbNavOutlet]=\"tabs\"></div>\n    </div>\n  </div>\n</div>\n","import {\n  AsyncPipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport {\n  filter,\n  map,\n  take,\n} from 'rxjs/operators';\n\nimport { DSONameService } from '../../../core/breadcrumbs/dso-name.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { Item } from '../../../core/shared/item.model';\nimport { CurationFormComponent } from '../../../curation-form/curation-form.component';\nimport { hasValue } from '../../../shared/empty.util';\n\n/**\n * Component for managing a collection's curation tasks\n */\n@Component({\n  selector: 'ds-item-curate',\n  templateUrl: './item-curate.component.html',\n  imports: [\n    CurationFormComponent,\n    NgIf,\n    TranslateModule,\n    AsyncPipe,\n  ],\n  standalone: true,\n})\nexport class ItemCurateComponent implements OnInit {\n  dsoRD$: Observable<RemoteData<Item>>;\n  itemName$: Observable<string>;\n\n  constructor(\n    private route: ActivatedRoute,\n    private dsoNameService: DSONameService,\n  ) {}\n\n  ngOnInit(): void {\n    this.dsoRD$ = this.route.parent.data.pipe(\n      take(1),\n      map((data) => data.dso),\n    );\n\n    this.itemName$ = this.dsoRD$.pipe(\n      filter((rd: RemoteData<Item>) => hasValue(rd)),\n      map((rd: RemoteData<Item>) => {\n        return this.dsoNameService.getName(rd.payload);\n      }),\n    );\n  }\n}\n","<div class=\"container mt-3\">\n    <h2>{{'item.edit.curate.title' |translate:{item: (itemName$ |async)} }}</h2>\n    <ds-curation-form\n      *ngIf=\"dsoRD$ | async as dsoRD\"\n      [dsoHandle]=\"dsoRD?.payload.handle\"\n    ></ds-curation-form>\n</div>\n","// eslint-disable-next-line max-classes-per-file\nimport {\n  AsyncPipe,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router,\n  RouterLink,\n} from '@angular/router';\nimport {\n  NgbModal,\n  NgbModalRef,\n} from '@ng-bootstrap/ng-bootstrap';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  combineLatest as observableCombineLatest,\n  Observable,\n  of as observableOf,\n  Subscription,\n} from 'rxjs';\nimport {\n  defaultIfEmpty,\n  filter,\n  map,\n  switchMap,\n  take,\n} from 'rxjs/operators';\n\nimport { LinkService } from '../../../core/cache/builders/link.service';\nimport { EntityTypeDataService } from '../../../core/data/entity-type-data.service';\nimport { ItemDataService } from '../../../core/data/item-data.service';\nimport { ObjectUpdatesService } from '../../../core/data/object-updates/object-updates.service';\nimport { RelationshipDataService } from '../../../core/data/relationship-data.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { Item } from '../../../core/shared/item.model';\nimport { Relationship } from '../../../core/shared/item-relationships/relationship.model';\nimport { RelationshipType } from '../../../core/shared/item-relationships/relationship-type.model';\nimport { MetadataValue } from '../../../core/shared/metadata.models';\nimport { NoContent } from '../../../core/shared/NoContent.model';\nimport {\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteData,\n  getRemoteDataPayload,\n} from '../../../core/shared/operators';\nimport { ViewMode } from '../../../core/shared/view-mode.model';\nimport { BtnDisabledDirective } from '../../../shared/btn-disabled.directive';\nimport {\n  hasValue,\n  isNotEmpty,\n} from '../../../shared/empty.util';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { ListableObjectComponentLoaderComponent } from '../../../shared/object-collection/shared/listable-object/listable-object-component-loader.component';\nimport { followLink } from '../../../shared/utils/follow-link-config.model';\nimport { VarDirective } from '../../../shared/utils/var.directive';\nimport { getItemEditRoute } from '../../item-page-routing-paths';\nimport { ModifyItemOverviewComponent } from '../modify-item-overview/modify-item-overview.component';\nimport { AbstractSimpleItemActionComponent } from '../simple-item-action/abstract-simple-item-action.component';\nimport { VirtualMetadata } from '../virtual-metadata/virtual-metadata.component';\n\n/**\n * Data Transfer Object used to prevent the HTML template to call function returning Observables\n */\nclass RelationshipTypeDTO {\n\n  relationshipType: RelationshipType;\n\n  isSelected$: Observable<boolean>;\n\n  label$: Observable<string>;\n\n  relationshipDTOs$: Observable<RelationshipDTO[]>;\n\n}\n\n/**\n * Data Transfer Object used to prevent the HTML template to call function returning Observables\n */\nclass RelationshipDTO {\n\n  relationship: Relationship;\n\n  relatedItem$: Observable<Item>;\n\n  virtualMetadata$: Observable<VirtualMetadata[]>;\n\n}\n\n@Component({\n  selector: 'ds-item-delete',\n  templateUrl: '../item-delete/item-delete.component.html',\n  imports: [\n    TranslateModule,\n    ListableObjectComponentLoaderComponent,\n    NgIf,\n    ModifyItemOverviewComponent,\n    AsyncPipe,\n    VarDirective,\n    NgForOf,\n    RouterLink,\n    BtnDisabledDirective,\n  ],\n  standalone: true,\n})\n/**\n * Component responsible for rendering the item delete page\n */\nexport class ItemDeleteComponent\n  extends AbstractSimpleItemActionComponent\n  implements OnInit, OnDestroy {\n\n  /**\n   * The current url of this page\n   */\n  @Input() url: string;\n\n  protected messageKey = 'delete';\n\n  /**\n   * The view-mode we're currently on\n   */\n  viewMode = ViewMode.ListElement;\n\n  /**\n   * A list of the relationship types for which this item has relations as an observable.\n   * The list doesn't contain duplicates.\n   */\n  typeDTOs$: BehaviorSubject<RelationshipTypeDTO[]> = new BehaviorSubject([]);\n\n  /**\n   * A map which stores the relationships of this item for each type as observable lists\n   */\n  relationships$: Map<RelationshipType, Observable<Relationship[]>>\n    = new Map<RelationshipType, Observable<Relationship[]>>();\n\n  /**\n   * A map which stores the related item of each relationship of this item as an observable\n   */\n  relatedItems$: Map<Relationship, Observable<Item>> = new Map<Relationship, Observable<Item>>();\n\n  /**\n   * A map which stores the virtual metadata (of the related) item corresponding to each relationship of this item\n   * as an observable list\n   */\n  virtualMetadata$: Map<Relationship, Observable<VirtualMetadata[]>> = new Map<Relationship, Observable<VirtualMetadata[]>>();\n\n  /**\n   * Reference to NgbModal\n   */\n  public modalRef: NgbModalRef;\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   */\n  private subs: Subscription[] = [];\n\n  public isDeleting$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(protected route: ActivatedRoute,\n              protected router: Router,\n              protected notificationsService: NotificationsService,\n              protected itemDataService: ItemDataService,\n              protected translateService: TranslateService,\n              protected modalService: NgbModal,\n              protected objectUpdatesService: ObjectUpdatesService,\n              protected relationshipService: RelationshipDataService,\n              protected entityTypeService: EntityTypeDataService,\n              protected linkService: LinkService,\n  ) {\n    super(\n      route,\n      router,\n      notificationsService,\n      itemDataService,\n      translateService,\n    );\n  }\n\n  /**\n   * Set up and initialize all fields\n   */\n  ngOnInit() {\n\n    super.ngOnInit();\n    this.url = this.router.url;\n\n    const label = this.item.firstMetadataValue('dspace.entity.type');\n    if (isNotEmpty(label)) {\n      this.subs.push(this.entityTypeService.getEntityTypeByLabel(label).pipe(\n        getFirstSucceededRemoteData(),\n        getRemoteDataPayload(),\n        switchMap((entityType) => this.entityTypeService.getEntityTypeRelationships(entityType.id)),\n        getFirstSucceededRemoteData(),\n        getRemoteDataPayload(),\n        map((relationshipTypes) => relationshipTypes.page),\n        switchMap((types) => {\n          if (types.length === 0) {\n            return observableOf(types);\n          }\n          return combineLatest(types.map((type) => this.getRelationships(type))).pipe(\n            map((relationships) =>\n              types.reduce<RelationshipType[]>((includedTypes, type, index) => {\n                if (!includedTypes.some((includedType) => includedType.id === type.id)\n                  && !(relationships[index].length === 0)) {\n                  return [...includedTypes, type];\n                } else {\n                  return includedTypes;\n                }\n              }, []),\n            ),\n          );\n        }),\n      ).subscribe((types: RelationshipType[]) => this.typeDTOs$.next(types.map((relationshipType: RelationshipType) => Object.assign(new RelationshipTypeDTO(), {\n        relationshipType: relationshipType,\n        isSelected$: this.isSelected(relationshipType),\n        label$: this.getLabel(relationshipType),\n        relationshipDTOs$: this.getRelationships(relationshipType).pipe(\n          map((relationships: Relationship[]) => relationships.map((relationship: Relationship) => Object.assign(new RelationshipDTO(), {\n            relationship: relationship,\n            relatedItem$: this.getRelatedItem(relationship),\n            virtualMetadata$: this.getVirtualMetadata(relationship),\n          } as RelationshipDTO))),\n        ),\n      })))));\n    }\n\n    this.subs.push(this.typeDTOs$.pipe(\n      take(1),\n    ).subscribe((types: RelationshipTypeDTO[]) =>\n      this.objectUpdatesService.initialize(this.url, types.map((relationshipTypeDto: RelationshipTypeDTO) => relationshipTypeDto.relationshipType), this.item.lastModified),\n    ));\n  }\n\n  /**\n   * Open the modal which lists the virtual metadata of a relation\n   * @param content the html content of the modal\n   */\n  openVirtualMetadataModal(content: any) {\n    this.modalRef = this.modalService.open(content);\n  }\n\n  /**\n   * Close the modal which lists the virtual metadata of a relation\n   */\n  closeVirtualMetadataModal() {\n    this.modalRef.close();\n  }\n\n  /**\n   * Get the i18n message key for a relationship\n   * @param label   The relationship type's label\n   */\n  getRelationshipMessageKey(label: string): string {\n    if (hasValue(label) && label.indexOf('Of') > -1) {\n      return `relationships.${label.substring(0, label.indexOf('Of') + 2)}`;\n    } else {\n      return label;\n    }\n  }\n\n  /**\n   * Get the relationship type label relevant for this item as an observable\n   * @param relationshipType  the relationship type to get the label for\n   */\n  getLabel(relationshipType: RelationshipType): Observable<string> {\n\n    return this.getRelationships(relationshipType).pipe(\n      switchMap((relationships) =>\n        this.isLeftItem(relationships[0]).pipe(\n          map((isLeftItem) => isLeftItem ? relationshipType.leftwardType : relationshipType.rightwardType),\n        ),\n      ),\n    );\n  }\n\n  /**\n   * Get the relationships of this item with a given type as an observable\n   * @param relationshipType  the relationship type to filter the item's relationships on\n   */\n  getRelationships(relationshipType: RelationshipType): Observable<Relationship[]> {\n\n    if (!this.relationships$.has(relationshipType)) {\n      this.relationships$.set(\n        relationshipType,\n        this.relationshipService.getItemRelationshipsArray(this.item).pipe(\n          // filter on type\n          switchMap((relationships) =>\n            observableCombineLatest(\n              relationships.map((relationship) => this.getRelationshipType(relationship)),\n            ).pipe(\n              defaultIfEmpty([]),\n              map((types) => relationships.filter(\n                (relationship, index) => relationshipType.id === types[index].id,\n              )),\n            ),\n          ),\n        ),\n      );\n    }\n\n    return this.relationships$.get(relationshipType);\n  }\n\n  /**\n   * Get the type of a given relationship as an observable\n   * @param relationship  the relationship to get the type for\n   */\n  private getRelationshipType(relationship: Relationship): Observable<RelationshipType> {\n\n    this.linkService.resolveLinks(\n      relationship,\n      followLink('relationshipType'),\n      followLink('leftItem', undefined, followLink<Item>('accessStatus')),\n      followLink('rightItem', undefined, followLink<Item>('accessStatus')),\n    );\n    return relationship.relationshipType.pipe(\n      getFirstSucceededRemoteData(),\n      getRemoteDataPayload(),\n      filter((relationshipType: RelationshipType) => hasValue(relationshipType) && isNotEmpty(relationshipType.uuid)),\n    );\n  }\n\n  /**\n   * Get the item this item is related to through a given relationship as an observable\n   * @param relationship  the relationship to get the other item for\n   */\n  getRelatedItem(relationship: Relationship): Observable<Item> {\n\n    if (!this.relatedItems$.has(relationship)) {\n\n      this.relatedItems$.set(\n        relationship,\n        this.isLeftItem(relationship).pipe(\n          switchMap((isLeftItem) => isLeftItem ? relationship.rightItem : relationship.leftItem),\n          getFirstSucceededRemoteData(),\n          getRemoteDataPayload(),\n        ),\n      );\n    }\n\n    return this.relatedItems$.get(relationship);\n  }\n\n  /**\n   * Get the virtual metadata for a given relationship of the related item.\n   * @param relationship  the relationship to get the virtual metadata for\n   */\n  getVirtualMetadata(relationship: Relationship): Observable<VirtualMetadata[]> {\n\n    if (!this.virtualMetadata$.has(relationship)) {\n\n      this.virtualMetadata$.set(\n        relationship,\n        this.getRelatedItem(relationship).pipe(\n          map((relatedItem) =>\n            Object.entries(relatedItem.metadata)\n              .map(([key, value]) => value\n                .filter((metadata: MetadataValue) =>\n                  metadata.authority && metadata.authority.endsWith(relationship.id))\n                .map((metadata: MetadataValue) => {\n                  return {\n                    metadataField: key,\n                    metadataValue: metadata,\n                  };\n                }))\n              .reduce((previous, current) => previous.concat(current)),\n          ),\n        ),\n      );\n    }\n\n    return this.virtualMetadata$.get(relationship);\n  }\n\n  /**\n   * Check whether this item is the left item of a given relationship, as an observable boolean\n   * @param relationship  the relationship for which to check whether this item is the left item\n   */\n  private isLeftItem(relationship: Relationship): Observable<boolean> {\n\n    return relationship.leftItem.pipe(\n      getFirstSucceededRemoteData(),\n      getRemoteDataPayload(),\n      filter((item: Item) => hasValue(item) && isNotEmpty(item.uuid)),\n      map((leftItem) => leftItem.uuid === this.item.uuid),\n    );\n  }\n\n  /**\n   * Check whether a given relationship type is selected to save the corresponding virtual metadata\n   * @param type  the relationship type for which to check whether it is selected\n   */\n  isSelected(type: RelationshipType): Observable<boolean> {\n    return this.objectUpdatesService.isSelectedVirtualMetadata(this.url, this.item.uuid, type.uuid);\n  }\n\n  /**\n   * Select/deselect a given relationship type to save the corresponding virtual metadata\n   * @param type      the relationship type to select/deselect\n   * @param selected  whether the type should be selected\n   */\n  setSelected(type: RelationshipType, selected: boolean): void {\n    if (this.isDeleting$.value === false) {\n      this.objectUpdatesService.setSelectedVirtualMetadata(this.url, this.item.uuid, type.uuid, selected);\n    }\n  }\n\n  /**\n   * Perform the delete operation\n   */\n  performAction(): void {\n    this.isDeleting$.next(true);\n    this.subs.push(this.typeDTOs$.pipe(\n      switchMap((types: RelationshipTypeDTO[]) =>\n        combineLatest(\n          types.map((type: RelationshipTypeDTO) => type.isSelected$),\n        ).pipe(\n          defaultIfEmpty([]),\n          map((selection: boolean[]) => types.filter(\n            (type: RelationshipTypeDTO, index: number) => selection[index],\n          )),\n          map((selectedDtoTypes: RelationshipTypeDTO[]) => selectedDtoTypes.map((typeDto: RelationshipTypeDTO) => typeDto.relationshipType.id)),\n        ),\n      ),\n      switchMap((types: string[]) => this.itemDataService.delete(this.item.id, types)),\n      getFirstCompletedRemoteData(),\n    ).subscribe((rd: RemoteData<NoContent>) => {\n      this.notify(rd.hasSucceeded);\n    }));\n  }\n\n  /**\n   * When the item is successfully delete, navigate to the homepage, otherwise navigate back to the item edit page\n   * @param succeeded\n   */\n  notify(succeeded: boolean) {\n    if (succeeded) {\n      this.notificationsService.success(this.translateService.get('item.edit.' + this.messageKey + '.success'));\n      void this.router.navigate(['']);\n    } else {\n      this.notificationsService.error(this.translateService.get('item.edit.' + this.messageKey + '.error'));\n      void this.router.navigate([getItemEditRoute(this.item)]);\n    }\n  }\n\n  /**\n   * Unsubscribe from all subscriptions\n   */\n  ngOnDestroy(): void {\n    this.subs\n      .filter((sub) => hasValue(sub))\n      .forEach((sub) => sub.unsubscribe());\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n\n            <h1>{{headerMessage | translate: {id: item.handle} }}</h1>\n            <p>{{descriptionMessage | translate}}</p>\n            <ds-modify-item-overview [item]=\"item\"></ds-modify-item-overview>\n\n            <ng-container *ngVar=\"(typeDTOs$ | async) as types\">\n\n                <div *ngIf=\"types && types.length > 0\" class=\"mb-4\">\n\n                    {{'virtual-metadata.delete-item.info' | translate}}\n\n                    <div *ngFor=\"let typeDto of types\" class=\"mb-4\">\n                        <div *ngVar=\"(typeDto.isSelected$ | async) as selected\"\n                             class=\"d-flex flex-row\">\n\n                            <div class=\"m-2\" (click)=\"setSelected(typeDto.relationshipType, !selected)\">\n                                <label>\n                                    <input type=\"checkbox\" [checked]=\"selected\" [disabled]=\"isDeleting$ | async\">\n                                </label>\n                            </div>\n\n                            <div class=\"flex-column flex-grow-1\">\n                                <h5 (click)=\"setSelected(typeDto.relationshipType, !selected)\">\n                                    {{getRelationshipMessageKey(typeDto.label$ | async) | translate}}\n                                </h5>\n                                <div *ngFor=\"let relationshipDto of (typeDto.relationshipDTOs$ | async)\"\n                                     class=\"d-flex flex-row\">\n                                    <ng-container *ngVar=\"(relationshipDto.relatedItem$ | async) as relatedItem\">\n\n                                        <ds-listable-object-component-loader\n                                                *ngIf=\"relatedItem\"\n                                                [object]=\"relatedItem\"\n                                                [viewMode]=\"viewMode\">\n                                        </ds-listable-object-component-loader>\n                                        <div class=\"ml-auto\">\n                                            <div class=\"btn-group\">\n                                                <button class=\"btn btn-outline-info btn-sm\"\n                                                        (click)=\"openVirtualMetadataModal(virtualMetadataModal)\">\n                                                    <i class=\"fas fa-info fa-fw\"></i>\n                                                </button>\n                                            </div>\n                                        </div>\n\n                                        <ng-template #virtualMetadataModal>\n                                            <div class=\"thumb-font-1\">\n                                                <div class=\"modal-header\">\n                                                    {{'virtual-metadata.delete-item.modal-head' | translate}}\n                                                    <button type=\"button\" class=\"close\"\n                                                            (click)=\"closeVirtualMetadataModal()\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">×</span>\n                                                    </button>\n                                                </div>\n                                                <div class=\"modal-body\">\n                                                    <ds-listable-object-component-loader\n                                                            *ngIf=\"relatedItem\"\n                                                            [object]=\"relatedItem\"\n                                                            [viewMode]=\"viewMode\">\n                                                    </ds-listable-object-component-loader>\n                                                    <div *ngFor=\"let metadata of (relationshipDto.virtualMetadata$ | async)\">\n                                                        <div>\n                                                            <div class=\"font-weight-bold\">\n                                                                {{metadata.metadataField}}\n                                                            </div>\n                                                            <div>\n                                                                {{metadata.metadataValue.value}}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </ng-template>\n\n                                    </ng-container>\n                                </div>\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                </div>\n\n            </ng-container>\n\n            <div class=\"space-children-mr\">\n              <button [dsBtnDisabled]=\"isDeleting$ | async\" (click)=\"performAction()\"\n                      class=\"btn btn-outline-secondary perform-action\">{{confirmMessage | translate}}\n              </button>\n              <button [dsBtnDisabled]=\"isDeleting$ | async\" [routerLink]=\"[itemPageRoute, 'edit']\"\n                      class=\"btn btn-outline-secondary cancel\">\n                {{cancelMessage| translate}}\n              </button>\n            </div>\n\n        </div>\n    </div>\n</div>\n","import {\n  AsyncPipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n  ActivatedRoute,\n  Router,\n  RouterLink,\n} from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport {\n  map,\n  switchMap,\n} from 'rxjs/operators';\n\nimport { DSONameService } from '../../../core/breadcrumbs/dso-name.service';\nimport { ItemDataService } from '../../../core/data/item-data.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { RequestService } from '../../../core/data/request.service';\nimport { Collection } from '../../../core/shared/collection.model';\nimport { DSpaceObjectType } from '../../../core/shared/dspace-object-type.model';\nimport { Item } from '../../../core/shared/item.model';\nimport {\n  getAllSucceededRemoteDataPayload,\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteData,\n  getRemoteDataPayload,\n} from '../../../core/shared/operators';\nimport { SearchService } from '../../../core/shared/search/search.service';\nimport { BtnDisabledDirective } from '../../../shared/btn-disabled.directive';\nimport { AuthorizedCollectionSelectorComponent } from '../../../shared/dso-selector/dso-selector/authorized-collection-selector/authorized-collection-selector.component';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { followLink } from '../../../shared/utils/follow-link-config.model';\nimport {\n  getItemEditRoute,\n  getItemPageRoute,\n} from '../../item-page-routing-paths';\n\n@Component({\n  selector: 'ds-item-move',\n  templateUrl: './item-move.component.html',\n  imports: [\n    TranslateModule,\n    NgbModule,\n    FormsModule,\n    RouterLink,\n    AsyncPipe,\n    AuthorizedCollectionSelectorComponent,\n    NgIf,\n    BtnDisabledDirective,\n  ],\n  standalone: true,\n})\n/**\n * Component that handles the moving of an item to a different collection\n */\nexport class ItemMoveComponent implements OnInit {\n  /**\n   * TODO: There is currently no backend support to change the owningCollection and inherit policies,\n   * TODO: when this is added, the inherit policies option should be used.\n   */\n\n  selectorType = DSpaceObjectType.COLLECTION;\n\n  inheritPolicies = false;\n  itemRD$: Observable<RemoteData<Item>>;\n  originalCollection: Collection;\n\n  selectedCollectionName: string;\n  selectedCollection: Collection;\n  canSubmit = false;\n\n  item: Item;\n  processing = false;\n\n  /**\n   * Route to the item's page\n   */\n  itemPageRoute$: Observable<string>;\n\n  COLLECTIONS = [DSpaceObjectType.COLLECTION];\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private notificationsService: NotificationsService,\n              private itemDataService: ItemDataService,\n              private searchService: SearchService,\n              private translateService: TranslateService,\n              private requestService: RequestService,\n              protected dsoNameService: DSONameService,\n  ) {}\n\n  ngOnInit(): void {\n    this.itemRD$ = this.route.data.pipe(\n      map((data) => data.dso), getFirstSucceededRemoteData(),\n    ) as Observable<RemoteData<Item>>;\n    this.itemPageRoute$ = this.itemRD$.pipe(\n      getAllSucceededRemoteDataPayload(),\n      map((item) => getItemPageRoute(item)),\n    );\n    this.itemRD$.subscribe((rd) => {\n      this.item = rd.payload;\n    },\n    );\n    this.itemRD$.pipe(\n      getFirstSucceededRemoteData(),\n      getRemoteDataPayload(),\n      switchMap((item) => item.owningCollection),\n      getFirstSucceededRemoteData(),\n      getRemoteDataPayload(),\n    ).subscribe((collection) => {\n      this.originalCollection = collection;\n    });\n  }\n\n  /**\n   * Set the collection name and id based on the selected value\n   * @param data - obtained from the ds-input-suggestions component\n   */\n  selectDso(data: any): void {\n    this.selectedCollection = data;\n    this.selectedCollectionName = this.dsoNameService.getName(data);\n    this.canSubmit = true;\n  }\n\n  /**\n   * @returns {string} the current URL\n   */\n  getCurrentUrl() {\n    return this.router.url;\n  }\n\n  /**\n   * Moves the item to a new collection based on the selected collection\n   */\n  moveToCollection() {\n    this.processing = true;\n    const move$ = this.itemDataService.moveToCollection(this.item.id, this.selectedCollection, this.inheritPolicies)\n      .pipe(getFirstCompletedRemoteData());\n\n    move$.subscribe((response: RemoteData<any>) => {\n      if (response.hasSucceeded) {\n        this.notificationsService.success(this.translateService.get('item.edit.move.success'));\n      } else {\n        this.notificationsService.error(this.translateService.get('item.edit.move.error'));\n      }\n    });\n\n    move$.pipe(\n      switchMap(() => this.requestService.setStaleByHrefSubstring(this.item.id)),\n      switchMap(() =>\n        this.itemDataService.findById(\n          this.item.id,\n          false,\n          true,\n          followLink('owningCollection'),\n        )),\n      getFirstCompletedRemoteData(),\n    ).subscribe(() => {\n      this.processing = false;\n      this.router.navigate([getItemEditRoute(this.item)]);\n    });\n  }\n\n  discard(): void {\n    this.selectedCollection = null;\n    this.canSubmit = false;\n  }\n\n  get canMove(): boolean {\n    return this.canSubmit && this.selectedCollection?.id !== this.originalCollection.id;\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <h1>{{'item.edit.move.head' | translate: {id: (itemRD$ | async)?.payload?.handle} }}</h1>\n            <p>{{'item.edit.move.description' | translate}}</p>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                  <div class=\"card mb-3\">\n                    <div class=\"card-header\">{{'dso-selector.placeholder' | translate: { type: 'dso-selector.placeholder.type.collection' | translate } }}</div>\n                    <div class=\"card-body\">\n                      <ds-authorized-collection-selector [types]=\"COLLECTIONS\"\n                                                         [currentDSOId]=\"selectedCollection ? selectedCollection.id : originalCollection.id\"\n                                                         (onSelect)=\"selectDso($event)\">\n                      </ds-authorized-collection-selector>\n                    </div>\n                    <div></div>\n                  </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <p>\n                      <label for=\"inheritPoliciesCheckbox\">\n                        <ng-template #tooltipContent>\n                          {{ 'item.edit.move.inheritpolicies.tooltip' | translate }}\n                        </ng-template>\n                        <input type=\"checkbox\" name=\"tc\" [(ngModel)]=\"inheritPolicies\" id=\"inheritPoliciesCheckbox\" [ngbTooltip]=\"tooltipContent\"\n                        >\n                        {{'item.edit.move.inheritpolicies.checkbox' |translate}}\n                      </label>\n                    </p>\n                    <p>\n                        {{'item.edit.move.inheritpolicies.description' | translate}}\n                    </p>\n                </div>\n            </div>\n\n          <div class=\"button-row bottom\">\n            <div class=\"float-right space-children-mr\">\n              <button [routerLink]=\"[(itemPageRoute$ | async), 'edit']\" class=\"btn btn-outline-secondary\">\n                <i class=\"fas fa-arrow-left\"></i> {{'item.edit.move.cancel' | translate}}\n              </button>\n              <button class=\"btn btn-primary\" [dsBtnDisabled]=\"!canMove\" (click)=\"moveToCollection()\">\n              <span *ngIf=\"!processing\">\n                <i class=\"fas fa-save\"></i> {{'item.edit.move.save-button' | translate}}\n              </span>\n              <span *ngIf=\"processing\">\n                <i class=\"fas fa-circle-notch fa-spin\"></i> {{'item.edit.move.processing' | translate}}\n              </span>\n              </button>\n              <button class=\"btn btn-danger\" [dsBtnDisabled]=\"!canSubmit\" (click)=\"discard()\">\n                <i class=\"fas fa-times\"></i> {{\"item.edit.move.discard-button\" | translate}}\n              </button>\n            </div>\n          </div>\n        </div>\n    </div>\n</div>\n","import { NgIf } from '@angular/common';\nimport {\n  Component,\n  Input,\n} from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { BtnDisabledDirective } from '../../../shared/btn-disabled.directive';\nimport { ItemOperation } from './itemOperation.model';\n\n@Component({\n  selector: 'ds-item-operation',\n  templateUrl: './item-operation.component.html',\n  imports: [\n    TranslateModule,\n    RouterLink,\n    NgbTooltipModule,\n    NgIf,\n    BtnDisabledDirective,\n  ],\n  standalone: true,\n})\n/**\n * Operation that can be performed on an item\n */\nexport class ItemOperationComponent {\n\n  @Input() operation: ItemOperation;\n\n}\n","<div class=\"col-12 col-md-3 h-auto float-left d-flex action-label\">\n      <span class=\"justify-content-center align-self-center font-weight-bold\">\n        {{'item.edit.tabs.status.buttons.' + operation.operationKey + '.label' | translate}}\n      </span>\n</div>\n<div class=\"col-12 col-md-9 float-left action-button\">\n  <span *ngIf=\"operation.authorized\">\n    <button class=\"btn btn-outline-primary\" [dsBtnDisabled]=\"operation.disabled\" [routerLink]=\"operation.operationUrl\" [attr.aria-label]=\"'item.edit.tabs.status.buttons.' + operation.operationKey + '.button' | translate\">\n      {{'item.edit.tabs.status.buttons.' + operation.operationKey + '.button' | translate}}\n    </button>\n  </span>\n  <span *ngIf=\"!operation.authorized\" [ngbTooltip]=\"'item.edit.tabs.status.buttons.unauthorized' | translate\">\n    <button class=\"btn btn-outline-primary\" [dsBtnDisabled]=\"true\" [attr.aria-label]=\"'item.edit.tabs.status.buttons.' + operation.operationKey + '.button' | translate\">\n      {{'item.edit.tabs.status.buttons.' + operation.operationKey + '.button' | translate}}\n    </button>\n  </span>\n</div>\n","import { FeatureID } from '../../../core/data/feature-authorization/feature-id';\n\n/**\n *  Represents an item operation used on the edit item page with a key, an operation URL to which will be navigated\n *  when performing the action and an option to disable the operation.\n */\nexport class ItemOperation {\n\n  operationKey: string;\n  operationUrl: string;\n  disabled: boolean;\n  authorized: boolean;\n  featureID: FeatureID;\n\n  constructor(operationKey: string, operationUrl: string, featureID?: FeatureID, disabled = false, authorized = true) {\n    this.operationKey = operationKey;\n    this.operationUrl = operationUrl;\n    this.featureID = featureID;\n    this.authorized = authorized;\n    this.setDisabled(disabled);\n  }\n\n  /**\n   * Set whether this operation should be disabled\n   * @param disabled\n   */\n  setDisabled(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n\n  /**\n   * Set whether this operation is authorized\n   * @param authorized\n   */\n  setAuthorized(authorized: boolean): void {\n    this.authorized = authorized;\n  }\n\n}\n","import { CanActivateFn } from '@angular/router';\nimport { of as observableOf } from 'rxjs';\n\nimport { dsoPageSingleFeatureGuard } from '../../core/data/feature-authorization/feature-authorization-guard/dso-page-single-feature.guard';\nimport { FeatureID } from '../../core/data/feature-authorization/feature-id';\nimport { itemPageResolver } from '../item-page.resolver';\n\n/**\n * Guard for preventing unauthorized access to certain {@link Item} pages requiring administrator rights\n */\nexport const itemPageAccessControlGuard: CanActivateFn =\n  dsoPageSingleFeatureGuard(\n    () => itemPageResolver,\n    () => observableOf(FeatureID.AdministratorOf),\n  );\n","import { CanActivateFn } from '@angular/router';\nimport { of as observableOf } from 'rxjs';\n\nimport { dsoPageSingleFeatureGuard } from '../../core/data/feature-authorization/feature-authorization-guard/dso-page-single-feature.guard';\nimport { FeatureID } from '../../core/data/feature-authorization/feature-id';\nimport { itemPageResolver } from '../item-page.resolver';\n\n/**\n * Guard for preventing unauthorized access to certain {@link Item} pages requiring manage bitstreams rights\n * Check manage bitstreams authorization rights\n */\nexport const itemPageBitstreamsGuard: CanActivateFn =\n  dsoPageSingleFeatureGuard(\n    () => itemPageResolver,\n    () => observableOf(FeatureID.CanManageBitstreamBundles),\n  );\n","import { CanActivateFn } from '@angular/router';\nimport { of as observableOf } from 'rxjs';\n\nimport { dsoPageSingleFeatureGuard } from '../../core/data/feature-authorization/feature-authorization-guard/dso-page-single-feature.guard';\nimport { FeatureID } from '../../core/data/feature-authorization/feature-id';\nimport { itemPageResolver } from '../item-page.resolver';\n\n/**\n * Guard for preventing unauthorized access to certain {@link Item} pages requiring manage mappings rights\n * Check manage mappings authorization rights\n */\nexport const itemPageCollectionMapperGuard: CanActivateFn =\n  dsoPageSingleFeatureGuard(\n    () => itemPageResolver,\n    () => observableOf(FeatureID.CanManageMappings),\n  );\n","import { CanActivateFn } from '@angular/router';\nimport { of as observableOf } from 'rxjs';\n\nimport { dsoPageSingleFeatureGuard } from '../../core/data/feature-authorization/feature-authorization-guard/dso-page-single-feature.guard';\nimport { FeatureID } from '../../core/data/feature-authorization/feature-id';\nimport { itemPageResolver } from '../item-page.resolver';\n\n/**\n * Guard for preventing unauthorized access to certain {@link Item} pages requiring administrator rights\n */\nexport const itemPageCurateGuard: CanActivateFn =\n  dsoPageSingleFeatureGuard(\n    () => itemPageResolver,\n    () => observableOf(FeatureID.AdministratorOf),\n  );\n","import { CanActivateFn } from '@angular/router';\nimport { of as observableOf } from 'rxjs';\n\nimport { dsoPageSingleFeatureGuard } from '../../core/data/feature-authorization/feature-authorization-guard/dso-page-single-feature.guard';\nimport { FeatureID } from '../../core/data/feature-authorization/feature-id';\nimport { itemPageResolver } from '../item-page.resolver';\n\n/**\n * Guard for preventing unauthorized access to certain {@link Item} pages requiring specific authorizations.\n * Checks authorization rights for deleting items.\n */\nexport const itemPageDeleteGuard: CanActivateFn =\n  dsoPageSingleFeatureGuard(\n    () => itemPageResolver,\n    () => observableOf(FeatureID.CanDelete),\n  );\n","import { CanActivateFn } from '@angular/router';\nimport { of as observableOf } from 'rxjs';\n\nimport { dsoPageSingleFeatureGuard } from '../../core/data/feature-authorization/feature-authorization-guard/dso-page-single-feature.guard';\nimport { FeatureID } from '../../core/data/feature-authorization/feature-id';\nimport { itemPageResolver } from '../item-page.resolver';\n\n/**\n * Guard for preventing unauthorized access to certain {@link Item} pages requiring specific authorizations.\n * Checks authorization rights for managing policies.\n */\nexport const itemPageEditAuthorizationsGuard: CanActivateFn =\n  dsoPageSingleFeatureGuard(\n    () => itemPageResolver,\n    () => observableOf(FeatureID.CanManagePolicies),\n  );\n","import { CanActivateFn } from '@angular/router';\nimport { of as observableOf } from 'rxjs';\n\nimport { dsoPageSingleFeatureGuard } from '../../core/data/feature-authorization/feature-authorization-guard/dso-page-single-feature.guard';\nimport { FeatureID } from '../../core/data/feature-authorization/feature-id';\nimport { itemPageResolver } from '../item-page.resolver';\n\n/**\n * Guard for preventing unauthorized access to certain {@link Item} pages requiring edit metadata rights\n * Check edit metadata authorization rights\n */\nexport const itemPageMetadataGuard: CanActivateFn =\n  dsoPageSingleFeatureGuard(\n    () => itemPageResolver,\n    () => observableOf(FeatureID.CanEditMetadata),\n  );\n","import { CanActivateFn } from '@angular/router';\nimport { of as observableOf } from 'rxjs';\n\nimport { dsoPageSingleFeatureGuard } from '../../core/data/feature-authorization/feature-authorization-guard/dso-page-single-feature.guard';\nimport { FeatureID } from '../../core/data/feature-authorization/feature-id';\nimport { itemPageResolver } from '../item-page.resolver';\n\n/**\n * Guard for preventing unauthorized access to certain {@link Item} pages requiring specific authorizations.\n * Checks authorization rights for moving items.\n */\nexport const itemPageMoveGuard: CanActivateFn =\n  dsoPageSingleFeatureGuard(\n    () => itemPageResolver,\n    () => observableOf(FeatureID.CanMove),\n  );\n","import { CanActivateFn } from '@angular/router';\nimport { of as observableOf } from 'rxjs';\n\nimport { dsoPageSingleFeatureGuard } from '../../core/data/feature-authorization/feature-authorization-guard/dso-page-single-feature.guard';\nimport { FeatureID } from '../../core/data/feature-authorization/feature-id';\nimport { itemPageResolver } from '../item-page.resolver';\n\n/**\n * Guard for preventing unauthorized access to certain {@link Item} pages requiring specific authorizations.\n * Checks authorization rights for making items private.\n */\nexport const itemPagePrivateGuard: CanActivateFn =\n  dsoPageSingleFeatureGuard(\n    () => itemPageResolver,\n    () => observableOf(FeatureID.CanMakePrivate),\n  );\n","import { CanActivateFn } from '@angular/router';\nimport { of as observableOf } from 'rxjs';\n\nimport { dsoPageSingleFeatureGuard } from '../../core/data/feature-authorization/feature-authorization-guard/dso-page-single-feature.guard';\nimport { FeatureID } from '../../core/data/feature-authorization/feature-id';\nimport { itemPageResolver } from '../item-page.resolver';\n\n/**\n * Guard for preventing unauthorized access to certain {@link Item} pages requiring DOI registration rights\n * Check DOI registration authorization rights\n */\nexport const itemPageRegisterDoiGuard: CanActivateFn =\n  dsoPageSingleFeatureGuard(\n    () => itemPageResolver,\n    () => observableOf(FeatureID.CanRegisterDOI),\n  );\n","import { CanActivateFn } from '@angular/router';\nimport { of as observableOf } from 'rxjs';\n\nimport { dsoPageSingleFeatureGuard } from '../../core/data/feature-authorization/feature-authorization-guard/dso-page-single-feature.guard';\nimport { FeatureID } from '../../core/data/feature-authorization/feature-id';\nimport { itemPageResolver } from '../item-page.resolver';\n\n/**\n * Guard for preventing unauthorized access to certain {@link Item} pages requiring reinstate rights\n * Check reinstate authorization rights\n */\nexport const itemPageReinstateGuard: CanActivateFn =\n  dsoPageSingleFeatureGuard(\n    () => itemPageResolver,\n    () => observableOf(FeatureID.ReinstateItem),\n  );\n","import { CanActivateFn } from '@angular/router';\nimport { of as observableOf } from 'rxjs';\n\nimport { dsoPageSingleFeatureGuard } from '../../core/data/feature-authorization/feature-authorization-guard/dso-page-single-feature.guard';\nimport { FeatureID } from '../../core/data/feature-authorization/feature-id';\nimport { itemPageResolver } from '../item-page.resolver';\n\n/**\n * Guard for preventing unauthorized access to certain {@link Item} pages requiring manage relationships rights\n * Check manage relationships authorization rights\n */\nexport const itemPageRelationshipsGuard: CanActivateFn =\n  dsoPageSingleFeatureGuard(\n    () => itemPageResolver,\n    () => observableOf(FeatureID.CanManageRelationships),\n  );\n","import { CanActivateFn } from '@angular/router';\nimport { of as observableOf } from 'rxjs';\n\nimport { dsoPageSomeFeatureGuard } from '../../core/data/feature-authorization/feature-authorization-guard/dso-page-some-feature.guard';\nimport { FeatureID } from '../../core/data/feature-authorization/feature-id';\nimport { itemPageResolver } from '../item-page.resolver';\n\n/**\n * Guard for preventing unauthorized access to certain {@link Item} pages requiring any of the rights required for\n * the status page\n * Check authorization rights\n */\nexport const itemPageStatusGuard: CanActivateFn =\n  dsoPageSomeFeatureGuard(\n    () => itemPageResolver,\n    () => observableOf([FeatureID.CanManageMappings, FeatureID.WithdrawItem, FeatureID.ReinstateItem, FeatureID.CanManagePolicies, FeatureID.CanMakePrivate, FeatureID.CanDelete, FeatureID.CanMove, FeatureID.CanRegisterDOI]),\n  );\n","import { CanActivateFn } from '@angular/router';\nimport { of as observableOf } from 'rxjs';\n\nimport { dsoPageSingleFeatureGuard } from '../../core/data/feature-authorization/feature-authorization-guard/dso-page-single-feature.guard';\nimport { FeatureID } from '../../core/data/feature-authorization/feature-id';\nimport { itemPageResolver } from '../item-page.resolver';\n\n/**\n * Guard for preventing unauthorized access to certain {@link Item} pages requiring manage versions rights\n * Check manage versions authorization rights\n */\nexport const itemPageVersionHistoryGuard: CanActivateFn =\n  dsoPageSingleFeatureGuard(\n    () => itemPageResolver,\n    () => observableOf(FeatureID.CanManageVersions),\n  );\n","import { CanActivateFn } from '@angular/router';\nimport { of as observableOf } from 'rxjs';\n\nimport { dsoPageSingleFeatureGuard } from '../../core/data/feature-authorization/feature-authorization-guard/dso-page-single-feature.guard';\nimport { FeatureID } from '../../core/data/feature-authorization/feature-id';\nimport { itemPageResolver } from '../item-page.resolver';\n\n/**\n * Guard for preventing unauthorized access to certain {@link Item} pages requiring withdraw rights\n * Check withdraw authorization rights\n */\nexport const itemPageWithdrawGuard: CanActivateFn =\n  dsoPageSingleFeatureGuard(\n    () => itemPageResolver,\n    () => observableOf(FeatureID.WithdrawItem),\n  );\n","import { Component } from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router,\n  RouterLink,\n} from '@angular/router';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\n\nimport { ItemDataService } from '../../../core/data/item-data.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { Item } from '../../../core/shared/item.model';\nimport { getFirstCompletedRemoteData } from '../../../core/shared/operators';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { ModifyItemOverviewComponent } from '../modify-item-overview/modify-item-overview.component';\nimport { AbstractSimpleItemActionComponent } from '../simple-item-action/abstract-simple-item-action.component';\n\n@Component({\n  selector: 'ds-item-private',\n  templateUrl: '../simple-item-action/abstract-simple-item-action.component.html',\n  standalone: true,\n  imports: [\n    ModifyItemOverviewComponent,\n    TranslateModule,\n    RouterLink,\n  ],\n})\n/**\n * Component responsible for rendering the make item private page\n */\nexport class ItemPrivateComponent extends AbstractSimpleItemActionComponent {\n\n  protected messageKey = 'private';\n  protected predicate = (rd: RemoteData<Item>) => !rd.payload.isDiscoverable;\n\n  constructor(protected route: ActivatedRoute,\n              protected router: Router,\n              protected notificationsService: NotificationsService,\n              protected itemDataService: ItemDataService,\n              protected translateService: TranslateService) {\n    super(route, router, notificationsService, itemDataService, translateService);\n  }\n\n  /**\n   * Perform the make private action to the item\n   */\n  performAction() {\n    this.itemDataService.setDiscoverable(this.item, false).pipe(getFirstCompletedRemoteData()).subscribe(\n      (rd: RemoteData<Item>) => {\n        this.processRestResponse(rd);\n      },\n    );\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <h1>{{headerMessage | translate: {id: item.handle} }}</h1>\n            <p>{{descriptionMessage | translate}}</p>\n            <ds-modify-item-overview [item]=\"item\"></ds-modify-item-overview>\n          <div class=\"space-children-mr\">\n            <button (click)=\"performAction()\" class=\"btn btn-outline-secondary perform-action\">{{confirmMessage | translate}}\n            </button>\n            <button [routerLink]=\"[itemPageRoute, 'edit']\" class=\"btn btn-outline-secondary cancel\">\n              {{cancelMessage| translate}}\n            </button>\n          </div>\n        </div>\n    </div>\n\n</div>\n","import { Component } from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router,\n  RouterLink,\n} from '@angular/router';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\n\nimport { ItemDataService } from '../../../core/data/item-data.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { Item } from '../../../core/shared/item.model';\nimport { getFirstCompletedRemoteData } from '../../../core/shared/operators';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { ModifyItemOverviewComponent } from '../modify-item-overview/modify-item-overview.component';\nimport { AbstractSimpleItemActionComponent } from '../simple-item-action/abstract-simple-item-action.component';\n\n@Component({\n  selector: 'ds-item-public',\n  templateUrl: '../simple-item-action/abstract-simple-item-action.component.html',\n  standalone: true,\n  imports: [\n    ModifyItemOverviewComponent,\n    TranslateModule,\n    RouterLink,\n  ],\n})\n/**\n * Component responsible for rendering the make item public page\n */\nexport class ItemPublicComponent extends AbstractSimpleItemActionComponent {\n\n  protected messageKey = 'public';\n  protected predicate = (rd: RemoteData<Item>) => rd.payload.isDiscoverable;\n\n  constructor(protected route: ActivatedRoute,\n              protected router: Router,\n              protected notificationsService: NotificationsService,\n              protected itemDataService: ItemDataService,\n              protected translateService: TranslateService) {\n    super(route, router, notificationsService, itemDataService, translateService);\n  }\n\n  /**\n   * Perform the make public action to the item\n   */\n  performAction() {\n    this.itemDataService.setDiscoverable(this.item, true).pipe(getFirstCompletedRemoteData()).subscribe(\n      (response: RemoteData<Item>) => {\n        this.processRestResponse(response);\n      },\n    );\n  }\n}\n","import {\n  AsyncPipe,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router,\n  RouterLink,\n} from '@angular/router';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport {\n  first,\n  map,\n} from 'rxjs/operators';\n\nimport { IdentifierDataService } from '../../../core/data/identifier-data.service';\nimport { ItemDataService } from '../../../core/data/item-data.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { Item } from '../../../core/shared/item.model';\nimport { getFirstSucceededRemoteData } from '../../../core/shared/operators';\nimport { hasValue } from '../../../shared/empty.util';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { Identifier } from '../../../shared/object-list/identifier-data/identifier.model';\nimport { getItemPageRoute } from '../../item-page-routing-paths';\nimport { ModifyItemOverviewComponent } from '../modify-item-overview/modify-item-overview.component';\nimport { AbstractSimpleItemActionComponent } from '../simple-item-action/abstract-simple-item-action.component';\n\n@Component({\n  selector: 'ds-item-register-doi',\n  templateUrl: './item-register-doi-component.html',\n  imports: [\n    ModifyItemOverviewComponent,\n    RouterLink,\n    TranslateModule,\n    AsyncPipe,\n    NgIf,\n    NgForOf,\n  ],\n  standalone: true,\n})\n/**\n * Component responsible for rendering the Item Register DOI page\n */\nexport class ItemRegisterDoiComponent extends AbstractSimpleItemActionComponent implements OnInit {\n\n  protected messageKey = 'register-doi';\n  doiToUpdateMessage = 'item.edit.' + this.messageKey + '.to-update';\n  identifiers$: Observable<Identifier[]>;\n  processing = false;\n\n  constructor(protected route: ActivatedRoute,\n              protected router: Router,\n              protected notificationsService: NotificationsService,\n              protected itemDataService: ItemDataService,\n              protected translateService: TranslateService,\n              protected identifierDataService: IdentifierDataService) {\n    super(route, router, notificationsService, itemDataService, translateService);\n  }\n\n  /**\n   * Initialise component\n   */\n  ngOnInit(): void {\n    this.itemRD$ = this.route.data.pipe(\n      map((data) => data.dso),\n      getFirstSucceededRemoteData(),\n    )as Observable<RemoteData<Item>>;\n\n    this.itemRD$.pipe(first()).subscribe((rd) => {\n      this.item = rd.payload;\n      this.itemPageRoute = getItemPageRoute(this.item);\n      this.identifiers$ = this.identifierDataService.getIdentifierDataFor(this.item).pipe(\n        map((identifierRD) => {\n          if (identifierRD.statusCode !== 401 && hasValue(identifierRD.payload)) {\n            return identifierRD.payload.identifiers;\n          } else {\n            return null;\n          }\n        }),\n      );\n    },\n    );\n\n    this.confirmMessage = 'item.edit.' + this.messageKey + '.confirm';\n    this.cancelMessage = 'item.edit.' + this.messageKey + '.cancel';\n    this.headerMessage = 'item.edit.' + this.messageKey + '.header';\n    this.descriptionMessage = 'item.edit.' + this.messageKey + '.description';\n\n\n  }\n\n  /**\n   * Perform the register DOI action to the item\n   */\n  performAction() {\n    this.registerDoi();\n  }\n\n  /**\n   * Request that a pending, minted or null DOI be queued for registration\n   */\n  registerDoi() {\n    this.processing = true;\n    this.identifierDataService.registerIdentifier(this.item, 'doi').subscribe(\n      (response: RemoteData<Item>) => {\n        if (response.hasCompleted) {\n          this.processing = false;\n          this.processRestResponse(response);\n        }\n      },\n    );\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h2>{{headerMessage | translate: {id: item.handle} }}</h2>\n      <p>{{descriptionMessage | translate}}</p>\n      <div *ngFor=\"let identifier of (identifiers$ | async)\" class=\"w-100 p\">\n        <div *ngIf=\"(identifier.identifierType === 'doi')\">\n          <p class=\"float-left\">{{doiToUpdateMessage | translate}}: {{identifier.value}}\n            ({{\"item.edit.identifiers.doi.status.\"+identifier.identifierStatus|translate}})\n          </p>\n        </div>\n      </div>\n      <ds-modify-item-overview [item]=\"item\"></ds-modify-item-overview>\n      <div class=\"space-children-mr\">\n        <button (click)=\"performAction()\" class=\"btn btn-outline-secondary perform-action\">{{confirmMessage | translate}}\n        </button>\n        <button [routerLink]=\"[itemPageRoute, 'edit']\" class=\"btn btn-outline-secondary cancel\">\n          {{cancelMessage| translate}}\n        </button>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import { Component } from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router,\n  RouterLink,\n} from '@angular/router';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\n\nimport { ItemDataService } from '../../../core/data/item-data.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { Item } from '../../../core/shared/item.model';\nimport { getFirstCompletedRemoteData } from '../../../core/shared/operators';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { ModifyItemOverviewComponent } from '../modify-item-overview/modify-item-overview.component';\nimport { AbstractSimpleItemActionComponent } from '../simple-item-action/abstract-simple-item-action.component';\n\n@Component({\n  selector: 'ds-item-reinstate',\n  templateUrl: '../simple-item-action/abstract-simple-item-action.component.html',\n  standalone: true,\n  imports: [\n    ModifyItemOverviewComponent,\n    TranslateModule,\n    RouterLink,\n  ],\n})\n/**\n * Component responsible for rendering the Item Reinstate page\n */\nexport class ItemReinstateComponent extends AbstractSimpleItemActionComponent {\n\n  protected messageKey = 'reinstate';\n  protected predicate = (rd: RemoteData<Item>) => !rd.payload.isWithdrawn;\n\n  constructor(protected route: ActivatedRoute,\n              protected router: Router,\n              protected notificationsService: NotificationsService,\n              protected itemDataService: ItemDataService,\n              protected translateService: TranslateService) {\n    super(route, router, notificationsService, itemDataService, translateService);\n  }\n\n  /**\n   * Perform the reinstate action to the item\n   */\n  performAction() {\n    this.itemDataService.setWithDrawn(this.item, false).pipe(getFirstCompletedRemoteData()).subscribe(\n      (response: RemoteData<Item>) => {\n        this.processRestResponse(response);\n      },\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  combineLatest as observableCombineLatest,\n  EMPTY,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  concatMap,\n  map,\n  switchMap,\n  take,\n  toArray,\n} from 'rxjs/operators';\n\nimport { EntityTypeDataService } from '../../../core/data/entity-type-data.service';\nimport { ItemDataService } from '../../../core/data/item-data.service';\nimport { FieldChangeType } from '../../../core/data/object-updates/field-change-type.model';\nimport { FieldUpdate } from '../../../core/data/object-updates/field-update.model';\nimport { FieldUpdates } from '../../../core/data/object-updates/field-updates.model';\nimport {\n  DeleteRelationship,\n  RelationshipIdentifiable,\n} from '../../../core/data/object-updates/object-updates.reducer';\nimport { ObjectUpdatesService } from '../../../core/data/object-updates/object-updates.service';\nimport { RelationshipDataService } from '../../../core/data/relationship-data.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { Item } from '../../../core/shared/item.model';\nimport { ItemType } from '../../../core/shared/item-relationships/item-type.model';\nimport { Relationship } from '../../../core/shared/item-relationships/relationship.model';\nimport { RelationshipType } from '../../../core/shared/item-relationships/relationship-type.model';\nimport { NoContent } from '../../../core/shared/NoContent.model';\nimport {\n  getFirstSucceededRemoteData,\n  getRemoteDataPayload,\n} from '../../../core/shared/operators';\nimport { hasValue } from '../../../shared/empty.util';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EditItemRelationshipsService {\n  public notificationsPrefix = 'item.edit.relationships.notifications.';\n\n  public isSaving$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(\n    public itemService: ItemDataService,\n    public objectUpdatesService: ObjectUpdatesService,\n    public notificationsService: NotificationsService,\n    protected modalService: NgbModal,\n    public relationshipService: RelationshipDataService,\n    public entityTypeService: EntityTypeDataService,\n    public translateService: TranslateService,\n  ) { }\n\n\n  /**\n   * Resolve the currently selected related items back to relationships and send a delete request for each of the relationships found\n   * Make sure the lists are refreshed afterwards and notifications are sent for success and errors\n   */\n  public submit(item: Item, url: string): void {\n    this.isSaving$.next(true);\n    this.objectUpdatesService.getFieldUpdates(url, [], true).pipe(\n      map((fieldUpdates: FieldUpdates) =>\n        Object.values(fieldUpdates)\n          .filter((fieldUpdate: FieldUpdate) => hasValue(fieldUpdate))\n          .filter((fieldUpdate: FieldUpdate) => fieldUpdate.changeType === FieldChangeType.ADD || fieldUpdate.changeType === FieldChangeType.REMOVE),\n      ),\n      take(1),\n      // emit each update in the array separately\n      switchMap((updates) => updates),\n      // process each update one by one, while waiting for the previous to finish\n      concatMap((update: FieldUpdate) => {\n        if (update.changeType === FieldChangeType.REMOVE) {\n          return this.deleteRelationship(update.field as DeleteRelationship).pipe(\n            take(1),\n            switchMap((deleteRD: RemoteData<NoContent>) => {\n              if (deleteRD.hasSucceeded) {\n                return this.itemService.invalidateByHref((update.field as DeleteRelationship).relatedItem._links.self.href).pipe(\n                  map(() => deleteRD),\n                );\n              }\n              return [deleteRD];\n            }),\n          );\n        } else if (update.changeType === FieldChangeType.ADD) {\n          return this.addRelationship(update.field as RelationshipIdentifiable).pipe(\n            take(1),\n            switchMap((relationshipRD: RemoteData<Relationship>) => {\n              if (relationshipRD.hasSucceeded) {\n                // Set the newly related item to stale, so its relationships will update to include\n                // the new one. Only set the current item to stale at the very end so we only do it\n                // once\n                const { leftItem, rightItem } = relationshipRD.payload._links;\n                if (leftItem.href === item.self) {\n                  return this.itemService.invalidateByHref(rightItem.href).pipe(\n                    // when it's invalidated, emit the original relationshipRD for use in the pipe below\n                    map(() => relationshipRD),\n                  );\n                } else {\n                  return this.itemService.invalidateByHref(leftItem.href).pipe(\n                    // when it's invalidated, emit the original relationshipRD for use in the pipe below\n                    map(() => relationshipRD),\n                  );\n                }\n              } else {\n                return [relationshipRD];\n              }\n            }),\n          );\n        } else {\n          return EMPTY;\n        }\n      }),\n      toArray(),\n      switchMap((responses) => {\n        // once all relationships are made and all related items have been invalidated, invalidate\n        // the current item\n        return this.itemService.invalidateByHref(item.self).pipe(\n          map(() => responses),\n        );\n      }),\n    ).subscribe((responses) => {\n      if (responses.length > 0) {\n        this.initializeOriginalFields(item, url);\n        this.displayNotifications(responses);\n        this.modalService.dismissAll();\n        this.isSaving$.next(false);\n      }\n    });\n  }\n\n  /**\n   * Sends all initial values of this item to the object updates service\n   */\n  public initializeOriginalFields(item: Item, url: string): Subscription {\n    return this.relationshipService.getRelatedItems(item).pipe(\n      take(1),\n    ).subscribe((items: Item[]) => {\n      this.objectUpdatesService.initialize(url, items, item.lastModified);\n    });\n  }\n\n  deleteRelationship(deleteRelationship: DeleteRelationship): Observable<RemoteData<NoContent>> {\n    let copyVirtualMetadata: string;\n    if (deleteRelationship.keepLeftVirtualMetadata && deleteRelationship.keepRightVirtualMetadata) {\n      copyVirtualMetadata = 'all';\n    } else if (deleteRelationship.keepLeftVirtualMetadata) {\n      copyVirtualMetadata = 'left';\n    } else if (deleteRelationship.keepRightVirtualMetadata) {\n      copyVirtualMetadata = 'right';\n    } else {\n      copyVirtualMetadata = 'none';\n    }\n\n    return this.relationshipService.deleteRelationship(deleteRelationship.uuid, copyVirtualMetadata, false);\n  }\n\n  addRelationship(addRelationship: RelationshipIdentifiable): Observable<RemoteData<Relationship>> {\n    let leftItem: Item;\n    let rightItem: Item;\n    let leftwardValue: string;\n    let rightwardValue: string;\n    if (addRelationship.originalIsLeft) {\n      leftItem = addRelationship.originalItem;\n      rightItem = addRelationship.relatedItem;\n      leftwardValue = null;\n      rightwardValue = addRelationship.nameVariant;\n    } else {\n      leftItem = addRelationship.relatedItem;\n      rightItem = addRelationship.originalItem;\n      leftwardValue = addRelationship.nameVariant;\n      rightwardValue = null;\n    }\n    return this.relationshipService.addRelationship(addRelationship.type.id, leftItem, rightItem, leftwardValue, rightwardValue, false);\n  }\n\n  /**\n   * Display notifications\n   * - Error notification for each failed response with their message\n   * - Success notification in case there's at least one successful response\n   * @param responses\n   */\n  displayNotifications(responses: RemoteData<NoContent>[]): void {\n    const failedResponses = responses.filter((response: RemoteData<NoContent>) => response.hasFailed);\n    const successfulResponses = responses.filter((response: RemoteData<NoContent>) => response.hasSucceeded);\n\n    failedResponses.forEach((response: RemoteData<NoContent>) => {\n      this.notificationsService.error(this.getNotificationTitle('failed'), response.errorMessage);\n    });\n    if (successfulResponses.length > 0) {\n      this.notificationsService.success(this.getNotificationTitle('saved'), this.getNotificationContent('saved'));\n    }\n  }\n\n  isProvidedItemTypeLeftType(relationshipType: RelationshipType, itemType: ItemType, item: Item): Observable<boolean> {\n    return this.getRelationshipLeftAndRightType(relationshipType).pipe(\n      map(([leftType, rightType]: [ItemType, ItemType]) => {\n        if (leftType.id === itemType.id) {\n          return true;\n        }\n\n        if (rightType.id === itemType.id) {\n          return false;\n        }\n\n        // should never happen...\n        console.warn(`The item ${item.uuid} is not on the right or the left side of relationship type ${relationshipType.uuid}`);\n        return undefined;\n      }),\n    );\n  }\n\n  /**\n   * Whether both side of the relationship need to be displayed on the edit relationship page or not.\n   *\n   * @param relationshipType The relationship type\n   * @param itemType         The item type\n   */\n  shouldDisplayBothRelationshipSides(relationshipType: RelationshipType, itemType: ItemType): Observable<boolean> {\n    return this.getRelationshipLeftAndRightType(relationshipType).pipe(\n      map(([leftType, rightType]: [ItemType, ItemType]) => {\n        return leftType.id === itemType.id && rightType.id === itemType.id && relationshipType.leftwardType !== relationshipType.rightwardType;\n      }),\n    );\n  }\n\n  protected getRelationshipLeftAndRightType(relationshipType: RelationshipType): Observable<[ItemType, ItemType]> {\n    const leftType$: Observable<ItemType> = relationshipType.leftType.pipe(\n      getFirstSucceededRemoteData(),\n      getRemoteDataPayload(),\n    );\n\n    const rightType$: Observable<ItemType> = relationshipType.rightType.pipe(\n      getFirstSucceededRemoteData(),\n      getRemoteDataPayload(),\n    );\n\n    return observableCombineLatest([\n      leftType$,\n      rightType$,\n    ]);\n  }\n\n\n\n  /**\n   * Get translated notification title\n   * @param key\n   */\n  getNotificationTitle(key: string): string {\n    return this.translateService.instant(this.notificationsPrefix + key + '.title');\n  }\n\n  /**\n   * Get translated notification content\n   * @param key\n   */\n  getNotificationContent(key: string): string {\n    return this.translateService.instant(this.notificationsPrefix + key + '.content');\n  }\n}\n","import {\n  AsyncPipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  BehaviorSubject,\n  Observable,\n  Subscription,\n} from 'rxjs';\n\nimport { Item } from '../../../../core/shared/item.model';\nimport { ItemType } from '../../../../core/shared/item-relationships/item-type.model';\nimport { RelationshipType } from '../../../../core/shared/item-relationships/relationship-type.model';\nimport { hasValue } from '../../../../shared/empty.util';\nimport { EditItemRelationshipsService } from '../edit-item-relationships.service';\nimport { EditRelationshipListComponent } from '../edit-relationship-list/edit-relationship-list.component';\n\n@Component({\n  selector: 'ds-edit-relationship-list-wrapper',\n  styleUrls: ['./edit-relationship-list-wrapper.component.scss'],\n  templateUrl: './edit-relationship-list-wrapper.component.html',\n  standalone: true,\n  imports: [\n    AsyncPipe,\n    EditRelationshipListComponent,\n    NgIf,\n  ],\n})\n/**\n * A component creating a list of editable relationships of a certain type\n * The relationships are rendered as a list of related items\n */\nexport class EditRelationshipListWrapperComponent implements OnInit, OnDestroy {\n\n  /**\n   * The item to display related items for\n   */\n  @Input() item: Item;\n\n  @Input() itemType: ItemType;\n\n  /**\n   * The URL to the current page\n   * Used to fetch updates for the current item from the store\n   */\n  @Input() url: string;\n\n  /**\n   * The label of the relationship-type we're rendering a list for\n   */\n  @Input() relationshipType: RelationshipType;\n\n  /**\n   * If updated information has changed\n   */\n  @Input() hasChanges!: Observable<boolean>;\n\n  /**\n   * The event emmiter to submit the new information\n   */\n  @Output() submitModal: EventEmitter<void> = new EventEmitter();\n\n  /**\n   * Observable that emits true if {@link itemType} is on the left-hand side of {@link relationshipType},\n   * false if it is on the right-hand side and undefined in the rare case that it is on neither side.\n   */\n  currentItemIsLeftItem$: BehaviorSubject<boolean> = new BehaviorSubject(undefined);\n\n\n  isLeftItem$ = new BehaviorSubject(true);\n\n  isRightItem$ = new BehaviorSubject(false);\n\n  shouldDisplayBothRelationshipSides$: Observable<boolean>;\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  private subs: Subscription[] = [];\n\n  constructor(\n    protected editItemRelationshipsService: EditItemRelationshipsService,\n  ) {\n  }\n\n\n  ngOnInit(): void {\n    this.subs.push(this.editItemRelationshipsService.isProvidedItemTypeLeftType(this.relationshipType, this.itemType, this.item)\n      .subscribe((nextValue: boolean) => {\n        this.currentItemIsLeftItem$.next(nextValue);\n      }));\n\n    this.shouldDisplayBothRelationshipSides$ = this.editItemRelationshipsService.shouldDisplayBothRelationshipSides(this.relationshipType, this.itemType);\n  }\n\n\n  ngOnDestroy(): void {\n    this.subs\n      .filter((subscription) => hasValue(subscription))\n      .forEach((subscription) => subscription.unsubscribe());\n  }\n}\n","<ng-container *ngIf=\"shouldDisplayBothRelationshipSides$ | async\">\n    <ds-edit-relationship-list\n            [url]=\"url\"\n            [item]=\"item\"\n            [itemType]=\"itemType\"\n            [relationshipType]=\"relationshipType\"\n            [hasChanges]=\"hasChanges\"\n            [currentItemIsLeftItem$]=\"isLeftItem$\"\n            class=\"d-block mb-4\"\n    ></ds-edit-relationship-list>\n    <ds-edit-relationship-list\n            [url]=\"url\"\n            [item]=\"item\"\n            [itemType]=\"itemType\"\n            [relationshipType]=\"relationshipType\"\n            [hasChanges]=\"hasChanges\"\n            [currentItemIsLeftItem$]=\"isRightItem$\"\n    ></ds-edit-relationship-list>\n</ng-container>\n\n<ng-container *ngIf=\"(shouldDisplayBothRelationshipSides$ | async) === false\">\n    <ds-edit-relationship-list\n            [url]=\"url\"\n            [item]=\"item\"\n            [itemType]=\"itemType\"\n            [relationshipType]=\"relationshipType\"\n            [hasChanges]=\"hasChanges\"\n            [currentItemIsLeftItem$]=\"currentItemIsLeftItem$\"\n    ></ds-edit-relationship-list>\n</ng-container>\n\n","import {\n  AsyncPipe,\n  NgClass,\n  NgFor,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  NgbModal,\n  NgbModalRef,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  combineLatest as observableCombineLatest,\n  EMPTY,\n  from as observableFrom,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  concatMap,\n  defaultIfEmpty,\n  map,\n  mergeMap,\n  startWith,\n  switchMap,\n  take,\n  tap,\n  toArray,\n} from 'rxjs/operators';\n\nimport {\n  APP_CONFIG,\n  AppConfig,\n} from '../../../../../config/app-config.interface';\nimport { LinkService } from '../../../../core/cache/builders/link.service';\nimport { RequestParam } from '../../../../core/cache/models/request-param.model';\nimport { FieldChangeType } from '../../../../core/data/object-updates/field-change-type.model';\nimport { FieldUpdate } from '../../../../core/data/object-updates/field-update.model';\nimport { FieldUpdates } from '../../../../core/data/object-updates/field-updates.model';\nimport { RelationshipIdentifiable } from '../../../../core/data/object-updates/object-updates.reducer';\nimport { ObjectUpdatesService } from '../../../../core/data/object-updates/object-updates.service';\nimport { PaginatedList } from '../../../../core/data/paginated-list.model';\nimport { RelationshipDataService } from '../../../../core/data/relationship-data.service';\nimport { RemoteData } from '../../../../core/data/remote-data';\nimport { PaginationService } from '../../../../core/pagination/pagination.service';\nimport { Collection } from '../../../../core/shared/collection.model';\nimport { Item } from '../../../../core/shared/item.model';\nimport { ItemType } from '../../../../core/shared/item-relationships/item-type.model';\nimport { Relationship } from '../../../../core/shared/item-relationships/relationship.model';\nimport { RelationshipType } from '../../../../core/shared/item-relationships/relationship-type.model';\nimport {\n  getAllSucceededRemoteData,\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteData,\n  getFirstSucceededRemoteDataPayload,\n  getRemoteDataPayload,\n} from '../../../../core/shared/operators';\nimport { BtnDisabledDirective } from '../../../../shared/btn-disabled.directive';\nimport {\n  hasNoValue,\n  hasValue,\n  hasValueOperator,\n  isNotEmpty,\n} from '../../../../shared/empty.util';\nimport { DsDynamicLookupRelationModalComponent } from '../../../../shared/form/builder/ds-dynamic-form-ui/relation-lookup-modal/dynamic-lookup-relation-modal.component';\nimport { RelationshipOptions } from '../../../../shared/form/builder/models/relationship-options.model';\nimport { ThemedLoadingComponent } from '../../../../shared/loading/themed-loading.component';\nimport { ItemSearchResult } from '../../../../shared/object-collection/shared/item-search-result.model';\nimport { SelectableListService } from '../../../../shared/object-list/selectable-list/selectable-list.service';\nimport { PaginationComponent } from '../../../../shared/pagination/pagination.component';\nimport { PaginationComponentOptions } from '../../../../shared/pagination/pagination-component-options.model';\nimport { FollowLinkConfig } from '../../../../shared/utils/follow-link-config.model';\nimport { ObjectValuesPipe } from '../../../../shared/utils/object-values-pipe';\nimport { itemLinksToFollow } from '../../../../shared/utils/relation-query.utils';\nimport { VarDirective } from '../../../../shared/utils/var.directive';\nimport { EditItemRelationshipsService } from '../edit-item-relationships.service';\nimport { EditRelationshipComponent } from '../edit-relationship/edit-relationship.component';\n\n@Component({\n  selector: 'ds-edit-relationship-list',\n  styleUrls: ['./edit-relationship-list.component.scss'],\n  templateUrl: './edit-relationship-list.component.html',\n  imports: [\n    EditRelationshipComponent,\n    PaginationComponent,\n    AsyncPipe,\n    ObjectValuesPipe,\n    VarDirective,\n    NgIf,\n    NgFor,\n    TranslateModule,\n    NgClass,\n    ThemedLoadingComponent,\n    BtnDisabledDirective,\n  ],\n  standalone: true,\n})\n/**\n * A component creating a list of editable relationships of a certain type\n * The relationships are rendered as a list of related items\n */\nexport class EditRelationshipListComponent implements OnInit, OnDestroy {\n\n  /**\n   * The item to display related items for\n   */\n  @Input() item: Item;\n\n  @Input() itemType: ItemType;\n\n  /**\n   * The URL to the current page\n   * Used to fetch updates for the current item from the store\n   */\n  @Input() url: string;\n\n  /**\n   * The label of the relationship-type we're rendering a list for\n   */\n  @Input() relationshipType: RelationshipType;\n\n  /**\n   * If updated information has changed\n   */\n  @Input() hasChanges!: Observable<boolean>;\n\n  /**\n   * The event emmiter to submit the new information\n   */\n  @Output() submitModal: EventEmitter<void> = new EventEmitter();\n\n  /**\n   * Observable that emits the left and right item type of {@link relationshipType} simultaneously.\n   */\n  private relationshipLeftAndRightType$: Observable<[ItemType, ItemType]>;\n\n  /**\n   * Observable that emits true if {@link itemType} is on the left-hand side of {@link relationshipType},\n   * false if it is on the right-hand side and undefined in the rare case that it is on neither side.\n   */\n  @Input() currentItemIsLeftItem$: BehaviorSubject<boolean> = new BehaviorSubject(undefined);\n\n  relatedEntityType$: Observable<ItemType>;\n\n  /**\n   * The translation key for the entity type\n   */\n  relationshipMessageKey$: Observable<string>;\n\n  /**\n   * The list ID to save selected entities under\n   */\n  listId: string;\n\n  /**\n   * The FieldUpdates for the relationships in question\n   */\n  updates$: BehaviorSubject<FieldUpdates> = new BehaviorSubject(undefined);\n\n  /**\n   * The RemoteData for the relationships\n   */\n  relationshipsRd$: BehaviorSubject<RemoteData<PaginatedList<Relationship>>> = new BehaviorSubject(undefined);\n\n  /**\n   * Whether the current page is the last page\n   */\n  isLastPage$: BehaviorSubject<boolean> = new BehaviorSubject(true);\n\n  /**\n   * Whether we're loading\n   */\n  loading$: BehaviorSubject<boolean> = new BehaviorSubject(true);\n\n  /**\n   * The number of added fields that haven't been saved yet\n   */\n  nbAddedFields$: BehaviorSubject<number> = new BehaviorSubject(0);\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  private subs: Subscription[] = [];\n\n  /**\n   * The pagination config\n   */\n  paginationConfig: PaginationComponentOptions;\n\n  /**\n   * A reference to the lookup window\n   */\n  modalRef: NgbModalRef;\n\n  /**\n   * Determines whether to ask for the embedded item thumbnail.\n   */\n  fetchThumbnail: boolean;\n\n  constructor(\n    protected objectUpdatesService: ObjectUpdatesService,\n    protected linkService: LinkService,\n    protected relationshipService: RelationshipDataService,\n    protected modalService: NgbModal,\n    protected paginationService: PaginationService,\n    protected selectableListService: SelectableListService,\n    protected editItemRelationshipsService: EditItemRelationshipsService,\n    @Inject(APP_CONFIG) protected appConfig: AppConfig,\n  ) {\n    this.fetchThumbnail = this.appConfig.browseBy.showThumbnails;\n  }\n\n  /**\n   * Get the i18n message key for this relationship type\n   */\n  public getRelationshipMessageKey(): Observable<string> {\n    return observableCombineLatest([\n      this.getLabel(),\n      this.relatedEntityType$,\n    ]).pipe(\n      map(([label, relatedEntityType]) => {\n        if (hasValue(label) && label.indexOf('is') > -1 && label.indexOf('Of') > -1) {\n          const relationshipLabel = `${label.substring(2, label.indexOf('Of'))}`;\n          if (relationshipLabel !== relatedEntityType.label) {\n            return `relationships.is${relationshipLabel}Of.${relatedEntityType.label}`;\n          } else {\n            return `relationships.is${relationshipLabel}Of`;\n          }\n        } else {\n          return label;\n        }\n      }),\n    );\n  }\n\n  /**\n   * Get the relevant label for this relationship type\n   */\n  private getLabel(): Observable<string> {\n    return this.currentItemIsLeftItem$.pipe(\n      map((currentItemIsLeftItem) => {\n        if (currentItemIsLeftItem) {\n          return this.relationshipType.leftwardType;\n        } else {\n          return this.relationshipType.rightwardType;\n        }\n      }),\n    );\n  }\n\n  /**\n   * Prevent unnecessary rerendering so fields don't lose focus\n   */\n  trackUpdate(index, update: FieldUpdate) {\n    return update && update.field ? update.field.uuid : undefined;\n  }\n\n  /**\n   * Check whether the current entity can have multiple relationships of this type\n   * This is based on the max cardinality of the relationship\n   * @private\n   */\n  private isRepeatable(): boolean {\n    const isLeft = this.currentItemIsLeftItem$.getValue();\n    if (isLeft) {\n      const leftMaxCardinality = this.relationshipType.leftMaxCardinality;\n      return hasNoValue(leftMaxCardinality) || leftMaxCardinality > 1;\n    } else {\n      const rightMaxCardinality = this.relationshipType.rightMaxCardinality;\n      return hasNoValue(rightMaxCardinality) || rightMaxCardinality > 1;\n    }\n  }\n\n  /**\n   * Open the dynamic lookup modal to search for items to add as relationships\n   */\n  openLookup() {\n    this.modalRef = this.modalService.open(DsDynamicLookupRelationModalComponent, {\n      size: 'lg',\n    });\n    const modalComp: DsDynamicLookupRelationModalComponent = this.modalRef.componentInstance;\n    modalComp.repeatable = true;\n    modalComp.isEditRelationship = true;\n    modalComp.listId = this.listId;\n    modalComp.item = this.item;\n    modalComp.relationshipType = this.relationshipType;\n    modalComp.currentItemIsLeftItem$ = this.currentItemIsLeftItem$;\n    modalComp.toAdd = [];\n    modalComp.toRemove = [];\n    modalComp.isPending = false;\n    modalComp.repeatable = this.isRepeatable();\n    modalComp.hiddenQuery = '-search.resourceid:' + this.item.uuid;\n\n    this.item.owningCollection.pipe(\n      getFirstSucceededRemoteDataPayload(),\n    ).subscribe((collection: Collection) => {\n      modalComp.collection = collection;\n    });\n\n    modalComp.select = (...selectableObjects: ItemSearchResult[]) => {\n      selectableObjects.forEach((searchResult) => {\n        const relatedItem: Item = searchResult.indexableObject;\n\n        const foundIndex = modalComp.toRemove.findIndex((itemSearchResult: ItemSearchResult) => itemSearchResult.indexableObject.uuid === relatedItem.uuid);\n\n        if (foundIndex !== -1) {\n          modalComp.toRemove.splice(foundIndex,1);\n        } else {\n\n          this.getRelationFromId(relatedItem)\n            .subscribe((relationship: Relationship) => {\n              if (!relationship ) {\n                modalComp.toAdd.push(searchResult);\n              } else {\n                const foundIndexRemove = modalComp.toRemove.findIndex( el => el.indexableObject.uuid === relatedItem.uuid);\n                if (foundIndexRemove !== -1) {\n                  modalComp.toRemove.splice(foundIndexRemove,1);\n                }\n              }\n\n              this.loading$.next(isNotEmpty(modalComp.toAdd) || isNotEmpty(modalComp.toRemove));\n              // emit the last page again to trigger a fieldupdates refresh\n              this.relationshipsRd$.next(this.relationshipsRd$.getValue());\n            });\n        }\n      });\n    };\n    modalComp.deselect = (...selectableObjects: ItemSearchResult[]) => {\n      selectableObjects.forEach((searchResult) => {\n        const relatedItem: Item = searchResult.indexableObject;\n\n        const foundIndex = modalComp.toAdd.findIndex( el => el.indexableObject.uuid === relatedItem.uuid);\n\n        if (foundIndex !== -1) {\n          modalComp.toAdd.splice(foundIndex,1);\n        } else {\n          modalComp.toRemove.push(searchResult);\n        }\n        this.loading$.next(isNotEmpty(modalComp.toAdd) || isNotEmpty(modalComp.toRemove));\n      });\n    };\n\n\n\n    modalComp.submitEv = () => {\n      modalComp.isPending = true;\n      const isLeft = this.currentItemIsLeftItem$.getValue();\n      const addOperations = modalComp.toAdd.map((searchResult: ItemSearchResult) => ({ type: 'add', searchResult }));\n      const removeOperations = modalComp.toRemove.map((searchResult: ItemSearchResult) => ({ type: 'remove', searchResult }));\n      observableFrom([...addOperations, ...removeOperations]).pipe(\n        concatMap(({ type, searchResult }: { type: string, searchResult: ItemSearchResult }) => {\n          const relatedItem: Item = searchResult.indexableObject;\n          if (type === 'add') {\n            return this.relationshipService.getNameVariant(this.listId, relatedItem.uuid).pipe(\n              switchMap((nameVariant) => {\n                const update = {\n                  uuid: `${this.relationshipType.id}-${relatedItem.uuid}`,\n                  nameVariant,\n                  type: this.relationshipType,\n                  originalIsLeft: isLeft,\n                  originalItem: this.item,\n                  relatedItem,\n                } as RelationshipIdentifiable;\n                return this.objectUpdatesService.saveAddFieldUpdate(this.url, update);\n              }),\n              take(1),\n            );\n          } else if (type === 'remove') {\n            return this.relationshipService.getNameVariant(this.listId, relatedItem.uuid).pipe(\n              switchMap((nameVariant) => {\n                return this.getRelationFromId(searchResult.indexableObject).pipe(\n                  map( (relationship: Relationship) => {\n                    const update = {\n                      uuid: relationship.id,\n                      nameVariant,\n                      type: this.relationshipType,\n                      originalIsLeft: isLeft,\n                      originalItem: this.item,\n                      relatedItem,\n                      relationship,\n                    } as RelationshipIdentifiable;\n                    return this.objectUpdatesService.saveRemoveFieldUpdate(this.url,update);\n                  }),\n                );\n              }),\n              take(1),\n            );\n          } else {\n            return EMPTY;\n          }\n        }),\n        toArray(),\n      ).subscribe({\n        complete: () => {\n          this.editItemRelationshipsService.submit(this.item, this.url);\n          this.submitModal.emit();\n        },\n      });\n    };\n\n\n    modalComp.discardEv = () => {\n      modalComp.toAdd.forEach( (searchResult) => {\n        this.selectableListService.deselectSingle(this.listId,searchResult);\n      });\n\n      modalComp.toRemove.forEach( (searchResult) => {\n        this.selectableListService.selectSingle(this.listId,searchResult);\n      });\n\n      modalComp.toAdd = [];\n      modalComp.toRemove = [];\n      this.loading$.next(false);\n    };\n\n    modalComp.closeEv = () => {\n      this.loading$.next(false);\n    };\n\n    this.relatedEntityType$\n      .pipe(take(1))\n      .subscribe((relatedEntityType) => {\n        modalComp.relationshipOptions = Object.assign(\n          new RelationshipOptions(), {\n            relationshipType: relatedEntityType.label,\n            searchConfiguration: relatedEntityType.label.toLowerCase(),\n            nameVariants: 'true',\n          },\n        );\n      });\n\n    this.selectableListService.deselectAll(this.listId);\n  }\n\n  getRelationFromId(relatedItem) {\n    const relationshipLabel = this.currentItemIsLeftItem$.getValue() ? this.relationshipType.leftwardType : this.relationshipType.rightwardType;\n    return this.relationshipService.searchByItemsAndType( this.relationshipType.id, this.item.uuid, relationshipLabel ,[relatedItem.id] ).pipe(\n      getFirstSucceededRemoteData(),\n      getRemoteDataPayload(),\n      map( (res: PaginatedList<Relationship>) => res.page[0]),\n    );\n  }\n\n  ngOnInit(): void {\n    // store the left and right type of the relationship in a single observable\n    this.relationshipLeftAndRightType$ = observableCombineLatest([\n      this.relationshipType.leftType,\n      this.relationshipType.rightType,\n    ].map((type) => type.pipe(\n      getFirstSucceededRemoteData(),\n      getRemoteDataPayload(),\n    ))) as Observable<[ItemType, ItemType]>;\n\n    this.relatedEntityType$ = this.relationshipLeftAndRightType$.pipe(\n      map(([leftType, rightType]: [ItemType, ItemType]) => {\n        if (leftType.uuid !== this.itemType.uuid) {\n          return leftType;\n        } else {\n          return rightType;\n        }\n      }),\n      hasValueOperator(),\n    );\n\n    this.relatedEntityType$.pipe(\n      take(1),\n    ).subscribe(\n      (relatedEntityType) => this.listId = `edit-relationship-${this.itemType.id}-${relatedEntityType.id}`,\n    );\n\n    this.relationshipMessageKey$ = this.getRelationshipMessageKey();\n\n\n    // initialize the pagination options\n    this.paginationConfig = new PaginationComponentOptions();\n    this.paginationConfig.id = `er${this.relationshipType.id}`;\n    this.paginationConfig.pageSize = 5;\n    this.paginationConfig.currentPage = 1;\n\n    // get the pagination params from the route\n    const currentPagination$ = this.paginationService.getCurrentPagination(\n      this.paginationConfig.id,\n      this.paginationConfig,\n    ).pipe(\n      tap(() => this.loading$.next(true)),\n    );\n\n    // this adds thumbnail images when required by configuration\n    const linksToFollow: FollowLinkConfig<Relationship>[] = itemLinksToFollow(this.fetchThumbnail, this.appConfig.item.showAccessStatuses);\n\n    this.subs.push(\n      observableCombineLatest([\n        currentPagination$,\n        this.currentItemIsLeftItem$,\n        this.relatedEntityType$,\n      ]).pipe(\n        switchMap(([currentPagination, currentItemIsLeftItem, relatedEntityType]: [PaginationComponentOptions, boolean, ItemType]) => {\n          // get the relationships for the current page, item, relationship type and related entity type\n          return this.relationshipService.getItemRelationshipsByLabel(\n            this.item,\n            currentItemIsLeftItem ? this.relationshipType.leftwardType : this.relationshipType.rightwardType,\n            {\n              elementsPerPage: currentPagination.pageSize,\n              currentPage: currentPagination.currentPage,\n              searchParams: [\n                new RequestParam('relatedEntityType', relatedEntityType.label),\n              ],\n            },\n            true,\n            true,\n            ...linksToFollow,\n          );\n        }),\n        tap((rd: RemoteData<PaginatedList<Relationship>>) => {\n          this.relationshipsRd$.next(rd);\n        }),\n        getAllSucceededRemoteData(),\n        getRemoteDataPayload(),\n      ).subscribe((relationshipPaginatedList: PaginatedList<Relationship>) => {\n        this.objectUpdatesService.initialize(this.url, relationshipPaginatedList.page, new Date());\n      }),\n    );\n\n    // keep isLastPage$ up to date based on relationshipsRd$\n    this.subs.push(this.relationshipsRd$.pipe(\n      hasValueOperator(),\n      getAllSucceededRemoteData(),\n    ).subscribe((rd: RemoteData<PaginatedList<Relationship>>) => {\n      this.isLastPage$.next(hasNoValue(rd.payload._links.next));\n    }));\n\n    this.subs.push(this.relationshipsRd$.pipe(\n      hasValueOperator(),\n      getAllSucceededRemoteData(),\n      switchMap((rd: RemoteData<PaginatedList<Relationship>>) =>\n        // emit each relationship in the page separately\n        observableFrom(rd.payload.page).pipe(\n          mergeMap((relationship: Relationship) =>\n            // check for each relationship whether it's the left item\n            this.relationshipService.isLeftItem(relationship, this.item).pipe(\n              // emit an array containing both the relationship and whether it's the left item,\n              // as we'll need both\n              switchMap((isLeftItem: boolean) => {\n                if (isLeftItem) {\n                  return relationship.rightItem.pipe(\n                    getFirstCompletedRemoteData(),\n                    getRemoteDataPayload(),\n                    map((relatedItem: Item) => [relationship, isLeftItem, relatedItem]),\n                  );\n                } else {\n                  return relationship.leftItem.pipe(\n                    getFirstCompletedRemoteData(),\n                    getRemoteDataPayload(),\n                    map((relatedItem: Item) => [relationship, isLeftItem, relatedItem]),\n                  );\n                }\n              }),\n            ),\n          ),\n          map(([relationship, isLeftItem, relatedItem]: [Relationship, boolean, Item]) => {\n            // turn it into a RelationshipIdentifiable, an\n            const nameVariant =\n              isLeftItem ? relationship.rightwardValue : relationship.leftwardValue;\n            return {\n              uuid: relationship.id,\n              type: this.relationshipType,\n              relationship,\n              originalIsLeft: isLeftItem,\n              originalItem: this.item,\n              relatedItem: relatedItem,\n              nameVariant,\n            } as RelationshipIdentifiable;\n          }),\n          // wait until all relationships have been processed, and emit them all as a single array\n          toArray(),\n          // if the pipe above completes without emitting anything, emit an empty array instead\n          defaultIfEmpty([]),\n        )),\n      switchMap((nextFields: RelationshipIdentifiable[]) => {\n        // Get a list that contains the unsaved changes for the page, as well as the page of\n        // RelationshipIdentifiables, as a single list of FieldUpdates\n        return this.objectUpdatesService.getFieldUpdates(this.url, nextFields).pipe(\n          map((fieldUpdates: FieldUpdates) => {\n            const fieldUpdatesFiltered: FieldUpdates = {};\n            this.nbAddedFields$.next(0);\n            // iterate over the fieldupdates and filter out the ones that pertain to this\n            // relationshiptype\n            Object.keys(fieldUpdates).forEach((uuid) => {\n              if (hasValue(fieldUpdates[uuid])) {\n                const field = fieldUpdates[uuid].field as RelationshipIdentifiable;\n                // only include fieldupdates regarding this RelationshipType\n                if (field.type.id === this.relationshipType.id) {\n                  // if it's a newly added relationship\n                  if (fieldUpdates[uuid].changeType === FieldChangeType.ADD) {\n                    // increase the counter that tracks new relationships\n                    this.nbAddedFields$.next(this.nbAddedFields$.getValue() + 1);\n                    if (this.isLastPage$.getValue() === true) {\n                      // only include newly added relationships to the output if we're on the last\n                      // page\n                      fieldUpdatesFiltered[uuid] = fieldUpdates[uuid];\n                    }\n                  } else {\n                    // include all others\n                    fieldUpdatesFiltered[uuid] = fieldUpdates[uuid];\n                  }\n                }\n              }\n            });\n            return fieldUpdatesFiltered;\n          }),\n        );\n      }),\n      startWith({}),\n    ).subscribe((updates: FieldUpdates) => {\n      this.loading$.next(false);\n      this.updates$.next(updates);\n    }));\n  }\n\n  ngOnDestroy(): void {\n    this.subs\n      .filter((subscription) => hasValue(subscription))\n      .forEach((subscription) => subscription.unsubscribe());\n  }\n}\n","<h2 class=\"h4\">\n    {{relationshipMessageKey$ | async | translate}}\n    <button class=\"ml-2 btn btn-success\" [dsBtnDisabled]=\"(hasChanges | async)\" (click)=\"openLookup()\">\n        <i class=\"fas fa-plus\"></i>\n        <span class=\"d-none d-sm-inline\">&nbsp;{{\"item.edit.relationships.edit.buttons.add\" | translate}}</span>\n    </button>\n</h2>\n<ng-container *ngVar=\"updates$ | async as updates\">\n    <ng-container *ngIf=\"updates && (loading$ | async) !== true\">\n        <ng-container *ngVar=\"updates | dsObjectValues as updateValues\">\n          <ds-pagination\n            [paginationOptions]=\"paginationConfig\"\n            [collectionSize]=\"(relationshipsRd$ | async)?.payload?.totalElements + (this.nbAddedFields$ | async)\"\n            [hideGear]=\"true\"\n            [hidePagerWhenSinglePage]=\"true\">\n            <div class=\"my-2\">\n              <ds-edit-relationship *ngFor=\"let updateValue of updateValues; trackBy: trackUpdate\"\n                                    class=\"relationship-row d-block alert\"\n                                    [fieldUpdate]=\"updateValue || {}\"\n                                    [url]=\"url\"\n                                    [editItem]=\"item\"\n                                    [ngClass]=\"{\n                                        'alert-success': updateValue.changeType === 1,\n                                        'alert-warning': updateValue.changeType === 0,\n                                        'alert-danger': updateValue.changeType === 2\n                                  }\">\n              </ds-edit-relationship>\n            </div>\n          </ds-pagination>\n          <div *ngIf=\"updateValues.length === 0\">{{\"item.edit.relationships.no-relationships\" | translate}}</div>\n        </ng-container>\n    </ng-container>\n    <ds-loading *ngIf=\"loading$ | async\"></ds-loading>\n</ng-container>\n","import {\n  AsyncPipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnChanges,\n} from '@angular/core';\nimport {\n  NgbModal,\n  NgbModalRef,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  combineLatest as observableCombineLatest,\n  Observable,\n} from 'rxjs';\nimport {\n  filter,\n  map,\n  switchMap,\n  take,\n} from 'rxjs/operators';\n\nimport { FieldChangeType } from '../../../../core/data/object-updates/field-change-type.model';\nimport { FieldUpdate } from '../../../../core/data/object-updates/field-update.model';\nimport {\n  DeleteRelationship,\n  RelationshipIdentifiable,\n} from '../../../../core/data/object-updates/object-updates.reducer';\nimport { ObjectUpdatesService } from '../../../../core/data/object-updates/object-updates.service';\nimport { Item } from '../../../../core/shared/item.model';\nimport {\n  getFirstSucceededRemoteData,\n  getRemoteDataPayload,\n} from '../../../../core/shared/operators';\nimport { ViewMode } from '../../../../core/shared/view-mode.model';\nimport { BtnDisabledDirective } from '../../../../shared/btn-disabled.directive';\nimport {\n  hasValue,\n  isNotEmpty,\n} from '../../../../shared/empty.util';\nimport { ListableObjectComponentLoaderComponent } from '../../../../shared/object-collection/shared/listable-object/listable-object-component-loader.component';\nimport { VirtualMetadataComponent } from '../../virtual-metadata/virtual-metadata.component';\n\n@Component({\n  selector: 'ds-edit-relationship',\n  styleUrls: ['./edit-relationship.component.scss'],\n  templateUrl: './edit-relationship.component.html',\n  imports: [\n    ListableObjectComponentLoaderComponent,\n    AsyncPipe,\n    NgIf,\n    TranslateModule,\n    VirtualMetadataComponent,\n    BtnDisabledDirective,\n  ],\n  standalone: true,\n})\nexport class EditRelationshipComponent implements OnChanges {\n  /**\n   * The current field, value and state of the relationship\n   */\n  @Input() fieldUpdate: FieldUpdate;\n\n  /**\n   * The current url of this page\n   */\n  @Input() url: string;\n\n  /**\n   * The item being edited\n   */\n  @Input() editItem: Item;\n\n  /**\n   * The relationship being edited\n   */\n  get relationship() {\n    return this.update.relationship;\n  }\n\n  get update() {\n    return this.fieldUpdate.field as RelationshipIdentifiable;\n  }\n\n  get nameVariant() {\n    return this.update.nameVariant;\n  }\n\n  public leftItem$: Observable<Item>;\n  public rightItem$: Observable<Item>;\n\n  /**\n   * The related item of this relationship\n   */\n  relatedItem$: BehaviorSubject<Item> = new BehaviorSubject<Item>(null);\n\n  /**\n   * The view-mode we're currently on\n   */\n  viewMode = ViewMode.ListElement;\n\n  /**\n   * Reference to NgbModal\n   */\n  public modalRef: NgbModalRef;\n\n  constructor(\n    private objectUpdatesService: ObjectUpdatesService,\n    private modalService: NgbModal,\n  ) {\n  }\n\n  /**\n   * Sets the current relationship based on the fieldUpdate input field\n   */\n  ngOnChanges(): void {\n    if (this.relationship && (!!this.relationship.leftItem || !!this.relationship.rightItem)) {\n      this.leftItem$ = this.relationship.leftItem.pipe(\n        getFirstSucceededRemoteData(),\n        getRemoteDataPayload(),\n        filter((item: Item) => hasValue(item) && isNotEmpty(item.uuid)),\n      );\n      this.rightItem$ = this.relationship.rightItem.pipe(\n        getFirstSucceededRemoteData(),\n        getRemoteDataPayload(),\n        filter((item: Item) => hasValue(item) && isNotEmpty(item.uuid)),\n      );\n      observableCombineLatest([\n        this.leftItem$,\n        this.rightItem$,\n      ]).pipe(\n        map(([leftItem, rightItem]: [Item, Item]) => leftItem.uuid === this.editItem.uuid ? rightItem : leftItem),\n        take(1),\n      ).subscribe((relatedItem) => {\n        this.relatedItem$.next(relatedItem);\n      });\n    } else {\n      this.relatedItem$.next(this.update.relatedItem);\n    }\n  }\n\n  /**\n   * Sends a new remove update for this field to the object updates service\n   */\n  remove(): void {\n    this.closeVirtualMetadataModal();\n    observableCombineLatest([\n      this.leftItem$,\n      this.rightItem$,\n    ]).pipe(\n      map((items: Item[]) =>\n        items.map((item) => this.objectUpdatesService\n          .isSelectedVirtualMetadata(this.url, this.relationship.id, item.uuid)),\n      ),\n      switchMap((selection$) => observableCombineLatest(selection$)),\n      map((selection: boolean[]) => {\n        return Object.assign({},\n          this.fieldUpdate.field,\n          {\n            keepLeftVirtualMetadata: selection[0] === true,\n            keepRightVirtualMetadata: selection[1] === true,\n          },\n        ) as DeleteRelationship;\n      }),\n      take(1),\n    ).subscribe((deleteRelationship: DeleteRelationship) => {\n      this.objectUpdatesService.saveRemoveFieldUpdate(this.url, deleteRelationship);\n    });\n  }\n\n  openVirtualMetadataModal(content: any) {\n    this.modalRef = this.modalService.open(content);\n  }\n\n  closeVirtualMetadataModal() {\n    this.modalRef.close();\n  }\n\n  /**\n   * Cancels the current update for this field in the object updates service\n   */\n  undo(): void {\n    this.objectUpdatesService.removeSingleFieldUpdate(this.url, this.fieldUpdate.field.uuid);\n  }\n\n  /**\n   * Check if a user should be allowed to remove this field\n   */\n  canRemove(): boolean {\n    return this.fieldUpdate.changeType !== FieldChangeType.REMOVE\n      && this.fieldUpdate.changeType !== FieldChangeType.ADD;\n  }\n\n  /**\n   * Check if a user should be allowed to cancel the update to this field\n   */\n  canUndo(): boolean {\n    return this.fieldUpdate.changeType?.valueOf() >= 0;\n  }\n}\n","<div class=\"row\" *ngIf=\"relatedItem$ | async\">\n  <div class=\"col-10 relationship\">\n    <ds-listable-object-component-loader\n      [object]=\"relatedItem$ | async\"\n      [viewMode]=\"viewMode\"\n      [value]=\"nameVariant\"\n    >\n    </ds-listable-object-component-loader>\n  </div>\n  <div class=\"col-2\">\n    <div class=\"btn-group relationship-action-buttons\">\n      <button [dsBtnDisabled]=\"!canRemove()\" (click)=\"openVirtualMetadataModal(virtualMetadataModal)\"\n              class=\"btn btn-outline-danger btn-sm\"\n              title=\"{{'item.edit.metadata.edit.buttons.remove' | translate}}\">\n        <i class=\"fas fa-trash-alt fa-fw\"></i>\n      </button>\n      <button [dsBtnDisabled]=\"!canUndo()\" (click)=\"undo()\"\n              class=\"btn btn-outline-warning btn-sm\"\n              title=\"{{'item.edit.metadata.edit.buttons.undo' | translate}}\">\n        <i class=\"fas fa-undo-alt fa-fw\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n<ng-template #virtualMetadataModal>\n  <ds-virtual-metadata\n          [relationshipId]=\"relationship.id\"\n          [leftItem]=\"leftItem$ | async\"\n          [rightItem]=\"rightItem$ | async\"\n          [url]=\"url\"\n          (close)=\"closeVirtualMetadataModal()\"\n          (save)=\"remove()\"\n  >\n  </ds-virtual-metadata>\n</ng-template>\n","import {\n  AsyncPipe,\n  NgForOf,\n  NgIf,\n  NgTemplateOutlet,\n} from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router,\n} from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  Observable,\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  map,\n} from 'rxjs/operators';\n\nimport { ObjectCacheService } from '../../../core/cache/object-cache.service';\nimport { EntityTypeDataService } from '../../../core/data/entity-type-data.service';\nimport { ItemDataService } from '../../../core/data/item-data.service';\nimport { ObjectUpdatesService } from '../../../core/data/object-updates/object-updates.service';\nimport { PaginatedList } from '../../../core/data/paginated-list.model';\nimport { RelationshipDataService } from '../../../core/data/relationship-data.service';\nimport { RelationshipTypeDataService } from '../../../core/data/relationship-type-data.service';\nimport { RequestService } from '../../../core/data/request.service';\nimport { ItemType } from '../../../core/shared/item-relationships/item-type.model';\nimport { RelationshipType } from '../../../core/shared/item-relationships/relationship-type.model';\nimport {\n  getFirstSucceededRemoteData,\n  getRemoteDataPayload,\n} from '../../../core/shared/operators';\nimport { AlertComponent } from '../../../shared/alert/alert.component';\nimport { AlertType } from '../../../shared/alert/alert-type';\nimport { BtnDisabledDirective } from '../../../shared/btn-disabled.directive';\nimport { ThemedLoadingComponent } from '../../../shared/loading/themed-loading.component';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { followLink } from '../../../shared/utils/follow-link-config.model';\nimport { VarDirective } from '../../../shared/utils/var.directive';\nimport { compareArraysUsingIds } from '../../simple/item-types/shared/item-relationships-utils';\nimport { AbstractItemUpdateComponent } from '../abstract-item-update/abstract-item-update.component';\nimport { EditItemRelationshipsService } from './edit-item-relationships.service';\nimport { EditRelationshipListComponent } from './edit-relationship-list/edit-relationship-list.component';\nimport { EditRelationshipListWrapperComponent } from './edit-relationship-list-wrapper/edit-relationship-list-wrapper.component';\n\n@Component({\n  selector: 'ds-item-relationships',\n  styleUrls: ['./item-relationships.component.scss'],\n  templateUrl: './item-relationships.component.html',\n  imports: [\n    AlertComponent,\n    AsyncPipe,\n    EditRelationshipListComponent,\n    NgForOf,\n    NgIf,\n    NgTemplateOutlet,\n    ThemedLoadingComponent,\n    TranslateModule,\n    VarDirective,\n    EditRelationshipListWrapperComponent,\n    BtnDisabledDirective,\n  ],\n  standalone: true,\n})\n/**\n * Component for displaying an item's relationships edit page\n */\nexport class ItemRelationshipsComponent extends AbstractItemUpdateComponent {\n\n\n  /**\n   * The allowed relationship types for this type of item as an observable list\n   */\n  relationshipTypes$: Observable<RelationshipType[]>;\n\n  /**\n   * The item's entity type as an observable\n   */\n  entityType$: BehaviorSubject<ItemType> = new BehaviorSubject(undefined);\n\n  get isSaving$(): BehaviorSubject<boolean> {\n    return this.editItemRelationshipsService.isSaving$;\n  }\n\n  readonly AlertType = AlertType;\n\n  constructor(\n    public itemService: ItemDataService,\n    public objectUpdatesService: ObjectUpdatesService,\n    public router: Router,\n    public notificationsService: NotificationsService,\n    public translateService: TranslateService,\n    public route: ActivatedRoute,\n    public relationshipService: RelationshipDataService,\n    public objectCache: ObjectCacheService,\n    public requestService: RequestService,\n    public entityTypeService: EntityTypeDataService,\n    protected relationshipTypeService: RelationshipTypeDataService,\n    public cdr: ChangeDetectorRef,\n    protected modalService: NgbModal,\n    protected editItemRelationshipsService: EditItemRelationshipsService,\n  ) {\n    super(itemService, objectUpdatesService, router, notificationsService, translateService, route);\n  }\n\n  /**\n   * Initialize the values and updates of the current item's relationship fields\n   */\n  public initializeUpdates(): void {\n\n    const label = this.item.firstMetadataValue('dspace.entity.type');\n    if (label !== undefined) {\n      this.relationshipTypes$ = this.relationshipTypeService.searchByEntityType(label, true, true, ...this.getRelationshipTypeFollowLinks()).pipe(\n        map((relationshipTypes: PaginatedList<RelationshipType>) => relationshipTypes.page),\n        distinctUntilChanged(compareArraysUsingIds()),\n      );\n\n      this.entityTypeService.getEntityTypeByLabel(label).pipe(\n        getFirstSucceededRemoteData(),\n        getRemoteDataPayload(),\n      ).subscribe((type) => this.entityType$.next(type));\n\n    } else {\n      this.entityType$.next(undefined);\n    }\n  }\n\n  /**\n   * Initialize the prefix for notification messages\n   */\n  public initializeNotificationsPrefix(): void {\n    this.notificationsPrefix = 'item.edit.relationships.notifications.';\n  }\n\n  /**\n   * Resolve the currently selected related items back to relationships and send a delete request for each of the relationships found\n   * Make sure the lists are refreshed afterwards and notifications are sent for success and errors\n   */\n  public submit(): void {\n    this.editItemRelationshipsService.submit(this.item, this.url);\n  }\n\n  /**\n   * Sends all initial values of this item to the object updates service\n   */\n  public initializeOriginalFields() {\n    return this.editItemRelationshipsService.initializeOriginalFields(this.item, this.url);\n  }\n\n\n  /**\n   * Method to prevent unnecessary for loop re-rendering\n   */\n  trackById(index: number, relationshipType: RelationshipType): string {\n    return relationshipType.id;\n  }\n\n  getRelationshipTypeFollowLinks() {\n    return [\n      followLink('leftType'),\n      followLink('rightType'),\n    ];\n  }\n\n}\n","<div class=\"item-relationships\">\n  <ng-container *ngIf=\"entityType$ | async as entityType; else noEntityType\">\n    <div class=\"button-row top d-flex justify-content-end\">\n      <ng-container *ngTemplateOutlet=\"buttons\"></ng-container>\n    </div>\n    <div *ngIf=\"relationshipTypes$ | async as relationshipTypes; else loading\" class=\"mb-4\">\n      <div *ngFor=\"let relationshipType of relationshipTypes; trackBy: trackById\" class=\"mb-4\">\n        <ds-edit-relationship-list-wrapper\n          [url]=\"url\"\n          [item]=\"item\"\n          [itemType]=\"entityType\"\n          [relationshipType]=\"relationshipType\"\n          [hasChanges]=\"hasChanges$\"\n        ></ds-edit-relationship-list-wrapper>\n      </div>\n    </div>\n    <div class=\"button-row bottom\">\n      <div class=\"float-right ml-gap\">\n        <ng-container *ngTemplateOutlet=\"buttons\"></ng-container>\n      </div>\n    </div>\n  </ng-container>\n</div>\n\n<ng-template #noEntityType>\n  <ds-alert [type]=\"AlertType.Info\" class=\"d-block mt-2\">\n    {{ 'item.edit.relationships.no-entity-type' | translate }}\n  </ds-alert>\n</ng-template>\n\n<ng-template #loading>\n  <ds-loading></ds-loading>\n</ng-template>\n\n<ng-template #buttons>\n  <div class=\"d-flex space-children-mr justify-content-end\">\n    <button class=\"btn btn-danger\" *ngIf=\"(isReinstatable$ | async) !== true\"\n            [dsBtnDisabled]=\"(hasChanges$ | async) !== true\"\n            (click)=\"discard()\">\n      <i aria-hidden=\"true\" class=\"fas fa-times\"></i>\n      <span class=\"d-none d-sm-inline\">&nbsp;{{ 'item.edit.metadata.discard-button' | translate }}</span>\n    </button>\n    <button class=\"btn btn-warning\" *ngIf=\"isReinstatable$ | async\" (click)=\"reinstate()\">\n      <i aria-hidden=\"true\" class=\"fas fa-undo-alt\"></i>\n      <span class=\"d-none d-sm-inline\">&nbsp;{{ 'item.edit.metadata.reinstate-button' | translate }}</span>\n    </button>\n    <button class=\"btn btn-primary\"\n            [dsBtnDisabled]=\"(hasChanges$ | async) !== true || (isSaving$ | async) === true\"\n            (click)=\"submit()\">\n      <span *ngIf=\"isSaving$ | async\" aria-hidden=\"true\" class=\"spinner-border spinner-border-sm\" role=\"status\"></span>\n      <i *ngIf=\"(isSaving$ | async) !== true\" aria-hidden=\"true\" class=\"fas fa-save\"></i>\n      <span class=\"d-none d-sm-inline\">&nbsp;{{ 'item.edit.metadata.save-button' | translate }}</span>\n    </button>\n  </div>\n</ng-template>\n","import {\n  AsyncPipe,\n  NgClass,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  RouterLink,\n} from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  Observable,\n  of,\n  Subscription,\n} from 'rxjs';\nimport {\n  concatMap,\n  distinctUntilChanged,\n  first,\n  map,\n  mergeMap,\n  switchMap,\n  toArray,\n} from 'rxjs/operators';\n\nimport { ConfigurationDataService } from '../../../core/data/configuration-data.service';\nimport { AuthorizationDataService } from '../../../core/data/feature-authorization/authorization-data.service';\nimport { FeatureID } from '../../../core/data/feature-authorization/feature-id';\nimport { IdentifierDataService } from '../../../core/data/identifier-data.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { OrcidAuthService } from '../../../core/orcid/orcid-auth.service';\nimport { ConfigurationProperty } from '../../../core/shared/configuration-property.model';\nimport { Item } from '../../../core/shared/item.model';\nimport {\n  getAllSucceededRemoteDataPayload,\n  getFirstCompletedRemoteData,\n} from '../../../core/shared/operators';\nimport {\n  fadeIn,\n  fadeInOut,\n} from '../../../shared/animations/fade';\nimport { hasValue } from '../../../shared/empty.util';\nimport { Identifier } from '../../../shared/object-list/identifier-data/identifier.model';\nimport { IdentifierData } from '../../../shared/object-list/identifier-data/identifier-data.model';\nimport {\n  getItemEditRoute,\n  getItemPageRoute,\n} from '../../item-page-routing-paths';\nimport { ItemOperationComponent } from '../item-operation/item-operation.component';\nimport { ItemOperation } from '../item-operation/itemOperation.model';\n\n@Component({\n  selector: 'ds-base-item-status',\n  templateUrl: './item-status.component.html',\n  changeDetection: ChangeDetectionStrategy.Default,\n  animations: [\n    fadeIn,\n    fadeInOut,\n  ],\n  imports: [\n    TranslateModule,\n    NgForOf,\n    AsyncPipe,\n    NgIf,\n    RouterLink,\n    ItemOperationComponent,\n    NgClass,\n  ],\n  standalone: true,\n})\n/**\n * Component for displaying an item's status\n */\nexport class ItemStatusComponent implements OnInit, OnDestroy {\n\n  /**\n   * The item to display the status for\n   */\n  itemRD$: Observable<RemoteData<Item>>;\n\n  /**\n   * The data to show in the status\n   */\n  statusData: any;\n  /**\n   * The keys of the data (to loop over)\n   */\n  statusDataKeys;\n\n  /**\n   * The possible actions that can be performed on the item\n   *  key: id   value: url to action's component\n   */\n  operations$: BehaviorSubject<ItemOperation[]> = new BehaviorSubject<ItemOperation[]>([]);\n\n  /**\n   * Identifiers (handles, DOIs)\n   */\n  identifiers$: Observable<Identifier[]>;\n\n  /**\n   * Configuration and state variables regarding DOIs\n   */\n\n  public subs: Subscription[] = [];\n\n  /**\n   * Route to the item's page\n   */\n  itemPageRoute$: Observable<string>;\n\n  constructor(private route: ActivatedRoute,\n              private authorizationService: AuthorizationDataService,\n              private identifierDataService: IdentifierDataService,\n              private configurationService: ConfigurationDataService,\n              private orcidAuthService: OrcidAuthService,\n  ) {\n  }\n\n  /**\n   * Initialise component\n   */\n  ngOnInit(): void {\n    this.itemRD$ = this.route.parent.data.pipe(map((data) => data.dso));\n    this.itemRD$.pipe(\n      first(),\n      map((data: RemoteData<Item>) => data.payload),\n    ).pipe(\n      switchMap((item: Item) => {\n        this.statusData = Object.assign({\n          id: item.id,\n          handle: item.handle,\n          lastModified: item.lastModified,\n        });\n        this.statusDataKeys = Object.keys(this.statusData);\n\n        // Observable for item identifiers (retrieved from embedded link)\n        this.identifiers$ = this.identifierDataService.getIdentifierDataFor(item).pipe(\n          map((identifierRD) => {\n            if (identifierRD.statusCode !== 401 && hasValue(identifierRD.payload)) {\n              return identifierRD.payload.identifiers;\n            } else {\n              return null;\n            }\n          }),\n        );\n\n        // Observable for configuration determining whether the Register DOI feature is enabled\n        const registerConfigEnabled$: Observable<boolean> = this.configurationService.findByPropertyName('identifiers.item-status.register-doi').pipe(\n          getFirstCompletedRemoteData(),\n          map((response: RemoteData<ConfigurationProperty>) => {\n          // Return true if a successful response with a 'true' value was retrieved, otherwise return false\n            if (response.hasSucceeded) {\n              const payload = response.payload;\n              if (payload.values.length > 0 && hasValue(payload.values[0])) {\n                return payload.values[0] === 'true';\n              } else {\n                return false;\n              }\n            } else {\n              return false;\n            }\n          }),\n        );\n\n        /**\n         * Construct a base list of operations.\n         * The key is used to build messages\n         * i18n example: 'item.edit.tabs.status.buttons.<key>.label'\n         * The value is supposed to be a href for the button\n         */\n        const currentUrl = this.getCurrentUrl(item);\n        const initialOperations: ItemOperation[] = [\n          new ItemOperation('authorizations', `${currentUrl}/authorizations`, FeatureID.CanManagePolicies, true),\n          new ItemOperation('mappedCollections', `${currentUrl}/mapper`, FeatureID.CanManageMappings, true),\n          item.isWithdrawn\n            ? new ItemOperation('reinstate', `${currentUrl}/reinstate`, FeatureID.ReinstateItem, true)\n            : new ItemOperation('withdraw', `${currentUrl}/withdraw`, FeatureID.WithdrawItem, true),\n          item.isDiscoverable\n            ? new ItemOperation('private', `${currentUrl}/private`, FeatureID.CanMakePrivate, true)\n            : new ItemOperation('public', `${currentUrl}/public`, FeatureID.CanMakePrivate, true),\n          new ItemOperation('move', `${currentUrl}/move`, FeatureID.CanMove, true),\n          new ItemOperation('delete', `${currentUrl}/delete`, FeatureID.CanDelete, true),\n        ];\n\n        this.operations$.next(initialOperations);\n\n        /**\n         *  When the identifier data stream changes, determine whether the register DOI button should be shown or not.\n         *  This is based on whether the DOI is in the right state (minted or pending, not already queued for registration\n         *  or registered) and whether the configuration property identifiers.item-status.register-doi is true\n         */\n        const ops$ = this.identifierDataService.getIdentifierDataFor(item).pipe(\n          getFirstCompletedRemoteData(),\n          mergeMap((dataRD: RemoteData<IdentifierData>) => {\n            if (dataRD.hasSucceeded) {\n              const identifiers = dataRD.payload.identifiers;\n              let no_doi = true;\n              let pending = false;\n              if (identifiers !== undefined && identifiers !== null) {\n                identifiers.forEach((identifier: Identifier) => {\n                  if (hasValue(identifier) && identifier.identifierType === 'doi') {\n                    // The item has some kind of DOI\n                    no_doi = false;\n                    if (['PENDING', 'MINTED', null].includes(identifier.identifierStatus)) {\n                      // The item's DOI is pending, minted or null.\n                      // It isn't registered, reserved, queued for registration or reservation or update, deleted\n                      // or queued for deletion.\n                      pending = true;\n                    }\n                  }\n                });\n              }\n              // If there is no DOI, or a pending/minted/null DOI, and the config is enabled, return true\n              return registerConfigEnabled$.pipe(\n                map((enabled: boolean) => {\n                  return enabled && (pending || no_doi);\n                }),\n              );\n            } else {\n              return of(false);\n            }\n          }),\n          // Switch map pushes the register DOI operation onto a copy of the base array then returns to the pipe\n          switchMap((showDoi: boolean) => {\n            const ops = [...initialOperations];\n            if (showDoi) {\n              const op = new ItemOperation('register-doi', `${currentUrl}/register-doi`, FeatureID.CanRegisterDOI, true);\n              ops.splice(ops.length - 1, 0, op); // Add item before last\n            }\n            return ops;\n          }),\n          concatMap((op: ItemOperation) => {\n            if (hasValue(op.featureID)) {\n              return this.authorizationService.isAuthorized(op.featureID, item.self).pipe(\n                distinctUntilChanged(),\n                map((authorized) => {\n                  op.setDisabled(!authorized);\n                  op.setAuthorized(authorized);\n                  return op;\n                }),\n              );\n            }\n            return [op];\n          }),\n          toArray(),\n        );\n\n        let orcidOps$ = of([]);\n        if (this.orcidAuthService.isLinkedToOrcid(item)) {\n          orcidOps$ = this.orcidAuthService.onlyAdminCanDisconnectProfileFromOrcid().pipe(\n            map((canDisconnect) => {\n              if (canDisconnect) {\n                return [new ItemOperation('unlinkOrcid', `${currentUrl}/unlink-orcid`)];\n              }\n              return [];\n            }),\n          );\n        }\n\n        return combineLatest([ops$, orcidOps$]);\n      }),\n      map(([ops, orcidOps]: [ItemOperation[], ItemOperation[]]) => [...ops, ...orcidOps]),\n    ).subscribe((ops) => this.operations$.next(ops));\n\n    this.itemPageRoute$ = this.itemRD$.pipe(\n      getAllSucceededRemoteDataPayload(),\n      map((item) => getItemPageRoute(item)),\n    );\n\n  }\n\n  /**\n   * Get the current url without query params\n   * @returns {string}  url\n   */\n  getCurrentUrl(item: Item): string {\n    return getItemEditRoute(item);\n  }\n\n  trackOperation(index: number, operation: ItemOperation) {\n    return hasValue(operation) ? operation.operationKey : undefined;\n  }\n\n  ngOnDestroy(): void {\n    this.subs\n      .filter((subscription) => hasValue(subscription))\n      .forEach((subscription) => subscription.unsubscribe());\n  }\n\n}\n","<p class=\"mt-2\">{{'item.edit.tabs.status.description' | translate}}</p>\n<div class=\"row\">\n  <div *ngFor=\"let statusKey of statusDataKeys\" class=\"w-100 pt-1\">\n    <div class=\"col-12 col-md-3 float-left status-label font-weight-bold\">\n      {{'item.edit.tabs.status.labels.' + statusKey | translate}}:\n    </div>\n    <div class=\"col-12 col-md-9 float-left status-data\" id=\"status-{{statusKey}}\">\n      {{statusData[statusKey]}}\n    </div>\n  </div>\n\n  <div *ngFor=\"let identifier of (identifiers$ | async)\" class=\"w-100 pt-1\">\n    <div *ngIf=\"(identifier.identifierType==='doi')\">\n      <div class=\"col-12 col-md-3 float-left status-label font-weight-bold\">\n        {{identifier.identifierType.toLocaleUpperCase()}}\n      </div>\n      <div class=\"col-12 col-md-9 float-left status-label font-weight-bold\">{{identifier.value}}\n        ({{\"item.edit.identifiers.doi.status.\"+identifier.identifierStatus|translate}})</div>\n    </div>\n  </div>\n\n  <div class=\"col-12 col-md-3 float-left status-label font-weight-bold\">\n    {{'item.edit.tabs.status.labels.itemPage' | translate}}:\n  </div>\n  <div class=\"col-12 col-md-9 float-left status-data\" id=\"status-itemPage\">\n    <a [routerLink]=\"itemPageRoute$ | async\">{{itemPageRoute$ | async}}</a>\n  </div>\n\n  <div *ngFor=\"let operation of (operations$ | async)\" class=\"w-100\" [ngClass]=\"{'pt-3': operation}\">\n    <ds-item-operation [operation]=\"operation\"></ds-item-operation>\n  </div>\n\n</div>\n","import { Component } from '@angular/core';\n\nimport { ThemedComponent } from '../../../shared/theme-support/themed.component';\nimport { ItemStatusComponent } from './item-status.component';\n\n@Component({\n  selector: 'ds-item-status',\n  styleUrls: [],\n  templateUrl: '../../../shared/theme-support/themed.component.html',\n  standalone: true,\n  imports: [ItemStatusComponent],\n})\nexport class ThemedItemStatusComponent extends ThemedComponent<ItemStatusComponent> {\n  protected getComponentName(): string {\n    return 'ItemStatusComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../../themes/${themeName}/app/item-page/edit-item-page/item-status/item-status.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import('./item-status.component');\n  }\n\n}\n","<ng-template #vcr>\n</ng-template>\n<div #content>\n  <ng-content></ng-content>\n</div>\n","import {\n  AsyncPipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { Item } from '../../../core/shared/item.model';\nimport { getFirstSucceededRemoteData } from '../../../core/shared/operators';\nimport { AlertType } from '../../../shared/alert/alert-type';\nimport { VarDirective } from '../../../shared/utils/var.directive';\nimport { ItemVersionsComponent } from '../../versions/item-versions.component';\n\n@Component({\n  selector: 'ds-item-version-history',\n  templateUrl: './item-version-history.component.html',\n  imports: [\n    ItemVersionsComponent,\n    VarDirective,\n    NgIf,\n    AsyncPipe,\n  ],\n  standalone: true,\n})\n/**\n * Component for listing and managing an item's version history\n */\nexport class ItemVersionHistoryComponent implements OnInit {\n  /**\n   * The item to display the version history for\n   */\n  itemRD$: Observable<RemoteData<Item>>;\n\n  /**\n   * The AlertType enumeration\n   * @type {AlertType}\n   */\n  AlertTypeEnum = AlertType;\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.itemRD$ = this.route.parent.parent.data.pipe(map((data) => data.dso)).pipe(getFirstSucceededRemoteData()) as Observable<RemoteData<Item>>;\n  }\n}\n","<div class=\"mt-2\" *ngVar=\"(itemRD$ | async)?.payload as item\">\n  <ds-item-versions *ngIf=\"item\" [item]=\"item\" [displayWhenEmpty]=\"true\" [displayTitle]=\"false\"\n                    [displayActions]=\"true\"></ds-item-versions>\n</div>\n","import { Component } from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router,\n  RouterLink,\n} from '@angular/router';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\n\nimport { ItemDataService } from '../../../core/data/item-data.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { Item } from '../../../core/shared/item.model';\nimport { getFirstCompletedRemoteData } from '../../../core/shared/operators';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { ModifyItemOverviewComponent } from '../modify-item-overview/modify-item-overview.component';\nimport { AbstractSimpleItemActionComponent } from '../simple-item-action/abstract-simple-item-action.component';\n\n@Component({\n  selector: 'ds-item-withdraw',\n  templateUrl: '../simple-item-action/abstract-simple-item-action.component.html',\n  standalone: true,\n  imports: [\n    ModifyItemOverviewComponent,\n    TranslateModule,\n    RouterLink,\n  ],\n})\n/**\n * Component responsible for rendering the Item Withdraw page\n */\nexport class ItemWithdrawComponent extends AbstractSimpleItemActionComponent {\n\n  protected messageKey = 'withdraw';\n  protected predicate = (rd: RemoteData<Item>) => rd.payload.isWithdrawn;\n\n  constructor(protected route: ActivatedRoute,\n              protected router: Router,\n              protected notificationsService: NotificationsService,\n              protected itemDataService: ItemDataService,\n              protected translateService: TranslateService) {\n    super(route, router, notificationsService, itemDataService, translateService);\n  }\n\n  /**\n   * Perform the withdraw action to the item\n   */\n  performAction() {\n    this.itemDataService.setWithDrawn(this.item, true).pipe(getFirstCompletedRemoteData()).subscribe(\n      (response: RemoteData<Item>) => {\n        this.processRestResponse(response);\n      },\n    );\n  }\n}\n","import {\n  Component,\n  OnInit,\n  Predicate,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router,\n  RouterLink,\n} from '@angular/router';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport {\n  first,\n  map,\n} from 'rxjs/operators';\n\nimport { ItemDataService } from '../../../core/data/item-data.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { Item } from '../../../core/shared/item.model';\nimport { getFirstSucceededRemoteData } from '../../../core/shared/operators';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport {\n  getItemEditRoute,\n  getItemPageRoute,\n} from '../../item-page-routing-paths';\nimport { findSuccessfulAccordingTo } from '../edit-item-operators';\nimport { ModifyItemOverviewComponent } from '../modify-item-overview/modify-item-overview.component';\n\n/**\n * Component to render and handle simple item edit actions such as withdrawal and reinstatement.\n * This component is not meant to be used itself but to be extended.\n */\n@Component({\n  selector: 'ds-simple-action',\n  templateUrl: './abstract-simple-item-action.component.html',\n  imports: [\n    ModifyItemOverviewComponent,\n    TranslateModule,\n    RouterLink,\n  ],\n  standalone: true,\n})\nexport class AbstractSimpleItemActionComponent implements OnInit {\n\n  itemRD$: Observable<RemoteData<Item>>;\n  item: Item;\n\n  protected messageKey: string;\n  confirmMessage: string;\n  cancelMessage: string;\n  headerMessage: string;\n  descriptionMessage: string;\n\n  /**\n   * Route to the item's page\n   */\n  itemPageRoute: string;\n\n  protected predicate: Predicate<RemoteData<Item>>;\n\n  constructor(protected route: ActivatedRoute,\n              protected router: Router,\n              protected notificationsService: NotificationsService,\n              protected itemDataService: ItemDataService,\n              protected translateService: TranslateService) {\n  }\n\n  ngOnInit(): void {\n    this.itemRD$ = this.route.data.pipe(\n      map((data) => data.dso),\n      getFirstSucceededRemoteData(),\n    )as Observable<RemoteData<Item>>;\n\n    this.itemRD$.pipe(first()).subscribe((rd) => {\n      this.item = rd.payload;\n      this.itemPageRoute = getItemPageRoute(this.item);\n    },\n    );\n\n    this.confirmMessage = 'item.edit.' + this.messageKey + '.confirm';\n    this.cancelMessage = 'item.edit.' + this.messageKey + '.cancel';\n    this.headerMessage = 'item.edit.' + this.messageKey + '.header';\n    this.descriptionMessage = 'item.edit.' + this.messageKey + '.description';\n  }\n  /**\n   * Perform the operation linked to this action\n   */\n  performAction() {\n    // Overwrite in subclasses\n  }\n\n  /**\n   * Process the response obtained during the performAction method and navigate back to the edit page\n   * @param response from the action in the performAction method\n   */\n  processRestResponse(response: RemoteData<any>) {\n    if (response.hasSucceeded) {\n      this.itemDataService.findById(this.item.id).pipe(\n        findSuccessfulAccordingTo((itemRd: RemoteData<Item>) => this.predicate(itemRd)),\n      ).subscribe(() => {\n        this.notificationsService.success(this.translateService.get('item.edit.' + this.messageKey + '.success'));\n        this.router.navigate([getItemEditRoute(this.item)]);\n      });\n    } else {\n      this.notificationsService.error(this.translateService.get('item.edit.' + this.messageKey + '.error'));\n      this.router.navigate([getItemEditRoute(this.item)]);\n    }\n  }\n\n}\n","import {\n  AsyncPipe,\n  NgClass,\n  NgForOf,\n} from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  Observable,\n  Subscription,\n} from 'rxjs';\n\nimport {\n  APP_CONFIG,\n  AppConfig,\n} from '../../../../config/app-config.interface';\nimport { ObjectUpdatesService } from '../../../core/data/object-updates/object-updates.service';\nimport { Item } from '../../../core/shared/item.model';\nimport { MetadataValue } from '../../../core/shared/metadata.models';\nimport { hasValue } from '../../../shared/empty.util';\nimport { ListableObjectComponentLoaderComponent } from '../../../shared/object-collection/shared/listable-object/listable-object-component-loader.component';\nimport { VarDirective } from '../../../shared/utils/var.directive';\n\ninterface ItemDTO {\n\n  item: Item;\n\n  isSelectedVirtualMetadataItem$: Observable<boolean>;\n\n}\n\n@Component({\n  selector: 'ds-virtual-metadata',\n  templateUrl: './virtual-metadata.component.html',\n  imports: [\n    NgClass,\n    TranslateModule,\n    NgForOf,\n    VarDirective,\n    AsyncPipe,\n    ListableObjectComponentLoaderComponent,\n  ],\n  standalone: true,\n})\n/**\n * Component that lists both items of a relationship, along with their virtual metadata of the relationship.\n * The component is shown when a relationship is marked to be deleted.\n * Each item has a checkbox to indicate whether its virtual metadata should be saved as real metadata.\n */\nexport class VirtualMetadataComponent implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * The current url of this page\n   */\n  @Input() url: string;\n\n  /**\n   * The id of the relationship to be deleted.\n   */\n  @Input() relationshipId: string;\n\n  /**\n   * The left item of the relationship to be deleted.\n   */\n  @Input() leftItem: Item;\n\n  /**\n   * The right item of the relationship to be deleted.\n   */\n  @Input() rightItem: Item;\n\n  /**\n   * Emits when the close button is pressed.\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * Emits when the save button is pressed.\n   */\n  @Output() save = new EventEmitter();\n\n  /**\n   * Indicates when thumbnails are required by configuration and therefore\n   * need to be hidden in the modal layout.\n   */\n  showThumbnails: boolean;\n\n  /**\n   * Get an array of the left and the right item of the relationship to be deleted.\n   */\n  itemDTOs$: BehaviorSubject<ItemDTO[]> = new BehaviorSubject([]);\n\n  subs: Subscription[] = [];\n\n  public virtualMetadata: Map<string, VirtualMetadata[]> = new Map<string, VirtualMetadata[]>();\n\n  constructor(\n    protected objectUpdatesService: ObjectUpdatesService,\n    @Inject(APP_CONFIG) protected appConfig: AppConfig,\n  ) {\n    this.showThumbnails = this.appConfig.browseBy.showThumbnails;\n  }\n\n  /**\n   * Get the virtual metadata of a given item corresponding to this relationship.\n   * @param item  the item to get the virtual metadata for\n   */\n  getVirtualMetadata(item: Item): VirtualMetadata[] {\n\n    return Object.entries(item.metadata)\n      .map(([key, value]) =>\n        value\n          .filter((metadata: MetadataValue) =>\n            !key.startsWith('relation') && metadata.authority && metadata.authority.endsWith(this.relationshipId))\n          .map((metadata: MetadataValue) => {\n            return {\n              metadataField: key,\n              metadataValue: metadata,\n            };\n          }),\n      )\n      .reduce((previous, current) => previous.concat(current), []);\n  }\n\n  /**\n   * Select/deselect the virtual metadata of an item to be saved as real metadata.\n   * @param item      the item for which (not) to save the virtual metadata as real metadata\n   * @param selected  whether or not to save the virtual metadata as real metadata\n   */\n  setSelectedVirtualMetadataItem(item: Item, selected: boolean) {\n    this.objectUpdatesService.setSelectedVirtualMetadata(this.url, this.relationshipId, item.uuid, selected);\n  }\n\n  /**\n   * Check whether the virtual metadata of a given item is selected to be saved as real metadata\n   * @param item  the item for which to check whether the virtual metadata is selected to be saved as real metadata\n   */\n  isSelectedVirtualMetadataItem(item: Item): Observable<boolean> {\n    return this.objectUpdatesService.isSelectedVirtualMetadata(this.url, this.relationshipId, item.uuid);\n  }\n\n  /**\n   * Prevent unnecessary rerendering so fields don't lose focus\n   */\n  trackItemDTO(index, itemDTO: ItemDTO): string {\n    return itemDTO?.item?.uuid;\n  }\n\n  ngOnInit(): void {\n    this.subs.push(this.itemDTOs$.subscribe((itemDTOs: ItemDTO[]) => {\n      itemDTOs.forEach((itemDTO: ItemDTO) => this.virtualMetadata.set(itemDTO.item.uuid, this.getVirtualMetadata(itemDTO.item)));\n    }));\n  }\n\n  ngOnChanges(): void {\n    if (hasValue(this.leftItem) && hasValue(this.rightItem)) {\n      this.itemDTOs$.next([\n        {\n          item: this.leftItem,\n          isSelectedVirtualMetadataItem$: this.isSelectedVirtualMetadataItem(this.leftItem),\n        },\n        {\n          item: this.rightItem,\n          isSelectedVirtualMetadataItem$: this.isSelectedVirtualMetadataItem(this.rightItem),\n        },\n      ]);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subs.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n\n/**\n * Represents a virtual metadata entry.\n */\nexport interface VirtualMetadata {\n  metadataField: string;\n  metadataValue: MetadataValue;\n}\n","<div [ngClass]=\"showThumbnails ? 'hide-modal-thumbnail-column' : ''\">\n    <div class=\"modal-header\">{{'virtual-metadata.delete-relationship.modal-head' | translate}}\n        <button type=\"button\" class=\"close\" (click)=\"close.emit()\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">×</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <ng-container *ngFor=\"let itemDTO of itemDTOs$ | async; trackBy: trackItemDTO\">\n            <div *ngVar=\"(itemDTO.isSelectedVirtualMetadataItem$ | async) as selected\"\n                 (click)=\"setSelectedVirtualMetadataItem(itemDTO.item, !selected)\"\n                 class=\"item d-flex flex-row\">\n                <div class=\"m-2\">\n                    <label>\n                        <input class=\"select\" type=\"checkbox\" [checked]=\"selected\">\n                    </label>\n                </div>\n                <div class=\"flex-column\">\n                    <ds-listable-object-component-loader [object]=\"itemDTO.item\">\n                    </ds-listable-object-component-loader>\n                    <div *ngFor=\"let metadata of virtualMetadata.get(itemDTO.item.uuid)\">\n                        <div class=\"font-weight-bold\">\n                            {{metadata.metadataField}}\n                        </div>\n                        <div>\n                            {{metadata.metadataValue.value}}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n        <div class=\"d-flex flex-row-reverse m-2\">\n            <button class=\"btn btn-primary save\"\n                    (click)=\"save.emit()\">\n                <i aria-hidden=\"true\" class=\"fas fa-save\"></i> {{ 'item.edit.metadata.save-button' | translate }}\n            </button>\n        </div>\n    </div>\n</div>\n","import { NgForOf } from '@angular/common';\nimport {\n  Directive,\n  Host,\n} from '@angular/core';\n\nimport { DSpaceObject } from '../core/shared/dspace-object.model';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[ngForTrackById]',\n  standalone: true,\n})\nexport class NgForTrackByIdDirective<T extends DSpaceObject> {\n\n  constructor(@Host() private ngFor: NgForOf<T>) {\n    this.ngFor.ngForTrackBy = (index: number, dso: T) => (dso) ? dso.id : undefined;\n  }\n\n}\n","import {\n  AsyncPipe,\n  NgClass,\n  NgFor,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  map,\n  Observable,\n} from 'rxjs';\n\nimport { getCollectionPageRoute } from '../../../collection-page/collection-page-routing-paths';\nimport { PaginatedList } from '../../../core/data/paginated-list.model';\nimport { Collection } from '../../../core/shared/collection.model';\nimport { getAllSucceededRemoteDataPayload } from '../../../core/shared/operators';\nimport { BtnDisabledDirective } from '../../btn-disabled.directive';\nimport {\n  hasValueOperator,\n  isNotEmpty,\n} from '../../empty.util';\nimport { ErrorComponent } from '../../error/error.component';\nimport { ThemedLoadingComponent } from '../../loading/themed-loading.component';\nimport { PaginationComponent } from '../../pagination/pagination.component';\nimport { VarDirective } from '../../utils/var.directive';\nimport { DSpaceObjectSelect } from '../object-select.model';\nimport { ObjectSelectComponent } from '../object-select/object-select.component';\n\n@Component({\n  selector: 'ds-collection-select',\n  templateUrl: './collection-select.component.html',\n  styleUrls: ['./collection-select.component.scss'],\n  standalone: true,\n  imports: [VarDirective, NgIf, PaginationComponent, NgFor, FormsModule, RouterLink, ErrorComponent, ThemedLoadingComponent, NgClass, AsyncPipe, TranslateModule, BtnDisabledDirective],\n})\n\n/**\n * A component used to select collections from a specific list and returning the UUIDs of the selected collections\n */\nexport class CollectionSelectComponent extends ObjectSelectComponent<Collection> implements OnInit {\n\n  /**\n   * Collection of all the data that is used to display the {@link Collection} in the HTML.\n   * By collecting this data here it doesn't need to be recalculated on evey change detection.\n   */\n  selectCollections$: Observable<DSpaceObjectSelect<Collection>[]>;\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    if (!isNotEmpty(this.confirmButton)) {\n      this.confirmButton = 'collection.select.confirm';\n    }\n    this.selectCollections$ = this.dsoRD$.pipe(\n      hasValueOperator(),\n      getAllSucceededRemoteDataPayload(),\n      map((collections: PaginatedList<Collection>) => collections.page.map((collection: Collection) => Object.assign(new DSpaceObjectSelect<Collection>(), {\n        dso: collection,\n        canSelect$: this.canSelect(collection),\n        selected$: this.getSelected(collection.id),\n        route: getCollectionPageRoute(collection.id),\n      } as DSpaceObjectSelect<Collection>))),\n    );\n  }\n\n}\n","<ng-container *ngVar=\"(dsoRD$ | async) as collectionsRD\">\n  <ds-pagination\n    *ngIf=\"collectionsRD?.payload?.totalElements > 0 || collectionsRD?.payload?.page?.length > 0\"\n    [paginationOptions]=\"paginationOptions\"\n    [sortOptions]=\"sortOptions\"\n    [collectionSize]=\"collectionsRD?.payload?.totalElements\"\n    [hidePagerWhenSinglePage]=\"true\"\n    [hideGear]=\"true\">\n    <div class=\"table-responsive mt-2\">\n      <table id=\"collection-select\" class=\"table table-striped table-hover\">\n        <thead>\n          <tr>\n            <th><span class=\"sr-only\">{{'collection.select.table.selected' | translate}}</span></th>\n            <th scope=\"col\">{{'collection.select.table.title' | translate}}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let selectCollection of selectCollections$ | async\">\n            <td><input #selectCollectionBtn [attr.aria-label]=\"(selectCollectionBtn.checked ? 'collection.select.table.deselect' : 'collection.select.table.select') | translate\" [disabled]=\"(selectCollection.canSelect$ | async) === false\" class=\"collection-checkbox\" [ngModel]=\"selectCollection.selected$ | async\" (change)=\"switch(selectCollection.dso.id)\" type=\"checkbox\" name=\"{{selectCollection.dso.id}}\"></td>\n            <td><a [routerLink]=\"selectCollection.route\">{{ dsoNameService.getName(selectCollection.dso) }}</a></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </ds-pagination>\n  <div *ngIf=\"collectionsRD?.payload?.totalElements === 0 || collectionsRD?.payload?.page?.length === 0\" class=\"alert alert-info w-100\" role=\"alert\">\n    {{'collection.select.empty' | translate}}\n  </div>\n  <ds-error *ngIf=\"collectionsRD?.hasFailed\" message=\"{{'error.collections' | translate}}\"></ds-error>\n  <ds-loading *ngIf=\"!collectionsRD || collectionsRD?.isLoading\" message=\"{{'loading.collections' | translate}}\"></ds-loading>\n  <div class=\"space-children-mr float-right\" *ngVar=\"(selectedIds$ | async) as selectedIds\">\n    <button class=\"btn btn-outline-secondary collection-cancel\" (click)=\"onCancel()\">\n      <i class=\"fas fa-times\"></i> {{cancelButton | translate}}\n    </button>\n    <button class=\"btn collection-confirm\"\n            [ngClass]=\"{'btn-danger': dangerConfirm, 'btn-primary': !dangerConfirm}\"\n            [dsBtnDisabled]=\"selectedIds?.length === 0\"\n            (click)=\"confirmSelected()\">\n      <i class=\"fas fa-trash\"></i> {{confirmButton | translate}}\n    </button>\n  </div>\n</ng-container>\n","/**\n * A helper class storing the sizes in which to render a single column\n * The values in this class are expected to be between 1 and 12\n * There are used to be added to bootstrap classes such as col-xs-{this.xs}\n */\nexport class ResponsiveColumnSizes {\n  /**\n   * The extra small bootstrap size\n   */\n  xs: number;\n\n  /**\n   * The small bootstrap size\n   */\n  sm: number;\n\n  /**\n   * The medium bootstrap size\n   */\n  md: number;\n\n  /**\n   * The large bootstrap size\n   */\n  lg: number;\n\n  /**\n   * The extra large bootstrap size\n   */\n  xl: number;\n\n  constructor(xs: number, sm: number, md: number, lg: number, xl: number) {\n    this.xs = xs;\n    this.sm = sm;\n    this.md = md;\n    this.lg = lg;\n    this.xl = xl;\n  }\n\n  /**\n   * Build the bootstrap responsive column classes matching the values of this object\n   */\n  buildClasses(): string {\n    return `col-${this.xs} col-sm-${this.sm} col-md-${this.md} col-lg-${this.lg} col-xl-${this.xl}`;\n  }\n}\n","import { hasValue } from '../empty.util';\nimport { ResponsiveColumnSizes } from './responsive-column-sizes';\n\n/**\n * A helper class storing the sizes in which to render a table\n * It stores a list of columns, which in turn store their own bootstrap column sizes\n */\nexport class ResponsiveTableSizes {\n  /**\n   * A list of all the columns and their responsive sizes within this table\n   */\n  columns: ResponsiveColumnSizes[];\n\n  constructor(columns: ResponsiveColumnSizes[]) {\n    this.columns = columns;\n  }\n\n  /**\n   * Combine the values of multiple columns into a single ResponsiveColumnSizes\n   * Useful when a row element stretches over multiple columns\n   * @param start Index of the first column\n   * @param end   Index of the last column (inclusive)\n   */\n  combineColumns(start: number, end: number): ResponsiveColumnSizes {\n    if (start < end && hasValue(this.columns[start]) && hasValue(this.columns[end])) {\n      let xs = this.columns[start].xs;\n      let sm = this.columns[start].sm;\n      let md = this.columns[start].md;\n      let lg = this.columns[start].lg;\n      let xl = this.columns[start].xl;\n      for (let i = start + 1; i < end + 1; i++) {\n        xs += this.columns[i].xs;\n        sm += this.columns[i].sm;\n        md += this.columns[i].md;\n        lg += this.columns[i].lg;\n        xl += this.columns[i].xl;\n      }\n      return new ResponsiveColumnSizes(xs, sm, md, lg, xl);\n    }\n    return undefined;\n  }\n}\n","import {\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\n\nimport { isNotEmpty } from '../empty.util';\n\n@Pipe({\n  name: 'dsObjectValues',\n  pure: true,\n  standalone: true,\n})\n/**\n * Pipe for parsing all values of an object to an array of values\n */\nexport class ObjectValuesPipe implements PipeTransform {\n\n  /**\n   * @param value An object\n   * @returns {any} Array with all values of the input object\n   */\n  transform(value): any {\n    const values = [];\n    if (isNotEmpty(value)) {\n      Object.values(value).forEach((v) => values.push(v));\n    }\n    return values;\n  }\n}\n","var map = {\n\t\"./custom/app/item-page/edit-item-page/item-status/item-status.component\": [\n\t\t13382,\n\t\t\"src_themes_custom_app_item-page_edit-item-page_item-status_item-status_component_ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 52529;\nmodule.exports = webpackAsyncContext;"],"names":["ActivatedRoute","Router","TranslateService","combineLatest","observableCombineLatest","map","switchMap","take","tap","environment","ItemDataService","ObjectUpdatesService","Item","getAllSucceededRemoteData","hasValue","NotificationsService","AbstractTrackableComponent","getItemPageLinksToFollow","getItemPageRoute","AbstractItemUpdateComponent","constructor","itemService","objectUpdatesService","router","notificationsService","translateService","route","ngOnInit","item","setItem","itemUpdateSubscription","data","parent","pipe","parentData","Object","assign","dso","rd","payload","findByHref","_links","self","href","subscribe","discardTimeOut","edit","undoTimeout","hasChanges","initializeOriginalFields","checkLastModified","initializeNotificationsPrefix","initializeUpdates","itemPageRoute","postItemInit","ngOnDestroy","unsubscribe","submit","trackUpdate","index","update","field","uuid","undefined","isValid","isValidPage","url","currentVersion","lastModified","getLastModified","updateVersion","getDate","warning","getNotificationTitle","getNotificationContent","i0","ɵɵdirectiveInject","i1","i2","i3","i4","i5","selectors","inputs","standalone","features","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","decls","vars","template","AbstractItemUpdateComponent_Template","rf","ctx","encapsulation","first","findSuccessfulAccordingTo","predicate","source","i18nBreadcrumbResolver","ThemedDsoEditMetadataComponent","ResourcePolicyCreateComponent","ResourcePolicyEditComponent","resourcePolicyResolver","resourcePolicyTargetResolver","EditItemPageComponent","ITEM_EDIT_AUTHORIZATIONS_PATH","ITEM_EDIT_DELETE_PATH","ITEM_EDIT_MOVE_PATH","ITEM_EDIT_PRIVATE_PATH","ITEM_EDIT_PUBLIC_PATH","ITEM_EDIT_REGISTER_DOI_PATH","ITEM_EDIT_REINSTATE_PATH","ITEM_EDIT_WITHDRAW_PATH","ItemAccessControlComponent","ItemAuthorizationsComponent","ItemBitstreamsComponent","ItemCollectionMapperComponent","ItemCurateComponent","ItemDeleteComponent","ItemMoveComponent","itemPageAccessControlGuard","itemPageBitstreamsGuard","itemPageCollectionMapperGuard","itemPageCurateGuard","itemPageDeleteGuard","itemPageEditAuthorizationsGuard","itemPageMetadataGuard","itemPageMoveGuard","itemPagePrivateGuard","itemPageRegisterDoiGuard","itemPageReinstateGuard","itemPageRelationshipsGuard","itemPageStatusGuard","itemPageVersionHistoryGuard","itemPageWithdrawGuard","ItemPrivateComponent","ItemPublicComponent","ItemRegisterDoiComponent","ItemReinstateComponent","ItemRelationshipsComponent","ThemedItemStatusComponent","ItemVersionHistoryComponent","ItemWithdrawComponent","ROUTES","path","resolve","breadcrumb","breadcrumbKey","children","component","redirectTo","pathMatch","title","showBreadcrumbs","canActivate","resourcePolicyTarget","resourcePolicy","AsyncPipe","NgClass","NgForOf","NgIf","Injector","runInInjectionContext","RouterLink","RouterOutlet","NgbTooltipModule","TranslateModule","of","observableOf","fadeIn","fadeInOut","isNotEmpty","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵpureFunction1","_c0","page_r1","page","ctx_r1","currentPage","_c1","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵtemplate","EditItemPageComponent_ul_7_li_1_a_1_Template","EditItemPageComponent_ul_7_li_1_button_5_Template","enabled","EditItemPageComponent_ul_7_li_1_Template","pages","injector","events","initPageParamsByRoute","routeConfig","filter","child","guardFn","snapshot","routerState","canActivateOutcomes","every","e","itemRD$","getItemPage","firstChild","consts","EditItemPageComponent_Template","EditItemPageComponent_ul_7_Template","ɵɵelement","ɵɵtextInterpolate","length","tmp_2_0","TranslatePipe","NgbTooltip","animation","changeDetection","getFirstSucceededRemoteData","AccessControlFormContainerComponent","itemRD_r1","ItemAccessControlComponent_Template","ItemAccessControlComponent_ds_access_control_form_container_0_Template","styles","NgbCollapseModule","isEqual","BehaviorSubject","catchError","mergeMap","DSONameService","LinkService","buildPaginatedList","getFirstSucceededRemoteDataPayload","getFirstSucceededRemoteDataWithNotEmptyPayload","AlertComponent","NgForTrackByIdDirective","ResourcePoliciesComponent","followLink","ɵɵelementContainerStart","bitstream_r4","id","name","ɵɵlistener","ItemAuthorizationsComponent_ng_container_5_ng_container_2_div_9_Template_button_click_1_listener","ɵɵrestoreView","_r5","bundle_r2","ɵɵnextContext","$implicit","ctx_r2","ɵɵresetView","onBitstreamsLoad","ItemAuthorizationsComponent_ng_container_5_ng_container_2_Template_button_click_3_listener","_r1","collapseArea","ItemAuthorizationsComponent_ng_container_5_ng_container_2_ng_container_7_Template","ItemAuthorizationsComponent_ng_container_5_ng_container_2_div_9_Template","ɵɵtextInterpolate2","nameService","getName","bundleBitstreamsMap","get","isCollapsed","bitstreams","allBitstreamsLoaded","ItemAuthorizationsComponent_ng_container_5_ng_container_2_Template","tmp_5_0","ItemAuthorizationsComponent_div_7_Template_button_click_1_listener","_r6","onBundleLoad","linkService","Map","bundles$","subs","bundlesPerPage","bundlesPageSize","allBundlesLoaded","bitstreamSize","bitstreamPageSize","getBundlesPerItem","getItemUUID","item$","UUID","getItemName","getItemBundles","asObservable","resolveLink","findListOptions","elementsPerPage","bundles","error","console","push","list","next","getValue","concat","bundle","getBundleBitstreams","entry","bitstreamMapValues","b","slice","set","bundleId","res","nextBitstreams","bitstreamsToShow","existingBits","subscription","forEach","ItemAuthorizationsComponent_Template","ItemAuthorizationsComponent_ng_container_5_Template","ItemAuthorizationsComponent_div_7_Template","NgbCollapse","CommonModule","ChangeDetectorRef","NgZone","AlertType","ObjectCacheService","BitstreamDataService","BundleDataService","RequestService","getRemoteDataPayload","BtnDisabledDirective","ThemedLoadingComponent","PaginationComponentOptions","PaginatedSearchOptions","ObjectValuesPipe","VarDirective","ItemBitstreamsService","ItemEditBitstreamBundleComponent","ItemBitstreamsComponent_div_0_button_10_Template_button_click_0_listener","_r2","reinstate","ItemBitstreamsComponent_div_0_button_19_Template_button_click_0_listener","_r4","discard","hasChanges$","submitting","bundle_r5","columnSizes","isFirst_r6","ItemBitstreamsComponent_div_0_div_21_div_3_Template_button_click_1_listener","_r7","loadBundles","ItemBitstreamsComponent_div_0_div_21_ds_item_edit_bitstream_bundle_2_Template","ItemBitstreamsComponent_div_0_div_21_div_3_Template","isProcessingMoveRequest","bundles_r8","showLoadMoreLink$","ɵɵpropertyInterpolate","ItemBitstreamsComponent_div_0_button_26_Template_button_click_0_listener","_r9","ItemBitstreamsComponent_div_0_button_35_Template_button_click_0_listener","_r10","ItemBitstreamsComponent_div_0_button_10_Template","ItemBitstreamsComponent_div_0_Template_button_click_12_listener","ItemBitstreamsComponent_div_0_button_19_Template","ItemBitstreamsComponent_div_0_div_21_Template","ItemBitstreamsComponent_div_0_div_22_Template","ItemBitstreamsComponent_div_0_ds_loading_23_Template","ItemBitstreamsComponent_div_0_button_26_Template","ItemBitstreamsComponent_div_0_Template_button_click_28_listener","ItemBitstreamsComponent_div_0_button_35_Template","Info","isReinstatable$","bundlesSubject","bitstreamService","objectCache","requestService","cdRef","bundleService","zone","itemBitstreamsService","bundlesOptions","pageSize","getColumnSizes","moveUp","event","hasSelectedBitstream","preventDefault","moveSelectedBitstreamUp","moveDown","moveSelectedBitstreamDown","cancelSelection","clearSelection","target","Element","tagName","notificationsPrefix","getBundles","pagination","bundlesPL","pageInfo","totalPages","bundlePage","removedResponses$","removeMarkedBitstreams","responses","displayNotifications","dropBitstream","runOutsideAngular","fromIndex","toIndex","finish","moveOperation","op","from","patch","response","run","removeByHrefSubstring","isCached","key","failedResponses","hasFailed","successfulResponses","hasSucceeded","instant","errorMessage","success","undoNotification","info","timeOut","discardAllFieldUpdates","reinstateFieldUpdates","isReinstatable","reinstatable","includes","hasUpdates","i6","i7","i8","i9","i10","hostBindings","ItemBitstreamsComponent_HostBindings","ItemBitstreamsComponent_keydown_arrowUp_HostBindingHandler","$event","ɵɵresolveDocument","ItemBitstreamsComponent_keydown_arrowDown_HostBindingHandler","ItemBitstreamsComponent_keyup_escape_HostBindingHandler","ItemBitstreamsComponent_keydown_enter_HostBindingHandler","ItemBitstreamsComponent_keydown_space_HostBindingHandler","ItemBitstreamsComponent_Template","ItemBitstreamsComponent_div_0_Template","ItemBitstreamsComponent_ds_loading_2_Template","i11","zip","observableZip","getBitstreamDownloadRoute","FieldChangeType","getFirstCompletedRemoteData","hasNoValue","LiveRegionService","ResponsiveColumnSizes","ResponsiveTableSizes","MOVE_KEY","dsoNameService","liveRegionService","selectionAction$","isPerformingMoveRequest","getSelectionAction$","getSelectionAction","action","value","selectionAction","getSelectedBitstream","selectedEntry","selectBitstreamEntry","bitstream","announceSelect","updateSelectionAction","selected","announceClear","currentPosition","originalPosition","displaySuccessNotification","getPerformingMoveRequest","announceCancel","performBitstreamMoveRequest","newPosition","onRequestCompleted","announceMove","bundleSize","warn","announceLoading","displayFailedResponseNotifications","setStaleByHrefSubstring","getPerformingMoveRequest$","getInitialBundlesPaginationOptions","getInitialBitstreamsPaginationOptions","bundleName","displaySuccessFulResponseNotifications","displayErrorNotification","bundlesOnce$","removedBitstreams$","getFieldUpdates","fieldUpdates","updates","values","fieldUpdate","changeType","REMOVE","removedBitstreams","removeMultiple","mapBitstreamsToTableEntries","nameStripped","nameToHeader","description","firstMetadataValue","format","downloadUrl","stripWhiteSpace","str","replace","bitstreamName","message","addMessage","toPosition","ɵɵinject","factory","ɵfac","providedIn","CdkDrag","CdkDropList","ViewContainerRef","NgbDropdownModule","shareReplay","PaginationService","Bundle","paginatedListToArray","PaginationComponent","BrowserOnlyPipe","ItemEditBitstreamBundleComponent_ng_template_0_ds_pagination_0_ng_container_3_li_40_Template_button_click_2_listener","size_r4","_r3","doPageSizeChange","_c5","pageSize$","ItemEditBitstreamBundleComponent_ng_template_0_ds_pagination_0_ng_container_3_ng_container_41_tr_1_Template_tr_cdkDragStarted_0_listener","dragStart","ItemEditBitstreamBundleComponent_ng_template_0_ds_pagination_0_ng_container_3_ng_container_41_tr_1_Template_tr_cdkDragEnded_0_listener","dragEnd","ItemEditBitstreamBundleComponent_ng_template_0_ds_pagination_0_ng_container_3_ng_container_41_tr_1_Template_div_keydown_enter_2_listener","entry_r6","select","ItemEditBitstreamBundleComponent_ng_template_0_ds_pagination_0_ng_container_3_ng_container_41_tr_1_Template_div_keydown_space_2_listener","ItemEditBitstreamBundleComponent_ng_template_0_ds_pagination_0_ng_container_3_ng_container_41_tr_1_Template_div_click_2_listener","ItemEditBitstreamBundleComponent_ng_template_0_ds_pagination_0_ng_container_3_ng_container_41_tr_1_Template_button_click_23_listener","remove","ItemEditBitstreamBundleComponent_ng_template_0_ds_pagination_0_ng_container_3_ng_container_41_tr_1_Template_button_click_27_listener","undo","getRowClass","update_r7","ɵɵclassMapInterpolate1","columns","buildClasses","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","tmp_23_0","shortDescription","ɵɵsanitizeUrl","_c6","canRemove","canUndo","ItemEditBitstreamBundleComponent_ng_template_0_ds_pagination_0_ng_container_3_ng_container_41_tr_1_Template","updates_r8","ItemEditBitstreamBundleComponent_ng_template_0_ds_pagination_0_ng_container_3_Template_tbody_cdkDropListDropped_17_listener","drop","ItemEditBitstreamBundleComponent_ng_template_0_ds_pagination_0_ng_container_3_li_40_Template","ItemEditBitstreamBundleComponent_ng_template_0_ds_pagination_0_ng_container_3_ng_container_41_Template","ɵɵclassProp","isFirstTable","ɵɵclassMap","ɵɵpipeBind2","_c3","_c4","_c2","paginationOptions","pageSizeOptions","tableEntries$","ItemEditBitstreamBundleComponent_ng_template_0_ds_pagination_0_ng_container_3_Template","bitstreamsList_r9","totalElements","updates$","ItemEditBitstreamBundleComponent_ng_template_0_ds_pagination_0_Template","bitstreamsRD$","viewContainerRef","paginationService","subscriptions","bundleNameColumn","combineColumns","createEmbeddedView","bundleView","bundleUrl","initializePagination","initializeBitstreams","initializeSelectionActions","clear","sub","currentPaginationOptions$","getCurrentPagination","paginatedOptions","getBitstreamsEndpoint","hasByHref$","getBitstreams","bufferSize","refCount","bitstreamsRD","initialize","Date","getFieldUpdatesExclusive","tableEntries","handleSelectionAction","redirectToCurrentPage","redirectToOriginalPage","bitstreamEntry","getCurrentPage","selectedEntryPage","bundleIndexToPage","changeToPage","originPage","UPDATE","saveRemoveFieldUpdate","removeSingleFieldUpdate","ADD","paginationComponent","shouldShowBottomPager","hasMultiplePages","dragTooltip","open","close","dragIndex","previousIndex","dropIndex","currentIndex","dragPage","dropPage","droppedOnElement","document","elementFromPoint","dropPoint","x","y","textContent","classList","contains","droppedPage","Number","isNaN","getCurrentPageSize","pageIndexToBundleIndex","selectedBitstream","KeyboardEvent","repeat","selectionObject","createBitstreamSelectionObject","pageIndex","findBitstreamPageIndex","position","entries","findIndex","Math","floor","doPageChange","viewQuery","ItemEditBitstreamBundleComponent_Query","ItemEditBitstreamBundleComponent_ng_template_0_Template","ɵɵtemplateRefExtractor","NgbDropdown","NgbDropdownToggle","NgbDropdownMenu","NgbNavModule","startWith","CollectionDataService","DSpaceObjectType","toDSpaceObjectListRD","SearchService","SearchConfigurationService","CollectionSelectComponent","ThemedSearchFormComponent","ItemCollectionMapperComponent_ng_template_18_Template_ds_collection_select_confirm_1_listener","removeMappings","ItemCollectionMapperComponent_ng_template_18_Template_ds_collection_select_cancel_1_listener","onCancel","itemCollectionsRD$","tmp_4_0","searchOptions$","ItemCollectionMapperComponent_ng_template_23_div_5_Template_ds_collection_select_confirm_1_listener","mapCollections","ItemCollectionMapperComponent_ng_template_23_div_5_Template_ds_collection_select_cancel_1_listener","mappedCollectionsRD$","tmp_6_0","sort","ItemCollectionMapperComponent_ng_template_23_Template_ds_search_form_submitSearch_2_listener","performedSearch","ItemCollectionMapperComponent_ng_template_23_div_5_Template","ItemCollectionMapperComponent_ng_template_23_div_6_Template","query","searchConfigService","searchService","itemDataService","collectionDataService","itemName$","paginatedSearchOptions","loadCollectionLists","shouldUpdate$","shouldUpdate","findListByHref","getMappedCollectionsEndpoint","owningCollectionRD$","findOwningCollectionFor","itemCollectionsAndOptions$","itemCollectionsRD","owningCollectionRD","searchOptions","search","buildQuery","dsoTypes","COLLECTION","ids","itemIdAndExcludingIds$","collections","collection","responses$","itemId","excludingIds","filterIds","mapToCollection","showNotifications","itemRD","removeMappingFromCollection","excluding","indexOf","messagePrefix","successful","unsuccessful","successMessages","amount","head","content","unsuccessMessages","switchToFirstTab","tabChange","navigateByUrl","getCurrentUrl","substring","result","addExcludeCollection","collectionId","excludeQuery","tabs","navigate","ItemCollectionMapperComponent_Query","ItemCollectionMapperComponent_Template_ul_navChange_12_listener","ItemCollectionMapperComponent_ng_template_18_Template","ItemCollectionMapperComponent_ng_template_23_Template","ɵɵsanitizeHtml","tabs_r6","NgbNavContent","NgbNav","NgbNavItem","NgbNavLink","NgbNavOutlet","CurationFormComponent","dsoRD_r1","handle","dsoRD$","ItemCurateComponent_Template","ItemCurateComponent_ds_curation_form_5_Template","NgbModal","defaultIfEmpty","EntityTypeDataService","RelationshipDataService","ViewMode","ListableObjectComponentLoaderComponent","getItemEditRoute","ModifyItemOverviewComponent","AbstractSimpleItemActionComponent","relatedItem_r6","ctx_r3","viewMode","metadata_r9","metadataField","metadataValue","ItemDeleteComponent_ng_container_10_div_1_div_3_div_1_div_10_ng_container_1_ng_template_6_Template_button_click_4_listener","_r8","closeVirtualMetadataModal","ItemDeleteComponent_ng_container_10_div_1_div_3_div_1_div_10_ng_container_1_ng_template_6_ds_listable_object_component_loader_8_Template","ItemDeleteComponent_ng_container_10_div_1_div_3_div_1_div_10_ng_container_1_ng_template_6_div_9_Template","relationshipDto_r10","virtualMetadata$","ItemDeleteComponent_ng_container_10_div_1_div_3_div_1_div_10_ng_container_1_ds_listable_object_component_loader_1_Template","ItemDeleteComponent_ng_container_10_div_1_div_3_div_1_div_10_ng_container_1_Template_button_click_4_listener","virtualMetadataModal_r7","ɵɵreference","openVirtualMetadataModal","ItemDeleteComponent_ng_container_10_div_1_div_3_div_1_div_10_ng_container_1_ng_template_6_Template","ItemDeleteComponent_ng_container_10_div_1_div_3_div_1_div_10_ng_container_1_Template","relatedItem$","ItemDeleteComponent_ng_container_10_div_1_div_3_div_1_Template_div_click_1_listener","selected_r2","ngVar","typeDto_r3","setSelected","relationshipType","ItemDeleteComponent_ng_container_10_div_1_div_3_div_1_Template_h5_click_6_listener","ItemDeleteComponent_ng_container_10_div_1_div_3_div_1_div_10_Template","isDeleting$","getRelationshipMessageKey","label$","relationshipDTOs$","ItemDeleteComponent_ng_container_10_div_1_div_3_div_1_Template","isSelected$","ItemDeleteComponent_ng_container_10_div_1_div_3_Template","types_r11","ItemDeleteComponent_ng_container_10_div_1_Template","RelationshipTypeDTO","RelationshipDTO","modalService","relationshipService","entityTypeService","messageKey","ListElement","typeDTOs$","relationships$","relatedItems$","label","getEntityTypeByLabel","entityType","getEntityTypeRelationships","relationshipTypes","types","type","getRelationships","relationships","reduce","includedTypes","some","includedType","isSelected","getLabel","relationship","getRelatedItem","getVirtualMetadata","relationshipTypeDto","modalRef","isLeftItem","leftwardType","rightwardType","has","getItemRelationshipsArray","getRelationshipType","resolveLinks","rightItem","leftItem","relatedItem","metadata","authority","endsWith","previous","current","isSelectedVirtualMetadata","setSelectedVirtualMetadata","performAction","selection","selectedDtoTypes","typeDto","delete","notify","succeeded","ItemDeleteComponent_Template","ItemDeleteComponent_ng_container_10_Template","ItemDeleteComponent_Template_button_click_13_listener","headerMessage","descriptionMessage","confirmMessage","cancelMessage","FormsModule","NgbModule","getAllSucceededRemoteDataPayload","AuthorizedCollectionSelectorComponent","selectorType","inheritPolicies","canSubmit","processing","COLLECTIONS","itemPageRoute$","owningCollection","originalCollection","selectDso","selectedCollection","selectedCollectionName","moveToCollection","move$","findById","canMove","ItemMoveComponent_Template","ItemMoveComponent_Template_ds_authorized_collection_selector_onSelect_18_listener","ItemMoveComponent_ng_template_24_Template","ɵɵtwoWayListener","ItemMoveComponent_Template_input_ngModelChange_26_listener","ɵɵtwoWayBindingSet","ItemMoveComponent_Template_button_click_39_listener","ItemMoveComponent_span_40_Template","ItemMoveComponent_span_41_Template","ItemMoveComponent_Template_button_click_42_listener","tmp_1_0","ɵɵtwoWayProperty","tooltipContent_r2","CheckboxControlValueAccessor","NgControlStatus","NgModel","ItemOperation","ctx_r0","operation","disabled","operationUrl","operationKey","ItemOperationComponent","ItemOperationComponent_Template","ItemOperationComponent_span_5_Template","ItemOperationComponent_span_6_Template","authorized","featureID","setDisabled","setAuthorized","dsoPageSingleFeatureGuard","FeatureID","itemPageResolver","AdministratorOf","CanManageBitstreamBundles","CanManageMappings","CanDelete","CanManagePolicies","CanEditMetadata","CanMove","CanMakePrivate","CanRegisterDOI","ReinstateItem","CanManageRelationships","dsoPageSomeFeatureGuard","WithdrawItem","CanManageVersions","isDiscoverable","setDiscoverable","processRestResponse","ItemPrivateComponent_Template","ItemPrivateComponent_Template_button_click_11_listener","ItemPublicComponent_Template","ItemPublicComponent_Template_button_click_11_listener","IdentifierDataService","ɵɵtextInterpolate3","doiToUpdateMessage","identifier_r1","identifierStatus","ItemRegisterDoiComponent_div_9_div_1_Template","identifierType","identifierDataService","identifiers$","getIdentifierDataFor","identifierRD","statusCode","identifiers","registerDoi","registerIdentifier","hasCompleted","ItemRegisterDoiComponent_Template","ItemRegisterDoiComponent_div_9_Template","ItemRegisterDoiComponent_Template_button_click_13_listener","isWithdrawn","setWithDrawn","ItemReinstateComponent_Template","ItemReinstateComponent_Template_button_click_11_listener","EMPTY","concatMap","toArray","EditItemRelationshipsService","isSaving$","deleteRelationship","deleteRD","invalidateByHref","addRelationship","relationshipRD","dismissAll","getRelatedItems","items","copyVirtualMetadata","keepLeftVirtualMetadata","keepRightVirtualMetadata","leftwardValue","rightwardValue","originalIsLeft","originalItem","nameVariant","isProvidedItemTypeLeftType","itemType","getRelationshipLeftAndRightType","leftType","rightType","shouldDisplayBothRelationshipSides","leftType$","rightType$","EventEmitter","Observable","ItemType","RelationshipType","EditRelationshipListComponent","isLeftItem$","isRightItem$","currentItemIsLeftItem$","EditRelationshipListWrapperComponent","editItemRelationshipsService","submitModal","nextValue","shouldDisplayBothRelationshipSides$","outputs","EditRelationshipListWrapperComponent_Template","EditRelationshipListWrapperComponent_ng_container_0_Template","EditRelationshipListWrapperComponent_ng_container_2_Template","NgFor","observableFrom","APP_CONFIG","RequestParam","hasValueOperator","DsDynamicLookupRelationModalComponent","RelationshipOptions","SelectableListService","itemLinksToFollow","EditRelationshipComponent","updateValue_r1","ɵɵpureFunction0","ɵɵpureFunction3","EditRelationshipListComponent_ng_container_10_ng_container_1_ng_container_1_ds_edit_relationship_5_Template","EditRelationshipListComponent_ng_container_10_ng_container_1_ng_container_1_div_6_Template","paginationConfig","relationshipsRd$","nbAddedFields$","updateValues_r3","EditRelationshipListComponent_ng_container_10_ng_container_1_ng_container_1_Template","updates_r4","EditRelationshipListComponent_ng_container_10_ng_container_1_Template","EditRelationshipListComponent_ng_container_10_ds_loading_3_Template","loading$","selectableListService","appConfig","isLastPage$","fetchThumbnail","browseBy","showThumbnails","relatedEntityType$","relatedEntityType","relationshipLabel","currentItemIsLeftItem","isRepeatable","isLeft","leftMaxCardinality","rightMaxCardinality","openLookup","size","modalComp","componentInstance","repeatable","isEditRelationship","listId","toAdd","toRemove","isPending","hiddenQuery","selectableObjects","searchResult","indexableObject","foundIndex","itemSearchResult","splice","getRelationFromId","foundIndexRemove","el","deselect","submitEv","addOperations","removeOperations","getNameVariant","saveAddFieldUpdate","complete","emit","discardEv","deselectSingle","selectSingle","closeEv","relationshipOptions","searchConfiguration","toLowerCase","nameVariants","deselectAll","searchByItemsAndType","relationshipLeftAndRightType$","relationshipMessageKey$","currentPagination$","linksToFollow","showAccessStatuses","currentPagination","getItemRelationshipsByLabel","searchParams","relationshipPaginatedList","nextFields","fieldUpdatesFiltered","keys","EditRelationshipListComponent_Template","EditRelationshipListComponent_Template_button_click_4_listener","EditRelationshipListComponent_ng_container_10_Template","VirtualMetadataComponent","EditRelationshipComponent_div_0_Template_button_click_6_listener","virtualMetadataModal_r3","EditRelationshipComponent_div_0_Template_button_click_9_listener","EditRelationshipComponent_ng_template_2_Template_ds_virtual_metadata_close_0_listener","EditRelationshipComponent_ng_template_2_Template_ds_virtual_metadata_save_0_listener","leftItem$","rightItem$","ngOnChanges","editItem","selection$","valueOf","ɵɵNgOnChangesFeature","EditRelationshipComponent_Template","EditRelationshipComponent_div_0_Template","EditRelationshipComponent_ng_template_2_Template","NgTemplateOutlet","distinctUntilChanged","RelationshipTypeDataService","compareArraysUsingIds","ɵɵelementContainer","entityType_r2","relationshipType_r1","ItemRelationshipsComponent_ng_container_1_div_3_div_1_Template","relationshipTypes_r4","trackById","ItemRelationshipsComponent_ng_container_1_ng_container_2_Template","ItemRelationshipsComponent_ng_container_1_div_3_Template","ItemRelationshipsComponent_ng_container_1_ng_container_7_Template","buttons_r6","relationshipTypes$","loading_r5","ItemRelationshipsComponent_ng_template_7_button_1_Template_button_click_0_listener","ItemRelationshipsComponent_ng_template_7_button_3_Template_button_click_0_listener","ItemRelationshipsComponent_ng_template_7_button_1_Template","ItemRelationshipsComponent_ng_template_7_button_3_Template","ItemRelationshipsComponent_ng_template_7_Template_button_click_5_listener","ItemRelationshipsComponent_ng_template_7_span_8_Template","ItemRelationshipsComponent_ng_template_7_i_10_Template","relationshipTypeService","cdr","entityType$","searchByEntityType","getRelationshipTypeFollowLinks","i12","ItemRelationshipsComponent_Template","ItemRelationshipsComponent_ng_container_1_Template","ItemRelationshipsComponent_ng_template_3_Template","ItemRelationshipsComponent_ng_template_5_Template","ItemRelationshipsComponent_ng_template_7_Template","noEntityType_r10","ConfigurationDataService","AuthorizationDataService","OrcidAuthService","statusKey_r1","statusData","identifier_r3","toLocaleUpperCase","ItemStatusComponent_div_5_div_1_Template","operation_r4","ItemStatusComponent","authorizationService","configurationService","orcidAuthService","operations$","statusDataKeys","registerConfigEnabled$","findByPropertyName","currentUrl","initialOperations","ops$","dataRD","no_doi","pending","identifier","showDoi","ops","isAuthorized","orcidOps$","isLinkedToOrcid","onlyAdminCanDisconnectProfileFromOrcid","canDisconnect","orcidOps","trackOperation","ItemStatusComponent_Template","ItemStatusComponent_div_4_Template","ItemStatusComponent_div_5_Template","ItemStatusComponent_div_15_Template","ThemedComponent","getComponentName","importThemedComponent","themeName","importUnthemedComponent","t","ngContentSelectors","ThemedItemStatusComponent_Template","ThemedItemStatusComponent_ng_template_0_Template","ɵɵprojection","ItemVersionsComponent","item_r1","ItemVersionHistoryComponent_div_0_ds_item_versions_1_Template","AlertTypeEnum","ItemVersionHistoryComponent_Template","ItemVersionHistoryComponent_div_0_Template","tmp_0_0","ItemWithdrawComponent_Template","ItemWithdrawComponent_Template_button_click_11_listener","Predicate","itemRd","AbstractSimpleItemActionComponent_Template","AbstractSimpleItemActionComponent_Template_button_click_11_listener","metadata_r5","VirtualMetadataComponent_ng_container_8_div_1_Template_div_click_0_listener","itemDTO_r3","setSelectedVirtualMetadataItem","VirtualMetadataComponent_ng_container_8_div_1_div_6_Template","virtualMetadata","VirtualMetadataComponent_ng_container_8_div_1_Template","isSelectedVirtualMetadataItem$","save","itemDTOs$","startsWith","relationshipId","isSelectedVirtualMetadataItem","trackItemDTO","itemDTO","itemDTOs","VirtualMetadataComponent_Template","VirtualMetadataComponent_Template_button_click_4_listener","VirtualMetadataComponent_ng_container_8_Template","VirtualMetadataComponent_Template_button_click_11_listener","ngFor","ngForTrackBy","getCollectionPageRoute","ErrorComponent","DSpaceObjectSelect","ObjectSelectComponent","CollectionSelectComponent_ng_container_0_ds_pagination_1_tr_13_Template_input_change_2_listener","selectCollection_r2","switch","canSelect$","selected$","CollectionSelectComponent_ng_container_0_ds_pagination_1_tr_13_Template","sortOptions","collectionsRD_r5","selectCollections$","CollectionSelectComponent_ng_container_0_div_5_Template_button_click_1_listener","CollectionSelectComponent_ng_container_0_div_5_Template_button_click_5_listener","confirmSelected","cancelButton","ɵɵpureFunction2","dangerConfirm","selectedIds_r7","confirmButton","CollectionSelectComponent_ng_container_0_ds_pagination_1_Template","CollectionSelectComponent_ng_container_0_div_2_Template","CollectionSelectComponent_ng_container_0_ds_error_3_Template","CollectionSelectComponent_ng_container_0_ds_loading_4_Template","CollectionSelectComponent_ng_container_0_div_5_Template","isLoading","selectedIds$","canSelect","getSelected","CollectionSelectComponent_Template","CollectionSelectComponent_ng_container_0_Template","xs","sm","md","lg","xl","start","end","i","transform","v","pure"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}