{"version":3,"file":"src_app_process-page_process-page-routes_ts.js","mappings":"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","sources":["./src/app/breadcrumbs/breadcrumb/breadcrumb.model.ts","./src/app/core/breadcrumbs/i18n-breadcrumb.resolver.ts","./src/app/core/breadcrumbs/i18n-breadcrumbs.service.ts","./src/app/process-page/detail/process-detail-field/process-detail-field.component.ts","./src/app/process-page/detail/process-detail-field/process-detail-field.component.html","./src/app/process-page/detail/process-detail.component.ts","./src/app/process-page/detail/process-detail.component.html","./src/app/process-page/form/process-form-factory.ts","./src/app/process-page/form/process-form.component.ts","./src/app/process-page/form/process-form.component.html","./src/app/process-page/form/process-parameters/parameter-select/parameter-select.component.ts","./src/app/process-page/form/process-parameters/parameter-select/parameter-select.component.html","./src/app/process-page/form/process-parameters/parameter-value-input/boolean-value-input/boolean-value-input.component.ts","./src/app/process-page/form/process-parameters/parameter-value-input/boolean-value-input/boolean-value-input.component.html","./src/app/process-page/form/process-parameters/parameter-value-input/date-value-input/date-value-input.component.ts","./src/app/process-page/form/process-parameters/parameter-value-input/date-value-input/date-value-input.component.html","./src/app/process-page/form/process-parameters/parameter-value-input/file-value-input/file-value-input.component.ts","./src/app/process-page/form/process-parameters/parameter-value-input/file-value-input/file-value-input.component.html","./src/app/process-page/form/process-parameters/parameter-value-input/parameter-value-input.component.ts","./src/app/process-page/form/process-parameters/parameter-value-input/parameter-value-input.component.html","./src/app/process-page/form/process-parameters/parameter-value-input/string-value-input/string-value-input.component.ts","./src/app/process-page/form/process-parameters/parameter-value-input/string-value-input/string-value-input.component.html","./src/app/process-page/form/process-parameters/parameter-value-input/value-input.component.ts","./src/app/process-page/form/process-parameters/process-parameters.component.ts","./src/app/process-page/form/process-parameters/process-parameters.component.html","./src/app/process-page/form/script-help/script-help.component.ts","./src/app/process-page/form/script-help/script-help.component.html","./src/app/process-page/form/scripts-select/scripts-select.component.ts","./src/app/process-page/form/scripts-select/scripts-select.component.html","./src/app/process-page/new/new-process.component.ts","./src/app/process-page/new/new-process.component.html","./src/app/process-page/overview/process-bulk-delete.service.ts","./src/app/process-page/overview/process-overview.component.ts","./src/app/process-page/overview/process-overview.component.html","./src/app/process-page/overview/process-overview.service.ts","./src/app/process-page/overview/table/process-overview-table.component.ts","./src/app/process-page/overview/table/process-overview-table.component.html","./src/app/process-page/process-breadcrumb.resolver.ts","./src/app/process-page/process-breadcrumbs.service.ts","./src/app/process-page/process-page-routes.ts","./src/app/process-page/process-page.resolver.ts","./src/app/process-page/scripts/script-parameter-type.model.ts","./src/app/process-page/scripts/script-parameter.model.ts","./src/app/shared/utils/file-value-accessor.directive.ts","./src/app/shared/utils/has-no-value.pipe.ts","./src/app/shared/utils/has-value.pipe.ts","./src/app/shared/utils/require-file.validator.ts","./node_modules/rxjs/dist/esm/internal/operators/count.js"],"sourcesContent":["/**\n * Class representing a single breadcrumb\n */\nexport class Breadcrumb {\n  constructor(\n    /**\n     * The display value of the breadcrumb\n     */\n    public text: string,\n    /**\n     * The optional url of the breadcrumb\n     */\n    public url?: string) {\n  }\n}\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { BreadcrumbConfig } from '../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { hasNoValue } from '../../shared/empty.util';\nimport { currentPathFromSnapshot } from '../../shared/utils/route.utils';\nimport { I18nBreadcrumbsService } from './i18n-breadcrumbs.service';\n\n/**\n * Method for resolving an I18n breadcrumb configuration object\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {I18nBreadcrumbsService} breadcrumbService\n * @returns BreadcrumbConfig object\n */\nexport const i18nBreadcrumbResolver: ResolveFn<BreadcrumbConfig<string>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  breadcrumbService: I18nBreadcrumbsService = inject(I18nBreadcrumbsService),\n): BreadcrumbConfig<string> => {\n  const key = route.data.breadcrumbKey;\n  if (hasNoValue(key)) {\n    throw new Error('You provided an i18nBreadcrumbResolver for url \\\"' + route.url + '\\\" but no breadcrumbKey in the route\\'s data');\n  }\n  const fullPath = currentPathFromSnapshot(route);\n  return { provider: breadcrumbService, key: key, url: fullPath };\n};\n","import { Injectable } from '@angular/core';\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs';\n\nimport { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport { BreadcrumbsProviderService } from './breadcrumbsProviderService';\n\n/**\n * The postfix for i18n breadcrumbs\n */\nexport const BREADCRUMB_MESSAGE_POSTFIX = '.breadcrumbs';\n\n/**\n * Service to calculate i18n breadcrumbs for a single part of the route\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class I18nBreadcrumbsService implements BreadcrumbsProviderService<string> {\n\n  /**\n   * Method to calculate the breadcrumbs\n   * @param key The key used to resolve the breadcrumb\n   * @param url The url to use as a link for this breadcrumb\n   */\n  getBreadcrumbs(key: string, url: string): Observable<Breadcrumb[]> {\n    return observableOf([new Breadcrumb(key + BREADCRUMB_MESSAGE_POSTFIX, url)]);\n  }\n}\n","import {\n  Component,\n  Input,\n} from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@Component({\n  selector: 'ds-process-detail-field',\n  templateUrl: './process-detail-field.component.html',\n  standalone: true,\n  imports: [TranslateModule],\n})\n/**\n * A component displaying a single detail about a DSpace Process\n */\nexport class ProcessDetailFieldComponent {\n  /**\n   * I18n message for the header\n   */\n  @Input() title: string;\n}\n","<h2 class=\"h3 mt-4\">{{title | translate}}</h2>\n<ng-content></ng-content>\n","import {\n  AsyncPipe,\n  DatePipe,\n  isPlatformBrowser,\n  NgFor,\n  NgIf,\n} from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport {\n  Component,\n  Inject,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router,\n  RouterLink,\n} from '@angular/router';\nimport {\n  NgbModal,\n  NgbModalRef,\n} from '@ng-bootstrap/ng-bootstrap';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  Observable,\n} from 'rxjs';\nimport {\n  filter,\n  finalize,\n  find,\n  map,\n  startWith,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs/operators';\n\nimport { AuthService } from '../../core/auth/auth.service';\nimport { DSONameService } from '../../core/breadcrumbs/dso-name.service';\nimport { BitstreamDataService } from '../../core/data/bitstream-data.service';\nimport { PaginatedList } from '../../core/data/paginated-list.model';\nimport { ProcessDataService } from '../../core/data/processes/process-data.service';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { redirectOn4xx } from '../../core/shared/authorized.operators';\nimport { Bitstream } from '../../core/shared/bitstream.model';\nimport { DSpaceObject } from '../../core/shared/dspace-object.model';\nimport {\n  getAllSucceededRemoteDataPayload,\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteData,\n  getFirstSucceededRemoteDataPayload,\n} from '../../core/shared/operators';\nimport { URLCombiner } from '../../core/url-combiner/url-combiner';\nimport { AlertType } from '../../shared/alert/alert-type';\nimport { hasValue } from '../../shared/empty.util';\nimport { ThemedFileDownloadLinkComponent } from '../../shared/file-download-link/themed-file-download-link.component';\nimport { ThemedLoadingComponent } from '../../shared/loading/themed-loading.component';\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\nimport { FileSizePipe } from '../../shared/utils/file-size-pipe';\nimport { HasNoValuePipe } from '../../shared/utils/has-no-value.pipe';\nimport { VarDirective } from '../../shared/utils/var.directive';\nimport { PROCESS_PAGE_FOLLOW_LINKS } from '../process-page.resolver';\nimport { getProcessListRoute } from '../process-page-routing.paths';\nimport { Process } from '../processes/process.model';\nimport { ProcessStatus } from '../processes/process-status.model';\nimport { ProcessDetailFieldComponent } from './process-detail-field/process-detail-field.component';\n\n@Component({\n  selector: 'ds-process-detail',\n  templateUrl: './process-detail.component.html',\n  standalone: true,\n  imports: [NgIf, ProcessDetailFieldComponent, NgFor, VarDirective, ThemedFileDownloadLinkComponent, ThemedLoadingComponent, RouterLink, AsyncPipe, DatePipe, FileSizePipe, TranslateModule, HasNoValuePipe],\n})\n/**\n * A component displaying detailed information about a DSpace Process\n */\nexport class ProcessDetailComponent implements OnInit, OnDestroy {\n\n  /**\n   * The AlertType enumeration\n   * @type {AlertType}\n   */\n  public AlertTypeEnum = AlertType;\n\n  /**\n   * The Process's Remote Data\n   */\n  processRD$: Observable<RemoteData<Process>>;\n\n  /**\n   * The Process's Output Files\n   */\n  filesRD$: Observable<RemoteData<PaginatedList<Bitstream>>>;\n\n  /**\n   * File link that contain the output logs with auth token\n   */\n  outputLogFileUrl$: Observable<string>;\n\n  /**\n   * The Process's Output logs\n   */\n  outputLogs$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n\n  /**\n   * Boolean on whether or not to show the output logs\n   */\n  showOutputLogs = false;\n  /**\n   * When it's retrieving the output logs from backend, to show loading component\n   */\n  retrievingOutputLogs$ = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Date format to use for start and end time of processes\n   */\n  dateFormat = 'yyyy-MM-dd HH:mm:ss ZZZZ';\n\n  isRefreshing$: Observable<boolean>;\n\n  isDeleting: boolean;\n\n  protected autoRefreshingID: string;\n\n  /**\n   * Reference to NgbModal\n   */\n  protected modalRef: NgbModalRef;\n\n  constructor(\n    @Inject(PLATFORM_ID) protected platformId: object,\n    protected route: ActivatedRoute,\n    protected router: Router,\n    protected processService: ProcessDataService,\n    protected bitstreamDataService: BitstreamDataService,\n    protected nameService: DSONameService,\n    private zone: NgZone,\n    protected authService: AuthService,\n    protected http: HttpClient,\n    protected modalService: NgbModal,\n    protected notificationsService: NotificationsService,\n    protected translateService: TranslateService,\n  ) {}\n\n  /**\n   * Initialize component properties\n   * Display a 404 if the process doesn't exist\n   */\n  ngOnInit(): void {\n    this.processRD$ = this.route.data.pipe(\n      switchMap((data) => {\n        if (isPlatformBrowser(this.platformId)) {\n          this.autoRefreshingID = this.route.snapshot.params.id;\n          return this.processService.autoRefreshUntilCompletion(this.autoRefreshingID, 5000, ...PROCESS_PAGE_FOLLOW_LINKS);\n        } else {\n          return [data.process as RemoteData<Process>];\n        }\n      }),\n      filter(() => !this.isDeleting),\n      redirectOn4xx(this.router, this.authService),\n    );\n\n    this.isRefreshing$ = this.processRD$.pipe(\n      find((processRD: RemoteData<Process>) => ProcessDataService.hasCompletedOrFailed(processRD.payload)),\n      map(() => false),\n      startWith(true),\n    );\n\n    this.filesRD$ = this.processRD$.pipe(\n      getAllSucceededRemoteDataPayload(),\n      switchMap((process: Process) => process.files),\n    );\n  }\n\n  /**\n   * Make sure the autoRefreshUntilCompletion is cleaned up properly\n   */\n  ngOnDestroy() {\n    if (hasValue(this.autoRefreshingID)) {\n      this.processService.stopAutoRefreshing(this.autoRefreshingID);\n    }\n  }\n\n  /**\n   * Get the name of a bitstream\n   * @param bitstream\n   */\n  getFileName(bitstream: Bitstream) {\n    return bitstream instanceof DSpaceObject ? this.nameService.getName(bitstream) : 'unknown';\n  }\n\n  /**\n   * Retrieves the process logs, while setting the loading subject to true.\n   * Sets the outputLogs when retrieved and sets the showOutputLogs boolean to show them and hide the button.\n   */\n  showProcessOutputLogs() {\n    this.retrievingOutputLogs$.next(true);\n    this.zone.runOutsideAngular(() => {\n      const processOutputRD$: Observable<RemoteData<Bitstream>> = this.processRD$.pipe(\n        getFirstSucceededRemoteDataPayload(),\n        switchMap((process: Process) => {\n          return this.bitstreamDataService.findByHref(process._links.output.href, false);\n        }),\n      );\n      this.outputLogFileUrl$ = processOutputRD$.pipe(\n        getFirstSucceededRemoteData(),\n        tap((processOutputFileRD: RemoteData<Bitstream>) => {\n          if (processOutputFileRD.statusCode === 204) {\n            this.zone.run(() => this.retrievingOutputLogs$.next(false));\n            this.showOutputLogs = true;\n          }\n        }),\n        switchMap((processOutput: RemoteData<Bitstream>) => {\n          const url = processOutput.payload._links.content.href;\n          return this.authService.getShortlivedToken().pipe(take(1),\n            map((token: string) => {\n              return hasValue(token) ? new URLCombiner(url, `?authentication-token=${token}`).toString() : url;\n            }));\n        }),\n      );\n    });\n    this.outputLogFileUrl$.pipe(take(1),\n      switchMap((url: string) => {\n        return this.getTextFile(url);\n      }),\n      finalize(() => this.zone.run(() => this.retrievingOutputLogs$.next(false))),\n    ).subscribe((logs: string) => {\n      this.outputLogs$.next(logs);\n    });\n  }\n\n  getTextFile(filename: string): Observable<string> {\n    // The Observable returned by get() is of type Observable<string>\n    // because a text response was specified.\n    // There's no need to pass a <string> type parameter to get().\n    return this.http.get(filename, { responseType: 'text' })\n      .pipe(\n        finalize(() => {\n          this.showOutputLogs = true;\n        }),\n      );\n  }\n\n  /**\n   * Whether or not the given process has Completed or Failed status\n   * @param process Process to check if completed or failed\n   */\n  isProcessFinished(process: Process): boolean {\n    return (hasValue(process) && hasValue(process.processStatus) &&\n      (process.processStatus.toString() === ProcessStatus[ProcessStatus.COMPLETED].toString()\n        || process.processStatus.toString() === ProcessStatus[ProcessStatus.FAILED].toString()));\n  }\n\n  /**\n   * Delete the current process\n   * @param process\n   */\n  deleteProcess(process: Process) {\n    this.isDeleting = true;\n    this.processService.delete(process.processId).pipe(\n      getFirstCompletedRemoteData(),\n    ).subscribe((rd) => {\n      if (rd.hasSucceeded) {\n        this.notificationsService.success(this.translateService.get('process.detail.delete.success'));\n        this.closeModal();\n        void this.router.navigateByUrl(getProcessListRoute());\n      } else {\n        this.notificationsService.error(this.translateService.get('process.detail.delete.error'));\n        this.isDeleting = false;\n      }\n    });\n  }\n\n  /**\n   * Open a given modal.\n   * @param content   - the modal content.\n   */\n  openDeleteModal(content) {\n    this.modalRef = this.modalService.open(content);\n  }\n\n  /**\n   * Close the modal.\n   */\n  closeModal() {\n    this.modalRef.close();\n  }\n}\n","<div class=\"container\" *ngIf=\"(processRD$ | async)?.payload as process\">\n    <div class=\"row\">\n      <div class=\"col-10\">\n        <h1 class=\"flex-grow-1\">\n          {{ 'process.detail.title' | translate:{ id: process?.processId, name: process?.scriptName } }}\n        </h1>\n      </div>\n      <div *ngIf=\"isRefreshing$ | async\" class=\"col-2 refresh-counter\">\n        {{ 'process.detail.refreshing' | translate }} <i class=\"fas fa-sync-alt fa-spin\"></i>\n      </div>\n    </div>\n\n    <ds-process-detail-field id=\"process-name\" [title]=\"'process.detail.script'\">\n        <div>{{ process?.scriptName }}</div>\n    </ds-process-detail-field>\n\n    <ds-process-detail-field *ngIf=\"process?.parameters && process?.parameters?.length > 0\" id=\"process-arguments\"\n                             [title]=\"'process.detail.arguments'\">\n        <div *ngFor=\"let argument of process?.parameters\">{{ argument?.name }} {{ argument?.value }}</div>\n    </ds-process-detail-field>\n\n    <div *ngVar=\"(filesRD$ | async)?.payload?.page as files\">\n        <ds-process-detail-field *ngIf=\"files && files?.length > 0\" id=\"process-files\"\n                                 [title]=\"'process.detail.output-files'\">\n          <div class=\"d-flex flex-column\">\n            <ds-file-download-link *ngFor=\"let file of files; let last=last;\" [bitstream]=\"file\">\n              <span>{{getFileName(file)}}</span>\n              <span>({{(file?.sizeBytes) | dsFileSize }})</span>\n            </ds-file-download-link>\n          </div>\n        </ds-process-detail-field>\n    </div>\n\n    <ds-process-detail-field *ngIf=\"process && process.startTime\" id=\"process-start-time\"\n                             [title]=\"'process.detail.start-time' | translate\">\n        <div>{{ process.startTime | date:dateFormat:'UTC' }}</div>\n    </ds-process-detail-field>\n\n    <ds-process-detail-field *ngIf=\"process && process.endTime\" id=\"process-end-time\"\n                             [title]=\"'process.detail.end-time' | translate\">\n        <div>{{ process.endTime | date:dateFormat:'UTC' }}</div>\n    </ds-process-detail-field>\n\n    <ds-process-detail-field *ngIf=\"process && process.processStatus\" id=\"process-status\"\n                             [title]=\"'process.detail.status' | translate\">\n        <div>{{ process.processStatus }}</div>\n    </ds-process-detail-field>\n\n    <ds-process-detail-field *ngIf=\"isProcessFinished(process)\" id=\"process-output\" [title]=\"'process.detail.output'\">\n        <button *ngIf=\"!showOutputLogs && process?._links?.output?.href !== undefined\" id=\"showOutputButton\"\n                class=\"btn btn-primary\" (click)=\"showProcessOutputLogs()\">\n            {{ 'process.detail.logs.button' | translate }}\n        </button>\n        <ds-loading *ngIf=\"retrievingOutputLogs$ | async\" class=\"ds-themed-loading\"\n                           message=\"{{ 'process.detail.logs.loading' | translate }}\"></ds-loading>\n        <pre class=\"font-weight-bold text-secondary bg-light p-3\" tabindex=\"0\"\n             *ngIf=\"showOutputLogs && (outputLogs$ | async)?.length > 0\">{{ (outputLogs$ | async) }}</pre>\n        <p id=\"no-output-logs-message\" *ngIf=\"((retrievingOutputLogs$ | async) !== true && showOutputLogs)\n      && (outputLogs$ | async | dsHasNoValue) || (outputLogs$ | async)?.length === 0 || !process._links.output\">\n            {{ 'process.detail.logs.none' | translate }}\n        </p>\n    </ds-process-detail-field>\n\n    <ds-process-detail-field id=\"process-actions\" [title]=\"'process.detail.actions'\">\n        <button class=\"btn btn-success mr-2\" routerLink=\"/processes/new\" [queryParams]=\"{id: process?.processId}\"><i\n                class=\"fas fa-plus pr-2\"></i>{{'process.detail.create' | translate}}</button>\n        <button *ngIf=\"isProcessFinished(process)\" id=\"delete\" class=\"btn btn-danger\"\n                (click)=\"openDeleteModal(deleteModal)\">\n            <i class=\"fas fa-trash pr-2\"></i>{{ 'process.detail.delete.button' | translate }}\n        </button>\n    </ds-process-detail-field>\n\n    <div style=\"text-align: right;\">\n        <a class=\"btn btn-outline-secondary mt-3\" [routerLink]=\"'/processes'\">{{'process.detail.back' | translate}}</a>\n    </div>\n</div>\n\n<ng-template #deleteModal >\n\n    <div *ngIf=\"(processRD$ | async)?.payload as process\">\n\n        <div class=\"modal-header\">\n            <div>\n                <h4>{{'process.detail.delete.header' | translate }}</h4>\n            </div>\n            <button type=\"button\" class=\"close\"\n                    (click)=\"closeModal()\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">×</span>\n            </button>\n        </div>\n\n        <div class=\"modal-body\">\n            <div>{{'process.detail.delete.body' | translate }}</div>\n            <div class=\"mt-4\">\n                <button class=\"btn btn-primary mr-2\" (click)=\"closeModal()\">{{'process.detail.delete.cancel' | translate}}</button>\n                <button id=\"delete-confirm\" class=\"btn btn-danger\"\n                        (click)=\"deleteProcess(process)\">{{ 'process.detail.delete.confirm' | translate }}\n                </button>\n            </div>\n        </div>\n\n\n    </div>\n\n</ng-template>\n\n","import { ControlContainer } from '@angular/forms';\n\nexport function controlContainerFactory(controlContainer?: ControlContainer) {\n  return controlContainer;\n}\n","import {\n  NgFor,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport {\n  FormsModule,\n  NgForm,\n} from '@angular/forms';\nimport {\n  NavigationExtras,\n  Router,\n  RouterLink,\n} from '@angular/router';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\n\nimport { ScriptDataService } from '../../core/data/processes/script-data.service';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { getFirstCompletedRemoteData } from '../../core/shared/operators';\nimport { isEmpty } from '../../shared/empty.util';\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\nimport { getProcessListRoute } from '../process-page-routing.paths';\nimport { Process } from '../processes/process.model';\nimport { ProcessParameter } from '../processes/process-parameter.model';\nimport { Script } from '../scripts/script.model';\nimport { ScriptParameter } from '../scripts/script-parameter.model';\nimport { ProcessParametersComponent } from './process-parameters/process-parameters.component';\nimport { ScriptHelpComponent } from './script-help/script-help.component';\nimport { ScriptsSelectComponent } from './scripts-select/scripts-select.component';\n\n/**\n * Component to create a new script\n */\n@Component({\n  selector: 'ds-process-form',\n  templateUrl: './process-form.component.html',\n  styleUrls: ['./process-form.component.scss'],\n  standalone: true,\n  imports: [FormsModule, ScriptsSelectComponent, ProcessParametersComponent, RouterLink, ScriptHelpComponent, NgIf, NgFor, TranslateModule],\n})\nexport class ProcessFormComponent implements OnInit {\n  /**\n   * The currently selected script\n   */\n  @Input() public selectedScript: Script = undefined;\n\n  /**\n   * The process to create\n   */\n  @Input() public process: Process = undefined;\n\n  /**\n   * The parameter values to use to start the process\n   */\n  @Input() public parameters: ProcessParameter[] = [];\n\n  /**\n   * Optional files that are used as parameter values\n   */\n  public files: File[] = [];\n\n  /**\n   * Message key for the header of the form\n   */\n  @Input() public headerKey: string;\n\n  /**\n   * Contains the missing parameters on submission\n   */\n  public missingParameters = [];\n\n  constructor(\n    private scriptService: ScriptDataService,\n    private notificationsService: NotificationsService,\n    private translationService: TranslateService,\n    private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.process = new Process();\n  }\n\n  /**\n   * Validates the form, sets the parameters to correct values and invokes the script with the correct parameters\n   * @param form\n   */\n  submitForm(form: NgForm) {\n    if (isEmpty(this.parameters)) {\n      this.parameters = [];\n    }\n    if (!this.validateForm(form) || this.isRequiredMissing()) {\n      return;\n    }\n\n    const stringParameters: ProcessParameter[] = this.parameters.map((parameter: ProcessParameter) => {\n      return {\n        name: parameter.name,\n        value: this.checkValue(parameter),\n      };\n    },\n    );\n    this.scriptService.invoke(this.selectedScript.id, stringParameters, this.files)\n      .pipe(getFirstCompletedRemoteData())\n      .subscribe((rd: RemoteData<Process>) => {\n        if (rd.hasSucceeded) {\n          const title = this.translationService.get('process.new.notification.success.title');\n          const content = this.translationService.get('process.new.notification.success.content');\n          this.notificationsService.success(title, content);\n          this.sendBack(rd.payload);\n        } else {\n          const title = this.translationService.get('process.new.notification.error.title');\n          const content = this.translationService.get('process.new.notification.error.content');\n          this.notificationsService.error(title, content);\n        }\n      });\n  }\n\n  /**\n   * Checks whether the parameter values are files\n   * Replaces file parameters by strings and stores the files in a separate list\n   * @param processParameter The parameter value to check\n   */\n  private checkValue(processParameter: ProcessParameter): string {\n    if (typeof processParameter.value === 'object') {\n      this.files = [...this.files, processParameter.value];\n      return processParameter.value.name;\n    }\n    return processParameter.value;\n  }\n\n  /**\n   * Validates the form\n   * Returns false if the form is invalid\n   * Returns true if the form is valid\n   * @param form The NgForm object to validate\n   */\n  private validateForm(form: NgForm) {\n    let valid = true;\n    Object.keys(form.controls).forEach((key) => {\n      if (form.controls[key].invalid) {\n        form.controls[key].markAsDirty();\n        valid = false;\n      }\n    });\n    return valid;\n  }\n\n  private isRequiredMissing() {\n    this.missingParameters = [];\n    const setParams: string[] = this.parameters\n      .map((param) => param.name);\n    const requiredParams: ScriptParameter[] = this.selectedScript.parameters.filter((param) => param.mandatory);\n    for (const rp of requiredParams) {\n      if (!setParams.includes(rp.name)) {\n        this.missingParameters.push(rp.name);\n      }\n    }\n    return this.missingParameters.length > 0;\n  }\n\n  /**\n   * Redirect the user to the processes overview page with the new process' ID,\n   * so it can be highlighted in the overview table.\n   * @param newProcess The newly created process\n   * @private\n   */\n  private sendBack(newProcess: Process) {\n    const extras: NavigationExtras = {\n      queryParams: { new_process_id: newProcess.processId },\n    };\n    void this.router.navigate([getProcessListRoute()], extras);\n  }\n\n  updateScript($event: Script) {\n    this.selectedScript = $event;\n    this.parameters = undefined;\n  }\n\n  get generatedProcessName() {\n    const paramsString = this.parameters?.map((p: ProcessParameter) => {\n      const value = this.parseValue(p.value);\n      return isEmpty(value) ? p.name : `${p.name} ${value}`;\n    }).join(' ') || '';\n    return isEmpty(paramsString) ? this.selectedScript.name : `${this.selectedScript.name} ${paramsString}`;\n  }\n\n  private parseValue(value: any) {\n    if (typeof value === 'boolean') {\n      return undefined;\n    }\n    if (value instanceof File) {\n      return value.name;\n    }\n    return value?.toString();\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <h1 class=\"col-12\">\n            {{headerKey | translate}}\n        </h1>\n        <div class=\"col-12 col-md-6 mb-2\">\n            <form #form=\"ngForm\" (ngSubmit)=\"submitForm(form)\">\n                <ds-scripts-select [script]=\"selectedScript\" (select)=\"selectedScript = $event; parameters = undefined\"></ds-scripts-select>\n                <ds-process-parameters [initialParams]=\"parameters\" [script]=\"selectedScript\" (updateParameters)=\"parameters = $event\"></ds-process-parameters>\n                <a [routerLink]=\"['/processes']\" class=\"btn btn-danger float-left\">{{ 'process.new.cancel' | translate }}</a>\n                <button type=\"submit\" class=\"btn btn-primary float-right\">{{ 'process.new.submit' | translate }}</button>\n            </form>\n        </div>\n        <div class=\"col-12 col-md-6\">\n            <ds-script-help *ngIf=\"selectedScript\" [script]=\"selectedScript\"></ds-script-help>\n        </div>\n    </div>\n\n    <div *ngIf=\"missingParameters.length > 0\" class=\"mt-3 alert alert-danger validation-error\">\n        {{'process.new.parameter.required.missing' | translate}}\n        <ul>\n            <li *ngFor=\"let missing of missingParameters\">{{missing}}</li>\n        </ul>\n    </div>\n</div>\n","import {\n  NgFor,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n} from '@angular/core';\nimport {\n  ControlContainer,\n  FormsModule,\n  NgForm,\n} from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ProcessParameter } from '../../../processes/process-parameter.model';\nimport { ScriptParameter } from '../../../scripts/script-parameter.model';\nimport { controlContainerFactory } from '../../process-form-factory';\nimport { ParameterValueInputComponent } from '../parameter-value-input/parameter-value-input.component';\n\n/**\n * Component to select a single parameter for a process\n */\n@Component({\n  selector: 'ds-parameter-select',\n  templateUrl: './parameter-select.component.html',\n  styleUrls: ['./parameter-select.component.scss'],\n  viewProviders: [{\n    provide: ControlContainer,\n    useFactory: controlContainerFactory,\n    deps: [[new Optional(), NgForm]],\n  }],\n  standalone: true,\n  imports: [FormsModule, NgFor, ParameterValueInputComponent, NgIf, TranslateModule],\n})\nexport class ParameterSelectComponent {\n  @Input() index: number;\n\n  /**\n   * The current parameter value of the selected parameter\n   */\n  @Input() parameterValue: ProcessParameter = new ProcessParameter();\n\n  /**\n   * The available script parameters for the script\n   */\n  @Input() parameters: ScriptParameter[];\n\n  /**\n   * Whether or not this selected parameter can be removed from the list\n   */\n  @Input() removable: boolean;\n\n  /**\n   * Emits the parameter value when it's removed\n   */\n  @Output() removeParameter: EventEmitter<ProcessParameter> = new EventEmitter<ProcessParameter>();\n\n  /**\n   * Emits the updated parameter value when it changes\n   */\n  @Output() changeParameter: EventEmitter<ProcessParameter> = new EventEmitter<ProcessParameter>();\n\n  /**\n   * Returns the script parameter based on the currently selected name\n   */\n  get selectedScriptParameter(): ScriptParameter {\n    return this.parameters.find((parameter: ScriptParameter) => parameter.name === this.selectedParameter);\n  }\n\n  /**\n   * Return the currently selected parameter name\n   */\n  get selectedParameter(): string {\n    return this.parameterValue ? this.parameterValue.name : undefined;\n  }\n\n  /**\n   * Sets the currently selected parameter based on the provided parameter name\n   * Emits the new value from the changeParameter output\n   * @param value The parameter name to set\n   */\n  set selectedParameter(value: string) {\n    this.parameterValue.name = value;\n    this.selectedParameterValue = undefined;\n    this.changeParameter.emit(this.parameterValue);\n  }\n\n  /**\n   * Returns the currently selected parameter value\n   */\n  get selectedParameterValue(): any {\n    return this.parameterValue ? this.parameterValue.value : undefined;\n  }\n\n  /**\n   * Sets the currently selected value for the parameter\n   * Emits the new value from the changeParameter output\n   * @param value The parameter value to set\n   */\n  set selectedParameterValue(value: any) {\n    this.parameterValue.value = value;\n    this.changeParameter.emit(this.parameterValue);\n  }\n}\n","<div class=\"form-row gap-2 mb-2 mx-0\">\n    <select id=\"process-parameters\"\n            class=\"form-control col\"\n            name=\"parameter-{{index}}\"\n            [attr.aria-label]=\"'process.new.select-parameter' | translate\"\n            [(ngModel)]=\"selectedParameter\"\n            #param=\"ngModel\">\n        <option [ngValue]=\"undefined\">{{ 'process.new.add-parameter' | translate }}</option>\n        <option *ngFor=\"let param of parameters\" [ngValue]=\"param.name\">\n            {{param.nameLong || param.name}}\n        </option>\n    </select>\n    <ds-parameter-value-input [initialValue]=\"parameterValue.value\" [parameter]=\"selectedScriptParameter\" (updateValue)=\"selectedParameterValue = $event\" class=\"d-block col px-0\" [index]=\"index\"></ds-parameter-value-input>\n    <button *ngIf=\"removable\" [attr.aria-label]=\"'process.new.delete-parameter' | translate\"\n            (click)=\"removeParameter.emit(parameterValue);\" class=\"btn btn-danger col-1 remove-button\">\n      <i class=\"fas fa-trash\"></i>\n    </button>\n    <span *ngIf=\"!removable\" class=\"col-1\"></span>\n</div>\n\n","import {\n  Component,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport {\n  ControlContainer,\n  NgForm,\n} from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { controlContainerFactory } from '../../../process-form-factory';\nimport { ValueInputComponent } from '../value-input.component';\n\n/**\n * Represents the value of a boolean parameter\n */\n@Component({\n  selector: 'ds-boolean-value-input',\n  templateUrl: './boolean-value-input.component.html',\n  styleUrls: ['./boolean-value-input.component.scss'],\n  imports: [TranslateModule],\n  viewProviders: [{ provide: ControlContainer,\n    useFactory: controlContainerFactory,\n    deps: [[new Optional(), NgForm]] }],\n  standalone: true,\n})\nexport class BooleanValueInputComponent extends ValueInputComponent<boolean> implements OnInit {\n  ngOnInit() {\n    this.updateValue.emit(true);\n  }\n}\n","<input [attr.aria-label]=\"'process.new.parameter.label' | translate\" type=\"hidden\" value=\"true\" name=\"boolean-value-{{index}}\" id=\"boolean-value-{{index}}\"/>\n","import { NgIf } from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport {\n  ControlContainer,\n  FormsModule,\n  NgForm,\n} from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { controlContainerFactory } from '../../../process-form-factory';\nimport { ValueInputComponent } from '../value-input.component';\n\n/**\n * Represents the user inputted value of a date parameter\n */\n@Component({\n  selector: 'ds-date-value-input',\n  templateUrl: './date-value-input.component.html',\n  styleUrls: ['./date-value-input.component.scss'],\n  viewProviders: [{ provide: ControlContainer,\n    useFactory: controlContainerFactory,\n    deps: [[new Optional(), NgForm]] }],\n  standalone: true,\n  imports: [FormsModule, NgIf, TranslateModule],\n})\nexport class DateValueInputComponent extends ValueInputComponent<string> implements OnInit {\n  /**\n   * The current value of the date string\n   */\n  value: string;\n\n  /**\n   * Initial value of the field\n   */\n  @Input() initialValue;\n\n  ngOnInit(): void {\n    this.value = this.initialValue;\n  }\n\n  setValue(value) {\n    this.value = value;\n    this.updateValue.emit(value);\n  }\n}\n","<input [attr.aria-label]=\"'process.new.parameter.label' | translate\" required #string=\"ngModel\" type=\"text\" class=\"form-control\" name=\"date-value-{{index}}\" id=\"date-value-{{index}}\" [ngModel]=\"value\" (ngModelChange)=\"setValue($event)\"/>\n<div *ngIf=\"string.invalid && (string.dirty || string.touched)\"\n     class=\"alert alert-danger validation-error mb-0\">\n    <div *ngIf=\"string.errors.required\">\n        {{'process.new.parameter.string.required' | translate}}\n    </div>\n</div>\n","import { NgIf } from '@angular/common';\nimport {\n  Component,\n  Optional,\n} from '@angular/core';\nimport {\n  ControlContainer,\n  FormsModule,\n  NgForm,\n} from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { FileValueAccessorDirective } from '../../../../../shared/utils/file-value-accessor.directive';\nimport { FileValidator } from '../../../../../shared/utils/require-file.validator';\nimport { controlContainerFactory } from '../../../process-form-factory';\nimport { ValueInputComponent } from '../value-input.component';\n\n/**\n * Represents the user inputted value of a file parameter\n */\n@Component({\n  selector: 'ds-file-value-input',\n  templateUrl: './file-value-input.component.html',\n  styleUrls: ['./file-value-input.component.scss'],\n  viewProviders: [{ provide: ControlContainer,\n    useFactory: controlContainerFactory,\n    deps: [[new Optional(), NgForm]] }],\n  standalone: true,\n  imports: [FileValueAccessorDirective, FormsModule, FileValidator, NgIf, TranslateModule],\n})\nexport class FileValueInputComponent extends ValueInputComponent<File> {\n  /**\n   * The current value of the file\n   */\n  fileObject: File;\n  setFile(files) {\n    this.fileObject = files.length > 0 ? files[0] : undefined;\n    this.updateValue.emit(this.fileObject);\n  }\n}\n","<label for=\"file-upload-{{index}}\" class=\"d-flex align-items-center m-0\">\n    <span class=\"btn btn-primary\">\n        {{'process.new.parameter.file.upload-button' | translate}}\n    </span>\n    <span class=\"file-name ml-1\">{{fileObject?.name}}</span>\n</label>\n<input requireFile #file=\"ngModel\" type=\"file\" name=\"file-upload-{{index}}\" id=\"file-upload-{{index}}\" class=\"form-control-file d-none\" [ngModel]=\"fileObject\" (ngModelChange)=\"setFile($event)\"/>\n<div *ngIf=\"file.invalid && (file.dirty || file.touched)\"\n     class=\"alert alert-danger validation-error\">\n    <div *ngIf=\"file.errors.required\">\n        {{'process.new.parameter.file.required' | translate}}\n    </div>\n</div>\n","import {\n  NgSwitch,\n  NgSwitchCase,\n} from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n} from '@angular/core';\nimport {\n  ControlContainer,\n  NgForm,\n} from '@angular/forms';\n\nimport { ScriptParameter } from '../../../scripts/script-parameter.model';\nimport { ScriptParameterType } from '../../../scripts/script-parameter-type.model';\nimport { controlContainerFactory } from '../../process-form-factory';\nimport { BooleanValueInputComponent } from './boolean-value-input/boolean-value-input.component';\nimport { DateValueInputComponent } from './date-value-input/date-value-input.component';\nimport { FileValueInputComponent } from './file-value-input/file-value-input.component';\nimport { StringValueInputComponent } from './string-value-input/string-value-input.component';\n\n/**\n * Component that renders the correct parameter value input based the script parameter's type\n */\n@Component({\n  selector: 'ds-parameter-value-input',\n  templateUrl: './parameter-value-input.component.html',\n  styleUrls: ['./parameter-value-input.component.scss'],\n  viewProviders: [{ provide: ControlContainer,\n    useFactory: controlContainerFactory,\n    deps: [[new Optional(), NgForm]] }],\n  standalone: true,\n  imports: [NgSwitch, NgSwitchCase, StringValueInputComponent, DateValueInputComponent, FileValueInputComponent, BooleanValueInputComponent],\n})\nexport class ParameterValueInputComponent {\n  @Input() index: number;\n\n  /**\n   * The current script parameter\n   */\n  @Input() parameter: ScriptParameter;\n\n  /**\n   * Initial value for input\n   */\n  @Input() initialValue: any;\n  /**\n   * Emits the value of the input when its updated\n   */\n  @Output() updateValue: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * The available script parameter types\n   */\n  parameterTypes = ScriptParameterType;\n}\n","<div [ngSwitch]=\"parameter?.type\">\n  <ds-string-value-input *ngSwitchCase=\"parameterTypes.STRING\" [initialValue]=\"initialValue\" (updateValue)=\"updateValue.emit($event)\" [index]=\"index\"></ds-string-value-input>\n  <ds-string-value-input *ngSwitchCase=\"parameterTypes.OUTPUT\" [initialValue]=\"initialValue\" (updateValue)=\"updateValue.emit($event)\" [index]=\"index\"></ds-string-value-input>\n  <ds-date-value-input *ngSwitchCase=\"parameterTypes.DATE\" [initialValue]=\"initialValue\" (updateValue)=\"updateValue.emit($event)\" [index]=\"index\"></ds-date-value-input>\n  <ds-file-value-input *ngSwitchCase=\"parameterTypes.FILE\" (updateValue)=\"updateValue.emit($event)\" [index]=\"index\"></ds-file-value-input>\n  <ds-boolean-value-input *ngSwitchCase=\"parameterTypes.BOOLEAN\" (updateValue)=\"updateValue.emit($event)\" [index]=\"index\"></ds-boolean-value-input>\n</div>\n","import { NgIf } from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport {\n  ControlContainer,\n  FormsModule,\n  NgForm,\n} from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { controlContainerFactory } from '../../../process-form-factory';\nimport { ValueInputComponent } from '../value-input.component';\n\n/**\n * Represents the user inputted value of a string parameter\n */\n@Component({\n  selector: 'ds-string-value-input',\n  templateUrl: './string-value-input.component.html',\n  styleUrls: ['./string-value-input.component.scss'],\n  viewProviders: [{ provide: ControlContainer,\n    useFactory: controlContainerFactory,\n    deps: [[new Optional(), NgForm]] }],\n  standalone: true,\n  imports: [FormsModule, NgIf, TranslateModule],\n})\nexport class StringValueInputComponent extends ValueInputComponent<string> implements OnInit {\n  /**\n   * The current value of the string\n   */\n  value: string;\n\n  /**\n   * Initial value of the field\n   */\n  @Input() initialValue;\n\n  ngOnInit(): void {\n    this.value = this.initialValue;\n  }\n\n  setValue(value) {\n    this.value = value;\n    this.updateValue.emit(value);\n  }\n}\n","<input [attr.aria-label]=\"'process.new.parameter.label' | translate\" required #string=\"ngModel\" type=\"text\" name=\"string-value-{{index}}\" class=\"form-control\" id=\"string-value-{{index}}\" [ngModel]=\"value\" (ngModelChange)=\"setValue($event)\"/>\n<div *ngIf=\"string.invalid && (string.dirty || string.touched)\"\n     class=\"alert alert-danger validation-error mb-0\">\n    <div *ngIf=\"string.errors.required\">\n        {{'process.new.parameter.string.required' | translate}}\n    </div>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\n\n/**\n * Abstract class that represents value input components\n */\n@Component({\n  selector: 'ds-value-input',\n  template: '',\n})\nexport abstract class ValueInputComponent<T> {\n  @Input() index: number;\n  /**\n   * Used by the subclasses to emit the value when it's updated\n   */\n  @Output() updateValue: EventEmitter<T> = new EventEmitter<T>();\n}\n","import {\n  NgFor,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  ControlContainer,\n  NgForm,\n} from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { hasValue } from '../../../shared/empty.util';\nimport { ProcessParameter } from '../../processes/process-parameter.model';\nimport { Script } from '../../scripts/script.model';\nimport { ScriptParameter } from '../../scripts/script-parameter.model';\nimport { controlContainerFactory } from '../process-form-factory';\nimport { ParameterSelectComponent } from './parameter-select/parameter-select.component';\n\n/**\n * Component that represents the selected list of parameters for a script\n */\n@Component({\n  selector: 'ds-process-parameters',\n  templateUrl: './process-parameters.component.html',\n  styleUrls: ['./process-parameters.component.scss'],\n  viewProviders: [{\n    provide: ControlContainer,\n    useFactory: controlContainerFactory,\n    deps: [[new Optional(), NgForm]],\n  }],\n  standalone: true,\n  imports: [NgIf, NgFor, ParameterSelectComponent, TranslateModule],\n})\nexport class ProcessParametersComponent implements OnChanges, OnInit {\n  /**\n   * The currently selected script\n   */\n  @Input() script: Script;\n\n  /**\n   * Initial parameters on load\n   */\n  @Input() initialParams: ProcessParameter[];\n  /**\n   * Emits the parameter values when they're updated\n   */\n  @Output() updateParameters: EventEmitter<ProcessParameter[]> = new EventEmitter();\n\n  /**\n   * The current parameter values\n   */\n  parameterValues: ProcessParameter[];\n\n  ngOnInit(): void {\n    if (hasValue(this.initialParams)) {\n      this.parameterValues = this.initialParams;\n    }\n  }\n\n  /**\n   * Makes sure the parameters are reset when the script changes\n   * @param changes\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.script) {\n      this.initParameters();\n    }\n  }\n\n  /**\n   * Empties the parameter values\n   * Initializes the first parameter value\n   */\n  initParameters() {\n    if (hasValue(this.initialParams)) {\n      this.parameterValues = this.initialParams;\n    } else {\n      this.parameterValues = [];\n      this.initializeParameter();\n    }\n  }\n\n  /**\n   * Updates a single parameter value using its new value and index\n   * Adds a new parameter when the last of the parameter values is changed\n   * @param processParameter The new value of the parameter\n   * @param index The index of the parameter\n   */\n  updateParameter(processParameter: ProcessParameter, index: number) {\n    this.parameterValues[index] = processParameter;\n    if (index === this.parameterValues.length - 1) {\n      this.addParameter();\n    }\n    this.updateParameters.emit(this.parameterValues.filter((param: ProcessParameter) => hasValue(param.name)));\n  }\n\n  /**\n   * Removes a parameter value from the list\n   * @param index The index of the parameter to remove\n   */\n  removeParameter(index: number) {\n    this.parameterValues = this.parameterValues.filter((value, i) => i !== index);\n    this.updateParameters.emit(this.parameterValues.filter((param: ProcessParameter) => hasValue(param.name)));\n  }\n\n  /**\n   * Initializes parameter values based on the selected script\n   */\n  initializeParameter() {\n    if (hasValue(this.script)) {\n      this.parameterValues = this.script.parameters\n        .filter((param) => param.mandatory)\n        .map(\n          (parameter: ScriptParameter) => Object.assign(new ProcessParameter(), { name: parameter.name }),\n        );\n    }\n    this.addParameter();\n  }\n\n  /**\n   * Adds an empty parameter value to the end of the list\n   */\n  addParameter() {\n    this.parameterValues = [...this.parameterValues, new ProcessParameter()];\n  }\n}\n","<div class=\"form-group\" *ngIf=\"script?.parameters?.length\" data-testID=\"parameters-select-container\">\n  <label>{{'process.new.select-parameters' | translate}}</label>\n  <ds-parameter-select\n    *ngFor=\"let value of parameterValues; let i = index; let last = last\"\n    [parameters]=\"script.parameters\"\n    [parameterValue]=\"value\"\n    [removable]=\"!last\"\n    [index]=\"i\"\n    (removeParameter)=\"removeParameter(i)\"\n    (changeParameter)=\"updateParameter($event, i)\"></ds-parameter-select>\n</div>\n","import {\n  NgFor,\n  NgSwitch,\n  NgSwitchCase,\n  NgTemplateOutlet,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n} from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { Script } from '../../scripts/script.model';\nimport { ScriptParameterType } from '../../scripts/script-parameter-type.model';\n\n/**\n * Components that represents a help section for the script use and parameters\n */\n@Component({\n  selector: 'ds-script-help',\n  templateUrl: './script-help.component.html',\n  styleUrls: ['./script-help.component.scss'],\n  standalone: true,\n  imports: [NgFor, NgTemplateOutlet, NgSwitch, NgSwitchCase, TranslateModule],\n})\nexport class ScriptHelpComponent {\n  /**\n   * The current script to show the help information for\n   */\n  @Input() script: Script;\n\n  /**\n   * The available script parameter types\n   */\n  parameterTypes = ScriptParameterType;\n}\n","<div class=\"text-secondary\">\n  <h2>{{script?.name}}</h2>\n  <span>{{script?.description}}</span>\n\n  <table class=\"table-borderless mt-3\">\n    <tr *ngFor=\"let param of script?.parameters\">\n      <td class=\"align-top text-nowrap\">{{param.name}} {{param.nameLong}}\n        <ng-container *ngTemplateOutlet=\"type; context: param\"></ng-container>\n      </td>\n      <td>{{param.description}}</td>\n    </tr>\n  </table>\n</div>\n\n<ng-template #type let-type=\"type\">\n    <ng-container [ngSwitch]=\"type\">\n        <span *ngSwitchCase=\"parameterTypes.DATE\"><{{'process.new.parameter.type.value' | translate}}></span>\n        <span *ngSwitchCase=\"parameterTypes.STRING\"><{{'process.new.parameter.type.value' | translate}}></span>\n        <span *ngSwitchCase=\"parameterTypes.OUTPUT\"><{{'process.new.parameter.type.value' | translate}}></span>\n        <span *ngSwitchCase=\"parameterTypes.FILE\"><{{'process.new.parameter.type.file' | translate}}></span>\n    </ng-container>\n</ng-template>\n","import {\n  AsyncPipe,\n  NgFor,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n} from '@angular/core';\nimport {\n  ControlContainer,\n  FormsModule,\n  NgForm,\n} from '@angular/forms';\nimport {\n  ActivatedRoute,\n  Router,\n} from '@angular/router';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport {\n  BehaviorSubject,\n  Subscription,\n} from 'rxjs';\nimport {\n  map,\n  tap,\n} from 'rxjs/operators';\n\nimport { FindListOptions } from '../../../core/data/find-list-options.model';\nimport { PaginatedList } from '../../../core/data/paginated-list.model';\nimport { ScriptDataService } from '../../../core/data/processes/script-data.service';\nimport {\n  getFirstCompletedRemoteData,\n  getRemoteDataPayload,\n} from '../../../core/shared/operators';\nimport { hasValue } from '../../../shared/empty.util';\nimport { ThemedLoadingComponent } from '../../../shared/loading/themed-loading.component';\nimport { Script } from '../../scripts/script.model';\nimport { controlContainerFactory } from '../process-form-factory';\n\nconst SCRIPT_QUERY_PARAMETER = 'script';\n\n/**\n * Component used to select a script\n */\n@Component({\n  selector: 'ds-scripts-select',\n  templateUrl: './scripts-select.component.html',\n  styleUrls: ['./scripts-select.component.scss'],\n  viewProviders: [{ provide: ControlContainer,\n    useFactory: controlContainerFactory,\n    deps: [[new Optional(), NgForm]] }],\n  standalone: true,\n  imports: [NgIf, FormsModule, NgFor, AsyncPipe, TranslateModule, InfiniteScrollModule, ThemedLoadingComponent, NgbDropdownModule],\n})\nexport class ScriptsSelectComponent implements OnInit, OnDestroy {\n  /**\n   * Emits the selected script when the selection changes\n   */\n  @Output() select: EventEmitter<Script> = new EventEmitter<Script>();\n  /**\n   * All available scripts\n   */\n  scripts: Script[] = [];\n\n  private _selectedScript: Script;\n  private subscription: Subscription;\n\n  private _isLastPage = false;\n\n  scriptOptions: FindListOptions = {\n    elementsPerPage: 20,\n    currentPage: 1,\n  };\n\n  isLoading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(\n    private scriptService: ScriptDataService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {\n  }\n\n  /**\n   * Sets all available scripts\n   * Checks if the route contains a script ID and auto selects this scripts\n   */\n  ngOnInit() {\n    this.loadScripts();\n  }\n\n  /**\n   * Load the scripts and check if the route contains a script\n   */\n  loadScripts() {\n    if (this.isLoading$.value) {return;}\n    this.isLoading$.next(true);\n\n    this.subscription = this.scriptService.findAll(this.scriptOptions).pipe(\n      getFirstCompletedRemoteData(),\n      getRemoteDataPayload(),\n      tap((paginatedList: PaginatedList<Script>) => {\n        this._isLastPage = paginatedList?.pageInfo?.currentPage >= paginatedList?.pageInfo?.totalPages;\n      }),\n      map((paginatedList: PaginatedList<Script>) => paginatedList.page),\n    ).subscribe((newScripts: Script[]) => {\n      this.scripts = [...this.scripts, ...newScripts];\n      this.isLoading$.next(false);\n\n      const param = this.route.snapshot.queryParams[SCRIPT_QUERY_PARAMETER];\n      if (hasValue(param)) {\n        this._selectedScript = this.scripts.find((script) => script.id === param);\n        this.select.emit(this._selectedScript);\n      }\n    });\n  }\n\n  /**\n   * Load more scripts when the user scrolls to the bottom of the list\n   * @param event The scroll event\n   */\n  onScroll(event: any) {\n    if (event.target.scrollTop + event.target.clientHeight >= event.target.scrollHeight) {\n      if (!this.isLoading$.value && !this._isLastPage) {\n        this.scriptOptions.currentPage++;\n        this.loadScripts();\n      }\n    }\n  }\n\n  /**\n   * Returns the identifier of the selected script\n   */\n  get selectedScript(): string {\n    return this._selectedScript ? this._selectedScript.id : undefined;\n  }\n\n  /**\n   * Sets the currently selected script by navigating to the correct route using the scripts ID\n   * @param value The identifier of the script\n   */\n  set selectedScript(value: string) {\n    this.router.navigate([],\n      {\n        queryParams: { [SCRIPT_QUERY_PARAMETER]: value },\n      },\n    );\n  }\n\n  selectScript(script: Script) {\n    this._selectedScript = script;\n  }\n\n  onSelect(newScript: Script) {\n    this.selectScript(newScript);\n    // this._selectedScript = newScript;\n    this.select.emit(newScript);\n    this.selectedScript = newScript.name;\n  }\n\n  @Input()\n  set script(value: Script) {\n    this._selectedScript = value;\n  }\n\n  ngOnDestroy(): void {\n    if (hasValue(this.subscription)) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","<div class=\"d-flex w-100 flex-column gap-3\">\n  <div>\n    <div ngbDropdown class=\"d-flex\">\n      <input id=\"process-script\"\n             class=\"form-control\"\n             required\n             [ngModel]=\"selectedScript\"\n             placeholder=\"{{'process.new.select-script.placeholder' | translate}}\"\n             [ngModelOptions]=\"{standalone: true}\"\n             ngbDropdownToggle\n             role=\"combobox\"\n             #script=\"ngModel\">\n      <div ngbDropdownMenu aria-labelledby=\"process-script\" class=\"w-100 scrollable-menu\"\n            role=\"menu\"\n            (scroll)=\"onScroll($event)\"\n            infiniteScroll\n            [infiniteScrollDistance]=\"5\"\n            [infiniteScrollThrottle]=\"300\"\n            [infiniteScrollUpDistance]=\"1.5\"\n            [fromRoot]=\"true\"\n            [scrollWindow]=\"false\">\n            <button class=\"dropdown-item\"\n                    *ngFor=\"let script of scripts\"\n                    role=\"menuitem\"\n                    type=\"button\"\n                    title=\"{{ script.name }}\"\n                    (click)=\"onSelect(script);\">\n              <span class=\"text-truncate\">{{ script.name }}</span>\n            </button>\n          <ng-container *ngIf=\"(isLoading$ | async)\">\n            <button class=\"dropdown-item disabled\" role=\"menuitem\">\n              <ds-loading message=\"{{'loading.default' | translate}}\">\n              </ds-loading>\n            </button>\n          </ng-container>\n      </div>\n    </div>\n  </div>\n  <div>\n    <div *ngIf=\"script.invalid && (script.dirty || script.touched)\"\n         class=\"alert alert-danger validation-error\">\n      <div *ngIf=\"script.errors.required\">\n        {{ 'process.new.select-script.required' | translate }}\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  AsyncPipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {\n  map,\n  switchMap,\n} from 'rxjs/operators';\n\nimport { LinkService } from '../../core/cache/builders/link.service';\nimport { ProcessDataService } from '../../core/data/processes/process-data.service';\nimport { getFirstSucceededRemoteDataPayload } from '../../core/shared/operators';\nimport { followLink } from '../../shared/utils/follow-link-config.model';\nimport { HasValuePipe } from '../../shared/utils/has-value.pipe';\nimport { VarDirective } from '../../shared/utils/var.directive';\nimport { ProcessFormComponent } from '../form/process-form.component';\nimport { Process } from '../processes/process.model';\nimport { Script } from '../scripts/script.model';\n\n/**\n * Component to create a new script\n */\n@Component({\n  selector: 'ds-new-process',\n  templateUrl: './new-process.component.html',\n  styleUrls: ['./new-process.component.scss'],\n  standalone: true,\n  imports: [NgIf, VarDirective, ProcessFormComponent, AsyncPipe, HasValuePipe],\n})\nexport class NewProcessComponent implements OnInit {\n  /**\n   * Emits preselected process if there is one\n   */\n  fromExisting$?: Observable<Process>;\n  /**\n   * Emits preselected script if there is one\n   */\n  script$?: Observable<Script>;\n\n  constructor(private route: ActivatedRoute, private processService: ProcessDataService, private linkService: LinkService) {\n  }\n\n  /**\n   * If there's an id parameter, use this the process with this identifier as presets for the form\n   */\n  ngOnInit() {\n    const id = this.route.snapshot.queryParams.id;\n    if (id) {\n      this.fromExisting$ = this.processService.findById(id).pipe(getFirstSucceededRemoteDataPayload());\n      this.script$ = this.fromExisting$.pipe(\n        map((process: Process) => this.linkService.resolveLink<Process>(process, followLink('script'))),\n        switchMap((process: Process) => process.script),\n        getFirstSucceededRemoteDataPayload(),\n      );\n    }\n  }\n}\n","<ng-container *ngIf=\"fromExisting$ | async | dsHasValue; else newProcess\">\n    <ds-process-form *ngVar=\"fromExisting$ | async as process\" headerKey=\"process.new.header\" [selectedScript]=\"script$ | async\" [parameters]=\"process.parameters\"></ds-process-form>\n</ng-container>\n<ng-template #newProcess>\n    <ds-process-form headerKey=\"process.new.header\"></ds-process-form>\n</ng-template>\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  count,\n  from,\n} from 'rxjs';\nimport {\n  concatMap,\n  filter,\n  tap,\n} from 'rxjs/operators';\n\nimport { ProcessDataService } from '../../core/data/processes/process-data.service';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { getFirstCompletedRemoteData } from '../../core/shared/operators';\nimport { isNotEmpty } from '../../shared/empty.util';\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\nimport { Process } from '../processes/process.model';\n\n@Injectable({\n  providedIn: 'root',\n})\n/**\n * Service to facilitate removing processes in bulk.\n */\nexport class ProcessBulkDeleteService {\n\n  /**\n   * Array to track the processes to be deleted\n   */\n  processesToDelete: string[] = [];\n\n  /**\n   * Behavior subject to track whether the delete is processing\n   * @protected\n   */\n  protected isProcessingBehaviorSubject: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  constructor(\n    protected processDataService: ProcessDataService,\n    protected notificationsService: NotificationsService,\n    protected translateService: TranslateService,\n  ) {\n  }\n\n  /**\n   * Add or remove a process id to/from the list\n   * If the id is already present it will be removed, otherwise it will be added.\n   *\n   * @param processId - The process id to add or remove\n   */\n  toggleDelete(processId: string) {\n    if (this.isToBeDeleted(processId)) {\n      this.processesToDelete.splice(this.processesToDelete.indexOf(processId), 1);\n    } else {\n      this.processesToDelete.push(processId);\n    }\n  }\n\n  /**\n   * Checks if the provided process id is present in the to be deleted list\n   * @param processId\n   */\n  isToBeDeleted(processId: string) {\n    return this.processesToDelete.includes(processId);\n  }\n\n  /**\n   * Clear the list of processes to be deleted\n   */\n  clearAllProcesses() {\n    this.processesToDelete.splice(0);\n  }\n\n  /**\n   * Get the amount of processes selected for deletion\n   */\n  getAmountOfSelectedProcesses() {\n    return this.processesToDelete.length;\n  }\n\n  /**\n   * Returns a behavior subject to indicate whether the bulk delete is processing\n   */\n  isProcessing$() {\n    return this.isProcessingBehaviorSubject;\n  }\n\n  /**\n   * Returns whether there currently are values selected for deletion\n   */\n  hasSelected(): boolean {\n    return isNotEmpty(this.processesToDelete);\n  }\n\n  /**\n   * Delete all selected processes one by one\n   * When the deletion for a process fails, an error notification will be shown with the process id,\n   * but it will continue deleting the other processes.\n   * At the end it will show a notification stating the amount of successful deletes\n   * The successfully deleted processes will be removed from the list of selected values, the failed ones will be retained.\n   */\n  deleteSelectedProcesses() {\n    this.isProcessingBehaviorSubject.next(true);\n\n    from([...this.processesToDelete]).pipe(\n      concatMap((processId) => {\n        return this.processDataService.delete(processId).pipe(\n          getFirstCompletedRemoteData(),\n          tap((rd: RemoteData<Process>) => {\n            if (rd.hasFailed) {\n              this.notificationsService.error(this.translateService.get('process.bulk.delete.error.head'), this.translateService.get('process.bulk.delete.error.body', { processId: processId }));\n            } else {\n              this.toggleDelete(processId);\n            }\n          }),\n        );\n      }),\n      filter((rd: RemoteData<Process>) => rd.hasSucceeded),\n      count(),\n    ).subscribe((value) => {\n      this.notificationsService.success(this.translateService.get('process.bulk.delete.success', { count: value }));\n      this.isProcessingBehaviorSubject.next(false);\n    });\n  }\n}\n","import {\n  AsyncPipe,\n  DatePipe,\n  NgFor,\n  NgIf,\n  NgTemplateOutlet,\n} from '@angular/common';\nimport {\n  Component,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n} from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Subscription } from 'rxjs';\n\nimport { BtnDisabledDirective } from '../../shared/btn-disabled.directive';\nimport { hasValue } from '../../shared/empty.util';\nimport { PaginationComponent } from '../../shared/pagination/pagination.component';\nimport { VarDirective } from '../../shared/utils/var.directive';\nimport { ProcessStatus } from '../processes/process-status.model';\nimport { ProcessBulkDeleteService } from './process-bulk-delete.service';\nimport {\n  ProcessOverviewService,\n  ProcessSortField,\n} from './process-overview.service';\nimport { ProcessOverviewTableComponent } from './table/process-overview-table.component';\n\n@Component({\n  selector: 'ds-process-overview',\n  templateUrl: './process-overview.component.html',\n  standalone: true,\n  imports: [NgIf, RouterLink, PaginationComponent, NgFor, VarDirective, AsyncPipe, DatePipe, TranslateModule, NgTemplateOutlet, ProcessOverviewTableComponent, BtnDisabledDirective],\n})\n/**\n * Component displaying a list of all processes in a paginated table\n */\nexport class ProcessOverviewComponent implements OnInit, OnDestroy {\n\n  // Enums are redeclared here so they can be used in the template\n  protected readonly ProcessStatus = ProcessStatus;\n  protected readonly ProcessSortField = ProcessSortField;\n\n  private modalRef: any;\n\n  isProcessingSub: Subscription;\n\n  constructor(protected processOverviewService: ProcessOverviewService,\n              protected modalService: NgbModal,\n              public processBulkDeleteService: ProcessBulkDeleteService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.processBulkDeleteService.clearAllProcesses();\n  }\n\n  ngOnDestroy(): void {\n    if (hasValue(this.isProcessingSub)) {\n      this.isProcessingSub.unsubscribe();\n    }\n  }\n\n  /**\n   * Open a given modal.\n   * @param content   - the modal content.\n   */\n  openDeleteModal(content: TemplateRef<any>) {\n    this.modalRef = this.modalService.open(content);\n  }\n\n  /**\n   * Close the modal.\n   */\n  closeModal() {\n    this.modalRef.close();\n  }\n\n  /**\n   * Delete the previously selected processes using the processBulkDeleteService\n   * After the deletion has started, subscribe to the isProcessing$ and when it is set\n   * to false after the processing is done, close the modal and reinitialise the processes\n   */\n  deleteSelected() {\n    this.processBulkDeleteService.deleteSelectedProcesses();\n\n    if (hasValue(this.isProcessingSub)) {\n      this.isProcessingSub.unsubscribe();\n    }\n    this.isProcessingSub = this.processBulkDeleteService.isProcessing$()\n      .subscribe((isProcessing) => {\n        if (!isProcessing) {\n          this.closeModal();\n        }\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"d-flex\">\n        <h1 class=\"flex-grow-1\">{{'process.overview.title' | translate}}</h1>\n    </div>\n    <ng-container *ngTemplateOutlet=\"buttons\"></ng-container>\n\n    <div class=\"sections\">\n        <ds-process-overview-table\n                [processStatus]=\"ProcessStatus.RUNNING\"\n                [useAutoRefreshingSearchBy]=\"true\"\n                [getInfoValueMethod]=\"processOverviewService.timeStarted\"/>\n        <ds-process-overview-table\n                [processStatus]=\"ProcessStatus.SCHEDULED\"\n                [useAutoRefreshingSearchBy]=\"true\"\n                [getInfoValueMethod]=\"processOverviewService.timeCreated\"/>\n        <ds-process-overview-table\n                [processStatus]=\"ProcessStatus.COMPLETED\"\n                [sortField]=\"ProcessSortField.endTime\"\n                [useAutoRefreshingSearchBy]=\"true\"\n                [getInfoValueMethod]=\"processOverviewService.timeCompleted\"/>\n        <ds-process-overview-table\n                [processStatus]=\"ProcessStatus.FAILED\"\n                [sortField]=\"ProcessSortField.endTime\"\n                [useAutoRefreshingSearchBy]=\"true\"\n                [getInfoValueMethod]=\"processOverviewService.timeCompleted\"/>\n    </div>\n\n    <ng-container *ngTemplateOutlet=\"buttons\"></ng-container>\n</div>\n\n<ng-template #buttons>\n    <div class=\"d-flex justify-content-end mb-2\">\n        <button *ngIf=\"processBulkDeleteService.hasSelected()\" class=\"btn btn-primary mr-2\"\n                (click)=\"processBulkDeleteService.clearAllProcesses()\"><i\n            class=\"fas fa-undo pr-2\"></i>{{'process.overview.delete.clear' | translate }}\n        </button>\n        <button *ngIf=\"processBulkDeleteService.hasSelected()\" class=\"btn btn-danger mr-2\"\n                (click)=\"openDeleteModal(deleteModal)\"><i\n            class=\"fas fa-trash pr-2\"></i>{{'process.overview.delete' | translate: {count: processBulkDeleteService.getAmountOfSelectedProcesses()} }}\n        </button>\n        <button class=\"btn btn-success\" routerLink=\"/processes/new\"><i\n            class=\"fas fa-plus pr-2\"></i>{{'process.overview.new' | translate}}</button>\n    </div>\n</ng-template>\n\n<ng-template #deleteModal>\n\n    <div>\n\n        <div class=\"modal-header\">\n            <div>\n                <h4>{{'process.overview.delete.header' | translate }}</h4>\n            </div>\n            <button type=\"button\" class=\"close\"\n                    (click)=\"closeModal()\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">×</span>\n            </button>\n        </div>\n\n        <div class=\"modal-body\">\n            <div *ngIf=\"(processBulkDeleteService.isProcessing$() | async) !== true\">{{'process.overview.delete.body' | translate: {count: processBulkDeleteService.getAmountOfSelectedProcesses()} }}</div>\n            <div *ngIf=\"processBulkDeleteService.isProcessing$() |async\" class=\"alert alert-info\">\n                <span class=\"spinner-border spinner-border-sm spinner-button\" role=\"status\" aria-hidden=\"true\"></span>\n                <span> {{ 'process.overview.delete.processing' | translate: {count: processBulkDeleteService.getAmountOfSelectedProcesses()} }}</span>\n            </div>\n            <div class=\"mt-4\">\n                <button class=\"btn btn-primary mr-2\" [dsBtnDisabled]=\"processBulkDeleteService.isProcessing$() |async\"\n                        (click)=\"closeModal()\">{{'process.detail.delete.cancel' | translate}}</button>\n                <button id=\"delete-confirm\" class=\"btn btn-danger\"\n                        [dsBtnDisabled]=\"processBulkDeleteService.isProcessing$() |async\"\n                        (click)=\"deleteSelected()\">{{ 'process.overview.delete' | translate: {count: processBulkDeleteService.getAmountOfSelectedProcesses()}  }}\n                </button>\n            </div>\n        </div>\n    </div>\n\n\n</ng-template>\n","import { DatePipe } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { RequestParam } from '../../core/cache/models/request-param.model';\nimport {\n  SortDirection,\n  SortOptions,\n} from '../../core/cache/models/sort-options.model';\nimport { FindListOptions } from '../../core/data/find-list-options.model';\nimport { PaginatedList } from '../../core/data/paginated-list.model';\nimport { ProcessDataService } from '../../core/data/processes/process-data.service';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { hasValue } from '../../shared/empty.util';\nimport { PaginationComponentOptions } from '../../shared/pagination/pagination-component-options.model';\nimport { Process } from '../processes/process.model';\nimport { ProcessStatus } from '../processes/process-status.model';\n\n/**\n * The sortable fields for processes\n * See [the endpoint documentation]{@link https://github.com/DSpace/RestContract/blob/main/processes-endpoint.md#search-processes-by-property}\n * for details.\n */\nexport enum ProcessSortField {\n  creationTime = 'creationTime',\n  startTime = 'startTime',\n  endTime = 'endTime',\n}\n\n/**\n * Service to manage the processes displayed in the\n * {@Link ProcessOverviewComponent} and the {@Link ProcessOverviewTableComponent}\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProcessOverviewService {\n\n  constructor(protected processDataService: ProcessDataService) {\n  }\n\n  /**\n   * Date format to use for start and end time of processes\n   */\n  dateFormat = 'yyyy-MM-dd HH:mm:ss';\n\n  datePipe = new DatePipe('en-US');\n\n\n  timeCreated = (process: Process) => this.datePipe.transform(process.creationTime, this.dateFormat, 'UTC');\n  timeCompleted = (process: Process) => this.datePipe.transform(process.endTime, this.dateFormat, 'UTC');\n  timeStarted = (process: Process) => this.datePipe.transform(process.startTime, this.dateFormat, 'UTC');\n\n  /**\n   * Retrieve processes by their status\n   * @param processStatus              The status for which to retrieve processes\n   * @param findListOptions            The FindListOptions object\n   * @param autoRefreshingIntervalInMs Optional: The interval by which to automatically refresh the retrieved processes.\n   * Leave empty or set to null to only retrieve the processes once.\n   */\n  getProcessesByProcessStatus(processStatus: ProcessStatus, findListOptions?: FindListOptions, autoRefreshingIntervalInMs: number = null): Observable<RemoteData<PaginatedList<Process>>> {\n    const requestParam = new RequestParam('processStatus', processStatus);\n    const options: FindListOptions = Object.assign(new FindListOptions(), {\n      searchParams: [requestParam],\n      elementsPerPage: 5,\n    }, findListOptions);\n\n    if (hasValue(autoRefreshingIntervalInMs) && autoRefreshingIntervalInMs > 0) {\n      this.processDataService.stopAutoRefreshing(processStatus);\n      return this.processDataService.autoRefreshingSearchBy(processStatus, 'byProperty', options, autoRefreshingIntervalInMs);\n    } else {\n      return this.processDataService.searchBy('byProperty', options);\n    }\n  }\n\n  /**\n   * Stop auto-refreshing the process with the given status\n   * @param processStatus the processStatus of the request to stop automatically refreshing\n   */\n  stopAutoRefreshing(processStatus: ProcessStatus) {\n    this.processDataService.stopAutoRefreshing(processStatus);\n  }\n\n  /**\n   * Map the provided paginationOptions to FindListOptions\n   * @param paginationOptions the PaginationComponentOptions to map\n   * @param sortField the field on which the processes are sorted\n   */\n  getFindListOptions(paginationOptions: PaginationComponentOptions, sortField: ProcessSortField): FindListOptions {\n    const sortOptions = new SortOptions(sortField, SortDirection.DESC);\n    return Object.assign(\n      new FindListOptions(),\n      {\n        currentPage: paginationOptions.currentPage,\n        elementsPerPage: paginationOptions.pageSize,\n        sort: sortOptions,\n      },\n    );\n  }\n\n}\n","import {\n  AsyncPipe,\n  isPlatformBrowser,\n  NgClass,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {\n  Router,\n  RouterLink,\n} from '@angular/router';\nimport { NgbCollapseModule } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  from as observableFrom,\n  mergeMap,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  filter,\n  map,\n  switchMap,\n  take,\n  toArray,\n} from 'rxjs/operators';\nimport { PaginationService } from 'src/app/core/pagination/pagination.service';\n\nimport { AuthService } from '../../../core/auth/auth.service';\nimport { DSONameService } from '../../../core/breadcrumbs/dso-name.service';\nimport { FindListOptions } from '../../../core/data/find-list-options.model';\nimport { PaginatedList } from '../../../core/data/paginated-list.model';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { EPersonDataService } from '../../../core/eperson/eperson-data.service';\nimport { EPerson } from '../../../core/eperson/models/eperson.model';\nimport { RouteService } from '../../../core/services/route.service';\nimport { redirectOn4xx } from '../../../core/shared/authorized.operators';\nimport {\n  getAllCompletedRemoteData,\n  getFirstCompletedRemoteData,\n} from '../../../core/shared/operators';\nimport {\n  hasValue,\n  isNotEmpty,\n} from '../../../shared/empty.util';\nimport { ThemedLoadingComponent } from '../../../shared/loading/themed-loading.component';\nimport { PaginationComponent } from '../../../shared/pagination/pagination.component';\nimport { PaginationComponentOptions } from '../../../shared/pagination/pagination-component-options.model';\nimport { VarDirective } from '../../../shared/utils/var.directive';\nimport { Process } from '../../processes/process.model';\nimport { ProcessStatus } from '../../processes/process-status.model';\nimport { ProcessBulkDeleteService } from '../process-bulk-delete.service';\nimport {\n  ProcessOverviewService,\n  ProcessSortField,\n} from '../process-overview.service';\n\nconst NEW_PROCESS_PARAM = 'new_process_id';\n\n/**\n * An interface to store a process and extra information related to the process\n * that is displayed in the overview table.\n */\nexport interface ProcessOverviewTableEntry {\n  process: Process,\n  user: string,\n  info: string,\n}\n\n@Component({\n  selector: 'ds-process-overview-table',\n  styleUrls: ['./process-overview-table.component.scss'],\n  templateUrl: './process-overview-table.component.html',\n  standalone: true,\n  imports: [\n    NgClass,\n    NgbCollapseModule,\n    AsyncPipe,\n    TranslateModule,\n    PaginationComponent,\n    RouterLink,\n    NgForOf,\n    NgIf,\n    ThemedLoadingComponent,\n    VarDirective,\n  ],\n})\nexport class ProcessOverviewTableComponent implements OnInit, OnDestroy {\n\n  /**\n   * The status of the processes this sections should show\n   */\n  @Input() processStatus: ProcessStatus;\n\n  /**\n   * The field on which the processes in this table are sorted\n   * {@link ProcessSortField.creationTime} by default as every single process has a creation time,\n   * but not every process has a start or end time\n   */\n  @Input() sortField: ProcessSortField = ProcessSortField.creationTime;\n\n  /**\n   * Whether to use auto refresh for the processes shown in this table.\n   */\n  @Input() useAutoRefreshingSearchBy = false;\n\n  /**\n   * The interval by which to refresh if autoRefreshing is enabled\n   */\n  @Input() autoRefreshInterval = 5000;\n\n  /**\n   * The function used to retrieve the value that will be shown in the 'info' column of the table.\n   * {@Link ProcessOverviewService} contains some predefined functions.\n   */\n  @Input() getInfoValueMethod: (process: Process) => string;\n\n  /**\n   * List of processes and their info to be shown in this table\n   */\n  processesRD$: BehaviorSubject<RemoteData<PaginatedList<ProcessOverviewTableEntry>>>;\n\n  /**\n   * The pagination ID for this overview section\n   */\n  paginationId: string;\n\n  /**\n   * The current pagination options for the overview section\n   */\n  paginationOptions$: Observable<PaginationComponentOptions>;\n\n  /**\n   * Whether the table is collapsed\n   */\n  isCollapsed = false;\n\n  /**\n   * The id of the process to highlight\n   */\n  newProcessId: string;\n\n  /**\n   * List of subscriptions\n   */\n  subs: Subscription[] = [];\n\n  constructor(protected processOverviewService: ProcessOverviewService,\n              protected processBulkDeleteService: ProcessBulkDeleteService,\n              public ePersonDataService: EPersonDataService,\n              public dsoNameService: DSONameService,\n              protected paginationService: PaginationService,\n              protected routeService: RouteService,\n              protected router: Router,\n              protected auth: AuthService,\n              private translateService: TranslateService,\n              @Inject(PLATFORM_ID) protected platformId: object,\n  ) {\n  }\n\n  ngOnInit() {\n    // Only auto refresh on browsers\n    if (!isPlatformBrowser(this.platformId)) {\n      this.useAutoRefreshingSearchBy = false;\n    }\n\n    this.routeService.getQueryParameterValue(NEW_PROCESS_PARAM).pipe(take(1)).subscribe((id) => {\n      this.newProcessId = id;\n    });\n\n    // Creates an ID from the first 2 characters of the process status.\n    // Should two process status values ever start with the same substring,\n    // increase the number of characters until the ids are distinct.\n    this.paginationId = this.processStatus.toLowerCase().substring(0, 2);\n\n    const defaultPaginationOptions = Object.assign(new PaginationComponentOptions(), {\n      id: this.paginationId,\n      pageSize: 5,\n    });\n\n    // Get the current pagination from the route\n    this.paginationOptions$ = this.paginationService.getCurrentPagination(this.paginationId, defaultPaginationOptions);\n\n    this.processesRD$ = new BehaviorSubject(undefined);\n\n    // Once we have the pagination, retrieve the processes matching the process type and the pagination\n    //\n    // Reasoning why this monstrosity is the way it is:\n    // To avoid having to recalculate the names of the submitters every time the page reloads, these have to be\n    // retrieved beforehand and stored with the process. This is where the ProcessOverviewTableEntry interface comes in.\n    // By storing the process together with the submitters name and the additional information to be shown in the table,\n    // the template can be as dumb as possible. As the retrieval of the name also is done through an observable, this\n    // complicates the construction of the data a bit though.\n    // The reason why we store these as RemoteData<PaginatedList<ProcessOverviewTableEntry>> and not simply as\n    // ProcessOverviewTableEntry[] is as follows:\n    // When storing the PaginatedList<Process> and ProcessOverviewTableEntry[] separately, there is a small delay\n    // between the update of the paginatedList and the entryArray. This results in the processOverviewPage showing\n    // no processes for a split second every time the processes are updated which in turn causes the different\n    // sections of the page to jump around. By combining these and causing the page to update only once this is avoided.\n    this.subs.push(this.paginationOptions$\n      .pipe(\n        // Map the paginationOptions to findListOptions\n        map((paginationOptions: PaginationComponentOptions) =>\n          this.processOverviewService.getFindListOptions(paginationOptions, this.sortField)),\n        // Use the findListOptions to retrieve the relevant processes every interval\n        switchMap((findListOptions: FindListOptions) =>\n          this.processOverviewService.getProcessesByProcessStatus(\n            this.processStatus, findListOptions, this.useAutoRefreshingSearchBy ? this.autoRefreshInterval : null),\n        ),\n        // Redirect the user when he is logged out\n        redirectOn4xx(this.router, this.auth),\n        getAllCompletedRemoteData(),\n        // Map RemoteData<PaginatedList<Process>> to RemoteData<PaginatedList<ProcessOverviewTableEntry>>\n        switchMap((processesRD: RemoteData<PaginatedList<Process>>) => {\n          // Create observable emitting all processes one by one\n          return observableFrom(processesRD.payload.page).pipe(\n            // Map every Process to ProcessOverviewTableEntry\n            mergeMap((process: Process) => {\n              return this.getEPersonName(process.userId).pipe(\n                map((name) => {\n                  return {\n                    process: process,\n                    user: name,\n                    info: this.getInfoValueMethod(process),\n                  };\n                }),\n              );\n            }),\n            // Collect processOverviewTableEntries into array\n            toArray(),\n            // Create RemoteData<PaginatedList<ProcessOverviewTableEntry>>\n            map((entries: ProcessOverviewTableEntry[]) => {\n              const entriesPL: PaginatedList<ProcessOverviewTableEntry> =\n                Object.assign(new PaginatedList(), processesRD.payload, { page: entries });\n              const entriesRD: RemoteData<PaginatedList<ProcessOverviewTableEntry>> =\n                Object.assign({}, processesRD, { payload: entriesPL });\n              return entriesRD;\n            }),\n          );\n        }),\n      ).subscribe((next: RemoteData<PaginatedList<ProcessOverviewTableEntry>>) => {\n        this.processesRD$.next(next);\n      }));\n\n    // Collapse this section when the number of processes is zero the first time processes are retrieved\n    this.subs.push(this.processesRD$.pipe(\n      filter((processListRd: RemoteData<PaginatedList<ProcessOverviewTableEntry>>) => hasValue(processListRd)),\n      take(1),\n    ).subscribe(\n      (processesRD: RemoteData<PaginatedList<ProcessOverviewTableEntry>>) => {\n        if (!(processesRD.payload.totalElements > 0)) {\n          this.isCollapsed = true;\n        }\n      },\n    ));\n\n  }\n\n  /**\n   * Get the name of an EPerson by ID\n   * @param id  ID of the EPerson\n   */\n  getEPersonName(id: string): Observable<string> {\n    if (isNotEmpty(id)) {\n      return this.ePersonDataService.findById(id).pipe(\n        getFirstCompletedRemoteData(),\n        switchMap((rd: RemoteData<EPerson>) => {\n          if (rd.hasSucceeded) {\n            return [this.dsoNameService.getName(rd.payload)];\n          } else {\n            return this.translateService.get('process.overview.unknown.user');\n          }\n        }),\n      );\n    } else {\n      return this.translateService.get('process.overview.unknown.user');\n    }\n  }\n\n  /**\n   * Get the css class for a row depending on the state of the process\n   * @param process\n   */\n  getRowClass(process: Process): string {\n    if (this.processBulkDeleteService.isToBeDeleted(process.processId)) {\n      return 'table-danger';\n    } else if (this.newProcessId === process.processId) {\n      return 'table-info';\n    } else {\n      return '';\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subs\n      .filter((sub) => hasValue(sub))\n      .forEach((sub) => sub.unsubscribe());\n    this.processOverviewService.stopAutoRefreshing(this.processStatus);\n  }\n\n}\n","<div class=\"mb-4\">\n  <div class=\"d-flex\" (click)=\"collapse.toggle()\" [attr.aria-expanded]=\"!collapse.collapsed\" role=\"button\">\n    <h2 class=\"flex-grow-1\">\n      {{'process.overview.table.' + processStatus.toLowerCase() + '.title' | translate}}\n      <span class=\"badge badge-pill badge-primary badge-nb-processes\"\n            *ngIf=\"(processesRD$ | async) as processesRD\">\n        {{processesRD?.payload?.totalElements}}\n      </span>\n      <span class=\"ml-2 toggle-icon\">\n        <i class=\"fas\" [ngClass]=\"collapse.collapsed ? 'fa-angle-right' : 'fa-angle-down'\"></i>\n      </span>\n    </h2>\n  </div>\n\n  <div ngbCollapse #collapse=\"ngbCollapse\" [ngbCollapse]=\"isCollapsed\">\n\n    <ng-container *ngVar=\"(processesRD$ | async) as processesRD\">\n      <ds-loading *ngIf=\"!processesRD || processesRD.isLoading\"/>\n\n      <ds-pagination *ngIf=\"processesRD?.payload?.totalElements > 0\"\n                     [paginationOptions]=\"(paginationOptions$ | async)\"\n                     [collectionSize]=\"processesRD?.payload?.totalElements\"\n                     [retainScrollPosition]=\"true\"\n                     [hideGear]=\"true\">\n\n        <div class=\"table-responsive mt-1\">\n          <table class=\"table table-striped table-hover\">\n            <thead>\n            <tr>\n              <th scope=\"col\" class=\"id-header\">{{'process.overview.table.id' | translate}}</th>\n              <th scope=\"col\" class=\"name-header\">{{'process.overview.table.name' | translate}}</th>\n              <th scope=\"col\" class=\"user-header\">{{'process.overview.table.user' | translate}}</th>\n              <th scope=\"col\" class=\"info-header\">{{'process.overview.table.' + processStatus.toLowerCase() + '.info' | translate}}</th>\n              <th scope=\"col\" class=\"actions-header\">{{'process.overview.table.actions' | translate}}</th>\n            </tr>\n            </thead>\n\n            <tbody>\n            <tr *ngFor=\"let tableEntry of processesRD?.payload?.page\"\n                [class]=\"getRowClass(tableEntry.process)\">\n              <td><a [routerLink]=\"['/processes/', tableEntry.process.processId]\">{{tableEntry.process.processId}}</a></td>\n              <td><a [routerLink]=\"['/processes/', tableEntry.process.processId]\">{{tableEntry.process.scriptName}}</a></td>\n              <td>{{tableEntry.user}}</td>\n              <td>{{tableEntry.info}}</td>\n              <td>\n                <button [attr.aria-label]=\"'process.overview.delete-process' | translate\"\n                        (click)=\"processBulkDeleteService.toggleDelete(tableEntry.process.processId)\"\n                        class=\"btn btn-outline-danger\">\n                  <i class=\"fas fa-trash\"></i>\n                </button>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n\n      </ds-pagination>\n\n      <div *ngIf=\"processesRD?.payload?.totalElements === 0\">\n        <p>{{'process.overview.table.empty' | translate}}</p>\n      </div>\n    </ng-container>\n\n  </div>\n</div>\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { BreadcrumbConfig } from '../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { ProcessDataService } from '../core/data/processes/process-data.service';\nimport { RemoteData } from '../core/data/remote-data';\nimport { getFirstCompletedRemoteData } from '../core/shared/operators';\nimport { followLink } from '../shared/utils/follow-link-config.model';\nimport { ProcessBreadcrumbsService } from './process-breadcrumbs.service';\nimport { Process } from './processes/process.model';\n\n/**\n * Method for resolving a process based on the parameters in the current route\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param breadcrumbService\n * @param processService\n * @returns Observable<<RemoteData<Process>> Emits the found process based on the parameters in the current route,\n * or an error if something went wrong\n */\nexport const processBreadcrumbResolver: ResolveFn<BreadcrumbConfig<Process>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  breadcrumbService: ProcessBreadcrumbsService = inject(ProcessBreadcrumbsService),\n  processService: ProcessDataService = inject(ProcessDataService),\n): Observable<BreadcrumbConfig<Process>> => {\n  const id = route.params.id;\n\n  return processService.findById(route.params.id, true, false, followLink('script')).pipe(\n    getFirstCompletedRemoteData(),\n    map((object: RemoteData<Process>) => {\n      const fullPath = state.url;\n      const url = fullPath.substring(0, fullPath.indexOf(id)).concat(id);\n      return { provider: breadcrumbService, key: object.payload, url: url };\n    }),\n  );\n};\n","import { Injectable } from '@angular/core';\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs';\n\nimport { Breadcrumb } from '../breadcrumbs/breadcrumb/breadcrumb.model';\nimport { BreadcrumbsProviderService } from '../core/breadcrumbs/breadcrumbsProviderService';\nimport { hasValue } from '../shared/empty.util';\nimport { Process } from './processes/process.model';\n\n/**\n * Service to calculate process breadcrumbs for a single part of the route\n */\n@Injectable({ providedIn: 'root' })\nexport class ProcessBreadcrumbsService implements BreadcrumbsProviderService<Process> {\n\n  /**\n   * Method to calculate the breadcrumbs\n   * @param key The key used to resolve the breadcrumb\n   * @param url The url to use as a link for this breadcrumb\n   */\n  getBreadcrumbs(key: Process, url: string): Observable<Breadcrumb[]> {\n    if (hasValue(key)) {\n      return observableOf([new Breadcrumb(key.processId + ' - ' + key.scriptName, url)]);\n    } else {\n      return observableOf([]);\n    }\n  }\n}\n","import { Route } from '@angular/router';\n\nimport { authenticatedGuard } from '../core/auth/authenticated.guard';\nimport { i18nBreadcrumbResolver } from '../core/breadcrumbs/i18n-breadcrumb.resolver';\nimport { ProcessDetailComponent } from './detail/process-detail.component';\nimport { NewProcessComponent } from './new/new-process.component';\nimport { ProcessOverviewComponent } from './overview/process-overview.component';\nimport { processBreadcrumbResolver } from './process-breadcrumb.resolver';\nimport { processPageResolver } from './process-page.resolver';\n\nexport const ROUTES: Route[] = [\n  {\n    path: '',\n    resolve: { breadcrumb: i18nBreadcrumbResolver },\n    data: { breadcrumbKey: 'process.overview' },\n    canActivate: [authenticatedGuard],\n    children: [\n      {\n        path: '',\n        component: ProcessOverviewComponent,\n        data: { title: 'process.overview.title' },\n      },\n      {\n        path: 'new',\n        component: NewProcessComponent,\n        resolve: { breadcrumb: i18nBreadcrumbResolver },\n        data: { title: 'process.new.title', breadcrumbKey: 'process.new' },\n      },\n      {\n        path: ':id',\n        component: ProcessDetailComponent,\n        resolve: {\n          process: processPageResolver,\n          breadcrumb: processBreadcrumbResolver,\n        },\n      },\n    ],\n  },\n];\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { ProcessDataService } from '../core/data/processes/process-data.service';\nimport { RemoteData } from '../core/data/remote-data';\nimport { getFirstCompletedRemoteData } from '../core/shared/operators';\nimport { followLink } from '../shared/utils/follow-link-config.model';\nimport { Process } from './processes/process.model';\n\nexport const PROCESS_PAGE_FOLLOW_LINKS = [\n  followLink('files'),\n];\n\n/**\n * Method for resolving a process based on the parameters in the current route\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {ProcessDataService} processService\n * @returns Observable<<RemoteData<Process>> Emits the found process based on the parameters in the current route,\n * or an error if something went wrong\n */\nexport const processPageResolver: ResolveFn<RemoteData<Process>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  processService: ProcessDataService = inject(ProcessDataService),\n): Observable<RemoteData<Process>> => {\n  return processService.findById(route.params.id, false, true, ...PROCESS_PAGE_FOLLOW_LINKS).pipe(\n    getFirstCompletedRemoteData(),\n  );\n};\n","/**\n * List of parameter types used for scripts\n */\nexport enum ScriptParameterType {\n  STRING = 'String',\n  DATE = 'date',\n  BOOLEAN = 'boolean',\n  FILE = 'InputStream',\n  OUTPUT = 'OutputStream'\n}\n","import { ScriptParameterType } from './script-parameter-type.model';\n\n/**\n * A parameter that can be used when running a script\n */\nexport class ScriptParameter {\n  /**\n   * The name of the parameter Eg. '-d', '-f' etc.\n   */\n  name: string;\n\n  /**\n   * Short description about the purpose of this parameter\n   */\n  description: string;\n\n  /**\n   * The type of parameter\n   */\n  type: ScriptParameterType;\n\n  /**\n   * The long name for this parameter Eg. '--directory', '--force' etc.\n   */\n  nameLong: string;\n\n  /**\n   * Whether or not this parameter is mandatory\n   */\n  mandatory: boolean;\n}\n","import { Directive } from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: 'input[type=file]',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '(change)': 'onChange($event.target.files)',\n    '(blur)': 'onTouched()',\n  },\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: FileValueAccessorDirective, multi: true },\n  ],\n  standalone: true,\n})\n/**\n * Value accessor directive for inputs of type 'file'\n */\nexport class FileValueAccessorDirective implements ControlValueAccessor {\n  value: any;\n  onChange = (_) => { /* empty */ };\n  onTouched = () => { /* empty */};\n\n  writeValue(value) { /* empty */}\n  registerOnChange(fn: any) { this.onChange = fn; }\n  registerOnTouched(fn: any) { this.onTouched = fn; }\n}\n","import {\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\n\nimport { hasNoValue } from '../empty.util';\n\n/**\n * Returns true if the passed value is null or undefined.\n */\n@Pipe({ standalone: true, name: 'dsHasNoValue' })\nexport class HasNoValuePipe implements PipeTransform {\n  transform(value: any): boolean {\n    return hasNoValue(value);\n  }\n}\n","import {\n  Pipe,\n  PipeTransform,\n} from '@angular/core';\n\nimport { hasValue } from '../empty.util';\n\n/**\n * Returns true if the passed value is not null or undefined.\n */\n@Pipe({ standalone: true, name: 'dsHasValue' })\nexport class HasValuePipe implements PipeTransform {\n  transform(value: any): boolean {\n    return hasValue(value);\n  }\n}\n","import { Directive } from '@angular/core';\nimport {\n  NG_VALIDATORS,\n  UntypedFormControl,\n  Validator,\n} from '@angular/forms';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[requireFile]',\n  providers: [\n    { provide: NG_VALIDATORS, useExisting: FileValidator, multi: true },\n  ],\n  standalone: true,\n})\n/**\n * Validator directive to validate if a file is selected\n */\nexport class FileValidator implements Validator {\n  static validate(c: UntypedFormControl): {[key: string]: any} {\n    return c.value == null || c.value.length === 0 ? { required : true } : null;\n  }\n\n  validate(c: UntypedFormControl): {[key: string]: any} {\n    return FileValidator.validate(c);\n  }\n}\n","import { reduce } from './reduce';\nexport function count(predicate) {\n    return reduce((total, value, i) => (!predicate || predicate(value, i) ? total + 1 : total), 0);\n}\n"],"names":["Breadcrumb","constructor","text","url","inject","hasNoValue","currentPathFromSnapshot","I18nBreadcrumbsService","i18nBreadcrumbResolver","route","state","breadcrumbService","key","data","breadcrumbKey","Error","fullPath","provider","of","observableOf","BREADCRUMB_MESSAGE_POSTFIX","getBreadcrumbs","factory","ɵfac","providedIn","TranslateModule","ProcessDetailFieldComponent","selectors","inputs","title","standalone","features","i0","ɵɵStandaloneFeature","ngContentSelectors","_c0","decls","vars","consts","template","ProcessDetailFieldComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵprojection","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","i1","TranslatePipe","encapsulation","AsyncPipe","DatePipe","isPlatformBrowser","NgFor","NgIf","HttpClient","NgZone","PLATFORM_ID","ActivatedRoute","Router","RouterLink","NgbModal","TranslateService","BehaviorSubject","filter","finalize","find","map","startWith","switchMap","take","tap","AuthService","DSONameService","BitstreamDataService","ProcessDataService","redirectOn4xx","DSpaceObject","getAllSucceededRemoteDataPayload","getFirstCompletedRemoteData","getFirstSucceededRemoteData","getFirstSucceededRemoteDataPayload","URLCombiner","AlertType","hasValue","ThemedFileDownloadLinkComponent","ThemedLoadingComponent","NotificationsService","FileSizePipe","HasNoValuePipe","VarDirective","PROCESS_PAGE_FOLLOW_LINKS","getProcessListRoute","ProcessStatus","ɵɵelement","ɵɵtextInterpolate1","ɵɵtextInterpolate2","argument_r1","name","value","ɵɵtemplate","ProcessDetailComponent_div_0_ds_process_detail_field_11_div_1_Template","ɵɵproperty","process_r2","parameters","file_r3","ctx_r3","getFileName","sizeBytes","ProcessDetailComponent_div_0_div_12_ds_process_detail_field_1_ds_file_download_link_2_Template","files_r5","ProcessDetailComponent_div_0_div_12_ds_process_detail_field_1_Template","length","ɵɵpipeBind3","startTime","dateFormat","endTime","processStatus","ɵɵlistener","ProcessDetailComponent_div_0_ds_process_detail_field_17_button_1_Template_button_click_0_listener","ɵɵrestoreView","_r6","ɵɵnextContext","ɵɵresetView","showProcessOutputLogs","ɵɵpropertyInterpolate","outputLogs$","ProcessDetailComponent_div_0_ds_process_detail_field_17_button_1_Template","ProcessDetailComponent_div_0_ds_process_detail_field_17_ds_loading_2_Template","ProcessDetailComponent_div_0_ds_process_detail_field_17_pre_4_Template","ProcessDetailComponent_div_0_ds_process_detail_field_17_p_6_Template","showOutputLogs","_links","output","href","undefined","retrievingOutputLogs$","tmp_7_0","tmp_8_0","ProcessDetailComponent_div_0_button_23_Template_button_click_0_listener","_r7","deleteModal_r8","ɵɵreference","openDeleteModal","ProcessDetailComponent_div_0_div_6_Template","ProcessDetailComponent_div_0_ds_process_detail_field_11_Template","ProcessDetailComponent_div_0_div_12_Template","ProcessDetailComponent_div_0_ds_process_detail_field_14_Template","ProcessDetailComponent_div_0_ds_process_detail_field_15_Template","ProcessDetailComponent_div_0_ds_process_detail_field_16_Template","ProcessDetailComponent_div_0_ds_process_detail_field_17_Template","ProcessDetailComponent_div_0_button_23_Template","ɵɵpipeBind2","ɵɵpureFunction2","processId","scriptName","isRefreshing$","filesRD$","payload","page","isProcessFinished","ɵɵpureFunction1","_c1","ProcessDetailComponent_ng_template_2_div_0_Template_button_click_6_listener","_r9","closeModal","ProcessDetailComponent_ng_template_2_div_0_Template_button_click_14_listener","ProcessDetailComponent_ng_template_2_div_0_Template_button_click_17_listener","process_r10","ngIf","deleteProcess","ProcessDetailComponent_ng_template_2_div_0_Template","tmp_2_0","processRD$","ProcessDetailComponent","platformId","router","processService","bitstreamDataService","nameService","zone","authService","http","modalService","notificationsService","translateService","AlertTypeEnum","ngOnInit","pipe","autoRefreshingID","snapshot","params","id","autoRefreshUntilCompletion","process","isDeleting","processRD","hasCompletedOrFailed","files","ngOnDestroy","stopAutoRefreshing","bitstream","getName","next","runOutsideAngular","processOutputRD$","findByHref","outputLogFileUrl$","processOutputFileRD","statusCode","run","processOutput","content","getShortlivedToken","token","toString","getTextFile","subscribe","logs","filename","get","responseType","COMPLETED","FAILED","delete","rd","hasSucceeded","success","navigateByUrl","error","modalRef","open","close","ɵɵdirectiveInject","i2","i3","i4","i5","i6","i7","i8","i9","ProcessDetailComponent_Template","ProcessDetailComponent_div_0_Template","ProcessDetailComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","tmp_1_0","controlContainerFactory","controlContainer","FormsModule","ScriptDataService","isEmpty","Process","Script","ProcessParametersComponent","ScriptHelpComponent","ScriptsSelectComponent","ctx_r2","selectedScript","missing_r4","ProcessFormComponent_div_18_li_4_Template","missingParameters","ProcessFormComponent","scriptService","translationService","submitForm","form","validateForm","isRequiredMissing","stringParameters","parameter","checkValue","invoke","sendBack","processParameter","valid","Object","keys","controls","forEach","invalid","markAsDirty","setParams","param","requiredParams","mandatory","rp","includes","push","newProcess","extras","queryParams","new_process_id","navigate","updateScript","$event","generatedProcessName","paramsString","p","parseValue","join","File","headerKey","ProcessFormComponent_Template","ProcessFormComponent_Template_form_ngSubmit_6_listener","_r1","form_r2","ProcessFormComponent_Template_ds_scripts_select_select_8_listener","ProcessFormComponent_Template_ds_process_parameters_updateParameters_9_listener","ProcessFormComponent_ds_script_help_17_Template","ProcessFormComponent_div_18_Template","ɵɵpureFunction0","ɵNgNoValidate","NgControlStatusGroup","NgForm","styles","EventEmitter","Optional","ControlContainer","ProcessParameter","ParameterValueInputComponent","param_r2","nameLong","ParameterSelectComponent_button_9_Template_button_click_0_listener","_r3","removeParameter","emit","parameterValue","ParameterSelectComponent","changeParameter","selectedScriptParameter","selectedParameter","selectedParameterValue","index","removable","outputs","ɵɵProvidersFeature","provide","useFactory","deps","ParameterSelectComponent_Template","ɵɵtwoWayListener","ParameterSelectComponent_Template_select_ngModelChange_1_listener","ɵɵtwoWayBindingSet","ParameterSelectComponent_option_7_Template","ParameterSelectComponent_Template_ds_parameter_value_input_updateValue_8_listener","ParameterSelectComponent_button_9_Template","ParameterSelectComponent_span_10_Template","ɵɵpropertyInterpolate1","ɵɵtwoWayProperty","NgSelectOption","ɵNgSelectMultipleOption","SelectControlValueAccessor","NgControlStatus","NgModel","ValueInputComponent","BooleanValueInputComponent","updateValue","t","ɵɵInheritDefinitionFeature","BooleanValueInputComponent_Template","DateValueInputComponent_div_3_div_1_Template","string_r2","errors","required","DateValueInputComponent","initialValue","setValue","DateValueInputComponent_Template","DateValueInputComponent_Template_input_ngModelChange_0_listener","DateValueInputComponent_div_3_Template","dirty","touched","DefaultValueAccessor","RequiredValidator","FileValueAccessorDirective","FileValidator","FileValueInputComponent_div_8_div_1_Template","file_r2","FileValueInputComponent","setFile","fileObject","FileValueInputComponent_Template","FileValueInputComponent_Template_input_ngModelChange_6_listener","FileValueInputComponent_div_8_Template","NgSwitch","NgSwitchCase","ScriptParameter","ScriptParameterType","StringValueInputComponent","ParameterValueInputComponent_ds_string_value_input_1_Template_ds_string_value_input_updateValue_0_listener","ctx_r1","ParameterValueInputComponent_ds_string_value_input_2_Template_ds_string_value_input_updateValue_0_listener","ParameterValueInputComponent_ds_date_value_input_3_Template_ds_date_value_input_updateValue_0_listener","_r4","ParameterValueInputComponent_ds_file_value_input_4_Template_ds_file_value_input_updateValue_0_listener","_r5","ParameterValueInputComponent_ds_boolean_value_input_5_Template_ds_boolean_value_input_updateValue_0_listener","parameterTypes","ParameterValueInputComponent_Template","ParameterValueInputComponent_ds_string_value_input_1_Template","ParameterValueInputComponent_ds_string_value_input_2_Template","ParameterValueInputComponent_ds_date_value_input_3_Template","ParameterValueInputComponent_ds_file_value_input_4_Template","ParameterValueInputComponent_ds_boolean_value_input_5_Template","type","STRING","OUTPUT","DATE","FILE","BOOLEAN","StringValueInputComponent_div_3_div_1_Template","StringValueInputComponent_Template","StringValueInputComponent_Template_input_ngModelChange_0_listener","StringValueInputComponent_div_3_Template","ValueInputComponent_Template","SimpleChanges","ProcessParametersComponent_div_0_ds_parameter_select_4_Template_ds_parameter_select_removeParameter_0_listener","i_r2","ProcessParametersComponent_div_0_ds_parameter_select_4_Template_ds_parameter_select_changeParameter_0_listener","updateParameter","script","value_r4","last_r5","ProcessParametersComponent_div_0_ds_parameter_select_4_Template","parameterValues","updateParameters","initialParams","ngOnChanges","changes","initParameters","initializeParameter","addParameter","i","assign","ɵɵNgOnChangesFeature","ProcessParametersComponent_Template","ProcessParametersComponent_div_0_Template","NgTemplateOutlet","ɵɵelementContainer","ScriptHelpComponent_tr_6_ng_container_3_Template","param_r1","type_r2","description","ɵɵelementContainerStart","ScriptHelpComponent_ng_template_7_span_1_Template","ScriptHelpComponent_ng_template_7_span_2_Template","ScriptHelpComponent_ng_template_7_span_3_Template","ScriptHelpComponent_ng_template_7_span_4_Template","type_r3","ScriptHelpComponent_Template","ScriptHelpComponent_tr_6_Template","ScriptHelpComponent_ng_template_7_Template","NgbDropdownModule","InfiniteScrollModule","getRemoteDataPayload","ScriptsSelectComponent_button_7_Template_button_click_0_listener","script_r3","_r2","$implicit","onSelect","ScriptsSelectComponent_div_11_div_1_Template","script_r5","SCRIPT_QUERY_PARAMETER","select","scripts","_isLastPage","scriptOptions","elementsPerPage","currentPage","isLoading$","loadScripts","subscription","findAll","paginatedList","pageInfo","totalPages","newScripts","_selectedScript","onScroll","event","target","scrollTop","clientHeight","scrollHeight","selectScript","newScript","unsubscribe","ScriptsSelectComponent_Template","ScriptsSelectComponent_Template_div_scroll_6_listener","ScriptsSelectComponent_button_7_Template","ScriptsSelectComponent_ng_container_8_Template","ScriptsSelectComponent_div_11_Template","InfiniteScrollDirective","NgbDropdown","NgbDropdownToggle","NgbDropdownMenu","LinkService","followLink","HasValuePipe","script$","process_r1","NewProcessComponent_ng_container_0_ds_process_form_1_Template","fromExisting$","NewProcessComponent","linkService","findById","resolveLink","NewProcessComponent_Template","NewProcessComponent_ng_container_0_Template","NewProcessComponent_ng_template_3_Template","newProcess_r3","count","from","concatMap","isNotEmpty","ProcessBulkDeleteService","processDataService","processesToDelete","isProcessingBehaviorSubject","toggleDelete","isToBeDeleted","splice","indexOf","clearAllProcesses","getAmountOfSelectedProcesses","isProcessing$","hasSelected","deleteSelectedProcesses","hasFailed","ɵɵinject","TemplateRef","BtnDisabledDirective","ProcessOverviewService","ProcessSortField","ProcessOverviewTableComponent","ProcessOverviewComponent_ng_template_12_button_1_Template_button_click_0_listener","processBulkDeleteService","ProcessOverviewComponent_ng_template_12_button_2_Template_button_click_0_listener","deleteModal_r4","ProcessOverviewComponent_ng_template_12_button_1_Template","ProcessOverviewComponent_ng_template_12_button_2_Template","ProcessOverviewComponent_ng_template_14_Template_button_click_6_listener","ProcessOverviewComponent_ng_template_14_div_10_Template","ProcessOverviewComponent_ng_template_14_div_12_Template","ProcessOverviewComponent_ng_template_14_Template_button_click_15_listener","ProcessOverviewComponent_ng_template_14_Template_button_click_19_listener","deleteSelected","ProcessOverviewComponent","processOverviewService","isProcessingSub","isProcessing","ProcessOverviewComponent_Template","ProcessOverviewComponent_ng_container_5_Template","ProcessOverviewComponent_ng_container_11_Template","ProcessOverviewComponent_ng_template_12_Template","ProcessOverviewComponent_ng_template_14_Template","buttons_r6","RUNNING","timeStarted","SCHEDULED","timeCreated","timeCompleted","RequestParam","SortDirection","SortOptions","FindListOptions","datePipe","transform","creationTime","getProcessesByProcessStatus","findListOptions","autoRefreshingIntervalInMs","requestParam","options","searchParams","autoRefreshingSearchBy","searchBy","getFindListOptions","paginationOptions","sortField","sortOptions","DESC","pageSize","sort","NgClass","NgForOf","NgbCollapseModule","observableFrom","mergeMap","toArray","PaginationService","PaginatedList","EPersonDataService","RouteService","getAllCompletedRemoteData","PaginationComponent","PaginationComponentOptions","processesRD_r3","totalElements","ProcessOverviewTableComponent_ng_container_11_ds_pagination_2_tr_22_Template_button_click_12_listener","tableEntry_r5","ctx_r5","ɵɵclassMap","getRowClass","user","info","ProcessOverviewTableComponent_ng_container_11_ds_pagination_2_tr_22_Template","paginationOptions$","processesRD_r7","toLowerCase","ProcessOverviewTableComponent_ng_container_11_ds_loading_1_Template","ProcessOverviewTableComponent_ng_container_11_ds_pagination_2_Template","ProcessOverviewTableComponent_ng_container_11_div_3_Template","isLoading","NEW_PROCESS_PARAM","ePersonDataService","dsoNameService","paginationService","routeService","auth","useAutoRefreshingSearchBy","autoRefreshInterval","isCollapsed","subs","getQueryParameterValue","newProcessId","paginationId","substring","defaultPaginationOptions","getCurrentPagination","processesRD$","processesRD","getEPersonName","userId","getInfoValueMethod","entries","entriesPL","entriesRD","processListRd","sub","ProcessOverviewTableComponent_Template","ProcessOverviewTableComponent_Template_div_click_1_listener","collapse_r2","toggle","ProcessOverviewTableComponent_span_5_Template","ProcessOverviewTableComponent_ng_container_11_Template","collapsed","i10","NgbCollapse","ProcessBreadcrumbsService","processBreadcrumbResolver","object","concat","authenticatedGuard","processPageResolver","ROUTES","path","resolve","breadcrumb","canActivate","children","component","NG_VALUE_ACCESSOR","onChange","_","onTouched","writeValue","registerOnChange","fn","registerOnTouched","hostBindings","FileValueAccessorDirective_HostBindings","FileValueAccessorDirective_change_HostBindingHandler","FileValueAccessorDirective_blur_HostBindingHandler","useExisting","multi","pure","NG_VALIDATORS","UntypedFormControl","validate","c","reduce","predicate","total"],"sourceRoot":"webpack:///","x_google_ignoreList":[47]}