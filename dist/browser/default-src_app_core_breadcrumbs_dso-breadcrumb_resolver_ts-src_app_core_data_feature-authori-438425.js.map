{"version":3,"file":"default-src_app_core_breadcrumbs_dso-breadcrumb_resolver_ts-src_app_core_data_feature-authori-438425.js","mappings":"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","sources":["./src/app/core/breadcrumbs/dso-breadcrumb.resolver.ts","./src/app/core/data/feature-authorization/feature-authorization-guard/dso-page-single-feature.guard.ts","./src/app/core/data/feature-authorization/feature-authorization-guard/dso-page-some-feature.guard.ts","./src/app/core/resolving/resolver.actions.ts","./src/app/shared/dso-page/dso-edit-menu-resolver.service.ts","./src/app/shared/dso-page/dso-edit-menu.resolver.ts","./src/app/shared/dso-page/dso-versioning-modal-service/dso-versioning-modal.service.ts"],"sourcesContent":["import {\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { getDSORoute } from '../../app-routing-paths';\nimport { BreadcrumbConfig } from '../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { hasValue } from '../../shared/empty.util';\nimport { FollowLinkConfig } from '../../shared/utils/follow-link-config.model';\nimport { IdentifiableDataService } from '../data/base/identifiable-data.service';\nimport { DSpaceObject } from '../shared/dspace-object.model';\nimport {\n  getFirstCompletedRemoteData,\n  getRemoteDataPayload,\n} from '../shared/operators';\nimport { DSOBreadcrumbsService } from './dso-breadcrumbs.service';\n\n/**\n * Method for resolving a breadcrumb config object\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {DSOBreadcrumbsService} breadcrumbService\n * @param {IdentifiableDataService} dataService\n * @param linksToFollow\n * @returns BreadcrumbConfig object\n */\nexport const DSOBreadcrumbResolver: (route: ActivatedRouteSnapshot, state: RouterStateSnapshot, breadcrumbService: DSOBreadcrumbsService, dataService: IdentifiableDataService<DSpaceObject>, ...linksToFollow: FollowLinkConfig<DSpaceObject>[]) => Observable<BreadcrumbConfig<DSpaceObject>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  breadcrumbService: DSOBreadcrumbsService,\n  dataService: IdentifiableDataService<DSpaceObject>,\n  ...linksToFollow: FollowLinkConfig<DSpaceObject>[]\n): Observable<BreadcrumbConfig<DSpaceObject>> => {\n  return DSOBreadcrumbResolverByUuid(route, state, route.params.id, breadcrumbService, dataService, ...linksToFollow);\n};\n\n/**\n * Method for resolving a breadcrumb config object with the given UUID\n *\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {String} uuid The uuid of the DSO object\n * @param {DSOBreadcrumbsService} breadcrumbService\n * @param {IdentifiableDataService} dataService\n * @param linksToFollow\n * @returns BreadcrumbConfig object\n */\nexport const DSOBreadcrumbResolverByUuid: (route: ActivatedRouteSnapshot, state: RouterStateSnapshot, uuid: string, breadcrumbService: DSOBreadcrumbsService, dataService: IdentifiableDataService<DSpaceObject>, ...linksToFollow: FollowLinkConfig<DSpaceObject>[]) => Observable<BreadcrumbConfig<DSpaceObject>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  uuid: string,\n  breadcrumbService: DSOBreadcrumbsService,\n  dataService: IdentifiableDataService<DSpaceObject>,\n  ...linksToFollow: FollowLinkConfig<DSpaceObject>[]\n): Observable<BreadcrumbConfig<DSpaceObject>> => {\n  return dataService.findById(uuid, true, false, ...linksToFollow).pipe(\n    getFirstCompletedRemoteData(),\n    getRemoteDataPayload(),\n    map((object: DSpaceObject) => {\n      if (hasValue(object)) {\n        return { provider: breadcrumbService, key: object, url: getDSORoute(object) };\n      } else {\n        return undefined;\n      }\n    }),\n  );\n};\n","import {\n  ActivatedRouteSnapshot,\n  CanActivateFn,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DSpaceObject } from '../../../shared/dspace-object.model';\nimport { RemoteData } from '../../remote-data';\nimport { FeatureID } from '../feature-id';\nimport { dsoPageSomeFeatureGuard } from './dso-page-some-feature.guard';\nimport { SingleFeatureGuardParamFn } from './single-feature-authorization.guard';\n\n/**\n * Abstract Guard for preventing unauthorized access to {@link DSpaceObject} pages that require rights for a specific feature\n * This guard utilizes a resolver to retrieve the relevant object to check authorizations for\n */\nexport const dsoPageSingleFeatureGuard = <T extends DSpaceObject> (\n  getResolveFn: () => ResolveFn<RemoteData<T>>,\n  getFeatureID: SingleFeatureGuardParamFn,\n): CanActivateFn => dsoPageSomeFeatureGuard(\n    getResolveFn,\n    (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<FeatureID[]> => getFeatureID(route, state).pipe(\n      map((featureID: FeatureID) => [featureID]),\n    ));\n","import {\n  ActivatedRouteSnapshot,\n  CanActivateFn,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n  hasNoValue,\n  hasValue,\n} from '../../../../shared/empty.util';\nimport { DSpaceObject } from '../../../shared/dspace-object.model';\nimport { getAllSucceededRemoteDataPayload } from '../../../shared/operators';\nimport { RemoteData } from '../../remote-data';\nimport { FeatureID } from '../feature-id';\nimport {\n  someFeatureAuthorizationGuard,\n  SomeFeatureGuardParamFn,\n  StringGuardParamFn,\n} from './some-feature-authorization.guard';\n\nexport declare type DSOGetObjectURlFn = <T extends DSpaceObject>(resolve: ResolveFn<RemoteData<T>>) => StringGuardParamFn;\n\n\n/**\n * Method to resolve resolve (parent) route that contains the UUID of the DSO\n * @param route The current route\n */\nexport const getRouteWithDSOId = (route: ActivatedRouteSnapshot): ActivatedRouteSnapshot => {\n  let routeWithDSOId = route;\n  while (hasNoValue(routeWithDSOId.params.id) && hasValue(routeWithDSOId.parent)) {\n    routeWithDSOId = routeWithDSOId.parent;\n  }\n  return routeWithDSOId;\n};\n\n\n\nexport const defaultDSOGetObjectUrl: DSOGetObjectURlFn = <T extends DSpaceObject>(resolve: ResolveFn<RemoteData<T>>): StringGuardParamFn => {\n  return (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<string> => {\n    const routeWithObjectID = getRouteWithDSOId(route);\n    return (resolve(routeWithObjectID, state) as Observable<RemoteData<T>>).pipe(\n      getAllSucceededRemoteDataPayload(),\n      map((dso) => dso.self),\n    );\n  };\n};\n\n/**\n * Guard for preventing unauthorized access to {@link DSpaceObject} pages that require rights for any specific feature in a list\n * This guard utilizes a resolver to retrieve the relevant object to check authorizations for\n */\nexport const dsoPageSomeFeatureGuard = <T extends DSpaceObject>(\n  getResolveFn: () => ResolveFn<RemoteData<T>>,\n  getFeatureIDs: SomeFeatureGuardParamFn,\n  getObjectUrl: DSOGetObjectURlFn = defaultDSOGetObjectUrl,\n  getEPersonUuid?: StringGuardParamFn,\n): CanActivateFn => someFeatureAuthorizationGuard((route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<FeatureID[]> => getFeatureIDs(route, state), getObjectUrl(getResolveFn()), getEPersonUuid);\n","import { Action } from '@ngrx/store';\n\nimport { type } from '../../shared/ngrx/type';\nimport { DSpaceObject } from '../shared/dspace-object.model';\n\nexport const ResolverActionTypes = {\n  RESOLVED: type('dspace/resolver/RESOLVED'),\n};\n\n/**\n * An action that indicates a route object has been resolved.\n *\n * It isn't used in a reducer for now. Its purpose is to be able to be notified that an object\n * has been resolved in an effect.\n */\nexport class ResolvedAction implements Action {\n  type = ResolverActionTypes.RESOLVED;\n  payload: {\n    url: string,\n    dso: DSpaceObject\n  };\n\n  constructor(url: string, dso: DSpaceObject) {\n    this.payload = { url, dso };\n  }\n}\n\nexport type ResolverAction = ResolvedAction;\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  combineLatest,\n  Observable,\n  of as observableOf,\n} from 'rxjs';\nimport {\n  map,\n  switchMap,\n} from 'rxjs/operators';\n\nimport { getDSORoute } from '../../app-routing-paths';\nimport { DSpaceObjectDataService } from '../../core/data/dspace-object-data.service';\nimport { AuthorizationDataService } from '../../core/data/feature-authorization/authorization-data.service';\nimport { FeatureID } from '../../core/data/feature-authorization/feature-id';\nimport { ResearcherProfileDataService } from '../../core/profile/researcher-profile-data.service';\nimport { Collection } from '../../core/shared/collection.model';\nimport { Community } from '../../core/shared/community.model';\nimport { Item } from '../../core/shared/item.model';\nimport {\n  getFirstCompletedRemoteData,\n  getRemoteDataPayload,\n} from '../../core/shared/operators';\nimport { CorrectionTypeDataService } from '../../core/submission/correctiontype-data.service';\nimport { URLCombiner } from '../../core/url-combiner/url-combiner';\nimport {\n  hasNoValue,\n  hasValue,\n  isNotEmpty,\n} from '../empty.util';\nimport { MenuService } from '../menu/menu.service';\nimport { MenuID } from '../menu/menu-id.model';\nimport { LinkMenuItemModel } from '../menu/menu-item/models/link.model';\nimport { OnClickMenuItemModel } from '../menu/menu-item/models/onclick.model';\nimport { MenuItemType } from '../menu/menu-item-type.model';\nimport { MenuSection } from '../menu/menu-section.model';\nimport { NotificationsService } from '../notifications/notifications.service';\nimport { SubscriptionModalComponent } from '../subscriptions/subscription-modal/subscription-modal.component';\nimport { DsoVersioningModalService } from './dso-versioning-modal-service/dso-versioning-modal.service';\nimport {\n  DsoWithdrawnReinstateModalService,\n  REQUEST_REINSTATE,\n  REQUEST_WITHDRAWN,\n} from './dso-withdrawn-reinstate-service/dso-withdrawn-reinstate-modal.service';\n\n/**\n * Creates the menus for the dspace object pages\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DSOEditMenuResolverService  {\n\n  constructor(\n    protected dSpaceObjectDataService: DSpaceObjectDataService,\n    protected menuService: MenuService,\n    protected authorizationService: AuthorizationDataService,\n    protected modalService: NgbModal,\n    protected dsoVersioningModalService: DsoVersioningModalService,\n    protected researcherProfileService: ResearcherProfileDataService,\n    protected notificationsService: NotificationsService,\n    protected translate: TranslateService,\n    protected dsoWithdrawnReinstateModalService: DsoWithdrawnReinstateModalService,\n    private correctionTypeDataService: CorrectionTypeDataService,\n  ) {\n  }\n\n  /**\n   * Initialise all dspace object related menus\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<{ [key: string]: MenuSection[] }> {\n    let id = route.params.id;\n    if (hasNoValue(id) && hasValue(route.queryParams.scope)) {\n      id = route.queryParams.scope;\n    }\n    if (hasNoValue(id)) {\n      // If there's no ID, we're not on a DSO homepage, so pass on any pre-existing menu route data\n      return observableOf({ ...route.data?.menu });\n    } else {\n      return this.dSpaceObjectDataService.findById(id, true, false).pipe(\n        getFirstCompletedRemoteData(),\n        switchMap((dsoRD) => {\n          if (dsoRD.hasSucceeded) {\n            const dso = dsoRD.payload;\n            return combineLatest(this.getDsoMenus(dso, route, state)).pipe(\n              // Menu sections are retrieved as an array of arrays and flattened into a single array\n              map((combinedMenus) => [].concat.apply([], combinedMenus)),\n              map((menus) => this.addDsoUuidToMenuIDs(menus, dso)),\n              map((menus) => {\n                return {\n                  ...route.data?.menu,\n                  [MenuID.DSO_EDIT]: menus,\n                };\n              }),\n            );\n          } else {\n            return observableOf({ ...route.data?.menu });\n          }\n        }),\n      );\n    }\n  }\n\n  /**\n   * Return all the menus for a dso based on the route and state\n   */\n  getDsoMenus(dso, route, state): Observable<MenuSection[]>[] {\n    return [\n      this.getItemMenu(dso),\n      this.getComColMenu(dso),\n      this.getCommonMenu(dso, state),\n    ];\n  }\n\n  /**\n   * Get the common menus between all dspace objects\n   */\n  protected getCommonMenu(dso, state): Observable<MenuSection[]> {\n    return combineLatest([\n      this.authorizationService.isAuthorized(FeatureID.CanEditMetadata, dso.self),\n    ]).pipe(\n      map(([canEditItem]) => {\n        return [\n          {\n            id: 'edit-dso',\n            active: false,\n            visible: canEditItem,\n            model: {\n              type: MenuItemType.LINK,\n              text: this.getDsoType(dso) + '.page.edit',\n              link: new URLCombiner(getDSORoute(dso), 'edit', 'metadata').toString(),\n            } as LinkMenuItemModel,\n            icon: 'pencil-alt',\n            index: 2,\n          },\n        ];\n      }),\n    );\n  }\n\n  /**\n   * Get item specific menus\n   */\n  protected getItemMenu(dso): Observable<MenuSection[]> {\n    if (dso instanceof Item) {\n      return combineLatest([\n        this.authorizationService.isAuthorized(FeatureID.CanCreateVersion, dso.self),\n        this.dsoVersioningModalService.isNewVersionButtonDisabled(dso),\n        this.dsoVersioningModalService.getVersioningTooltipMessage(dso, 'item.page.version.hasDraft', 'item.page.version.create'),\n        this.authorizationService.isAuthorized(FeatureID.CanSynchronizeWithORCID, dso.self),\n        this.authorizationService.isAuthorized(FeatureID.CanClaimItem, dso.self),\n        this.correctionTypeDataService.findByItem(dso.uuid, true).pipe(\n          getFirstCompletedRemoteData(),\n          getRemoteDataPayload()),\n      ]).pipe(\n        map(([canCreateVersion, disableVersioning, versionTooltip, canSynchronizeWithOrcid, canClaimItem, correction]) => {\n          const isPerson = this.getDsoType(dso) === 'person';\n          return [\n            {\n              id: 'orcid-dso',\n              active: false,\n              visible: isPerson && canSynchronizeWithOrcid,\n              model: {\n                type: MenuItemType.LINK,\n                text: 'item.page.orcid.tooltip',\n                link: new URLCombiner(getDSORoute(dso), 'orcid').toString(),\n              } as LinkMenuItemModel,\n              icon: 'orcid fab fa-lg',\n              index: 0,\n            },\n            {\n              id: 'version-dso',\n              active: false,\n              visible: canCreateVersion,\n              model: {\n                type: MenuItemType.ONCLICK,\n                text: versionTooltip,\n                disabled: disableVersioning,\n                function: () => {\n                  this.dsoVersioningModalService.openCreateVersionModal(dso);\n                },\n              } as OnClickMenuItemModel,\n              icon: 'code-branch',\n              index: 1,\n            },\n            {\n              id: 'claim-dso',\n              active: false,\n              visible: isPerson && canClaimItem,\n              model: {\n                type: MenuItemType.ONCLICK,\n                text: 'item.page.claim.button',\n                function: () => {\n                  this.claimResearcher(dso);\n                },\n              } as OnClickMenuItemModel,\n              icon: 'hand-paper',\n              index: 3,\n            },\n            {\n              id: 'withdrawn-item',\n              active: false,\n              visible: dso.isArchived && correction?.page.some((c) => c.topic === REQUEST_WITHDRAWN),\n              model: {\n                type: MenuItemType.ONCLICK,\n                text:'item.page.withdrawn',\n                function: () => {\n                  this.dsoWithdrawnReinstateModalService.openCreateWithdrawnReinstateModal(dso, 'request-withdrawn', dso.isArchived);\n                },\n              } as OnClickMenuItemModel,\n              icon: 'eye-slash',\n              index: 4,\n            },\n            {\n              id: 'reinstate-item',\n              active: false,\n              visible: dso.isWithdrawn && correction?.page.some((c) => c.topic === REQUEST_REINSTATE),\n              model: {\n                type: MenuItemType.ONCLICK,\n                text:'item.page.reinstate',\n                function: () => {\n                  this.dsoWithdrawnReinstateModalService.openCreateWithdrawnReinstateModal(dso, 'request-reinstate', dso.isArchived);\n                },\n              } as OnClickMenuItemModel,\n              icon: 'eye',\n              index: 5,\n            },\n          ];\n        }),\n      );\n    } else {\n      return observableOf([]);\n    }\n  }\n\n  /**\n   * Get Community/Collection-specific menus\n   */\n  protected getComColMenu(dso): Observable<MenuSection[]> {\n    if (dso instanceof Community || dso instanceof Collection) {\n      return combineLatest([\n        this.authorizationService.isAuthorized(FeatureID.CanSubscribe, dso.self),\n      ]).pipe(\n        map(([canSubscribe]) => {\n          return [\n            {\n              id: 'subscribe',\n              active: false,\n              visible: canSubscribe,\n              model: {\n                type: MenuItemType.ONCLICK,\n                text: 'subscriptions.tooltip',\n                function: () => {\n                  const modalRef = this.modalService.open(SubscriptionModalComponent);\n                  modalRef.componentInstance.dso = dso;\n                },\n              } as OnClickMenuItemModel,\n              icon: 'bell',\n              index: 4,\n            },\n          ];\n        }),\n      );\n    } else {\n      return observableOf([]);\n    }\n  }\n\n  /**\n   * Claim a researcher by creating a profile\n   * Shows notifications and/or hides the menu section on success/error\n   */\n  protected claimResearcher(dso) {\n    this.researcherProfileService.createFromExternalSourceAndReturnRelatedItemId(dso.self)\n      .subscribe((id: string) => {\n        if (isNotEmpty(id)) {\n          this.notificationsService.success(this.translate.get('researcherprofile.success.claim.title'),\n            this.translate.get('researcherprofile.success.claim.body'));\n          this.authorizationService.invalidateAuthorizationsRequestCache();\n          this.menuService.hideMenuSection(MenuID.DSO_EDIT, 'claim-dso-' + dso.uuid);\n        } else {\n          this.notificationsService.error(\n            this.translate.get('researcherprofile.error.claim.title'),\n            this.translate.get('researcherprofile.error.claim.body'));\n        }\n      });\n  }\n\n  /**\n   * Retrieve the dso or entity type for an object to be used in generic messages\n   */\n  protected getDsoType(dso) {\n    const renderType = dso.getRenderTypes()[0];\n    if (typeof renderType === 'string' || renderType instanceof String) {\n      return renderType.toLowerCase();\n    } else {\n      return dso.type.toString().toLowerCase();\n    }\n  }\n\n  /**\n   * Add the dso uuid to all provided menu ids and parent ids\n   */\n  protected addDsoUuidToMenuIDs(menus, dso) {\n    return menus.map((menu) => {\n      Object.assign(menu, {\n        id: menu.id + '-' + dso.uuid,\n      });\n      if (hasValue(menu.parentID)) {\n        Object.assign(menu, {\n          parentID: menu.parentID + '-' + dso.uuid,\n        });\n      }\n      return menu;\n    });\n  }\n\n}\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { MenuSection } from '../menu/menu-section.model';\nimport { DSOEditMenuResolverService } from './dso-edit-menu-resolver.service';\n\n/**\n * Initialise all dspace object related menus\n */\nexport const dsoEditMenuResolver: ResolveFn<{ [key: string]: MenuSection[] }> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  menuResolverService: DSOEditMenuResolverService = inject(DSOEditMenuResolverService),\n): Observable<{ [key: string]: MenuSection[] }> => {\n  return menuResolverService.resolve(route, state);\n};\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  Observable,\n  of,\n} from 'rxjs';\nimport {\n  map,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\n\nimport { ItemDataService } from '../../../core/data/item-data.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { VersionDataService } from '../../../core/data/version-data.service';\nimport { VersionHistoryDataService } from '../../../core/data/version-history-data.service';\nimport { Item } from '../../../core/shared/item.model';\nimport {\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteDataPayload,\n} from '../../../core/shared/operators';\nimport { Version } from '../../../core/shared/version.model';\nimport { WorkspaceItem } from '../../../core/submission/models/workspaceitem.model';\nimport { WorkspaceitemDataService } from '../../../core/submission/workspaceitem-data.service';\nimport { ItemVersionsSharedService } from '../../../item-page/versions/item-versions-shared.service';\nimport { ItemVersionsSummaryModalComponent } from '../../../item-page/versions/item-versions-summary-modal/item-versions-summary-modal.component';\n\n/**\n * Service to take care of all the functionality related to the version creation modal\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DsoVersioningModalService {\n\n\n  constructor(\n    protected modalService: NgbModal,\n    protected versionService: VersionDataService,\n    protected versionHistoryService: VersionHistoryDataService,\n    protected itemVersionShared: ItemVersionsSharedService,\n    protected router: Router,\n    protected workspaceItemDataService: WorkspaceitemDataService,\n    protected itemService: ItemDataService,\n  ) {\n  }\n\n  /**\n   * Open the create version modal for the provided dso\n   */\n  openCreateVersionModal(dso): void {\n\n    const item = dso;\n    const versionHref = item._links.version.href;\n\n    // Open modal\n    const activeModal = this.modalService.open(ItemVersionsSummaryModalComponent);\n\n    // Show current version in modal\n    this.versionService.findByHref(versionHref).pipe(getFirstCompletedRemoteData()).subscribe((res: RemoteData<Version>) => {\n      // if res.hasNoContent then the item is unversioned\n      activeModal.componentInstance.firstVersion = res.hasNoContent;\n      activeModal.componentInstance.versionNumber = (res.hasNoContent ? undefined : res.payload.version);\n    });\n\n    // On createVersionEvent emitted create new version and notify\n    activeModal.componentInstance.createVersionEvent.pipe(\n      switchMap((summary: string) => this.versionHistoryService.createVersion(item._links.self.href, summary)),\n      getFirstCompletedRemoteData(),\n      // close model (should be displaying loading/waiting indicator) when version creation failed/succeeded\n      tap(() => activeModal.close()),\n      // show success/failure notification\n      tap((res: RemoteData<Version>) => {\n        this.itemVersionShared.notifyCreateNewVersion(res);\n      }),\n      // get workspace item\n      getFirstSucceededRemoteDataPayload<Version>(),\n      switchMap((newVersion: Version) => this.itemService.findByHref(newVersion._links.item.href)),\n      getFirstSucceededRemoteDataPayload<Item>(),\n      switchMap((newVersionItem: Item) => this.workspaceItemDataService.findByItem(newVersionItem.uuid, true, false)),\n      getFirstSucceededRemoteDataPayload<WorkspaceItem>(),\n    ).subscribe((wsItem) => {\n      const wsiId = wsItem.id;\n      const route = 'workspaceitems/' + wsiId + '/edit';\n      this.router.navigateByUrl(route);\n    });\n  }\n\n  /**\n   * Checks if the new version button should be disabled for the provided dso\n   */\n  isNewVersionButtonDisabled(dso): Observable<boolean> {\n    return this.versionHistoryService.hasDraftVersion$(dso._links.version.href).pipe(\n      // button is disabled if hasDraftVersion = true, and enabled if hasDraftVersion = false or null\n      // (hasDraftVersion is null when a version history does not exist)\n      map((res) => Boolean(res)),\n    );\n  }\n\n  /**\n   * Checks and returns the tooltip that needs to be used for the create version button tooltip\n   */\n  getVersioningTooltipMessage(dso, tooltipMsgHasDraft, tooltipMsgCreate): Observable<string> {\n    return this.isNewVersionButtonDisabled(dso).pipe(\n      switchMap((hasDraftVersion) => of(hasDraftVersion ? tooltipMsgHasDraft : tooltipMsgCreate)),\n    );\n  }\n}\n"],"names":["map","getDSORoute","hasValue","getFirstCompletedRemoteData","getRemoteDataPayload","DSOBreadcrumbResolver","route","state","breadcrumbService","dataService","linksToFollow","DSOBreadcrumbResolverByUuid","params","id","uuid","findById","pipe","object","provider","key","url","undefined","dsoPageSomeFeatureGuard","dsoPageSingleFeatureGuard","getResolveFn","getFeatureID","featureID","hasNoValue","getAllSucceededRemoteDataPayload","someFeatureAuthorizationGuard","getRouteWithDSOId","routeWithDSOId","parent","defaultDSOGetObjectUrl","resolve","routeWithObjectID","dso","self","getFeatureIDs","getObjectUrl","getEPersonUuid","type","ResolverActionTypes","RESOLVED","ResolvedAction","constructor","payload","NgbModal","TranslateService","combineLatest","of","observableOf","switchMap","DSpaceObjectDataService","AuthorizationDataService","FeatureID","ResearcherProfileDataService","Collection","Community","Item","CorrectionTypeDataService","URLCombiner","isNotEmpty","MenuService","MenuID","MenuItemType","NotificationsService","SubscriptionModalComponent","DsoVersioningModalService","DsoWithdrawnReinstateModalService","REQUEST_REINSTATE","REQUEST_WITHDRAWN","DSOEditMenuResolverService","dSpaceObjectDataService","menuService","authorizationService","modalService","dsoVersioningModalService","researcherProfileService","notificationsService","translate","dsoWithdrawnReinstateModalService","correctionTypeDataService","queryParams","scope","data","menu","dsoRD","hasSucceeded","getDsoMenus","combinedMenus","concat","apply","menus","addDsoUuidToMenuIDs","DSO_EDIT","getItemMenu","getComColMenu","getCommonMenu","isAuthorized","CanEditMetadata","canEditItem","active","visible","model","LINK","text","getDsoType","link","toString","icon","index","CanCreateVersion","isNewVersionButtonDisabled","getVersioningTooltipMessage","CanSynchronizeWithORCID","CanClaimItem","findByItem","canCreateVersion","disableVersioning","versionTooltip","canSynchronizeWithOrcid","canClaimItem","correction","isPerson","ONCLICK","disabled","function","openCreateVersionModal","claimResearcher","isArchived","page","some","c","topic","openCreateWithdrawnReinstateModal","isWithdrawn","CanSubscribe","canSubscribe","modalRef","open","componentInstance","createFromExternalSourceAndReturnRelatedItemId","subscribe","success","get","invalidateAuthorizationsRequestCache","hideMenuSection","error","renderType","getRenderTypes","String","toLowerCase","Object","assign","parentID","i0","ɵɵinject","i1","i2","i3","i4","i5","i6","i7","i8","i9","i10","factory","ɵfac","providedIn","inject","dsoEditMenuResolver","menuResolverService","Router","tap","ItemDataService","VersionDataService","VersionHistoryDataService","getFirstSucceededRemoteDataPayload","WorkspaceitemDataService","ItemVersionsSharedService","ItemVersionsSummaryModalComponent","versionService","versionHistoryService","itemVersionShared","router","workspaceItemDataService","itemService","item","versionHref","_links","version","href","activeModal","findByHref","res","firstVersion","hasNoContent","versionNumber","createVersionEvent","summary","createVersion","close","notifyCreateNewVersion","newVersion","newVersionItem","wsItem","wsiId","navigateByUrl","hasDraftVersion$","Boolean","tooltipMsgHasDraft","tooltipMsgCreate","hasDraftVersion"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}