{"version":3,"file":"src_app_core_submission_submission-cc-license-data_service_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;AAIqF;AAClB;AACF;AAI7B;AAIqB;AACW;;;;;;AAI9D,MAAOM,8BAA+B,SAAQJ,yEAAoC;EAKtFK,YACYC,cAA8B,EAC9BC,UAAkC,EAClCC,WAA+B,EAC/BC,UAA8B;IAExC,KAAK,CAAC,sBAAsB,EAAEH,cAAc,EAAEC,UAAU,EAAEC,WAAW,EAAEC,UAAU,CAAC;IALxE,KAAAH,cAAc,GAAdA,cAAc;IACd,KAAAC,UAAU,GAAVA,UAAU;IACV,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,UAAU,GAAVA,UAAU;IAPZ,KAAAC,QAAQ,GAAG,sBAAsB;IAWzC,IAAI,CAACC,WAAW,GAAG,IAAIV,qEAAe,CAAC,IAAI,CAACS,QAAQ,EAAEJ,cAAc,EAAEC,UAAU,EAAEC,WAAW,EAAEC,UAAU,EAAE,IAAI,CAACG,gBAAgB,CAAC;EACnI;EAEA;;;;;;;;;;;;;;EAcOC,OAAOA,CAACC,OAAyB,EAAEC,2BAAqC,EAAEC,gBAA0B,EAAE,GAAGC,aAAsD;IACpK,OAAO,IAAI,CAACN,WAAW,CAACE,OAAO,CAACC,OAAO,EAAEC,2BAA2B,EAAEC,gBAAgB,EAAE,GAAGC,aAAa,CAAC;EAC3G;;;uBAhCWb,8BAA8B,EAAAc,sDAAA,CAAAE,iEAAA,GAAAF,sDAAA,CAAAG,6FAAA,GAAAH,sDAAA,CAAAI,2EAAA,GAAAJ,sDAAA,CAAAK,4EAAA;IAAA;EAAA;;;aAA9BnB,8BAA8B;MAAAoB,OAAA,EAA9BpB,8BAA8B,CAAAqB,IAAA;MAAAC,UAAA,EADjB;IAAM;EAAA","sources":["./src/app/core/submission/submission-cc-license-data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { FollowLinkConfig } from '../../shared/utils/follow-link-config.model';\nimport { RemoteDataBuildService } from '../cache/builders/remote-data-build.service';\nimport { ObjectCacheService } from '../cache/object-cache.service';\nimport { BaseDataService } from '../data/base/base-data.service';\nimport {\n  FindAllData,\n  FindAllDataImpl,\n} from '../data/base/find-all-data';\nimport { FindListOptions } from '../data/find-list-options.model';\nimport { PaginatedList } from '../data/paginated-list.model';\nimport { RemoteData } from '../data/remote-data';\nimport { RequestService } from '../data/request.service';\nimport { HALEndpointService } from '../shared/hal-endpoint.service';\nimport { SubmissionCcLicence } from './models/submission-cc-license.model';\n\n@Injectable({ providedIn: 'root' })\nexport class SubmissionCcLicenseDataService extends BaseDataService<SubmissionCcLicence> implements FindAllData<SubmissionCcLicence> {\n\n  protected linkPath = 'submissioncclicenses';\n  private findAllData: FindAllData<SubmissionCcLicence>;\n\n  constructor(\n    protected requestService: RequestService,\n    protected rdbService: RemoteDataBuildService,\n    protected objectCache: ObjectCacheService,\n    protected halService: HALEndpointService,\n  ) {\n    super('submissioncclicenses', requestService, rdbService, objectCache, halService);\n\n    this.findAllData = new FindAllDataImpl(this.linkPath, requestService, rdbService, objectCache, halService, this.responseMsToLive);\n  }\n\n  /**\n   * Returns {@link RemoteData} of all object with a list of {@link FollowLinkConfig}, to indicate which embedded\n   * info should be added to the objects\n   *\n   * @param options                     Find list options object\n   * @param useCachedVersionIfAvailable If this is true, the request will only be sent if there's\n   *                                    no valid cached version. Defaults to true\n   * @param reRequestOnStale            Whether or not the request should automatically be re-\n   *                                    requested after the response becomes stale\n   * @param linksToFollow               List of {@link FollowLinkConfig} that indicate which\n   *                                    {@link HALLink}s should be automatically resolved\n   * @return {Observable<RemoteData<PaginatedList<T>>>}\n   *    Return an observable that emits object list\n   */\n  public findAll(options?: FindListOptions, useCachedVersionIfAvailable?: boolean, reRequestOnStale?: boolean, ...linksToFollow: FollowLinkConfig<SubmissionCcLicence>[]): Observable<RemoteData<PaginatedList<SubmissionCcLicence>>> {\n    return this.findAllData.findAll(options, useCachedVersionIfAvailable, reRequestOnStale, ...linksToFollow);\n  }\n}\n"],"names":["RemoteDataBuildService","ObjectCacheService","BaseDataService","FindAllDataImpl","RequestService","HALEndpointService","SubmissionCcLicenseDataService","constructor","requestService","rdbService","objectCache","halService","linkPath","findAllData","responseMsToLive","findAll","options","useCachedVersionIfAvailable","reRequestOnStale","linksToFollow","i0","ɵɵinject","i1","i2","i3","i4","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}