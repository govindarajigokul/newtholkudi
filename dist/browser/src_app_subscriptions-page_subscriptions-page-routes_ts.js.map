{"version":3,"file":"src_app_subscriptions-page_subscriptions-page-routes_ts.js","mappings":"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","sources":["./src/app/shared/subscriptions/subscription-view/subscription-view.component.ts","./src/app/shared/subscriptions/subscription-view/subscription-view.component.html","./src/app/subscriptions-page/subscriptions-page-routes.ts","./src/app/subscriptions-page/subscriptions-page.component.ts","./src/app/subscriptions-page/subscriptions-page.component.html"],"sourcesContent":["import {\n  NgFor,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport {\n  NgbModal,\n  NgbModalRef,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { take } from 'rxjs/operators';\nimport { getDSORoute } from 'src/app/app-routing-paths';\n\nimport { DSONameService } from '../../../core/breadcrumbs/dso-name.service';\nimport { DSpaceObject } from '../../../core/shared/dspace-object.model';\nimport { BtnDisabledDirective } from '../../btn-disabled.directive';\nimport { ConfirmationModalComponent } from '../../confirmation-modal/confirmation-modal.component';\nimport { hasValue } from '../../empty.util';\nimport { ThemedTypeBadgeComponent } from '../../object-collection/shared/badges/type-badge/themed-type-badge.component';\nimport { Subscription } from '../models/subscription.model';\nimport { SubscriptionModalComponent } from '../subscription-modal/subscription-modal.component';\nimport { SubscriptionsDataService } from '../subscriptions-data.service';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: '[ds-subscription-view]',\n  templateUrl: './subscription-view.component.html',\n  styleUrls: ['./subscription-view.component.scss'],\n  standalone: true,\n  imports: [NgIf, ThemedTypeBadgeComponent, RouterLink, NgFor, TranslateModule, BtnDisabledDirective],\n})\n/**\n * Table row representing a subscription that displays all information and action buttons to manage it\n */\nexport class SubscriptionViewComponent {\n\n  /**\n   * Subscription to be rendered\n   */\n  @Input() subscription: Subscription;\n\n  /**\n   * DSpaceObject of the subscription\n   */\n  @Input() dso: DSpaceObject;\n\n  /**\n   * EPerson of the subscription\n   */\n  @Input() eperson: string;\n\n  /**\n   * When an action is made emit a reload event\n   */\n  @Output() reload = new EventEmitter();\n\n  /**\n   * Reference to NgbModal\n   */\n  public modalRef: NgbModalRef;\n\n  constructor(\n    private modalService: NgbModal,\n    private subscriptionService: SubscriptionsDataService,\n    public dsoNameService: DSONameService,\n  ) { }\n\n  /**\n   * Return the route to the dso object page\n   */\n  getPageRoute(dso: DSpaceObject): string {\n    return getDSORoute(dso);\n  }\n\n  /**\n   * Deletes Subscription, show notification on success/failure & updates list\n   * @param subscription Subscription to be deleted\n   */\n  deleteSubscriptionPopup(subscription: Subscription) {\n    if (hasValue(subscription.id)) {\n      const modalRef = this.modalService.open(ConfirmationModalComponent);\n      modalRef.componentInstance.name = this.dsoNameService.getName(this.dso);\n      modalRef.componentInstance.headerLabel = 'confirmation-modal.delete-subscription.header';\n      modalRef.componentInstance.infoLabel = 'confirmation-modal.delete-subscription.info';\n      modalRef.componentInstance.cancelLabel = 'confirmation-modal.delete-subscription.cancel';\n      modalRef.componentInstance.confirmLabel = 'confirmation-modal.delete-subscription.confirm';\n      modalRef.componentInstance.brandColor = 'danger';\n      modalRef.componentInstance.confirmIcon = 'fas fa-trash';\n      modalRef.componentInstance.response.pipe(take(1)).subscribe((confirm: boolean) => {\n        if (confirm) {\n          this.subscriptionService.deleteSubscription(subscription.id).subscribe( (res) => {\n            this.reload.emit();\n          });\n        }\n      });\n    }\n  }\n\n  public openSubscriptionModal() {\n    this.modalRef = this.modalService.open(SubscriptionModalComponent);\n    this.modalRef.componentInstance.dso = this.dso;\n    this.modalRef.componentInstance.subscription = this.subscription;\n    this.modalRef.componentInstance.updateSubscription.pipe(take(1)).subscribe((subscription: Subscription) => {\n      this.subscription = subscription;\n    });\n\n  }\n}\n","<td class=\"dso-info\">\n  <ng-container *ngIf=\"!!dso\">\n    <ds-type-badge [object]=\"dso\"></ds-type-badge>\n    <p><a [routerLink]=\"getPageRoute(dso)\">{{ dsoNameService.getName(dso) }}</a></p>\n  </ng-container>\n  <ng-container *ngIf=\"!dso\">\n    <p class=\"my-0\">{{ 'subscriptions.table.not-available' | translate }}</p>\n    <p class=\"text-muted my-0\">{{ 'subscriptions.table.not-available-message' | translate }}</p>\n  </ng-container>\n</td>\n<td>\n  <span *ngIf=\"!!subscription\" class=\"subscription-type\">{{subscription.subscriptionType}}</span>\n</td>\n<td class=\"subscription-parameters\">\n  <ng-container *ngIf=\"!!subscription\">\n\t\t<span *ngFor=\"let parameterList of subscription.subscriptionParameterList; let i = index\">\n\t\t\t{{ 'subscriptions.frequency.' + parameterList.value | translate}}<span\n      *ngIf=\"i < subscription.subscriptionParameterList.length-1 \">,</span>\n\t\t</span>\n  </ng-container>\n</td>\n<td class=\"subscription-actions\">\n  <div class=\"btn-group edit-field\">\n    <button (click)=\"$event.preventDefault();openSubscriptionModal();\" [dsBtnDisabled]=\"!dso\"\n            [title]=\"'subscriptions.table.edit' | translate\"\n            class=\"btn btn-outline-primary btn-sm access-control-editEPersonButton\">\n      <i class=\"fas fa-edit fa-fw\"></i>\n    </button>\n    <button (click)=\"deleteSubscriptionPopup(subscription)\"\n            [title]=\"'subscriptions.table.delete' | translate\"\n            class=\"btn btn-outline-danger btn-sm access-control-deleteEPersonButton\">\n      <i class=\"fas fa-trash-alt fa-fw\"></i>\n    </button>\n  </div>\n</td>\n","import { Route } from '@angular/router';\n\nimport { SubscriptionsPageComponent } from './subscriptions-page.component';\n\nexport const ROUTES: Route[] = [\n  {\n    path: '',\n    data: {\n      title: 'subscriptions.title',\n    },\n    children: [\n      {\n        path: '',\n        component: SubscriptionsPageComponent,\n      },\n    ],\n  },\n];\n","import {\n  AsyncPipe,\n  NgFor,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  combineLatestWith,\n  Observable,\n  shareReplay,\n  Subscription as rxjsSubscription,\n} from 'rxjs';\nimport {\n  map,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs/operators';\n\nimport { AuthService } from '../core/auth/auth.service';\nimport {\n  buildPaginatedList,\n  PaginatedList,\n} from '../core/data/paginated-list.model';\nimport { RemoteData } from '../core/data/remote-data';\nimport { EPerson } from '../core/eperson/models/eperson.model';\nimport { PaginationService } from '../core/pagination/pagination.service';\nimport { getAllCompletedRemoteData } from '../core/shared/operators';\nimport { PageInfo } from '../core/shared/page-info.model';\nimport { AlertComponent } from '../shared/alert/alert.component';\nimport { AlertType } from '../shared/alert/alert-type';\nimport { hasValue } from '../shared/empty.util';\nimport { ThemedLoadingComponent } from '../shared/loading/themed-loading.component';\nimport { PaginationComponent } from '../shared/pagination/pagination.component';\nimport { PaginationComponentOptions } from '../shared/pagination/pagination-component-options.model';\nimport { Subscription } from '../shared/subscriptions/models/subscription.model';\nimport { SubscriptionViewComponent } from '../shared/subscriptions/subscription-view/subscription-view.component';\nimport { SubscriptionsDataService } from '../shared/subscriptions/subscriptions-data.service';\nimport { VarDirective } from '../shared/utils/var.directive';\n\n@Component({\n  selector: 'ds-subscriptions-page',\n  templateUrl: './subscriptions-page.component.html',\n  styleUrls: ['./subscriptions-page.component.scss'],\n  standalone: true,\n  imports: [NgIf, ThemedLoadingComponent, VarDirective, PaginationComponent, NgFor, SubscriptionViewComponent, AlertComponent, AsyncPipe, TranslateModule],\n})\n/**\n * List and allow to manage all the active subscription for the current user\n */\nexport class SubscriptionsPageComponent implements OnInit, OnDestroy {\n\n  /**\n   * The subscriptions to show on this page, as an Observable list.\n   */\n  subscriptions$: BehaviorSubject<PaginatedList<Subscription>> = new BehaviorSubject(buildPaginatedList<Subscription>(new PageInfo(), []));\n\n  /**\n   * The current pagination configuration for the page\n   */\n  config: PaginationComponentOptions = Object.assign(new PaginationComponentOptions(), {\n    id: 'elp',\n    pageSize: 10,\n    currentPage: 1,\n  });\n\n  /**\n   * A boolean representing if is loading\n   */\n  loading$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  /**\n   * The current eperson id\n   */\n  ePersonId$: Observable<string>;\n\n  /**\n   * The rxjs subscription used to retrieve the result list\n   */\n  sub: rxjsSubscription = null;\n\n  readonly AlertType = AlertType;\n\n  constructor(\n    private paginationService: PaginationService,\n    private authService: AuthService,\n    private subscriptionService: SubscriptionsDataService,\n  ) {\n\n  }\n\n  /**\n   * Retrieve the current eperson id and call method to retrieve the subscriptions\n   */\n  ngOnInit(): void {\n    this.ePersonId$ = this.authService.getAuthenticatedUserFromStore().pipe(\n      take(1),\n      map((ePerson: EPerson) => ePerson.id),\n      shareReplay({ refCount: false }),\n    );\n    this.retrieveSubscriptions();\n  }\n\n  /**\n   * Retrieve subscription list related to the current user.\n   * When page is changed it will request the new subscriptions for the new page config\n   * @private\n   */\n  private retrieveSubscriptions(): void {\n    this.sub = this.paginationService.getCurrentPagination(this.config.id, this.config).pipe(\n      combineLatestWith(this.ePersonId$),\n      tap(() => this.loading$.next(true)),\n      switchMap(([currentPagination, ePersonId]) => this.subscriptionService.findByEPerson(ePersonId,{\n        currentPage: currentPagination.currentPage,\n        elementsPerPage: currentPagination.pageSize,\n      })),\n      getAllCompletedRemoteData(),\n    ).subscribe((res: RemoteData<PaginatedList<Subscription>>) => {\n      if (res.hasSucceeded) {\n        this.subscriptions$.next(res.payload);\n      }\n      this.loading$.next(false);\n    });\n  }\n  /**\n   * When a subscription is deleted refresh the subscription list\n   */\n  refresh(): void {\n    if (hasValue(this.sub)) {\n      this.sub.unsubscribe();\n    }\n\n    this.retrieveSubscriptions();\n  }\n\n  ngOnDestroy(): void {\n    if (hasValue(this.sub)) {\n      this.sub.unsubscribe();\n    }\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12 m-40\">\n      <h1>{{'subscriptions.title' | translate}}</h1>\n      <div class=\"row\">\n        <div class=\"col-md-12 m-40\">\n          <ds-loading *ngIf=\"loading$ | async\"></ds-loading>\n          <ng-container *ngVar=\"(subscriptions$ | async) as subscriptions\">\n\n            <ds-pagination *ngIf=\"subscriptions?.pageInfo?.totalElements > 0 && (loading$ | async) !== true\"\n                           [paginationOptions]=\"config\"\n                           [collectionSize]=\"subscriptions?.pageInfo?.totalElements\"\n                           [hideGear]=\"true\"\n                           [hidePagerWhenSinglePage]=\"true\">\n              <div class=\"table-responsive\">\n                <table id=\"formats\" class=\"table table-striped table-hover\" data-test=\"subscription-table\">\n                  <thead>\n                    <tr>\n                      <th style=\"width: 50%\" scope=\"col\">{{'subscriptions.table.dso' | translate}}</th>\n                      <th scope=\"col\">{{'subscriptions.table.subscription_type' | translate}}</th>\n                      <th scope=\"col\">{{'subscriptions.table.subscription_frequency' | translate}}</th>\n                      <th scope=\"col\">{{'subscriptions.table.action' | translate}}</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr ds-subscription-view *ngFor=\"let subscription of subscriptions?.page\"\n                                             [dso]=\"(subscription?.resource | async)?.payload\"\n                                             [eperson]=\"(subscription?.eperson | async)?.payload?.id\"\n                                             [subscription]=\"subscription\"\n                                             (reload)=\"refresh()\">\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </ds-pagination>\n\n            <ds-alert *ngIf=\"subscriptions?.pageInfo?.totalElements === 0 && (loading$ | async) !== true\" [type]=\"AlertType.Info\" data-test=\"empty-alert\">\n              {{ 'subscriptions.table.empty.message' | translate }}\n            </ds-alert>\n\n          </ng-container>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n"],"names":["NgFor","NgIf","EventEmitter","RouterLink","NgbModal","TranslateModule","take","getDSORoute","DSONameService","DSpaceObject","BtnDisabledDirective","ConfirmationModalComponent","hasValue","ThemedTypeBadgeComponent","Subscription","SubscriptionModalComponent","SubscriptionsDataService","i0","ɵɵelementContainerStart","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","dso","getPageRoute","ɵɵtextInterpolate","dsoNameService","getName","ɵɵpipeBind1","subscription","subscriptionType","ɵɵtemplate","SubscriptionViewComponent_ng_container_6_span_1_span_3_Template","ɵɵtextInterpolate1","parameterList_r2","value","i_r3","subscriptionParameterList","length","SubscriptionViewComponent_ng_container_6_span_1_Template","SubscriptionViewComponent","constructor","modalService","subscriptionService","reload","deleteSubscriptionPopup","id","modalRef","open","componentInstance","name","headerLabel","infoLabel","cancelLabel","confirmLabel","brandColor","confirmIcon","response","pipe","subscribe","confirm","deleteSubscription","res","emit","openSubscriptionModal","updateSubscription","ɵɵdirectiveInject","i1","i2","i3","selectors","inputs","eperson","outputs","standalone","features","ɵɵStandaloneFeature","attrs","_c0","decls","vars","consts","template","SubscriptionViewComponent_Template","rf","ctx","SubscriptionViewComponent_ng_container_1_Template","SubscriptionViewComponent_ng_container_2_Template","SubscriptionViewComponent_span_4_Template","SubscriptionViewComponent_ng_container_6_Template","ɵɵlistener","SubscriptionViewComponent_Template_button_click_9_listener","$event","preventDefault","SubscriptionViewComponent_Template_button_click_12_listener","i4","TranslatePipe","styles","SubscriptionsPageComponent","ROUTES","path","data","title","children","component","AsyncPipe","BehaviorSubject","combineLatestWith","shareReplay","map","switchMap","tap","AuthService","buildPaginatedList","PaginationService","getAllCompletedRemoteData","PageInfo","AlertComponent","AlertType","ThemedLoadingComponent","PaginationComponent","PaginationComponentOptions","VarDirective","SubscriptionsPageComponent_ng_container_10_ds_pagination_1_tr_18_Template_tr_reload_0_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","refresh","tmp_5_0","subscription_r3","resource","payload","tmp_6_0","SubscriptionsPageComponent_ng_container_10_ds_pagination_1_tr_18_Template","config","subscriptions_r4","pageInfo","totalElements","page","Info","SubscriptionsPageComponent_ng_container_10_ds_pagination_1_Template","SubscriptionsPageComponent_ng_container_10_ds_alert_3_Template","loading$","paginationService","authService","subscriptions$","Object","assign","pageSize","currentPage","sub","ngOnInit","ePersonId$","getAuthenticatedUserFromStore","ePerson","refCount","retrieveSubscriptions","getCurrentPagination","next","currentPagination","ePersonId","findByEPerson","elementsPerPage","hasSucceeded","unsubscribe","ngOnDestroy","SubscriptionsPageComponent_Template","SubscriptionsPageComponent_ds_loading_8_Template","SubscriptionsPageComponent_ng_container_10_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}