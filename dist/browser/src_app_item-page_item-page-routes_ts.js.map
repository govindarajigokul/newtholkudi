{"version":3,"file":"src_app_item-page_item-page-routes_ts.js","mappings":"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","sources":["./src/app/core/breadcrumbs/item-breadcrumb.resolver.ts","./src/app/core/orcid/orcid-auth.service.ts","./src/app/item-page/bitstreams/request-a-copy/bitstream-request-a-copy-page.component.ts","./src/app/item-page/bitstreams/request-a-copy/bitstream-request-a-copy-page.component.html","./src/app/item-page/bitstreams/upload/upload-bitstream.component.ts","./src/app/item-page/bitstreams/upload/upload-bitstream.component.html","./src/app/item-page/item-page-routes.ts","./src/app/item-page/item-page.resolver.ts","./src/app/item-page/orcid-page/orcid-auth/orcid-auth.component.ts","./src/app/item-page/orcid-page/orcid-auth/orcid-auth.component.html","./src/app/item-page/orcid-page/orcid-page.component.ts","./src/app/item-page/orcid-page/orcid-page.component.html","./src/app/item-page/orcid-page/orcid-page.guard.ts","./src/app/item-page/orcid-page/orcid-queue/orcid-queue.component.ts","./src/app/item-page/orcid-page/orcid-queue/orcid-queue.component.html","./src/app/item-page/orcid-page/orcid-sync-settings/orcid-sync-settings.component.ts","./src/app/item-page/orcid-page/orcid-sync-settings/orcid-sync-settings.component.html","./src/app/item-page/simple/themed-item-page.component.ts","./src/app/shared/theme-support/themed.component.html","./src/app/item-page/version-page/version-page/version-page.component.ts","./src/app/item-page/version-page/version.resolver.ts","./src/app/shared/input-suggestions/dso-input-suggestions/dso-input-suggestions.component.ts","./src/app/shared/input-suggestions/dso-input-suggestions/dso-input-suggestions.component.html","./src/themes/ lazy ^\\.\\/.*\\/app\\/item\\-page\\/simple\\/item\\-page\\.component$ namespace object"],"sourcesContent":["import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { BreadcrumbConfig } from '../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { getItemPageLinksToFollow } from '../../item-page/item.resolver';\nimport { FollowLinkConfig } from '../../shared/utils/follow-link-config.model';\nimport { ItemDataService } from '../data/item-data.service';\nimport { DSpaceObject } from '../shared/dspace-object.model';\nimport { Item } from '../shared/item.model';\nimport { DSOBreadcrumbResolver } from './dso-breadcrumb.resolver';\nimport { DSOBreadcrumbsService } from './dso-breadcrumbs.service';\n\n/**\n * The resolve function that resolves the BreadcrumbConfig object for an Item\n */\nexport const itemBreadcrumbResolver: ResolveFn<BreadcrumbConfig<Item>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  breadcrumbService: DSOBreadcrumbsService = inject(DSOBreadcrumbsService),\n  dataService: ItemDataService = inject(ItemDataService),\n): Observable<BreadcrumbConfig<Item>> => {\n  const linksToFollow: FollowLinkConfig<DSpaceObject>[] = getItemPageLinksToFollow() as FollowLinkConfig<DSpaceObject>[];\n  return DSOBreadcrumbResolver(\n    route,\n    state,\n    breadcrumbService,\n    dataService,\n    ...linksToFollow,\n  ) as Observable<BreadcrumbConfig<Item>>;\n};\n","import {\n  Inject,\n  Injectable,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  AddOperation,\n  RemoveOperation,\n} from 'fast-json-patch';\nimport {\n  combineLatest,\n  Observable,\n} from 'rxjs';\nimport {\n  map,\n  switchMap,\n} from 'rxjs/operators';\n\nimport { isNotEmpty } from '../../shared/empty.util';\nimport { ConfigurationDataService } from '../data/configuration-data.service';\nimport { RemoteData } from '../data/remote-data';\nimport { ResearcherProfile } from '../profile/model/researcher-profile.model';\nimport { ResearcherProfileDataService } from '../profile/researcher-profile-data.service';\nimport {\n  NativeWindowRef,\n  NativeWindowService,\n} from '../services/window.service';\nimport { ConfigurationProperty } from '../shared/configuration-property.model';\nimport { Item } from '../shared/item.model';\nimport {\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteDataPayload,\n} from '../shared/operators';\nimport { URLCombiner } from '../url-combiner/url-combiner';\n\n@Injectable({ providedIn: 'root' })\nexport class OrcidAuthService {\n\n  constructor(\n    @Inject(NativeWindowService) protected _window: NativeWindowRef,\n    private configurationService: ConfigurationDataService,\n    private researcherProfileService: ResearcherProfileDataService,\n    private router: Router) {\n  }\n\n  /**\n   * Check if the given item is linked to an ORCID profile.\n   *\n   * @param item the item to check\n   * @returns the check result\n   */\n  public isLinkedToOrcid(item: Item): boolean {\n    return item.hasMetadata('dspace.orcid.authenticated');\n  }\n\n  /**\n   * Returns true if only the admin users can disconnect a researcher profile from ORCID.\n   *\n   * @returns the check result\n   */\n  public onlyAdminCanDisconnectProfileFromOrcid(): Observable<boolean> {\n    return this.getOrcidDisconnectionAllowedUsersConfiguration().pipe(\n      map((propertyRD: RemoteData<ConfigurationProperty>) => {\n        return propertyRD.hasSucceeded && propertyRD.payload.values.map((value) => value.toLowerCase()).includes('only_admin');\n      }),\n    );\n  }\n\n  /**\n   * Returns true if the profile's owner can disconnect that profile from ORCID.\n   *\n   * @returns the check result\n   */\n  public ownerCanDisconnectProfileFromOrcid(): Observable<boolean> {\n    return this.getOrcidDisconnectionAllowedUsersConfiguration().pipe(\n      map((propertyRD: RemoteData<ConfigurationProperty>) => {\n        return propertyRD.hasSucceeded && propertyRD.payload.values.map( (value) => value.toLowerCase()).includes('admin_and_owner');\n      }),\n    );\n  }\n\n  /**\n   * Perform a link operation to ORCID profile.\n   *\n   * @param person The person item related to the researcher profile\n   * @param code The auth-code received from orcid\n   */\n  public linkOrcidByItem(person: Item, code: string): Observable<RemoteData<ResearcherProfile>> {\n    const operations: AddOperation<string>[] = [{\n      path: '/orcid',\n      op: 'add',\n      value: code,\n    }];\n\n    return this.researcherProfileService.findById(person.firstMetadata('dspace.object.owner').authority).pipe(\n      getFirstCompletedRemoteData(),\n      switchMap((profileRD) => this.researcherProfileService.patch(profileRD.payload, operations)),\n    );\n  }\n\n  /**\n   * Perform unlink operation from ORCID profile.\n   *\n   * @param person The person item related to the researcher profile\n   */\n  public unlinkOrcidByItem(person: Item): Observable<RemoteData<ResearcherProfile>> {\n    const operations: RemoveOperation[] = [{\n      path:'/orcid',\n      op:'remove',\n    }];\n\n    return this.researcherProfileService.findById(person.firstMetadata('dspace.object.owner').authority).pipe(\n      getFirstCompletedRemoteData(),\n      switchMap((profileRD) => this.researcherProfileService.patch(profileRD.payload, operations)),\n    );\n  }\n\n  /**\n   * Build and return the url to authenticate with orcid\n   *\n   * @param profile\n   */\n  public getOrcidAuthorizeUrl(profile: Item): Observable<string> {\n    return combineLatest([\n      this.configurationService.findByPropertyName('orcid.authorize-url').pipe(getFirstSucceededRemoteDataPayload()),\n      this.configurationService.findByPropertyName('orcid.application-client-id').pipe(getFirstSucceededRemoteDataPayload()),\n      this.configurationService.findByPropertyName('orcid.scope').pipe(getFirstSucceededRemoteDataPayload())],\n    ).pipe(\n      map(([authorizeUrl, clientId, scopes]) => {\n        const redirectUri = new URLCombiner(this._window.nativeWindow.origin, encodeURIComponent(this.router.url.split('?')[0]));\n        return authorizeUrl.values[0] + '?client_id=' + clientId.values[0]   + '&redirect_uri=' + redirectUri + '&response_type=code&scope='\n          + scopes.values.join(' ');\n      }));\n  }\n\n  /**\n   * Return all orcid authorization scopes saved in the given item\n   *\n   * @param item\n   */\n  public getOrcidAuthorizationScopesByItem(item: Item): string[] {\n    return isNotEmpty(item) ? item.allMetadataValues('dspace.orcid.scope') : [];\n  }\n\n  /**\n   * Return all orcid authorization scopes available by configuration\n   */\n  public getOrcidAuthorizationScopes(): Observable<string[]> {\n    return this.configurationService.findByPropertyName('orcid.scope').pipe(\n      getFirstCompletedRemoteData(),\n      map((propertyRD: RemoteData<ConfigurationProperty>) => propertyRD.hasSucceeded ? propertyRD.payload.values : []),\n    );\n  }\n\n  private getOrcidDisconnectionAllowedUsersConfiguration(): Observable<RemoteData<ConfigurationProperty>> {\n    return this.configurationService.findByPropertyName('orcid.disconnection.allowed-users').pipe(\n      getFirstCompletedRemoteData(),\n    );\n  }\n\n}\n","import {\n  AsyncPipe,\n  Location,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  ReactiveFormsModule,\n  UntypedFormBuilder,\n  UntypedFormControl,\n  UntypedFormGroup,\n  Validators,\n} from '@angular/forms';\nimport {\n  ActivatedRoute,\n  Router,\n  RouterLink,\n} from '@angular/router';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  combineLatest as observableCombineLatest,\n  Observable,\n  of as observableOf,\n  Subscription,\n} from 'rxjs';\nimport {\n  filter,\n  map,\n  switchMap,\n  take,\n} from 'rxjs/operators';\n\nimport {\n  getBitstreamDownloadRoute,\n  getForbiddenRoute,\n} from '../../../app-routing-paths';\nimport { AuthService } from '../../../core/auth/auth.service';\nimport { DSONameService } from '../../../core/breadcrumbs/dso-name.service';\nimport { BitstreamDataService } from '../../../core/data/bitstream-data.service';\nimport { AuthorizationDataService } from '../../../core/data/feature-authorization/authorization-data.service';\nimport { FeatureID } from '../../../core/data/feature-authorization/feature-id';\nimport { ItemRequestDataService } from '../../../core/data/item-request-data.service';\nimport { EPerson } from '../../../core/eperson/models/eperson.model';\nimport { Bitstream } from '../../../core/shared/bitstream.model';\nimport { Item } from '../../../core/shared/item.model';\nimport { ItemRequest } from '../../../core/shared/item-request.model';\nimport {\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteDataPayload,\n} from '../../../core/shared/operators';\nimport { BtnDisabledDirective } from '../../../shared/btn-disabled.directive';\nimport {\n  hasValue,\n  isNotEmpty,\n} from '../../../shared/empty.util';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { getItemPageRoute } from '../../item-page-routing-paths';\n\n@Component({\n  selector: 'ds-bitstream-request-a-copy-page',\n  templateUrl: './bitstream-request-a-copy-page.component.html',\n  imports: [\n    TranslateModule,\n    RouterLink,\n    AsyncPipe,\n    ReactiveFormsModule,\n    NgIf,\n    BtnDisabledDirective,\n  ],\n  standalone: true,\n})\n/**\n * Page component for requesting a copy for a bitstream\n */\nexport class BitstreamRequestACopyPageComponent implements OnInit, OnDestroy {\n\n  item$: Observable<Item>;\n\n  canDownload$: Observable<boolean>;\n  private subs: Subscription[] = [];\n  requestCopyForm: UntypedFormGroup;\n\n  item: Item;\n  itemName: string;\n\n  bitstream$: Observable<Bitstream>;\n  bitstream: Bitstream;\n  bitstreamName: string;\n\n  constructor(private location: Location,\n              private translateService: TranslateService,\n              private route: ActivatedRoute,\n              protected router: Router,\n              private authorizationService: AuthorizationDataService,\n              private auth: AuthService,\n              private formBuilder: UntypedFormBuilder,\n              private itemRequestDataService: ItemRequestDataService,\n              private notificationsService: NotificationsService,\n              private dsoNameService: DSONameService,\n              private bitstreamService: BitstreamDataService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.requestCopyForm = this.formBuilder.group({\n      name: new UntypedFormControl('', {\n        validators: [Validators.required],\n      }),\n      email: new UntypedFormControl('', {\n        validators: [Validators.required,\n          Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$')],\n      }),\n      allfiles: new UntypedFormControl(''),\n      message: new UntypedFormControl(''),\n    });\n\n\n    this.item$ = this.route.data.pipe(\n      map((data) => data.dso),\n      getFirstSucceededRemoteDataPayload(),\n    );\n\n    this.subs.push(this.item$.subscribe((item) => {\n      this.item = item;\n      this.itemName = this.dsoNameService.getName(item);\n    }));\n\n    this.bitstream$ = this.route.queryParams.pipe(\n      filter((params) => hasValue(params) && hasValue(params.bitstream)),\n      switchMap((params) => this.bitstreamService.findById(params.bitstream)),\n      getFirstSucceededRemoteDataPayload(),\n    );\n\n    this.subs.push(this.bitstream$.subscribe((bitstream) => {\n      this.bitstream = bitstream;\n      this.bitstreamName = this.dsoNameService.getName(bitstream);\n    }));\n\n    this.canDownload$ = this.bitstream$.pipe(\n      switchMap((bitstream) => this.authorizationService.isAuthorized(FeatureID.CanDownload, isNotEmpty(bitstream) ? bitstream.self : undefined)),\n    );\n    const canRequestCopy$ = this.bitstream$.pipe(\n      switchMap((bitstream) => this.authorizationService.isAuthorized(FeatureID.CanRequestACopy, isNotEmpty(bitstream) ? bitstream.self : undefined)),\n    );\n\n    this.subs.push(observableCombineLatest([this.canDownload$, canRequestCopy$]).subscribe(([canDownload, canRequestCopy]) => {\n      if (!canDownload && !canRequestCopy) {\n        this.router.navigateByUrl(getForbiddenRoute(), { skipLocationChange: true });\n      }\n    }));\n    this.initValues();\n  }\n\n  get name() {\n    return this.requestCopyForm.get('name');\n  }\n\n  get email() {\n    return this.requestCopyForm.get('email');\n  }\n\n  get message() {\n    return this.requestCopyForm.get('message');\n  }\n\n  get allfiles() {\n    return this.requestCopyForm.get('allfiles');\n  }\n\n  /**\n   * Initialise the form values based on the current user.\n   */\n  private initValues() {\n    this.getCurrentUser().pipe(take(1)).subscribe((user) => {\n      this.requestCopyForm.patchValue({ allfiles: 'true' });\n      if (hasValue(user)) {\n        this.requestCopyForm.patchValue({ name: user.name, email: user.email });\n      }\n    });\n    this.bitstream$.pipe(take(1)).subscribe((bitstream) => {\n      this.requestCopyForm.patchValue({ allfiles: 'false' });\n    });\n  }\n\n  /**\n   * Retrieve the current user\n   */\n  private getCurrentUser(): Observable<EPerson> {\n    return this.auth.isAuthenticated().pipe(\n      switchMap((authenticated) => {\n        if (authenticated) {\n          return this.auth.getAuthenticatedUserFromStore();\n        } else {\n          return observableOf(undefined);\n        }\n      }),\n    );\n\n  }\n\n  /**\n   * Submit the the form values as an item request to the server.\n   * When the submission is successful, the user will be redirected to the item page and a success notification will be shown.\n   * When the submission fails, the user will stay on the page and an error notification will be shown\n   */\n  onSubmit() {\n    const itemRequest = new ItemRequest();\n    if (hasValue(this.bitstream)) {\n      itemRequest.bitstreamId = this.bitstream.uuid;\n    }\n    itemRequest.itemId = this.item.uuid;\n    itemRequest.allfiles = this.allfiles.value;\n    itemRequest.requestEmail = this.email.value;\n    itemRequest.requestName = this.name.value;\n    itemRequest.requestMessage = this.message.value;\n\n    this.itemRequestDataService.requestACopy(itemRequest).pipe(\n      getFirstCompletedRemoteData(),\n    ).subscribe((rd) => {\n      if (rd.hasSucceeded) {\n        this.notificationsService.success(this.translateService.get('bitstream-request-a-copy.submit.success'));\n        this.navigateBack();\n      } else {\n        this.notificationsService.error(this.translateService.get('bitstream-request-a-copy.submit.error'));\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (hasValue(this.subs)) {\n      this.subs.forEach((sub) => {\n        if (hasValue(sub)) {\n          sub.unsubscribe();\n        }\n      });\n    }\n  }\n\n  /**\n   * Navigates back to the user's previous location\n   */\n  navigateBack() {\n    this.location.back();\n  }\n\n  getItemPath() {\n    return [getItemPageRoute(this.item)];\n  }\n\n  /**\n   * Retrieves the link to the bistream download page\n   */\n  getBitstreamLink() {\n    return [getBitstreamDownloadRoute(this.bitstream)];\n  }\n}\n","<div class=\"container\">\n    <h1 class=\"mb-4\">{{'bitstream-request-a-copy.header' | translate}}</h1>\n    <div *ngIf=\"canDownload$|async\" class=\"alert alert-success\">\n        <span>{{'bitstream-request-a-copy.alert.canDownload1' | translate}}</span>\n        <a [routerLink]=\"getBitstreamLink()\">{{'bitstream-request-a-copy.alert.canDownload2'| translate}}</a>\n    </div>\n    <div>\n        <p>{{'bitstream-request-a-copy.intro' | translate}} <a [routerLink]=\"getItemPath()\">{{itemName}}</a></p>\n        <p *ngIf=\"bitstream !== undefined && allfiles.value === 'false'\">{{'bitstream-request-a-copy.intro.bitstream.one' | translate}} {{bitstreamName}}</p>\n        <p *ngIf=\"allfiles.value === 'true'\">{{'bitstream-request-a-copy.intro.bitstream.all' | translate}}</p>\n    </div>\n    <form [class]=\"'ng-invalid'\" [formGroup]=\"requestCopyForm\" (ngSubmit)=\"onSubmit()\">\n\n        <div class=\"form-group\">\n            <div class=\"row mb-4\">\n                <div class=\"col-12\">\n                    <label for=\"name\">{{'bitstream-request-a-copy.name.label' | translate}}</label>\n                    <input [className]=\"(name.invalid) && (name.dirty || name.touched) ? 'form-control is-invalid' :'form-control'\"\n                           type=\"text\" id=\"name\" formControlName=\"name\"/>\n                    <div *ngIf=\"name.invalid && (name.dirty || name.touched)\"\n                         class=\"invalid-feedback show-feedback\">\n                    <span *ngIf=\"name.errors && name.errors.required\">\n                        {{ 'bitstream-request-a-copy.name.error' | translate }}\n                    </span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row mb-4\">\n                <div class=\"col-12\">\n                    <label\n                            for=\"email\">{{'bitstream-request-a-copy.email.label' | translate}}</label>\n                    <input\n                            [className]=\"(email.invalid) && (email.dirty || email.touched) ? 'form-control is-invalid' :'form-control'\"\n                            id=\"email\" formControlName=\"email\">\n                    <div *ngIf=\"email.invalid && (email.dirty || email.touched)\"\n                         class=\"invalid-feedback show-feedback\">\n                    <span *ngIf=\"email.errors\">\n                        {{ 'bitstream-request-a-copy.email.error' | translate }}\n                    </span>\n                    </div>\n                    <small class=\"text-muted ds-hint\">{{'bitstream-request-a-copy.email.hint' |translate}}</small>\n                </div>\n            </div>\n            <div class=\"row mb-4\">\n                <div class=\"col-12\">\n                    <div>{{'bitstream-request-a-copy.allfiles.label' |translate}}</div>\n                    <div class=\"ml-4\">\n                        <input [className]=\"'form-check-input'\" type=\"radio\"\n                               id=\"allfiles-true\" formControlName=\"allfiles\" value=\"true\">\n                        <label class=\"form-check-label\"\n                               for=\"allfiles-true\">{{'bitstream-request-a-copy.files-all-true.label' | translate}}</label>\n                    </div>\n                    <div class=\"ml-4\">\n                        <input [className]=\"'form-check-input'\" type=\"radio\"\n                               id=\"allfiles-false\" formControlName=\"allfiles\" value=\"false\" [attr.disabled]=\"bitstream === undefined ? true : null \">\n                        <label class=\"form-check-label\"\n                               for=\"allfiles-false\">{{'bitstream-request-a-copy.files-all-false.label' | translate}}</label>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row mb-4\">\n                <div class=\"col-12\">\n                    <label\n                            for=\"message\">{{'bitstream-request-a-copy.message.label' | translate}}</label>\n                    <textarea rows=\"5\"\n                              [className]=\"'form-control'\"\n                              id=\"message\" formControlName=\"message\"></textarea>\n                </div>\n            </div>\n        </div>\n    </form>\n\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-12 text-right\">\n\n            <a (click)=\"navigateBack()\" role=\"button\" class=\"btn btn-outline-secondary mr-1\">\n                <i class=\"fas fa-arrow-left\"></i> {{'bitstream-request-a-copy.return' | translate}}\n            </a>\n\n            <button\n                    [dsBtnDisabled]=\"requestCopyForm.invalid\"\n                    class=\"btn btn-default btn-primary\"\n                    (click)=\"onSubmit()\">{{'bitstream-request-a-copy.submit' | translate}}</button>\n        </div>\n    </div>\n</div>\n","import {\n  AsyncPipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n  ActivatedRoute,\n  Router,\n} from '@angular/router';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  Observable,\n  of as observableOf,\n  Subscription,\n} from 'rxjs';\nimport {\n  map,\n  switchMap,\n  take,\n} from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { getBitstreamModuleRoute } from '../../../app-routing-paths';\nimport { AuthService } from '../../../core/auth/auth.service';\nimport { DSONameService } from '../../../core/breadcrumbs/dso-name.service';\nimport { BundleDataService } from '../../../core/data/bundle-data.service';\nimport { ItemDataService } from '../../../core/data/item-data.service';\nimport { PaginatedList } from '../../../core/data/paginated-list.model';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { RequestService } from '../../../core/data/request.service';\nimport { Bundle } from '../../../core/shared/bundle.model';\nimport { Item } from '../../../core/shared/item.model';\nimport {\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteDataPayload,\n} from '../../../core/shared/operators';\nimport {\n  hasValue,\n  isEmpty,\n  isNotEmpty,\n} from '../../../shared/empty.util';\nimport { DsoInputSuggestionsComponent } from '../../../shared/input-suggestions/dso-input-suggestions/dso-input-suggestions.component';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { UploaderComponent } from '../../../shared/upload/uploader/uploader.component';\nimport { UploaderOptions } from '../../../shared/upload/uploader/uploader-options.model';\nimport { VarDirective } from '../../../shared/utils/var.directive';\nimport { getEntityEditRoute } from '../../item-page-routing-paths';\n\n@Component({\n  selector: 'ds-upload-bitstream',\n  templateUrl: './upload-bitstream.component.html',\n  imports: [\n    TranslateModule,\n    AsyncPipe,\n    VarDirective,\n    NgIf,\n    DsoInputSuggestionsComponent,\n    FormsModule,\n    UploaderComponent,\n  ],\n  standalone: true,\n})\n/**\n * Page component for uploading a bitstream to an item\n */\nexport class UploadBitstreamComponent implements OnInit, OnDestroy {\n  /**\n   * The file uploader component\n   */\n  @ViewChild(UploaderComponent) uploaderComponent: UploaderComponent;\n\n  /**\n   * The ID of the item to upload a bitstream to\n   */\n  itemId: string;\n\n  /**\n   * The entity type of the item\n   * This is fetched from the current URL and will determine the item's page route\n   */\n  entityType: string;\n\n  /**\n   * The item to upload a bitstream to\n   */\n  itemRD$: Observable<RemoteData<Item>>;\n\n  /**\n   * The item's bundles and default the default bundles that should be suggested (defined in environment)\n   */\n  bundles: Bundle[] = [];\n\n  /**\n   * The ID of the currently selected bundle to upload a bitstream to\n   */\n  selectedBundleId: string;\n\n  /**\n   * The name of the currently selected bundle to upload a bitstream to\n   */\n  selectedBundleName: string;\n\n  /**\n   * The uploader configuration options\n   * @type {UploaderOptions}\n   */\n  uploadFilesOptions: UploaderOptions = Object.assign(new UploaderOptions(), {\n    // URL needs to contain something to not produce any errors. This will be replaced once a bundle has been selected.\n    url: 'placeholder',\n    authToken: null,\n    disableMultipart: false,\n    itemAlias: null,\n  });\n\n  /**\n   * The prefix for all i18n notification messages within this component\n   */\n  NOTIFICATIONS_PREFIX = 'item.bitstreams.upload.notifications.';\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  subs: Subscription[] = [];\n\n  constructor(protected route: ActivatedRoute,\n              protected router: Router,\n              protected itemService: ItemDataService,\n              protected bundleService: BundleDataService,\n              protected authService: AuthService,\n              protected notificationsService: NotificationsService,\n              protected translate: TranslateService,\n              protected requestService: RequestService,\n              public dsoNameService: DSONameService,\n  ) {\n  }\n\n  /**\n   * Initialize component properties:\n   * itemRD$          Fetched from the current route data (populated by bitstreamPageResolver)\n   * selectedBundleId Starts off by checking if the route's queryParams contain a \"bundle\" parameter. If none is found,\n   *                  the ID of the first bundle in the list is selected.\n   * Calls setUploadUrl after setting the selected bundle\n   */\n  ngOnInit(): void {\n    this.itemId = this.route.snapshot.params.id;\n    this.entityType = this.route.snapshot.params['entity-type'];\n    this.itemRD$ = this.route.data.pipe(map((data) => data.dso));\n    const bundlesRD$ = this.itemService.getBundles(this.itemId).pipe(\n      getFirstCompletedRemoteData(),\n      switchMap((remoteData: RemoteData<PaginatedList<Bundle>>) => {\n        if (remoteData.hasSucceeded) {\n          if (remoteData.payload.page) {\n            this.bundles = remoteData.payload.page;\n            for (const defaultBundle of environment.bundle.standardBundles) {\n              let check = true;\n              remoteData.payload.page.forEach((bundle: Bundle) => {\n                // noinspection JSDeprecatedSymbols\n                if (defaultBundle === bundle.name) {\n                  check = false;\n                }\n              });\n              if (check) {\n                this.bundles.push(Object.assign(new Bundle(), {\n                  _name: defaultBundle,\n                  type: 'bundle',\n                }));\n              }\n            }\n          } else {\n            this.bundles = environment.bundle.standardBundles.map((defaultBundle: string) => Object.assign(new Bundle(), {\n              _name: defaultBundle,\n              type: 'bundle',\n            }),\n            );\n          }\n          return observableOf(remoteData.payload.page);\n        }\n      }));\n    this.selectedBundleId = this.route.snapshot.queryParams.bundle;\n    if (isNotEmpty(this.selectedBundleId)) {\n      this.subs.push(this.bundleService.findById(this.selectedBundleId).pipe(\n        getFirstSucceededRemoteDataPayload(),\n      ).subscribe((bundle: Bundle) => {\n        this.selectedBundleName = bundle.name;\n      }));\n      this.setUploadUrl();\n    }\n    this.subs.push(bundlesRD$.subscribe());\n  }\n\n  /**\n   * Create a new bundle with the filled in name on the current item\n   */\n  createBundle() {\n    this.itemService.createBundle(this.itemId, this.selectedBundleName).pipe(\n      getFirstSucceededRemoteDataPayload(),\n    ).subscribe((bundle: Bundle) => {\n      this.selectedBundleId = bundle.id;\n      this.notificationsService.success(\n        this.translate.instant(this.NOTIFICATIONS_PREFIX + 'bundle.created.title'),\n        this.translate.instant(this.NOTIFICATIONS_PREFIX + 'bundle.created.content'),\n      );\n      this.setUploadUrl();\n    });\n  }\n\n  /**\n   * The user changed the bundle name\n   * Reset the bundle ID\n   */\n  bundleNameChange() {\n    this.selectedBundleId = undefined;\n    for (const bundle of this.bundles) {\n      // noinspection JSDeprecatedSymbols\n      if (this.selectedBundleName === bundle.name) {\n        this.selectedBundleId = bundle.id;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the upload url to match the selected bundle ID\n   */\n  setUploadUrl() {\n    this.bundleService.getBitstreamsEndpoint(this.selectedBundleId).pipe(take(1)).subscribe((href: string) => {\n      this.uploadFilesOptions.url = href;\n      if (isEmpty(this.uploadFilesOptions.authToken)) {\n        this.uploadFilesOptions.authToken = this.authService.buildAuthHeader();\n      }\n      // Re-initialize the uploader component to ensure the latest changes to the options are applied\n      if (this.uploaderComponent) {\n        this.uploaderComponent.ngOnInit();\n        this.uploaderComponent.ngAfterViewInit();\n      }\n    });\n  }\n\n  /**\n   * The request was successful, redirect the user to the new bitstream's edit page\n   * @param bitstream\n   */\n  public onCompleteItem(bitstream) {\n    // Clear cached requests for this bundle's bitstreams to ensure lists on all pages are up-to-date\n    this.bundleService.getBitstreamsEndpoint(this.selectedBundleId).pipe(take(1)).subscribe((href: string) => {\n      this.requestService.removeByHrefSubstring(href);\n    });\n\n    // Bring over the item ID as a query parameter\n    const queryParams = { itemId: this.itemId, entityType: this.entityType };\n    this.router.navigate([getBitstreamModuleRoute(), bitstream.id, 'edit'], { queryParams: queryParams });\n  }\n\n  /**\n   * The request was unsuccessful, display an error notification\n   */\n  public onUploadError() {\n    this.notificationsService.error(null, this.translate.get(this.NOTIFICATIONS_PREFIX + 'upload.failed'));\n  }\n\n  /**\n   * The user selected a bundle from the input suggestions\n   * Set the bundle ID and Name properties, as well as the upload URL\n   * @param bundle\n   */\n  onClick(bundle: Bundle) {\n    this.selectedBundleId = bundle.id;\n    this.selectedBundleName = bundle.name;\n    if (bundle.id) {\n      this.setUploadUrl();\n    }\n  }\n\n  /**\n   * When cancel is clicked, navigate back to the item's edit bitstreams page\n   */\n  onCancel() {\n    this.router.navigate([getEntityEditRoute(this.entityType, this.itemId), 'bitstreams']);\n  }\n\n  /**\n   * @returns {string} the current URL\n   */\n  getCurrentUrl() {\n    return this.router.url;\n  }\n\n  /**\n   * Unsubscribe from all open subscriptions when the component is destroyed\n   */\n  ngOnDestroy(): void {\n    this.subs\n      .filter((subscription) => hasValue(subscription))\n      .forEach((subscription) => subscription.unsubscribe());\n  }\n\n}\n","<div class=\"container\">\n  <ng-container *ngIf=\"bundles\">\n    <div class=\"row\">\n      <div class=\"col-12 mb-2\">\n        <h1>{{'item.bitstreams.upload.title' | translate}}</h1>\n        <ng-container *ngVar=\"(itemRD$ | async)?.payload as item\">\n          <div *ngIf=\"item\">\n            <span class=\"font-weight-bold\">{{'item.bitstreams.upload.item' | translate}}</span>\n            <span>{{ dsoNameService.getName(item) }}</span>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"col-12\">\n        <label class=\"font-weight-bold\">{{'item.bitstreams.upload.bundle' | translate}}</label>\n        <ds-dso-input-suggestions #f id=\"search-form\"\n                                  [suggestions]=\"bundles\"\n                                  [placeholder]=\"'item.bitstreams.upload.bundle.placeholder' | translate\"\n                                  [action]=\"getCurrentUrl()\"\n                                  [name]=\"'bundle-select'\"\n                                  [debounceTime]=\"50\"\n                                  [(ngModel)]=\"selectedBundleName\"\n                                  (typeSuggestion)=\"bundleNameChange()\"\n                                  (clickSuggestion)=\"onClick($event)\"\n                                  (click)=\"f.open()\"\n                                  ngDefaultControl>\n        </ds-dso-input-suggestions>\n        <button *ngIf=\"!selectedBundleId && selectedBundleName?.length > 0\" class=\"btn btn-success mr-2\" (click)=\"createBundle()\">\n          <i class=\"fa fa-plus\"></i> {{ 'item.bitstreams.upload.bundle.new' | translate }}\n        </button>\n        <ds-uploader  class=\"w-100\" *ngIf=\"selectedBundleId\"\n                      [dropMsg]=\"'item.bitstreams.upload.drop-message'\"\n                      [dropOverDocumentMsg]=\"'item.bitstreams.upload.drop-message'\"\n                      [enableDragOverDocument]=\"true\"\n                      [uploadFilesOptions]=\"uploadFilesOptions\"\n                      (onCompleteItem)=\"onCompleteItem($event)\"\n                      (onUploadError)=\"onUploadError()\"></ds-uploader>\n        <button class=\"btn btn-outline-secondary\" (click)=\"onCancel()\">{{'item.bitstreams.upload.cancel' | translate}}</button>\n      </div>\n    </div>\n  </ng-container>\n</div>\n","import { Route } from '@angular/router';\n\nimport { REQUEST_COPY_MODULE_PATH } from '../app-routing-paths';\nimport { authenticatedGuard } from '../core/auth/authenticated.guard';\nimport { itemBreadcrumbResolver } from '../core/breadcrumbs/item-breadcrumb.resolver';\nimport { dsoEditMenuResolver } from '../shared/dso-page/dso-edit-menu.resolver';\nimport { LinkMenuItemModel } from '../shared/menu/menu-item/models/link.model';\nimport { MenuItemType } from '../shared/menu/menu-item-type.model';\nimport { BitstreamRequestACopyPageComponent } from './bitstreams/request-a-copy/bitstream-request-a-copy-page.component';\nimport { UploadBitstreamComponent } from './bitstreams/upload/upload-bitstream.component';\nimport { ThemedFullItemPageComponent } from './full/themed-full-item-page.component';\nimport { itemPageResolver } from './item-page.resolver';\nimport {\n  ITEM_EDIT_PATH,\n  ORCID_PATH,\n  UPLOAD_BITSTREAM_PATH,\n} from './item-page-routing-paths';\nimport { OrcidPageComponent } from './orcid-page/orcid-page.component';\nimport { orcidPageGuard } from './orcid-page/orcid-page.guard';\nimport { ThemedItemPageComponent } from './simple/themed-item-page.component';\nimport { versionResolver } from './version-page/version.resolver';\nimport { VersionPageComponent } from './version-page/version-page/version-page.component';\n\nexport const ROUTES: Route[] = [\n  {\n    path: ':id',\n    resolve: {\n      dso: itemPageResolver,\n      breadcrumb: itemBreadcrumbResolver,\n    },\n    runGuardsAndResolvers: 'always',\n    children: [\n      {\n        path: '',\n        component: ThemedItemPageComponent,\n        pathMatch: 'full',\n        resolve: {\n          menu: dsoEditMenuResolver,\n        },\n      },\n      {\n        path: 'full',\n        component: ThemedFullItemPageComponent,\n        resolve: {\n          menu: dsoEditMenuResolver,\n        },\n      },\n      {\n        path: ITEM_EDIT_PATH,\n        loadChildren: () => import('./edit-item-page/edit-item-page-routes')\n          .then((m) => m.ROUTES),\n      },\n      {\n        path: UPLOAD_BITSTREAM_PATH,\n        component: UploadBitstreamComponent,\n        canActivate: [authenticatedGuard],\n      },\n      {\n        path: REQUEST_COPY_MODULE_PATH,\n        component: BitstreamRequestACopyPageComponent,\n      },\n      {\n        path: ORCID_PATH,\n        component: OrcidPageComponent,\n        canActivate: [authenticatedGuard, orcidPageGuard],\n      },\n    ],\n    data: {\n      menu: {\n        public: [{\n          id: 'statistics_item_:id',\n          active: true,\n          visible: true,\n          index: 2,\n          model: {\n            type: MenuItemType.LINK,\n            text: 'menu.section.statistics',\n            link: 'statistics/items/:id/',\n          } as LinkMenuItemModel,\n        }],\n      },\n    },\n  },\n  {\n    path: 'version',\n    children: [\n      {\n        path: ':id',\n        component: VersionPageComponent,\n        resolve: {\n          dso: versionResolver,\n        },\n      },\n    ],\n  },\n];\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AppState } from '../app.reducer';\nimport { AuthService } from '../core/auth/auth.service';\nimport { ItemDataService } from '../core/data/item-data.service';\nimport { RemoteData } from '../core/data/remote-data';\nimport { ResolvedAction } from '../core/resolving/resolver.actions';\nimport { redirectOn4xx } from '../core/shared/authorized.operators';\nimport { Item } from '../core/shared/item.model';\nimport { getFirstCompletedRemoteData } from '../core/shared/operators';\nimport { hasValue } from '../shared/empty.util';\nimport { getItemPageLinksToFollow } from './item.resolver';\nimport { getItemPageRoute } from './item-page-routing-paths';\n\n/**\n * Method for resolving an item based on the parameters in the current route\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {Router} router\n * @param {ItemDataService} itemService\n * @param {Store<AppState>} store\n * @param {AuthService} authService\n * @returns Observable<<RemoteData<Item>> Emits the found item based on the parameters in the current route,\n * or an error if something went wrong\n */\nexport const itemPageResolver: ResolveFn<RemoteData<Item>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  router: Router = inject(Router),\n  itemService: ItemDataService = inject(ItemDataService),\n  store: Store<AppState> = inject(Store<AppState>),\n  authService: AuthService = inject(AuthService),\n): Observable<RemoteData<Item>> => {\n  const itemRD$ = itemService.findById(\n    route.params.id,\n    true,\n    false,\n    ...getItemPageLinksToFollow(),\n  ).pipe(\n    getFirstCompletedRemoteData(),\n    redirectOn4xx(router, authService),\n  );\n\n  itemRD$.subscribe((itemRD: RemoteData<Item>) => {\n    store.dispatch(new ResolvedAction(state.url, itemRD.payload));\n  });\n\n  return itemRD$.pipe(\n    map((rd: RemoteData<Item>) => {\n      if (rd.hasSucceeded && hasValue(rd.payload)) {\n        const thisRoute = state.url;\n\n        // Angular uses a custom function for encodeURIComponent, (e.g. it doesn't encode commas\n        // or semicolons) and thisRoute has been encoded with that function. If we want to compare\n        // it with itemRoute, we have to run itemRoute through Angular's version as well to ensure\n        // the same characters are encoded the same way.\n        const itemRoute = router.parseUrl(getItemPageRoute(rd.payload)).toString();\n\n        if (!thisRoute.startsWith(itemRoute)) {\n          const itemId = rd.payload.uuid;\n          const subRoute = thisRoute.substring(thisRoute.indexOf(itemId) + itemId.length, thisRoute.length);\n          void router.navigateByUrl(itemRoute + subRoute);\n        }\n      }\n      return rd;\n    }),\n  );\n};\n","import {\n  AsyncPipe,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  catchError,\n  Observable,\n} from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { OrcidAuthService } from '../../../core/orcid/orcid-auth.service';\nimport { ResearcherProfile } from '../../../core/profile/model/researcher-profile.model';\nimport {\n  NativeWindowRef,\n  NativeWindowService,\n} from '../../../core/services/window.service';\nimport { Item } from '../../../core/shared/item.model';\nimport { getFirstCompletedRemoteData } from '../../../core/shared/operators';\nimport { AlertComponent } from '../../../shared/alert/alert.component';\nimport { BtnDisabledDirective } from '../../../shared/btn-disabled.directive';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { createFailedRemoteDataObjectFromError$ } from '../../../shared/remote-data.utils';\n\n@Component({\n  selector: 'ds-orcid-auth',\n  templateUrl: './orcid-auth.component.html',\n  styleUrls: ['./orcid-auth.component.scss'],\n  imports: [\n    TranslateModule,\n    AsyncPipe,\n    NgIf,\n    NgForOf,\n    AlertComponent,\n    BtnDisabledDirective,\n  ],\n  standalone: true,\n})\nexport class OrcidAuthComponent implements OnInit, OnChanges {\n\n  /**\n   * The item for which showing the orcid settings\n   */\n  @Input() item: Item;\n\n  /**\n   * The list of exposed orcid authorization scopes for the orcid profile\n   */\n  profileAuthorizationScopes: BehaviorSubject<string[]> = new BehaviorSubject<string[]>([]);\n\n  /**\n   * The list of all orcid authorization scopes missing in the orcid profile\n   */\n  missingAuthorizationScopes: BehaviorSubject<string[]> = new BehaviorSubject<string[]>([]);\n\n  /**\n   * The list of all orcid authorization scopes available\n   */\n  orcidAuthorizationScopes: BehaviorSubject<string[]> = new BehaviorSubject<string[]>([]);\n\n  /**\n   * A boolean representing if unlink operation is processing\n   */\n  unlinkProcessing: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  /**\n   * A boolean representing if orcid profile is linked\n   */\n  private isOrcidLinked$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  /**\n   * A boolean representing if only admin can disconnect orcid profile\n   */\n  private onlyAdminCanDisconnectProfileFromOrcid$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  /**\n   * A boolean representing if owner can disconnect orcid profile\n   */\n  private ownerCanDisconnectProfileFromOrcid$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  /**\n   * An event emitted when orcid profile is unliked successfully\n   */\n  @Output() unlink: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(\n    private orcidAuthService: OrcidAuthService,\n    private translateService: TranslateService,\n    private notificationsService: NotificationsService,\n    @Inject(NativeWindowService) private _window: NativeWindowRef,\n  ) {\n  }\n\n  ngOnInit() {\n    this.orcidAuthService.getOrcidAuthorizationScopes().subscribe((scopes: string[]) => {\n      this.orcidAuthorizationScopes.next(scopes);\n      this.initOrcidAuthSettings();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!changes.item.isFirstChange() && changes.item.currentValue !== changes.item.previousValue) {\n      this.initOrcidAuthSettings();\n    }\n  }\n\n  /**\n   * Check if the list of exposed orcid authorization scopes for the orcid profile has values\n   */\n  hasOrcidAuthorizations(): Observable<boolean> {\n    return this.profileAuthorizationScopes.asObservable().pipe(\n      map((scopes: string[]) => scopes.length > 0),\n    );\n  }\n\n  /**\n   * Return the list of exposed orcid authorization scopes for the orcid profile\n   */\n  getOrcidAuthorizations(): Observable<string[]> {\n    return this.profileAuthorizationScopes.asObservable();\n  }\n\n  /**\n   * Check if the list of exposed orcid authorization scopes for the orcid profile has values\n   */\n  hasMissingOrcidAuthorizations(): Observable<boolean> {\n    return this.missingAuthorizationScopes.asObservable().pipe(\n      map((scopes: string[]) => scopes.length > 0),\n    );\n  }\n\n  /**\n   * Return the list of exposed orcid authorization scopes for the orcid profile\n   */\n  getMissingOrcidAuthorizations(): Observable<string[]> {\n    return this.profileAuthorizationScopes.asObservable();\n  }\n\n  /**\n   * Return a boolean representing if orcid profile is linked\n   */\n  isLinkedToOrcid(): Observable<boolean> {\n    return this.isOrcidLinked$.asObservable();\n  }\n\n  getOrcidNotLinkedMessage(): Observable<string> {\n    const orcid = this.item.firstMetadataValue('person.identifier.orcid');\n    if (orcid) {\n      return this.translateService.get('person.page.orcid.orcid-not-linked-message', { 'orcid': orcid });\n    } else {\n      return this.translateService.get('person.page.orcid.no-orcid-message');\n    }\n  }\n\n  /**\n   * Get label for a given orcid authorization scope\n   *\n   * @param scope\n   */\n  getAuthorizationDescription(scope: string) {\n    return 'person.page.orcid.scope.' + scope.substring(1).replace('/', '-');\n  }\n\n  /**\n   * Return a boolean representing if only admin can disconnect orcid profile\n   */\n  onlyAdminCanDisconnectProfileFromOrcid(): Observable<boolean> {\n    return this.onlyAdminCanDisconnectProfileFromOrcid$.asObservable();\n  }\n\n  /**\n   * Return a boolean representing if owner can disconnect orcid profile\n   */\n  ownerCanDisconnectProfileFromOrcid(): Observable<boolean> {\n    return this.ownerCanDisconnectProfileFromOrcid$.asObservable();\n  }\n\n  /**\n   * Link existing person profile with orcid\n   */\n  linkOrcid(): void {\n    this.orcidAuthService.getOrcidAuthorizeUrl(this.item).subscribe((authorizeUrl) => {\n      this._window.nativeWindow.location.href = authorizeUrl;\n    });\n  }\n\n  /**\n   * Unlink existing person profile from orcid\n   */\n  unlinkOrcid(): void {\n    this.unlinkProcessing.next(true);\n    this.orcidAuthService.unlinkOrcidByItem(this.item).pipe(\n      getFirstCompletedRemoteData(),\n      catchError(createFailedRemoteDataObjectFromError$<ResearcherProfile>),\n    ).subscribe((remoteData: RemoteData<ResearcherProfile>) => {\n      this.unlinkProcessing.next(false);\n      if (remoteData.hasFailed) {\n        this.notificationsService.error(this.translateService.get('person.page.orcid.unlink.error'));\n      } else {\n        this.notificationsService.success(this.translateService.get('person.page.orcid.unlink.success'));\n        this.unlink.emit();\n      }\n    });\n  }\n\n  /**\n   * initialize all Orcid authentication settings\n   * @private\n   */\n  private initOrcidAuthSettings(): void {\n\n    this.setOrcidAuthorizationsFromItem();\n\n    this.setMissingOrcidAuthorizations();\n\n    this.orcidAuthService.onlyAdminCanDisconnectProfileFromOrcid().subscribe((result) => {\n      this.onlyAdminCanDisconnectProfileFromOrcid$.next(result);\n    });\n\n    this.orcidAuthService.ownerCanDisconnectProfileFromOrcid().subscribe((result) => {\n      this.ownerCanDisconnectProfileFromOrcid$.next(result);\n    });\n\n    this.isOrcidLinked$.next(this.orcidAuthService.isLinkedToOrcid(this.item));\n  }\n\n  private setMissingOrcidAuthorizations(): void {\n    const profileScopes = this.orcidAuthService.getOrcidAuthorizationScopesByItem(this.item);\n    const orcidScopes = this.orcidAuthorizationScopes.value;\n    const missingScopes = orcidScopes.filter((scope) => !profileScopes.includes(scope));\n\n    this.missingAuthorizationScopes.next(missingScopes);\n  }\n\n  private setOrcidAuthorizationsFromItem(): void {\n    this.profileAuthorizationScopes.next(this.orcidAuthService.getOrcidAuthorizationScopesByItem(this.item));\n  }\n\n}\n","<div class=\"container mb-5\">\n  <h1>{{'person.orcid.registry.auth' | translate}}</h1>\n  <ng-container *ngIf=\"(isLinkedToOrcid() | async); then orcidLinked; else orcidNotLinked\"></ng-container>\n</div>\n\n<ng-template #orcidLinked>\n  <div data-test=\"orcidLinked\">\n    <div class=\"row\">\n      <div *ngIf=\"(hasOrcidAuthorizations() | async)\" class=\"col-sm-6 mb-3\" data-test=\"hasOrcidAuthorizations\">\n        <div class=\"card h-100\">\n          <div class=\"card-header\">{{ 'person.page.orcid.granted-authorizations'| translate }}</div>\n          <div class=\"card-body\">\n            <div class=\"container p-0\">\n              <ul>\n                <li *ngFor=\"let auth of (getOrcidAuthorizations() | async)\" data-test=\"orcidAuthorization\">\n                  {{getAuthorizationDescription(auth) | translate}}\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-sm-6 mb-3\">\n        <div class=\"card h-100\">\n          <div class=\"card-header\">{{ 'person.page.orcid.missing-authorizations'| translate }}</div>\n          <div class=\"card-body\">\n            <div class=\"container\">\n              <ds-alert *ngIf=\"(hasMissingOrcidAuthorizations() | async) !== true\" [type]=\"'alert-success'\" data-test=\"noMissingOrcidAuthorizations\">\n                {{'person.page.orcid.no-missing-authorizations-message' | translate}}\n              </ds-alert>\n              <ds-alert *ngIf=\"(hasMissingOrcidAuthorizations() | async)\" [type]=\"'alert-warning'\" data-test=\"missingOrcidAuthorizations\">\n                {{'person.page.orcid.missing-authorizations-message' | translate}}\n                <ul>\n                  <li *ngFor=\"let auth of (getMissingOrcidAuthorizations() | async)\" data-test=\"missingOrcidAuthorization\">\n                    {{getAuthorizationDescription(auth) | translate }}\n                  </li>\n                </ul>\n              </ds-alert>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <ds-alert *ngIf=\"(onlyAdminCanDisconnectProfileFromOrcid() | async) && (ownerCanDisconnectProfileFromOrcid() | async) !== true\"\n              [type]=\"'alert-warning'\" data-test=\"unlinkOnlyAdmin\">\n      {{ 'person.page.orcid.remove-orcid-message' | translate}}\n    </ds-alert>\n    <div class=\"row\" *ngIf=\"(ownerCanDisconnectProfileFromOrcid() | async)\" data-test=\"unlinkOwner\">\n      <div class=\"col\">\n        <button type=\"submit\" class=\"btn btn-danger float-right\" (click)=\"unlinkOrcid()\"\n                [dsBtnDisabled]=\"(unlinkProcessing | async)\">\n          <span *ngIf=\"(unlinkProcessing | async) !== true\"><i\n            class=\"fas fa-unlink\"></i> {{ 'person.page.orcid.unlink' | translate }}</span>\n          <span *ngIf=\"(unlinkProcessing | async)\"><i\n            class='fas fa-circle-notch fa-spin'></i> {{'person.page.orcid.unlink.processing' | translate}}</span>\n        </button>\n        <button *ngIf=\"(hasMissingOrcidAuthorizations() | async)\" type=\"submit\"\n                class=\"btn btn-primary float-right\" (click)=\"linkOrcid()\">\n          <span><i class=\"fas fa-check\"></i> {{ 'person.page.orcid.grant-authorizations' | translate }}</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #orcidNotLinked>\n  <div data-test=\"orcidNotLinked\">\n    <div class=\"row\">\n      <div class=\"col-2\"><img alt=\"orcid-logo\" src=\"../../../../assets/images/orcid.logo.icon.svg\"/></div>\n      <div class=\"col\">\n        <ds-alert [type]=\"'alert-info'\">{{ getOrcidNotLinkedMessage() | async }}</ds-alert>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n        <button class=\"btn btn-primary float-right\" (click)=\"linkOrcid()\">\n          <i class=\"fas fa-link\"></i>\n          {{'person.page.orcid.link' | translate}}\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n","import {\n  CommonModule,\n  isPlatformBrowser,\n} from '@angular/common';\nimport {\n  Component,\n  Inject,\n  OnInit,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  ParamMap,\n  Router,\n  RouterLink,\n} from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  combineLatest,\n} from 'rxjs';\nimport {\n  filter,\n  map,\n  take,\n} from 'rxjs/operators';\n\nimport { AuthService } from '../../core/auth/auth.service';\nimport { ItemDataService } from '../../core/data/item-data.service';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { OrcidAuthService } from '../../core/orcid/orcid-auth.service';\nimport { ResearcherProfile } from '../../core/profile/model/researcher-profile.model';\nimport { redirectOn4xx } from '../../core/shared/authorized.operators';\nimport { Item } from '../../core/shared/item.model';\nimport {\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteDataPayload,\n} from '../../core/shared/operators';\nimport { AlertComponent } from '../../shared/alert/alert.component';\nimport { AlertType } from '../../shared/alert/alert-type';\nimport { isNotEmpty } from '../../shared/empty.util';\nimport { ThemedLoadingComponent } from '../../shared/loading/themed-loading.component';\nimport { getItemPageRoute } from '../item-page-routing-paths';\nimport { OrcidAuthComponent } from './orcid-auth/orcid-auth.component';\nimport { OrcidQueueComponent } from './orcid-queue/orcid-queue.component';\nimport { OrcidSyncSettingsComponent } from './orcid-sync-settings/orcid-sync-settings.component';\n\n/**\n * A component that represents the orcid settings page\n */\n@Component({\n  selector: 'ds-orcid-page',\n  templateUrl: './orcid-page.component.html',\n  styleUrls: ['./orcid-page.component.scss'],\n  imports: [\n    CommonModule,\n    ThemedLoadingComponent,\n    AlertComponent,\n    OrcidAuthComponent,\n    OrcidSyncSettingsComponent,\n    OrcidQueueComponent,\n    TranslateModule,\n    RouterLink,\n  ],\n  standalone: true,\n})\nexport class OrcidPageComponent implements OnInit {\n  protected readonly AlertType = AlertType;\n\n  /**\n   * A boolean representing if the connection operation with orcid profile is in progress\n   */\n  connectionStatus: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  /**\n   * The item for which showing the orcid settings\n   */\n  item: BehaviorSubject<Item> = new BehaviorSubject<Item>(null);\n\n  /**\n   * The item id for which showing the orcid settings\n   */\n  itemId: string;\n\n  /**\n   * A boolean representing if the connection operation with orcid profile is in progress\n   */\n  processingConnection: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: any,\n    private authService: AuthService,\n    private itemService: ItemDataService,\n    private orcidAuthService: OrcidAuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n  ) {\n  }\n\n  /**\n   * Retrieve the item for which showing the orcid settings\n   */\n  ngOnInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const codeParam$ = this.route.queryParamMap.pipe(\n        take(1),\n        map((paramMap: ParamMap) => paramMap.get('code')),\n      );\n\n      const item$ = this.route.data.pipe(\n        map((data) => data.dso as RemoteData<Item>),\n        redirectOn4xx(this.router, this.authService),\n        getFirstSucceededRemoteDataPayload(),\n      );\n\n      combineLatest([codeParam$, item$]).subscribe(([codeParam, item]) => {\n        this.itemId = item.id;\n        /**\n         * Check if code is present in the query param. If so it means this page is loaded after attempting to\n         * link the person to the ORCID profile, otherwise the person is already linked to ORCID profile\n         */\n        if (isNotEmpty(codeParam)) {\n          this.linkProfileToOrcid(item, codeParam);\n        } else {\n          this.item.next(item);\n          this.processingConnection.next(false);\n          this.connectionStatus.next(true);\n        }\n      });\n    }\n  }\n\n  /**\n   * Check if the current item is linked to an ORCID profile.\n   *\n   * @returns the check result\n   */\n  isLinkedToOrcid(): boolean {\n    return this.orcidAuthService.isLinkedToOrcid(this.item.value);\n  }\n\n  /**\n   * Get the route to an item's page\n   */\n  getItemPage(): string {\n    return getItemPageRoute(this.item.value);\n  }\n\n  /**\n   * Retrieve the updated profile item\n   */\n  updateItem(): void {\n    this.clearRouteParams();\n    this.itemService.findById(this.itemId, false).pipe(\n      getFirstCompletedRemoteData(),\n    ).subscribe((itemRD: RemoteData<Item>) => {\n      if (itemRD.hasSucceeded) {\n        this.item.next(itemRD.payload);\n      }\n    });\n  }\n\n  /**\n   * Link person item to ORCID profile by using the code received after redirect from ORCID.\n   *\n   * @param person The person item to link to ORCID profile\n   * @param code The auth-code received from ORCID\n   */\n  private linkProfileToOrcid(person: Item, code: string) {\n    this.orcidAuthService.linkOrcidByItem(person, code).pipe(\n      getFirstCompletedRemoteData(),\n    ).subscribe((profileRD: RemoteData<ResearcherProfile>) => {\n      this.processingConnection.next(false);\n      if (profileRD.hasSucceeded) {\n        this.connectionStatus.next(true);\n        this.updateItem();\n      } else {\n        this.item.next(person);\n        this.connectionStatus.next(false);\n        this.clearRouteParams();\n      }\n    });\n  }\n\n  /**\n   * Update route removing the code from query params\n   * @private\n   */\n  private clearRouteParams(): void {\n    // update route removing the code from query params\n    this.route.queryParamMap\n      .pipe(\n        filter((paramMap: ParamMap) => isNotEmpty(paramMap.keys)),\n        map(_ => Object.assign({})),\n        take(1),\n      ).subscribe(queryParams =>\n        this.router.navigate(\n          [],\n          {\n            relativeTo: this.route,\n            queryParams,\n          },\n        ),\n      );\n  }\n\n}\n","<ds-loading *ngIf=\"(processingConnection | async)\" [message]=\"'person.page.orcid.link.processing' | translate\"></ds-loading>\n<div class=\"container\" *ngIf=\"(processingConnection | async) !== true && (connectionStatus | async) !== true\" data-test=\"error-box\">\n  <ds-alert [type]=\"AlertType.Error\">{{'person.page.orcid.link.error.message' | translate}}</ds-alert>\n</div>\n<ng-container *ngIf=\"(processingConnection | async) !== true && (item | async) && (connectionStatus | async)\" >\n  <ds-orcid-auth [item]=\"(item | async)\" (unlink)=\"updateItem()\" data-test=\"orcid-auth\"></ds-orcid-auth>\n  <ds-orcid-sync-setting *ngIf=\"isLinkedToOrcid()\" [item]=\"(item | async)\" (settingsUpdated)=\"updateItem()\" data-test=\"orcid-sync-setting\"></ds-orcid-sync-setting>\n  <ds-orcid-queue *ngIf=\"isLinkedToOrcid()\" [item]=\"(item | async)\"></ds-orcid-queue>\n</ng-container>\n\n<div *ngIf=\"(processingConnection | async) !== true && (item | async)\" class=\"container\">\n  <div class=\"button-row bottom mb-3\">\n    <div class=\"text-right\">\n      <a [routerLink]=\"getItemPage()\" role=\"button\" class=\"btn btn-outline-secondary\" data-test=\"back-button\">\n        <i class=\"fas fa-arrow-left\"></i> {{'item.orcid.return' | translate}}\n      </a>\n    </div>\n  </div>\n</div>\n","import { CanActivateFn } from '@angular/router';\nimport { of as observableOf } from 'rxjs';\n\nimport { dsoPageSingleFeatureGuard } from '../../core/data/feature-authorization/feature-authorization-guard/dso-page-single-feature.guard';\nimport { FeatureID } from '../../core/data/feature-authorization/feature-id';\nimport { itemPageResolver } from '../item-page.resolver';\n\n/**\n * Guard for preventing unauthorized access to certain {@link Item} pages requiring administrator rights\n * Check administrator authorization rights\n */\nexport const orcidPageGuard: CanActivateFn =\n  dsoPageSingleFeatureGuard(\n    () => itemPageResolver,\n    () => observableOf(FeatureID.CanSynchronizeWithORCID),\n  );\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n} from '@angular/core';\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\n\nimport { PaginatedList } from '../../../core/data/paginated-list.model';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { OrcidHistory } from '../../../core/orcid/model/orcid-history.model';\nimport { OrcidQueue } from '../../../core/orcid/model/orcid-queue.model';\nimport { OrcidAuthService } from '../../../core/orcid/orcid-auth.service';\nimport { OrcidHistoryDataService } from '../../../core/orcid/orcid-history-data.service';\nimport { OrcidQueueDataService } from '../../../core/orcid/orcid-queue-data.service';\nimport { PaginationService } from '../../../core/pagination/pagination.service';\nimport { Item } from '../../../core/shared/item.model';\nimport { getFirstCompletedRemoteData } from '../../../core/shared/operators';\nimport { AlertComponent } from '../../../shared/alert/alert.component';\nimport { AlertType } from '../../../shared/alert/alert-type';\nimport { hasValue } from '../../../shared/empty.util';\nimport { ThemedLoadingComponent } from '../../../shared/loading/themed-loading.component';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { PaginationComponent } from '../../../shared/pagination/pagination.component';\nimport { PaginationComponentOptions } from '../../../shared/pagination/pagination-component-options.model';\n\n@Component({\n  selector: 'ds-orcid-queue',\n  templateUrl: './orcid-queue.component.html',\n  styleUrls: ['./orcid-queue.component.scss'],\n  imports: [\n    CommonModule,\n    NgbTooltipModule,\n    TranslateModule,\n    ThemedLoadingComponent,\n    AlertComponent,\n    PaginationComponent,\n  ],\n  standalone: true,\n})\nexport class OrcidQueueComponent implements OnInit, OnDestroy, OnChanges {\n\n  /**\n   * The item for which showing the orcid settings\n   */\n  @Input() item: Item;\n\n  /**\n   * Pagination config used to display the list\n   */\n  public paginationOptions: PaginationComponentOptions = Object.assign(new PaginationComponentOptions(), {\n    id: 'oqp',\n    pageSize: 5,\n  });\n\n  /**\n   * A boolean representing if results are loading\n   */\n  public processing$ = new BehaviorSubject<boolean>(false);\n\n  /**\n   * A list of orcid queue records\n   */\n  private list$: BehaviorSubject<RemoteData<PaginatedList<OrcidQueue>>> = new BehaviorSubject<RemoteData<PaginatedList<OrcidQueue>>>({} as any);\n\n  /**\n   * The AlertType enumeration\n   * @type {AlertType}\n   */\n  AlertTypeEnum = AlertType;\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  private subs: Subscription[] = [];\n\n  constructor(private orcidAuthService: OrcidAuthService,\n              private orcidQueueService: OrcidQueueDataService,\n              protected translateService: TranslateService,\n              private paginationService: PaginationService,\n              private notificationsService: NotificationsService,\n              private orcidHistoryService: OrcidHistoryDataService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.updateList();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!changes.item.isFirstChange() && changes.item.currentValue !== changes.item.previousValue) {\n      this.updateList();\n    }\n  }\n\n  /**\n   * Retrieve queue list\n   */\n  updateList() {\n    this.subs.push(\n      this.paginationService.getCurrentPagination(this.paginationOptions.id, this.paginationOptions).pipe(\n        debounceTime(100),\n        distinctUntilChanged(),\n        tap(() => this.processing$.next(true)),\n        switchMap((config: PaginationComponentOptions) => this.orcidQueueService.searchByProfileItemId(this.item.id, config, false)),\n        getFirstCompletedRemoteData(),\n      ).subscribe((result: RemoteData<PaginatedList<OrcidQueue>>) => {\n        this.processing$.next(false);\n        this.list$.next(result);\n        this.orcidQueueService.clearFindByProfileItemRequests();\n      }),\n    );\n  }\n\n  /**\n   * Return the list of orcid queue records\n   */\n  getList(): Observable<RemoteData<PaginatedList<OrcidQueue>>> {\n    return this.list$.asObservable();\n  }\n\n  /**\n   * Return the icon class for the queue object type\n   *\n   * @param orcidQueue The OrcidQueue object\n   */\n  getIconClass(orcidQueue: OrcidQueue): string {\n    if (!orcidQueue.recordType) {\n      return 'fa fa-user';\n    }\n    switch (orcidQueue.recordType.toLowerCase()) {\n      case 'publication':\n        return 'fas fa-book';\n      case 'project':\n        return 'fas fa-wallet';\n      case 'education':\n        return 'fas fa-school';\n      case 'affiliation':\n        return 'fas fa-university';\n      case 'country':\n        return 'fas fa-globe-europe';\n      case 'external_ids':\n      case 'researcher_urls':\n        return 'fas fa-external-link-alt';\n      default:\n        return 'fa fa-user';\n    }\n  }\n\n  /**\n   * Return the icon tooltip message for the queue object type\n   *\n   * @param orcidQueue The OrcidQueue object\n   */\n  getIconTooltip(orcidQueue: OrcidQueue): string {\n    if (!orcidQueue.recordType) {\n      return '';\n    }\n\n    return 'person.page.orcid.sync-queue.tooltip.' + orcidQueue.recordType.toLowerCase();\n  }\n\n  /**\n   * Return the icon tooltip message for the queue object operation\n   *\n   * @param orcidQueue The OrcidQueue object\n   */\n  getOperationTooltip(orcidQueue: OrcidQueue): string {\n    if (!orcidQueue.operation) {\n      return '';\n    }\n\n    return 'person.page.orcid.sync-queue.tooltip.' + orcidQueue.operation.toLowerCase();\n  }\n\n  /**\n   * Return the icon class for the queue object operation\n   *\n   * @param orcidQueue The OrcidQueue object\n   */\n  getOperationClass(orcidQueue: OrcidQueue): string {\n\n    if (!orcidQueue.operation) {\n      return '';\n    }\n\n    switch (orcidQueue.operation.toLowerCase()) {\n      case 'insert':\n        return 'fas fa-plus';\n      case 'update':\n        return 'fas fa-edit';\n      case 'delete':\n        return 'fas fa-trash-alt';\n      default:\n        return '';\n    }\n  }\n\n  /**\n   * Discard a queue entry from the synchronization\n   *\n   * @param orcidQueue The OrcidQueue object to discard\n   */\n  discardEntry(orcidQueue: OrcidQueue) {\n    this.processing$.next(true);\n    this.subs.push(this.orcidQueueService.deleteById(orcidQueue.id).pipe(\n      getFirstCompletedRemoteData(),\n    ).subscribe((remoteData) => {\n      this.processing$.next(false);\n      if (remoteData.isSuccess) {\n        this.notificationsService.success(this.translateService.get('person.page.orcid.sync-queue.discard.success'));\n        this.updateList();\n      } else {\n        this.notificationsService.error(this.translateService.get('person.page.orcid.sync-queue.discard.error'));\n      }\n    }));\n  }\n\n  /**\n   * Send a queue entry to orcid for the synchronization\n   *\n   * @param orcidQueue The OrcidQueue object to synchronize\n   */\n  send(orcidQueue: OrcidQueue) {\n    this.processing$.next(true);\n    this.subs.push(this.orcidHistoryService.sendToORCID(orcidQueue).pipe(\n      getFirstCompletedRemoteData(),\n    ).subscribe((remoteData) => {\n      this.processing$.next(false);\n      if (remoteData.isSuccess) {\n        this.handleOrcidHistoryRecordCreation(remoteData.payload);\n      } else if (remoteData.statusCode === 422) {\n        this.handleValidationErrors(remoteData);\n      } else {\n        this.notificationsService.error(this.translateService.get('person.page.orcid.sync-queue.send.error'));\n      }\n    }));\n  }\n\n\n  /**\n   * Return the error message for Unauthorized response\n   * @private\n   */\n  private getUnauthorizedErrorContent(): Observable<string> {\n    return this.orcidAuthService.getOrcidAuthorizeUrl(this.item).pipe(\n      switchMap((authorizeUrl) => this.translateService.get(\n        'person.page.orcid.sync-queue.send.unauthorized-error.content',\n        { orcid: authorizeUrl },\n      )),\n    );\n  }\n\n  /**\n   * Manage notification by response\n   * @private\n   */\n  private handleOrcidHistoryRecordCreation(orcidHistory: OrcidHistory) {\n    switch (orcidHistory.status) {\n      case 200:\n      case 201:\n      case 204:\n        this.notificationsService.success(this.translateService.get('person.page.orcid.sync-queue.send.success'));\n        this.updateList();\n        break;\n      case 400:\n        this.notificationsService.error(this.translateService.get('person.page.orcid.sync-queue.send.bad-request-error'), null, { timeOut: 0 });\n        break;\n      case 401:\n        combineLatest([\n          this.translateService.get('person.page.orcid.sync-queue.send.unauthorized-error.title'),\n          this.getUnauthorizedErrorContent()],\n        ).subscribe(([title, content]) => {\n          this.notificationsService.error(title, content, { timeOut: 0 }, true);\n        });\n        break;\n      case 404:\n        this.notificationsService.warning(this.translateService.get('person.page.orcid.sync-queue.send.not-found-warning'));\n        break;\n      case 409:\n        this.notificationsService.error(this.translateService.get('person.page.orcid.sync-queue.send.conflict-error'), null, { timeOut: 0 });\n        break;\n      default:\n        this.notificationsService.error(this.translateService.get('person.page.orcid.sync-queue.send.error'), null, { timeOut: 0 });\n    }\n  }\n\n  /**\n   * Manage validation errors\n   * @private\n   */\n  private handleValidationErrors(remoteData: RemoteData<OrcidHistory>) {\n    const translations = [this.translateService.get('person.page.orcid.sync-queue.send.validation-error')];\n    const errorMessage = remoteData.errorMessage;\n    if (errorMessage && errorMessage.indexOf('Error codes:') > 0) {\n      errorMessage.substring(errorMessage.indexOf(':') + 1).trim().split(',')\n        .forEach((error) => translations.push(this.translateService.get('person.page.orcid.sync-queue.send.validation-error.' + error)));\n    }\n    combineLatest(translations).subscribe((messages) => {\n      const title = messages.shift();\n      const content = '<ul>' + messages.map((message) => `<li>${message}</li>`).join('') + '</ul>';\n      this.notificationsService.error(title, content, { timeOut: 0 }, true);\n    });\n  }\n\n  /**\n   * Unsubscribe from all subscriptions\n   */\n  ngOnDestroy(): void {\n    this.list$ = null;\n    this.subs.filter((subscription) => hasValue(subscription))\n      .forEach((subscription) => subscription.unsubscribe());\n  }\n\n}\n","<div>\n  <ds-loading *ngIf=\"(processing$ | async)\"></ds-loading>\n  <div class=\"container\">\n    <h2>{{ 'person.orcid.registry.queue' | translate }}</h2>\n\n    <ds-alert *ngIf=\"(processing$ | async) !== true && (getList() | async)?.payload?.totalElements === 0\"\n              [type]=\"AlertTypeEnum.Info\">\n      {{ 'person.page.orcid.sync-queue.empty-message' | translate}}\n    </ds-alert>\n    <ds-pagination *ngIf=\"(processing$ | async) !== true && (getList() | async)?.payload?.totalElements > 0\"\n                   [paginationOptions]=\"paginationOptions\"\n                   [collectionSize]=\"(getList() | async)?.payload?.totalElements\"\n                   [retainScrollPosition]=\"false\" [hideGear]=\"true\" (paginationChange)=\"updateList()\">\n\n      <div class=\"table-responsive\">\n        <table id=\"groups\" class=\"table table-sm table-striped table-hover table-bordered\">\n          <thead>\n          <tr class=\"text-center align-middle\">\n            <th>{{'person.page.orcid.sync-queue.table.header.type' | translate}}</th>\n            <th>{{'person.page.orcid.sync-queue.table.header.description' | translate}}</th>\n            <th>{{'person.page.orcid.sync-queue.table.header.action' | translate}}</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let entry of (getList() | async)?.payload?.page\" data-test=\"orcidQueueElementRow\">\n            <td style=\"width: 15%\" class=\"text-center align-middle\">\n              <i [ngClass]=\"getIconClass(entry)\" [ngbTooltip]=\"getIconTooltip(entry) | translate\"\n                 class=\"fa-2x\" aria-hidden=\"true\"></i>\n            </td>\n            <td class=\"text-center align-middle\">\n              {{ entry.description }}\n            </td>\n            <td style=\"width: 20%\" class=\"text-center\">\n              <div class=\"btn-group edit-field\">\n                <button [ngbTooltip]=\"getOperationTooltip(entry) | translate\" container=\"body\"\n                        class=\"btn btn-outline-primary my-1 col-md\" (click)=\"send(entry)\">\n                  <span [ngClass]=\"getOperationClass(entry)\"></span>\n                  <span class=\"sr-only\">{{ getOperationTooltip(entry) | translate }}</span>\n                </button>\n                <button [ngbTooltip]=\"'person.page.orcid.sync-queue.discard' | translate\" container=\"body\"\n                        class=\"btn btn-outline-danger my-1 col-md\" (click)=\"discardEntry(entry)\">\n                  <span class=\"fas fa-unlink\"></span>\n                  <span class=\"sr-only\">{{ 'person.page.orcid.sync-queue.discard' | translate }}</span>\n                </button>\n              </div>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </ds-pagination>\n  </div>\n</div>\n","import { NgForOf } from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  FormsModule,\n  UntypedFormGroup,\n} from '@angular/forms';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport { Operation } from 'fast-json-patch';\nimport {\n  BehaviorSubject,\n  Observable,\n} from 'rxjs';\nimport {\n  catchError,\n  filter,\n  map,\n  switchMap,\n  take,\n  takeUntil,\n} from 'rxjs/operators';\n\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { ResearcherProfile } from '../../../core/profile/model/researcher-profile.model';\nimport { ResearcherProfileDataService } from '../../../core/profile/researcher-profile-data.service';\nimport { Item } from '../../../core/shared/item.model';\nimport {\n  getFirstCompletedRemoteData,\n  getRemoteDataPayload,\n} from '../../../core/shared/operators';\nimport { AlertComponent } from '../../../shared/alert/alert.component';\nimport { AlertType } from '../../../shared/alert/alert-type';\nimport { hasValue } from '../../../shared/empty.util';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { createFailedRemoteDataObjectFromError$ } from '../../../shared/remote-data.utils';\n\n@Component({\n  selector: 'ds-orcid-sync-setting',\n  templateUrl: './orcid-sync-settings.component.html',\n  styleUrls: ['./orcid-sync-settings.component.scss'],\n  imports: [\n    AlertComponent,\n    FormsModule,\n    TranslateModule,\n    NgForOf,\n  ],\n  standalone: true,\n})\nexport class OrcidSyncSettingsComponent implements OnInit, OnDestroy {\n  protected readonly AlertType = AlertType;\n\n  /**\n   * The prefix used for i18n keys\n   */\n  messagePrefix = 'person.page.orcid';\n\n  /**\n   * The current synchronization mode\n   */\n  currentSyncMode: string;\n\n  /**\n   * The current synchronization mode for publications\n   */\n  currentSyncPublications: string;\n\n  /**\n   * The current synchronization mode for funding\n   */\n  currentSyncFunding: string;\n\n  /**\n   * The synchronization options\n   */\n  syncModes: { value: string, label: string }[];\n\n  /**\n   * The synchronization options for publications\n   */\n  syncPublicationOptions: { value: string, label: string }[];\n\n  /**\n   * The synchronization options for funding\n   */\n  syncFundingOptions: { value: string, label: string }[];\n\n  /**\n   * The profile synchronization options\n   */\n  syncProfileOptions: { value: string, label: string, checked: boolean }[];\n\n  /**\n   * An event emitted when settings are updated\n   */\n  @Output() settingsUpdated: EventEmitter<void> = new EventEmitter<void>();\n  /**\n   * Emitter that triggers onDestroy lifecycle\n   * @private\n   */\n  readonly #destroy$ = new EventEmitter<void>();\n  /**\n   * {@link BehaviorSubject} that reflects {@link item} input changes\n   * @private\n   */\n  readonly #item$ = new BehaviorSubject<Item>(null);\n  /**\n   * {@link Observable} that contains {@link ResearcherProfile} linked to the {@link #item$}\n   * @private\n   */\n  #researcherProfile$: Observable<ResearcherProfile>;\n\n  constructor(private researcherProfileService: ResearcherProfileDataService,\n              private notificationsService: NotificationsService,\n              private translateService: TranslateService) {\n  }\n\n  /**\n   * The item for which showing the orcid settings\n   */\n  @Input()\n  set item(item: Item) {\n    this.#item$.next(item);\n  }\n\n  ngOnDestroy(): void {\n    this.#destroy$.next();\n  }\n\n  /**\n   * Init orcid settings form\n   */\n  ngOnInit() {\n    this.syncModes = [\n      {\n        label: this.messagePrefix + '.synchronization-mode.batch',\n        value: 'BATCH',\n      },\n      {\n        label: this.messagePrefix + '.synchronization-mode.manual',\n        value: 'MANUAL',\n      },\n    ];\n\n    this.syncPublicationOptions = ['DISABLED', 'ALL']\n      .map((value) => {\n        return {\n          label: this.messagePrefix + '.sync-publications.' + value.toLowerCase(),\n          value: value,\n        };\n      });\n\n    this.syncFundingOptions = ['DISABLED', 'ALL']\n      .map((value) => {\n        return {\n          label: this.messagePrefix + '.sync-fundings.' + value.toLowerCase(),\n          value: value,\n        };\n      });\n\n    this.updateSyncProfileOptions(this.#item$.asObservable());\n    this.updateSyncPreferences(this.#item$.asObservable());\n\n    this.#researcherProfile$ =\n      this.#item$.pipe(\n        switchMap(item =>\n          this.researcherProfileService.findByRelatedItem(item)\n            .pipe(\n              getFirstCompletedRemoteData(),\n              catchError(createFailedRemoteDataObjectFromError$<ResearcherProfile>),\n              getRemoteDataPayload(),\n            ),\n        ),\n        takeUntil(this.#destroy$),\n      );\n  }\n\n  /**\n   * Generate path operations to save orcid synchronization preferences\n   *\n   * @param form The form group\n   */\n  onSubmit(form: UntypedFormGroup): void {\n    const operations: Operation[] = [];\n    this.fillOperationsFor(operations, '/orcid/mode', form.value.syncMode);\n    this.fillOperationsFor(operations, '/orcid/publications', form.value.syncPublications);\n    this.fillOperationsFor(operations, '/orcid/fundings', form.value.syncFundings);\n\n    const syncProfileValue = this.syncProfileOptions\n      .map((syncProfileOption => syncProfileOption.value))\n      .filter((value) => form.value['syncProfile_' + value])\n      .join(',');\n\n    this.fillOperationsFor(operations, '/orcid/profile', syncProfileValue);\n\n    if (operations.length === 0) {\n      return;\n    }\n\n    this.#researcherProfile$\n      .pipe(\n        switchMap(researcherProfile => this.researcherProfileService.patch(researcherProfile, operations)),\n        getFirstCompletedRemoteData(),\n        catchError(createFailedRemoteDataObjectFromError$<ResearcherProfile>),\n        take(1),\n      )\n      .subscribe((remoteData: RemoteData<ResearcherProfile>) => {\n        if (remoteData.hasFailed) {\n          this.notificationsService.error(this.translateService.get(this.messagePrefix + '.synchronization-settings-update.error'));\n        } else {\n          this.notificationsService.success(this.translateService.get(this.messagePrefix + '.synchronization-settings-update.success'));\n          this.settingsUpdated.emit();\n        }\n      });\n  }\n\n  /**\n   *\n   * Handles subscriptions to populate sync preferences\n   *\n   * @param item observable that emits update on item changes\n   * @private\n   */\n  private updateSyncPreferences(item: Observable<Item>) {\n    item.pipe(\n      filter(hasValue),\n      map(i => this.getCurrentPreference(i, 'dspace.orcid.sync-mode', ['BATCH', 'MANUAL'], 'MANUAL')),\n      takeUntil(this.#destroy$),\n    ).subscribe(val => this.currentSyncMode = val);\n    item.pipe(\n      filter(hasValue),\n      map(i => this.getCurrentPreference(i, 'dspace.orcid.sync-publications', ['DISABLED', 'ALL'], 'DISABLED')),\n      takeUntil(this.#destroy$),\n    ).subscribe(val => this.currentSyncPublications = val);\n    item.pipe(\n      filter(hasValue),\n      map(i => this.getCurrentPreference(i, 'dspace.orcid.sync-fundings', ['DISABLED', 'ALL'], 'DISABLED')),\n      takeUntil(this.#destroy$),\n    ).subscribe(val => this.currentSyncFunding = val);\n  }\n\n  /**\n   * Handles subscription to populate the {@link syncProfileOptions} field\n   *\n   * @param item observable that emits update on item changes\n   * @private\n   */\n  private updateSyncProfileOptions(item: Observable<Item>) {\n    item.pipe(\n      filter(hasValue),\n      map(i => i.allMetadataValues('dspace.orcid.sync-profile')),\n      map(metadata =>\n        ['BIOGRAPHICAL', 'IDENTIFIERS']\n          .map((value) => {\n            return {\n              label: this.messagePrefix + '.sync-profile.' + value.toLowerCase(),\n              value: value,\n              checked: metadata.includes(value),\n            };\n          }),\n      ),\n      takeUntil(this.#destroy$),\n    )\n      .subscribe(value => this.syncProfileOptions = value);\n  }\n\n  /**\n   * Retrieve setting saved in the item's metadata\n   *\n   * @param item The item from which retrieve settings\n   * @param metadataField The metadata name that contains setting\n   * @param allowedValues The allowed values\n   * @param defaultValue  The default value\n   * @private\n   */\n  private getCurrentPreference(item: Item, metadataField: string, allowedValues: string[], defaultValue: string): string {\n    const currentPreference = item.firstMetadataValue(metadataField);\n    return (currentPreference && allowedValues.includes(currentPreference)) ? currentPreference : defaultValue;\n  }\n\n  /**\n   * Generate a replace patch operation\n   *\n   * @param operations\n   * @param path\n   * @param currentValue\n   */\n  private fillOperationsFor(operations: Operation[], path: string, currentValue: string): void {\n    operations.push({\n      path: path,\n      op: 'replace',\n      value: currentValue,\n    });\n  }\n\n}\n\n","<div class=\"container mb-5\">\n  <h2>{{'person.orcid.sync.setting' | translate}}</h2>\n  <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f.form)\">\n    <div class=\"row mb-3\">\n      <div class=\"col-md\">\n        <div class=\"card\" data-test=\"sync-mode\">\n          <div class=\"card-header\">{{ 'person.page.orcid.synchronization-mode'| translate }}</div>\n          <div class=\"card-body\">\n            <div class=\"container\">\n              <div class=\"row\">\n                <ds-alert [type]=\"AlertType.Info\">\n                  {{ 'person.page.orcid.synchronization-mode-message' | translate}}\n                </ds-alert>\n              </div>\n              <div class=\"form-group row\">\n                <label for=\"syncMode\">{{ 'person.page.orcid.synchronization-mode.label'| translate }}</label>\n                <select class=\"form-control\" [(ngModel)]=\"currentSyncMode\" name=\"syncMode\" id=\"syncMode\"\n                        required>\n                  <option *ngFor=\"let syncMode of syncModes\"\n                          [value]=\"syncMode.value\">{{ syncMode.label | translate }}</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md mb-3\">\n        <div class=\"card h-100\" data-test=\"sync-mode-publication\">\n          <div class=\"card-header\">{{ 'person.page.orcid.publications-preferences'| translate }}</div>\n          <div class=\"card-body\">\n            <div class=\"container\">\n              <div class=\"row\">\n                <ds-alert [type]=\"AlertType.Info\">\n                  {{ 'person.page.orcid.synchronization-mode-publication-message' | translate}}\n                </ds-alert>\n              </div>\n              <div class=\"form-group\">\n                <div *ngFor=\"let option of syncPublicationOptions\" class=\"row form-check\">\n                  <input type=\"radio\" [(ngModel)]=\"currentSyncPublications\"\n                         name=\"syncPublications\" id=\"publicationOption_{{option.value}}\" [value]=\"option.value\"\n                         required>\n                  <label for=\"publicationOption_{{option.value}}\"\n                         class=\"ml-2\">{{option.label | translate}}</label>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md mb-3\">\n        <div class=\"card h-100\" data-test=\"sync-mode-funding\">\n          <div class=\"card-header\">{{ 'person.page.orcid.funding-preferences'| translate }}</div>\n          <div class=\"card-body\">\n            <div class=\"container\">\n              <div class=\"row\">\n                <ds-alert [type]=\"AlertType.Info\">\n                  {{ 'person.page.orcid.synchronization-mode-funding-message' | translate}}\n                </ds-alert>\n              </div>\n              <div class=\"form-group\">\n                <div *ngFor=\"let option of syncFundingOptions\" class=\"row form-check\">\n                  <input type=\"radio\" [(ngModel)]=\"currentSyncFunding\"\n                         name=\"syncFundings\" id=\"fundingOption_{{option.value}}\" [value]=\"option.value\"\n                         required>\n                  <label for=\"fundingOption_{{option.value}}\" class=\"ml-2\">{{option.label | translate}}</label>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md mb-3\">\n        <div class=\"card h-100\" data-test=\"profile-preferences\">\n          <div class=\"card-header\">{{ 'person.page.orcid.profile-preferences'| translate }}</div>\n          <div class=\"card-body\">\n            <div class=\"container\">\n              <div class=\"row\">\n                <ds-alert [type]=\"AlertType.Info\">\n                  {{ 'person.page.orcid.synchronization-mode-profile-message' | translate}}\n                </ds-alert>\n              </div>\n              <div class=\"form-group\">\n                <div *ngFor=\"let option of syncProfileOptions\" class=\"row form-check\">\n                  <input type=\"checkbox\" [(ngModel)]=\"option.checked\"\n                         name=\"syncProfile_{{option.value}}\" id=\"profileOption_{{option.value}}\"\n                         [value]=\"option.value\">\n                  <label for=\"profileOption_{{option.value}}\" class=\"ml-2\">{{option.label | translate}}</label>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n        <button type=\"submit\" class=\"btn btn-primary float-right\">\n          <i class=\"fas fa-edit\"></i>\n          {{ 'person.page.orcid.save.preference.changes' | translate }}\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component } from '@angular/core';\n\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { ItemPageComponent } from './item-page.component';\n\n/**\n * Themed wrapper for ItemPageComponent\n */\n@Component({\n  selector: 'ds-item-page',\n  styleUrls: [],\n  templateUrl: './../../shared/theme-support/themed.component.html',\n  standalone: true,\n  imports: [ItemPageComponent],\n})\n\nexport class ThemedItemPageComponent extends ThemedComponent<ItemPageComponent> {\n  protected getComponentName(): string {\n    return 'ItemPageComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/item-page/simple/item-page.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./item-page.component`);\n  }\n\n}\n","<ng-template #vcr>\n</ng-template>\n<div #content>\n  <ng-content></ng-content>\n</div>\n","import {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {\n  map,\n  switchMap,\n} from 'rxjs/operators';\n\nimport { getPageNotFoundRoute } from '../../../app-routing-paths';\nimport { AuthService } from '../../../core/auth/auth.service';\nimport { RemoteData } from '../../../core/data/remote-data';\nimport { VersionDataService } from '../../../core/data/version-data.service';\nimport { redirectOn4xx } from '../../../core/shared/authorized.operators';\nimport { Item } from '../../../core/shared/item.model';\nimport {\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteDataPayload,\n} from '../../../core/shared/operators';\nimport { Version } from '../../../core/shared/version.model';\nimport { getItemPageRoute } from '../../item-page-routing-paths';\n\n@Component({\n  selector: 'ds-version-page',\n  templateUrl: './version-page.component.html',\n  styleUrls: ['./version-page.component.scss'],\n  standalone: true,\n})\nexport class VersionPageComponent implements OnInit {\n\n  versionRD$: Observable<RemoteData<Version>>;\n  itemRD$: Observable<RemoteData<Item>>;\n\n  constructor(\n    protected route: ActivatedRoute,\n    private router: Router,\n    private versionService: VersionDataService,\n    private authService: AuthService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    /* Retrieve version from resolver or redirect on 4xx */\n    this.versionRD$ = this.route.data.pipe(\n      map((data) => data.dso as RemoteData<Version>),\n      redirectOn4xx(this.router, this.authService),\n    );\n\n    /* Retrieve item from version and reroute to item's page or handle missing item */\n    this.versionRD$.pipe(\n      getFirstSucceededRemoteDataPayload(),\n      switchMap((version) => version.item),\n      redirectOn4xx(this.router, this.authService),\n      getFirstCompletedRemoteData(),\n    ).subscribe((itemRD: RemoteData<Item>) => {\n      if (itemRD.hasNoContent) {\n        this.router.navigateByUrl(getPageNotFoundRoute(), { skipLocationChange: true });\n      } else {\n        const itemUrl = getItemPageRoute(itemRD.payload);\n        this.router.navigateByUrl(itemUrl);\n      }\n    });\n\n  }\n\n}\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { AppState } from '../../app.reducer';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { VersionDataService } from '../../core/data/version-data.service';\nimport { ResolvedAction } from '../../core/resolving/resolver.actions';\nimport { getFirstCompletedRemoteData } from '../../core/shared/operators';\nimport { Version } from '../../core/shared/version.model';\nimport {\n  followLink,\n  FollowLinkConfig,\n} from '../../shared/utils/follow-link-config.model';\n\n/**\n * The self links defined in this list are expected to be requested somewhere in the near future\n * Requesting them as embeds will limit the number of requests\n */\nexport const VERSION_PAGE_LINKS_TO_FOLLOW: FollowLinkConfig<Version>[] = [\n  followLink('item'),\n];\n\n/**\n * Method for resolving a version based on the parameters in the current route\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {VersionDataService} versionService\n * @param {Store<AppState>} store\n * @returns Observable<<RemoteData<Item>> Emits the found item based on the parameters in the current route,\n * or an error if something went wrong\n */\nexport const versionResolver: ResolveFn<RemoteData<Version>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  versionService: VersionDataService = inject(VersionDataService),\n  store: Store<AppState> = inject(Store<AppState>),\n): Observable<RemoteData<Version>> => {\n  const versionRD$ = versionService.findById(route.params.id,\n    true,\n    false,\n    ...VERSION_PAGE_LINKS_TO_FOLLOW,\n  ).pipe(\n    getFirstCompletedRemoteData(),\n  );\n\n  versionRD$.subscribe((versionRD: RemoteData<Version>) => {\n    store.dispatch(new ResolvedAction(state.url, versionRD.payload));\n  });\n\n  return versionRD$;\n};\n","import {\n  AsyncPipe,\n  NgClass,\n  NgFor,\n} from '@angular/common';\nimport {\n  Component,\n  forwardRef,\n  Input,\n} from '@angular/core';\nimport {\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { DSONameService } from '../../../core/breadcrumbs/dso-name.service';\nimport { DSpaceObject } from '../../../core/shared/dspace-object.model';\nimport { ViewMode } from '../../../core/shared/view-mode.model';\nimport { hasValue } from '../../empty.util';\nimport { CollectionElementLinkType } from '../../object-collection/collection-element-link.type';\nimport { ListableObjectComponentLoaderComponent } from '../../object-collection/shared/listable-object/listable-object-component-loader.component';\nimport { ClickOutsideDirective } from '../../utils/click-outside.directive';\nimport { DebounceDirective } from '../../utils/debounce.directive';\nimport { InputSuggestionsComponent } from '../input-suggestions.component';\n\n@Component({\n  selector: 'ds-dso-input-suggestions',\n  styleUrls: ['./../input-suggestions.component.scss'],\n  templateUrl: './dso-input-suggestions.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      // Usage of forwardRef necessary https://github.com/angular/angular.io/issues/1151\n      // eslint-disable-next-line @angular-eslint/no-forward-ref\n      useExisting: forwardRef(() => DsoInputSuggestionsComponent),\n      multi: true,\n    },\n  ],\n  standalone: true,\n  imports: [FormsModule, ClickOutsideDirective, DebounceDirective, NgClass, NgFor, ListableObjectComponentLoaderComponent, AsyncPipe, TranslateModule],\n})\n\n/**\n * Component representing a form with a autocomplete functionality for DSpaceObjects\n */\nexport class DsoInputSuggestionsComponent extends InputSuggestionsComponent {\n  /**\n   * The view mode of the listed object suggestions\n   */\n  viewMode = ViewMode.ListElement;\n\n  /**\n   * The available link types\n   */\n  linkTypes = CollectionElementLinkType;\n\n  /**\n   * The suggestions that should be shown\n   */\n  @Input() suggestions: DSpaceObject[] = [];\n\n  currentObject: DSpaceObject;\n\n  constructor(\n    protected dsoNameService: DSONameService,\n  ) {\n    super();\n  }\n\n  onSubmit(data: DSpaceObject) {\n    if (hasValue(data)) {\n      this.value = this.dsoNameService.getName(data);\n      this.currentObject = data;\n      this.submitSuggestion.emit(data);\n    }\n  }\n\n  onClickSuggestion(data: DSpaceObject) {\n    this.value = this.dsoNameService.getName(data);\n    this.currentObject = data;\n    this.clickSuggestion.emit(data);\n    this.close();\n    this.blockReopen = true;\n    this.queryInput.nativeElement.focus();\n    return false;\n  }\n}\n","<form #form=\"ngForm\" (ngSubmit)=\"onSubmit(currentObject)\"\n      [action]=\"action\"\n      (keydown.arrowdown)=\"shiftFocusDown($event)\"\n      (keydown.arrowup)=\"shiftFocusUp($event)\" (keydown.esc)=\"close()\"\n      (dsClickOutside)=\"close();\">\n    <input #inputField type=\"text\" [(ngModel)]=\"value\" [name]=\"name\"\n           class=\"form-control suggestion_input mb-2\"\n           [ngClass]=\"{'is-invalid': !valid}\"\n           [dsDebounce]=\"debounceTime\" (onDebounce)=\"find($event)\"\n           [placeholder]=\"placeholder\"\n           [ngModelOptions]=\"{standalone: true}\" autocomplete=\"off\"/>\n    <button class=\"sr-only\" type=\"submit\">\n        {{'search.filters.search.submit' | translate}}\n    </button>\n    <div class=\"autocomplete dropdown-menu\" [ngClass]=\"{'show': (show | async) && isNotEmpty(suggestions)}\">\n        <div class=\"dropdown-list\">\n            <div *ngFor=\"let suggestionOption of suggestions\">\n                <button class=\"d-block dropdown-item\"  (click)=\"onClickSuggestion(suggestionOption)\" #suggestion>\n                    <ds-listable-object-component-loader [object]=\"suggestionOption\" [viewMode]=\"viewMode\" [linkType]=\"linkTypes.None\"></ds-listable-object-component-loader>\n                </button>\n            </div>\n        </div>\n    </div>\n</form>\n\n","var map = {\n\t\"./custom/app/item-page/simple/item-page.component\": [\n\t\t37078,\n\t\t\"src_themes_custom_app_item-page_simple_item-page_component_ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 5729;\nmodule.exports = webpackAsyncContext;"],"names":["inject","getItemPageLinksToFollow","ItemDataService","DSOBreadcrumbResolver","DSOBreadcrumbsService","itemBreadcrumbResolver","route","state","breadcrumbService","dataService","linksToFollow","Router","combineLatest","map","switchMap","isNotEmpty","ConfigurationDataService","ResearcherProfileDataService","NativeWindowRef","NativeWindowService","getFirstCompletedRemoteData","getFirstSucceededRemoteDataPayload","URLCombiner","OrcidAuthService","constructor","_window","configurationService","researcherProfileService","router","isLinkedToOrcid","item","hasMetadata","onlyAdminCanDisconnectProfileFromOrcid","getOrcidDisconnectionAllowedUsersConfiguration","pipe","propertyRD","hasSucceeded","payload","values","value","toLowerCase","includes","ownerCanDisconnectProfileFromOrcid","linkOrcidByItem","person","code","operations","path","op","findById","firstMetadata","authority","profileRD","patch","unlinkOrcidByItem","getOrcidAuthorizeUrl","profile","findByPropertyName","authorizeUrl","clientId","scopes","redirectUri","nativeWindow","origin","encodeURIComponent","url","split","join","getOrcidAuthorizationScopesByItem","allMetadataValues","getOrcidAuthorizationScopes","i0","ɵɵinject","i1","i2","i3","factory","ɵfac","providedIn","AsyncPipe","Location","NgIf","ReactiveFormsModule","UntypedFormBuilder","UntypedFormControl","Validators","ActivatedRoute","RouterLink","TranslateModule","TranslateService","observableCombineLatest","of","observableOf","filter","take","getBitstreamDownloadRoute","getForbiddenRoute","AuthService","DSONameService","BitstreamDataService","AuthorizationDataService","FeatureID","ItemRequestDataService","ItemRequest","BtnDisabledDirective","hasValue","NotificationsService","getItemPageRoute","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵproperty","ctx_r0","getBitstreamLink","ɵɵtextInterpolate2","bitstreamName","ɵɵtextInterpolate1","ɵɵtemplate","BitstreamRequestACopyPageComponent_div_22_span_1_Template","name","errors","required","BitstreamRequestACopyPageComponent_div_29_span_1_Template","email","BitstreamRequestACopyPageComponent","location","translateService","authorizationService","auth","formBuilder","itemRequestDataService","notificationsService","dsoNameService","bitstreamService","subs","ngOnInit","requestCopyForm","group","validators","pattern","allfiles","message","item$","data","dso","push","subscribe","itemName","getName","bitstream$","queryParams","params","bitstream","canDownload$","isAuthorized","CanDownload","self","undefined","canRequestCopy$","CanRequestACopy","canDownload","canRequestCopy","navigateByUrl","skipLocationChange","initValues","get","getCurrentUser","user","patchValue","isAuthenticated","authenticated","getAuthenticatedUserFromStore","onSubmit","itemRequest","bitstreamId","uuid","itemId","requestEmail","requestName","requestMessage","requestACopy","rd","success","navigateBack","error","ngOnDestroy","forEach","sub","unsubscribe","back","getItemPath","ɵɵdirectiveInject","i4","i5","i6","i7","i8","i9","i10","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","BitstreamRequestACopyPageComponent_Template","rf","ctx","BitstreamRequestACopyPageComponent_div_4_Template","BitstreamRequestACopyPageComponent_p_12_Template","BitstreamRequestACopyPageComponent_p_13_Template","ɵɵlistener","BitstreamRequestACopyPageComponent_Template_form_ngSubmit_14_listener","ɵɵelement","BitstreamRequestACopyPageComponent_div_22_Template","BitstreamRequestACopyPageComponent_div_29_Template","BitstreamRequestACopyPageComponent_Template_a_click_57_listener","BitstreamRequestACopyPageComponent_Template_button_click_61_listener","ɵɵclassMap","invalid","dirty","touched","TranslatePipe","ɵNgNoValidate","DefaultValueAccessor","RadioControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","encapsulation","FormsModule","environment","getBitstreamModuleRoute","BundleDataService","RequestService","Bundle","isEmpty","DsoInputSuggestionsComponent","UploaderComponent","UploaderOptions","VarDirective","getEntityEditRoute","ctx_r2","item_r2","ɵɵelementContainerStart","UploadBitstreamComponent_ng_container_1_ng_container_6_div_1_Template","UploadBitstreamComponent_ng_container_1_button_15_Template_button_click_0_listener","ɵɵrestoreView","_r5","ɵɵnextContext","ɵɵresetView","createBundle","UploadBitstreamComponent_ng_container_1_ds_uploader_16_Template_ds_uploader_onCompleteItem_0_listener","$event","_r6","onCompleteItem","UploadBitstreamComponent_ng_container_1_ds_uploader_16_Template_ds_uploader_onUploadError_0_listener","onUploadError","uploadFilesOptions","UploadBitstreamComponent_ng_container_1_ng_container_6_Template","ɵɵtwoWayListener","UploadBitstreamComponent_ng_container_1_Template_ds_dso_input_suggestions_ngModelChange_12_listener","_r1","ɵɵtwoWayBindingSet","selectedBundleName","UploadBitstreamComponent_ng_container_1_Template_ds_dso_input_suggestions_typeSuggestion_12_listener","bundleNameChange","UploadBitstreamComponent_ng_container_1_Template_ds_dso_input_suggestions_clickSuggestion_12_listener","onClick","UploadBitstreamComponent_ng_container_1_Template_ds_dso_input_suggestions_click_12_listener","f_r4","ɵɵreference","open","UploadBitstreamComponent_ng_container_1_button_15_Template","UploadBitstreamComponent_ng_container_1_ds_uploader_16_Template","UploadBitstreamComponent_ng_container_1_Template_button_click_17_listener","onCancel","tmp_3_0","itemRD$","bundles","getCurrentUrl","ɵɵtwoWayProperty","selectedBundleId","length","UploadBitstreamComponent","itemService","bundleService","authService","translate","requestService","Object","assign","authToken","disableMultipart","itemAlias","NOTIFICATIONS_PREFIX","snapshot","id","entityType","bundlesRD$","getBundles","remoteData","page","defaultBundle","bundle","standardBundles","check","_name","type","setUploadUrl","instant","getBitstreamsEndpoint","href","buildAuthHeader","uploaderComponent","ngAfterViewInit","removeByHrefSubstring","navigate","subscription","viewQuery","UploadBitstreamComponent_Query","UploadBitstreamComponent_ng_container_1_Template","NgModel","REQUEST_COPY_MODULE_PATH","authenticatedGuard","dsoEditMenuResolver","MenuItemType","ThemedFullItemPageComponent","itemPageResolver","ITEM_EDIT_PATH","ORCID_PATH","UPLOAD_BITSTREAM_PATH","OrcidPageComponent","orcidPageGuard","ThemedItemPageComponent","versionResolver","VersionPageComponent","ROUTES","resolve","breadcrumb","runGuardsAndResolvers","children","component","pathMatch","menu","loadChildren","then","m","canActivate","public","active","visible","index","model","LINK","text","link","Store","ResolvedAction","redirectOn4xx","store","itemRD","dispatch","thisRoute","itemRoute","parseUrl","toString","startsWith","subRoute","substring","indexOf","NgForOf","EventEmitter","SimpleChanges","BehaviorSubject","catchError","Item","AlertComponent","createFailedRemoteDataObjectFromError$","ɵɵelementContainer","ctx_r1","getAuthorizationDescription","auth_r1","OrcidAuthComponent_ng_template_6_div_2_li_8_Template","getOrcidAuthorizations","auth_r3","OrcidAuthComponent_ng_template_6_ds_alert_13_li_4_Template","getMissingOrcidAuthorizations","OrcidAuthComponent_ng_template_6_div_18_button_8_Template_button_click_0_listener","linkOrcid","OrcidAuthComponent_ng_template_6_div_18_Template_button_click_2_listener","_r4","unlinkOrcid","OrcidAuthComponent_ng_template_6_div_18_span_4_Template","OrcidAuthComponent_ng_template_6_div_18_span_6_Template","OrcidAuthComponent_ng_template_6_div_18_button_8_Template","unlinkProcessing","hasMissingOrcidAuthorizations","OrcidAuthComponent_ng_template_6_div_2_Template","OrcidAuthComponent_ng_template_6_ds_alert_11_Template","OrcidAuthComponent_ng_template_6_ds_alert_13_Template","OrcidAuthComponent_ng_template_6_ds_alert_15_Template","OrcidAuthComponent_ng_template_6_div_18_Template","hasOrcidAuthorizations","OrcidAuthComponent_ng_template_8_Template_button_click_10_listener","getOrcidNotLinkedMessage","OrcidAuthComponent","orcidAuthService","profileAuthorizationScopes","missingAuthorizationScopes","orcidAuthorizationScopes","isOrcidLinked$","onlyAdminCanDisconnectProfileFromOrcid$","ownerCanDisconnectProfileFromOrcid$","unlink","next","initOrcidAuthSettings","ngOnChanges","changes","isFirstChange","currentValue","previousValue","asObservable","orcid","firstMetadataValue","scope","replace","hasFailed","emit","setOrcidAuthorizationsFromItem","setMissingOrcidAuthorizations","result","profileScopes","orcidScopes","missingScopes","inputs","outputs","ɵɵNgOnChangesFeature","OrcidAuthComponent_Template","OrcidAuthComponent_ng_container_4_Template","OrcidAuthComponent_ng_template_6_Template","ɵɵtemplateRefExtractor","OrcidAuthComponent_ng_template_8_Template","orcidLinked_r7","orcidNotLinked_r8","styles","CommonModule","isPlatformBrowser","PLATFORM_ID","AlertType","ThemedLoadingComponent","OrcidQueueComponent","OrcidSyncSettingsComponent","Error","OrcidPageComponent_ng_container_5_ds_orcid_sync_setting_3_Template_ds_orcid_sync_setting_settingsUpdated_0_listener","_r3","updateItem","OrcidPageComponent_ng_container_5_Template_ds_orcid_auth_unlink_1_listener","_r2","OrcidPageComponent_ng_container_5_ds_orcid_sync_setting_3_Template","OrcidPageComponent_ng_container_5_ds_orcid_queue_4_Template","getItemPage","platformId","connectionStatus","processingConnection","codeParam$","queryParamMap","paramMap","codeParam","linkProfileToOrcid","clearRouteParams","keys","_","relativeTo","OrcidPageComponent_Template","OrcidPageComponent_ds_loading_0_Template","OrcidPageComponent_div_2_Template","OrcidPageComponent_ng_container_5_Template","OrcidPageComponent_div_9_Template","dsoPageSingleFeatureGuard","CanSynchronizeWithORCID","NgbTooltipModule","debounceTime","distinctUntilChanged","tap","OrcidHistoryDataService","OrcidQueueDataService","PaginationService","PaginationComponent","PaginationComponentOptions","AlertTypeEnum","Info","OrcidQueueComponent_ds_pagination_10_tr_16_Template_button_click_8_listener","entry_r4","$implicit","send","OrcidQueueComponent_ds_pagination_10_tr_16_Template_button_click_14_listener","discardEntry","getIconClass","getIconTooltip","description","getOperationTooltip","getOperationClass","OrcidQueueComponent_ds_pagination_10_Template_ds_pagination_paginationChange_0_listener","updateList","OrcidQueueComponent_ds_pagination_10_tr_16_Template","paginationOptions","tmp_2_0","getList","totalElements","tmp_8_0","orcidQueueService","paginationService","orcidHistoryService","pageSize","processing$","list$","getCurrentPagination","config","searchByProfileItemId","clearFindByProfileItemRequests","orcidQueue","recordType","operation","deleteById","isSuccess","sendToORCID","handleOrcidHistoryRecordCreation","statusCode","handleValidationErrors","getUnauthorizedErrorContent","orcidHistory","status","timeOut","title","content","warning","translations","errorMessage","trim","messages","shift","OrcidQueueComponent_Template","OrcidQueueComponent_ds_loading_1_Template","OrcidQueueComponent_ds_alert_7_Template","OrcidQueueComponent_ds_pagination_10_Template","NgClass","NgbTooltip","takeUntil","getRemoteDataPayload","syncMode_r3","label","OrcidSyncSettingsComponent_div_37_Template_input_ngModelChange_1_listener","ctx_r4","currentSyncPublications","ɵɵpropertyInterpolate1","option_r6","OrcidSyncSettingsComponent_div_50_Template_input_ngModelChange_1_listener","_r7","currentSyncFunding","option_r8","OrcidSyncSettingsComponent_div_63_Template_input_ngModelChange_1_listener","option_r10","_r9","checked","destroy$","researcherProfile$","messagePrefix","settingsUpdated","syncModes","syncPublicationOptions","syncFundingOptions","updateSyncProfileOptions","updateSyncPreferences","findByRelatedItem","form","fillOperationsFor","syncMode","syncPublications","syncFundings","syncProfileValue","syncProfileOptions","syncProfileOption","researcherProfile","i","getCurrentPreference","val","currentSyncMode","metadata","metadataField","allowedValues","defaultValue","currentPreference","OrcidSyncSettingsComponent_Template","OrcidSyncSettingsComponent_Template_form_ngSubmit_4_listener","f_r2","OrcidSyncSettingsComponent_Template_select_ngModelChange_22_listener","OrcidSyncSettingsComponent_option_23_Template","OrcidSyncSettingsComponent_div_37_Template","OrcidSyncSettingsComponent_div_50_Template","OrcidSyncSettingsComponent_div_63_Template","NgSelectOption","ɵNgSelectMultipleOption","CheckboxControlValueAccessor","SelectControlValueAccessor","RequiredValidator","NgForm","ThemedComponent","ItemPageComponent","getComponentName","importThemedComponent","themeName","importUnthemedComponent","t","ɵɵInheritDefinitionFeature","ngContentSelectors","_c0","ThemedItemPageComponent_Template","ThemedItemPageComponent_ng_template_0_Template","ɵɵprojection","getPageNotFoundRoute","VersionDataService","versionService","versionRD$","version","hasNoContent","itemUrl","VersionPageComponent_Template","followLink","VERSION_PAGE_LINKS_TO_FOLLOW","versionRD","NgFor","forwardRef","NG_VALUE_ACCESSOR","ViewMode","CollectionElementLinkType","ListableObjectComponentLoaderComponent","ClickOutsideDirective","DebounceDirective","InputSuggestionsComponent","DsoInputSuggestionsComponent_div_10_Template_button_click_1_listener","suggestionOption_r3","ctx_r3","onClickSuggestion","viewMode","linkTypes","None","ListElement","suggestions","currentObject","submitSuggestion","clickSuggestion","close","blockReopen","queryInput","nativeElement","focus","ɵɵProvidersFeature","provide","useExisting","multi","DsoInputSuggestionsComponent_Template","DsoInputSuggestionsComponent_Template_form_ngSubmit_0_listener","DsoInputSuggestionsComponent_Template_form_keydown_arrowdown_0_listener","shiftFocusDown","DsoInputSuggestionsComponent_Template_form_keydown_arrowup_0_listener","shiftFocusUp","DsoInputSuggestionsComponent_Template_form_keydown_esc_0_listener","DsoInputSuggestionsComponent_Template_form_dsClickOutside_0_listener","DsoInputSuggestionsComponent_Template_input_ngModelChange_2_listener","DsoInputSuggestionsComponent_Template_input_onDebounce_2_listener","find","DsoInputSuggestionsComponent_div_10_Template","action","ɵɵsanitizeUrl","ɵɵpureFunction1","valid","placeholder","ɵɵpureFunction0","_c1","_c2","show"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}