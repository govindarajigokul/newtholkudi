{"version":3,"file":"default-src_app_core_breadcrumbs_i18n-breadcrumb_resolver_ts-src_app_dso-shared_dso-edit-meta-179f34.js","mappings":"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","sources":["./src/app/core/breadcrumbs/i18n-breadcrumb.resolver.ts","./src/app/core/breadcrumbs/i18n-breadcrumbs.service.ts","./src/app/core/data/array-move-change-analyzer.service.ts","./src/app/core/data/object-updates/patch-operation-service/operations/metadata/metadata-patch-add-operation.model.ts","./src/app/core/data/object-updates/patch-operation-service/operations/metadata/metadata-patch-move-operation.model.ts","./src/app/core/data/object-updates/patch-operation-service/operations/metadata/metadata-patch-operation.model.ts","./src/app/core/data/object-updates/patch-operation-service/operations/metadata/metadata-patch-remove-operation.model.ts","./src/app/core/data/object-updates/patch-operation-service/operations/metadata/metadata-patch-replace-operation.model.ts","./src/app/dso-shared/dso-edit-metadata/dso-edit-metadata-field-values/dso-edit-metadata-field-values.component.ts","./src/app/dso-shared/dso-edit-metadata/dso-edit-metadata-field-values/dso-edit-metadata-field-values.component.html","./src/app/dso-shared/dso-edit-metadata/dso-edit-metadata-form.ts","./src/app/dso-shared/dso-edit-metadata/dso-edit-metadata-headers/dso-edit-metadata-headers.component.ts","./src/app/dso-shared/dso-edit-metadata/dso-edit-metadata-headers/dso-edit-metadata-headers.component.html","./src/app/dso-shared/dso-edit-metadata/dso-edit-metadata-value-headers/dso-edit-metadata-value-headers.component.ts","./src/app/dso-shared/dso-edit-metadata/dso-edit-metadata-value-headers/dso-edit-metadata-value-headers.component.html","./src/app/dso-shared/dso-edit-metadata/dso-edit-metadata-value/dso-edit-metadata-value.component.ts","./src/app/dso-shared/dso-edit-metadata/dso-edit-metadata-value/dso-edit-metadata-value.component.html","./src/app/dso-shared/dso-edit-metadata/dso-edit-metadata.component.ts","./src/app/dso-shared/dso-edit-metadata/dso-edit-metadata.component.html","./src/app/dso-shared/dso-edit-metadata/metadata-field-selector/metadata-field-selector.component.ts","./src/app/dso-shared/dso-edit-metadata/metadata-field-selector/metadata-field-selector.component.html","./src/app/dso-shared/dso-edit-metadata/themed-dso-edit-metadata.component.ts","./src/app/shared/theme-support/themed.component.html","./src/themes/ lazy ^\\.\\/.*\\/app\\/dso\\-shared\\/dso\\-edit\\-metadata\\/dso\\-edit\\-metadata\\.component$ namespace object"],"sourcesContent":["import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { BreadcrumbConfig } from '../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { hasNoValue } from '../../shared/empty.util';\nimport { currentPathFromSnapshot } from '../../shared/utils/route.utils';\nimport { I18nBreadcrumbsService } from './i18n-breadcrumbs.service';\n\n/**\n * Method for resolving an I18n breadcrumb configuration object\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {I18nBreadcrumbsService} breadcrumbService\n * @returns BreadcrumbConfig object\n */\nexport const i18nBreadcrumbResolver: ResolveFn<BreadcrumbConfig<string>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  breadcrumbService: I18nBreadcrumbsService = inject(I18nBreadcrumbsService),\n): BreadcrumbConfig<string> => {\n  const key = route.data.breadcrumbKey;\n  if (hasNoValue(key)) {\n    throw new Error('You provided an i18nBreadcrumbResolver for url \\\"' + route.url + '\\\" but no breadcrumbKey in the route\\'s data');\n  }\n  const fullPath = currentPathFromSnapshot(route);\n  return { provider: breadcrumbService, key: key, url: fullPath };\n};\n","import { Injectable } from '@angular/core';\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs';\n\nimport { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport { BreadcrumbsProviderService } from './breadcrumbsProviderService';\n\n/**\n * The postfix for i18n breadcrumbs\n */\nexport const BREADCRUMB_MESSAGE_POSTFIX = '.breadcrumbs';\n\n/**\n * Service to calculate i18n breadcrumbs for a single part of the route\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class I18nBreadcrumbsService implements BreadcrumbsProviderService<string> {\n\n  /**\n   * Method to calculate the breadcrumbs\n   * @param key The key used to resolve the breadcrumb\n   * @param url The url to use as a link for this breadcrumb\n   */\n  getBreadcrumbs(key: string, url: string): Observable<Breadcrumb[]> {\n    return observableOf([new Breadcrumb(key + BREADCRUMB_MESSAGE_POSTFIX, url)]);\n  }\n}\n","import { moveItemInArray } from '@angular/cdk/drag-drop';\nimport { Injectable } from '@angular/core';\nimport { MoveOperation } from 'fast-json-patch';\n\nimport { hasValue } from '../../shared/empty.util';\n\n/**\n * A class to determine move operations between two arrays\n */\n@Injectable({ providedIn: 'root' })\nexport class ArrayMoveChangeAnalyzer<T> {\n\n  /**\n   * Compare two arrays detecting and returning move operations\n   *\n   * @param array1  The original array\n   * @param array2  The custom array to compare with the original\n   */\n  diff(array1: T[], array2: T[]): MoveOperation[] {\n    return this.getMoves(array1, array2).map((move) => Object.assign({\n      op: 'move',\n      from: '/' + move[0],\n      path: '/' + move[1],\n    }) as MoveOperation);\n  }\n\n  /**\n   * Determine a set of moves required to transform array1 into array2\n   * The moves are returned as an array of pairs of numbers where the first number is the original index and the second\n   * is the new index\n   * It is assumed the operations are executed in the order they're returned (and not simultaneously)\n   * @param array1\n   * @param array2\n   */\n  private getMoves(array1: any[], array2: any[]): number[][] {\n    const moved = [...array2];\n\n    return array1.reduce((moves, item, index) => {\n      if (hasValue(item) && item !== moved[index]) {\n        const last = moved.lastIndexOf(item);\n        moveItemInArray(moved, last, index);\n        moves.unshift([index, last]);\n      }\n      return moves;\n    }, []);\n  }\n}\n","import { Operation } from 'fast-json-patch';\n\nimport { MetadataPatchOperation } from './metadata-patch-operation.model';\n\n/**\n * Wrapper object for a metadata patch add Operation\n */\nexport class MetadataPatchAddOperation extends MetadataPatchOperation {\n  static operationType = 'add';\n\n  /**\n   * The metadata value(s) to add to the field\n   */\n  value: any;\n\n  constructor(field: string, value: any) {\n    super(MetadataPatchAddOperation.operationType, field);\n    this.value = value;\n  }\n\n  /**\n   * Transform the MetadataPatchOperation into a fast-json-patch Operation by constructing its path and other properties\n   * using the information provided.\n   */\n  toOperation(): Operation {\n    return { op: this.op as any, path: `/metadata/${this.field}/-`, value: this.value };\n  }\n}\n","import { Operation } from 'fast-json-patch';\n\nimport { MetadataPatchOperation } from './metadata-patch-operation.model';\n\n/**\n * Wrapper object for a metadata patch move Operation\n */\nexport class MetadataPatchMoveOperation extends MetadataPatchOperation {\n  static operationType = 'move';\n\n  /**\n   * The original place of the metadata value to move\n   */\n  from: number;\n\n  /**\n   * The new place to move the metadata value to\n   */\n  to: number;\n\n  constructor(field: string, from: number, to: number) {\n    super(MetadataPatchMoveOperation.operationType, field);\n    this.from = from;\n    this.to = to;\n  }\n\n  /**\n   * Transform the MetadataPatchOperation into a fast-json-patch Operation by constructing its path and other properties\n   * using the information provided.\n   */\n  toOperation(): Operation {\n    return { op: this.op as any, from: `/metadata/${this.field}/${this.from}`, path: `/metadata/${this.field}/${this.to}` };\n  }\n}\n","import { Operation } from 'fast-json-patch';\n\n/**\n * Wrapper object for metadata patch Operations\n * It should contain at least the operation type and metadata field. An abstract method to transform this object\n * into a fast-json-patch Operation is defined in each instance extending from this.\n */\nexport abstract class MetadataPatchOperation {\n  /**\n   * The operation to perform\n   */\n  op: string;\n\n  /**\n   * The metadata field this operation is intended for\n   */\n  field: string;\n\n  constructor(op: string, field: string) {\n    this.op = op;\n    this.field = field;\n  }\n\n  /**\n   * Transform the MetadataPatchOperation into a fast-json-patch Operation by constructing its path and other properties\n   * using the information provided.\n   */\n  abstract toOperation(): Operation;\n}\n","import { Operation } from 'fast-json-patch';\n\nimport { MetadataPatchOperation } from './metadata-patch-operation.model';\n\n/**\n * Wrapper object for a metadata patch remove Operation\n */\nexport class MetadataPatchRemoveOperation extends MetadataPatchOperation {\n  static operationType = 'remove';\n\n  /**\n   * The place of the metadata value to remove within its field\n   */\n  place: number;\n\n  constructor(field: string, place: number) {\n    super(MetadataPatchRemoveOperation.operationType, field);\n    this.place = place;\n  }\n\n  /**\n   * Transform the MetadataPatchOperation into a fast-json-patch Operation by constructing its path and other properties\n   * using the information provided.\n   */\n  toOperation(): Operation {\n    return { op: this.op as any, path: `/metadata/${this.field}/${this.place}` };\n  }\n}\n","import { Operation } from 'fast-json-patch';\n\nimport { MetadataPatchOperation } from './metadata-patch-operation.model';\n\n/**\n * Wrapper object for a metadata patch replace Operation\n */\nexport class MetadataPatchReplaceOperation extends MetadataPatchOperation {\n  static operationType = 'replace';\n\n  /**\n   * The place of the metadata value within its field to modify\n   */\n  place: number;\n\n  /**\n   * The new value to replace the metadata with\n   */\n  value: any;\n\n  constructor(field: string, place: number, value: any) {\n    super(MetadataPatchReplaceOperation.operationType, field);\n    this.place = place;\n    this.value = value;\n  }\n\n  /**\n   * Transform the MetadataPatchOperation into a fast-json-patch Operation by constructing its path and other properties\n   * using the information provided.\n   */\n  toOperation(): Operation {\n    return { op: this.op as any, path: `/metadata/${this.field}/${this.place}`, value: this.value };\n  }\n}\n","import {\n  CdkDragDrop,\n  CdkDropList,\n  moveItemInArray,\n} from '@angular/cdk/drag-drop';\nimport {\n  AsyncPipe,\n  NgFor,\n} from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport {\n  BehaviorSubject,\n  Observable,\n} from 'rxjs';\n\nimport { DSpaceObject } from '../../../core/shared/dspace-object.model';\nimport {\n  DsoEditMetadataChangeType,\n  DsoEditMetadataForm,\n  DsoEditMetadataValue,\n} from '../dso-edit-metadata-form';\nimport { DsoEditMetadataValueComponent } from '../dso-edit-metadata-value/dso-edit-metadata-value.component';\nimport { DsoEditMetadataValueHeadersComponent } from '../dso-edit-metadata-value-headers/dso-edit-metadata-value-headers.component';\n\n@Component({\n  selector: 'ds-dso-edit-metadata-field-values',\n  styleUrls: ['./dso-edit-metadata-field-values.component.scss'],\n  templateUrl: './dso-edit-metadata-field-values.component.html',\n  standalone: true,\n  imports: [CdkDropList, DsoEditMetadataValueHeadersComponent, NgFor, DsoEditMetadataValueComponent, AsyncPipe],\n})\n/**\n * Component displaying table rows for each value for a certain metadata field within a form\n */\nexport class DsoEditMetadataFieldValuesComponent {\n  /**\n   * The parent {@link DSpaceObject} to display a metadata form for\n   * Also used to determine metadata-representations in case of virtual metadata\n   */\n  @Input() dso: DSpaceObject;\n  /**\n   * A dynamic form object containing all information about the metadata and the changes made to them, see {@link DsoEditMetadataForm}\n   */\n  @Input() form: DsoEditMetadataForm;\n\n  /**\n   * Metadata field to display values for\n   */\n  @Input() mdField: string;\n\n  /**\n   * Type of DSO we're displaying values for\n   * Determines i18n messages\n   */\n  @Input() dsoType: string;\n\n  /**\n   * Observable to check if the form is being saved or not\n   */\n  @Input() saving$: Observable<boolean>;\n\n  /**\n   * Tracks for which metadata-field a drag operation is taking place\n   * Null when no drag is currently happening for any field\n   */\n  @Input() draggingMdField$: BehaviorSubject<string>;\n\n  /**\n   * Emit when the value has been saved within the form\n   */\n  @Output() valueSaved: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * The DsoEditMetadataChangeType enumeration for access in the component's template\n   * @type {DsoEditMetadataChangeType}\n   */\n  public DsoEditMetadataChangeTypeEnum = DsoEditMetadataChangeType;\n\n  /**\n   * Drop a value into a new position\n   * Update the form's value array for the current field to match the dropped position\n   * Update the values their place property to match the new order\n   * Send an update to the parent\n   * @param event\n   */\n  drop(event: CdkDragDrop<any>) {\n    const dragIndex = event.previousIndex;\n    const dropIndex = event.currentIndex;\n    // Move the value within its field\n    moveItemInArray(this.form.fields[this.mdField], dragIndex, dropIndex);\n    // Update all the values in this field their place property\n    this.form.fields[this.mdField].forEach((value: DsoEditMetadataValue, index: number) => {\n      value.newValue.place = index;\n      value.confirmChanges();\n    });\n    // Update the form statuses\n    this.form.resetReinstatable();\n    this.valueSaved.emit();\n  }\n}\n","<div class=\"flex-grow-1 ds-drop-list h-100\" [class.disabled]=\"(draggingMdField$ | async) && (draggingMdField$ | async) !== mdField\" cdkDropList (cdkDropListDropped)=\"drop($event)\" role=\"table\">\n  <ds-dso-edit-metadata-value-headers role=\"presentation\" [dsoType]=\"dsoType\"></ds-dso-edit-metadata-value-headers>\n  <ds-dso-edit-metadata-value *ngFor=\"let mdValue of form.fields[mdField]; let idx = index\" role=\"presentation\"\n                              [dso]=\"dso\"\n                              [mdValue]=\"mdValue\"\n                              [mdField]=\"mdField\"\n                              [dsoType]=\"dsoType\"\n                              [saving$]=\"saving$\"\n                              [isOnlyValue]=\"form.fields[mdField].length === 1\"\n                              (edit)=\"mdValue.editing = true\"\n                              (confirm)=\"mdValue.confirmChanges($event); form.resetReinstatable(); valueSaved.emit()\"\n                              (remove)=\"mdValue.change === DsoEditMetadataChangeTypeEnum.ADD ? form.remove(mdField, idx) : mdValue.change = DsoEditMetadataChangeTypeEnum.REMOVE; form.resetReinstatable(); valueSaved.emit()\"\n                              (undo)=\"mdValue.change === DsoEditMetadataChangeTypeEnum.ADD ? form.remove(mdField, idx) : mdValue.discard(); valueSaved.emit()\"\n                              (dragging)=\"$event ? draggingMdField$.next(mdField) : draggingMdField$.next(null)\">\n  </ds-dso-edit-metadata-value>\n</div>\n","/* eslint-disable max-classes-per-file */\nimport {\n  MoveOperation,\n  Operation,\n} from 'fast-json-patch';\n\nimport { ArrayMoveChangeAnalyzer } from '../../core/data/array-move-change-analyzer.service';\nimport { MetadataPatchAddOperation } from '../../core/data/object-updates/patch-operation-service/operations/metadata/metadata-patch-add-operation.model';\nimport { MetadataPatchMoveOperation } from '../../core/data/object-updates/patch-operation-service/operations/metadata/metadata-patch-move-operation.model';\nimport { MetadataPatchRemoveOperation } from '../../core/data/object-updates/patch-operation-service/operations/metadata/metadata-patch-remove-operation.model';\nimport { MetadataPatchReplaceOperation } from '../../core/data/object-updates/patch-operation-service/operations/metadata/metadata-patch-replace-operation.model';\nimport {\n  MetadataMap,\n  MetadataValue,\n} from '../../core/shared/metadata.models';\nimport {\n  hasNoValue,\n  hasValue,\n  isEmpty,\n  isNotEmpty,\n} from '../../shared/empty.util';\n\n/**\n * Enumeration for the type of change occurring on a metadata value\n */\nexport enum DsoEditMetadataChangeType {\n  UPDATE = 1,\n  ADD = 2,\n  REMOVE = 3\n}\n\n/**\n * Class holding information about a metadata value and its changes within an edit form\n */\nexport class DsoEditMetadataValue {\n  /**\n   * The original metadata value (should stay the same!) used to compare changes with\n   */\n  originalValue: MetadataValue;\n\n  /**\n   * The new value, dynamically changing\n   */\n  newValue: MetadataValue;\n\n  /**\n   * A value that can be used to undo any discarding that took place\n   */\n  reinstatableValue: MetadataValue;\n\n  /**\n   * Whether or not this value is currently being edited or not\n   */\n  editing = false;\n\n  /**\n   * The type of change that's taking place on this metadata value\n   * Empty if no changes are made\n   */\n  change: DsoEditMetadataChangeType;\n\n  /**\n   * A flag to keep track if the value has been reordered (place has changed)\n   */\n  reordered = false;\n\n  /**\n   * A type or change that can be used to undo any discarding that took place\n   */\n  reinstatableChange: DsoEditMetadataChangeType;\n\n  constructor(value: MetadataValue, added = false) {\n    this.originalValue = value;\n    this.newValue = Object.assign(new MetadataValue(), value);\n    if (added) {\n      this.change = DsoEditMetadataChangeType.ADD;\n      this.editing = true;\n    }\n  }\n\n  /**\n   * Save the current changes made to the metadata value\n   * This will set the type of change to UPDATE if the new metadata value's value and/or language are different from\n   * the original value\n   * It will also set the editing flag to false\n   */\n  confirmChanges(finishEditing = false) {\n    this.reordered = this.originalValue.place !== this.newValue.place;\n    if (hasNoValue(this.change) || this.change === DsoEditMetadataChangeType.UPDATE) {\n      if (this.originalValue.value !== this.newValue.value || this.originalValue.language !== this.newValue.language\n        || this.originalValue.authority !== this.newValue.authority || this.originalValue.confidence !== this.newValue.confidence) {\n        this.change = DsoEditMetadataChangeType.UPDATE;\n      } else {\n        this.change = undefined;\n      }\n    }\n    if (finishEditing) {\n      this.editing = false;\n    }\n  }\n\n  /**\n   * Returns if the current value contains changes or not\n   * If the metadata value contains changes, but they haven't been confirmed yet through confirmChanges(), this might\n   * return false (which is desired)\n   */\n  hasChanges(): boolean {\n    return hasValue(this.change) || this.reordered;\n  }\n\n  /**\n   * Discard the current changes and mark the value and change type re-instatable by storing them in their relevant\n   * properties\n   */\n  discardAndMarkReinstatable(): void {\n    if (this.change === DsoEditMetadataChangeType.UPDATE || this.reordered) {\n      this.reinstatableValue = this.newValue;\n    }\n    this.reinstatableChange = this.change;\n    this.discard(false);\n  }\n\n  /**\n   * Discard the current changes\n   * Call discardAndMarkReinstatable() instead, if the discard should be re-instatable\n   */\n  discard(keepPlace = true): void {\n    this.change = undefined;\n    const place = this.newValue.place;\n    this.newValue = Object.assign(new MetadataValue(), this.originalValue);\n    if (keepPlace) {\n      this.newValue.place = place;\n    }\n    this.confirmChanges(true);\n  }\n\n  /**\n   * Re-instate (undo) the last discard by replacing the value and change type with their reinstate properties (if present)\n   */\n  reinstate(): void {\n    if (hasValue(this.reinstatableValue)) {\n      this.newValue = this.reinstatableValue;\n      this.reinstatableValue = undefined;\n    }\n    if (hasValue(this.reinstatableChange)) {\n      this.change = this.reinstatableChange;\n      this.reinstatableChange = undefined;\n    }\n    this.confirmChanges();\n  }\n\n  /**\n   * Returns if either the value or change type have a re-instatable property\n   * This will be the case if a discard has taken place that undid changes to the value or type\n   */\n  isReinstatable(): boolean {\n    return hasValue(this.reinstatableValue) || hasValue(this.reinstatableChange);\n  }\n\n  /**\n   * Reset the state of the re-instatable properties\n   */\n  resetReinstatable() {\n    this.reinstatableValue = undefined;\n    this.reinstatableChange = undefined;\n  }\n}\n\n/**\n * Class holding information about the metadata of a DSpaceObject and its changes within an edit form\n */\nexport class DsoEditMetadataForm {\n  /**\n   * List of original metadata field keys (before any changes took place)\n   */\n  originalFieldKeys: string[];\n\n  /**\n   * List of current metadata field keys (includes new fields for values added by the user)\n   */\n  fieldKeys: string[];\n\n  /**\n   * Current state of the form\n   * Key: Metadata field\n   * Value: List of {@link DsoEditMetadataValue}s for the metadata field\n   */\n  fields: {\n    [mdField: string]: DsoEditMetadataValue[],\n  };\n\n  /**\n   * A map of previously added metadata values before a discard of the form took place\n   * This can be used to re-instate the entire form to before the discard taking place\n   */\n  reinstatableNewValues: {\n    [mdField: string]: DsoEditMetadataValue[],\n  };\n\n  /**\n   * A (temporary) new metadata value added by the user, not belonging to a metadata field yet\n   * This value will be finalised and added to a field using setMetadataField()\n   */\n  newValue: DsoEditMetadataValue;\n\n  constructor(metadata: MetadataMap) {\n    this.originalFieldKeys = [];\n    this.fieldKeys = [];\n    this.fields = {};\n    this.reinstatableNewValues = {};\n    Object.entries(metadata).forEach(([mdField, values]: [string, MetadataValue[]]) => {\n      this.originalFieldKeys.push(mdField);\n      this.fieldKeys.push(mdField);\n      this.setValuesForFieldSorted(mdField, values.map((value: MetadataValue) => new DsoEditMetadataValue(value)));\n    });\n    this.sortFieldKeys();\n  }\n\n  /**\n   * Add a new temporary value for the user to edit\n   */\n  add(): void {\n    if (hasNoValue(this.newValue)) {\n      this.newValue = new DsoEditMetadataValue(new MetadataValue(), true);\n    }\n  }\n\n  /**\n   * Add the temporary value to a metadata field\n   * Clear the temporary value afterwards\n   * @param mdField\n   */\n  setMetadataField(mdField: string): void {\n    this.newValue.editing = false;\n    this.addValueToField(this.newValue, mdField);\n    // Set the place property to match the new value's position within its field\n    const place = this.fields[mdField].length - 1;\n    this.fields[mdField][place].originalValue.place = place;\n    this.fields[mdField][place].newValue.place = place;\n    this.newValue = undefined;\n  }\n\n  /**\n   * Add a value to a metadata field within the map\n   * @param value\n   * @param mdField\n   * @private\n   */\n  private addValueToField(value: DsoEditMetadataValue, mdField: string): void {\n    if (isEmpty(this.fields[mdField])) {\n      this.fieldKeys.push(mdField);\n      this.sortFieldKeys();\n      this.fields[mdField] = [];\n    }\n    this.fields[mdField].push(value);\n  }\n\n  /**\n   * Remove a value from a metadata field on a given index (this actually removes the value, not just marking it deleted)\n   * @param mdField\n   * @param index\n   */\n  remove(mdField: string, index: number): void {\n    if (isNotEmpty(this.fields[mdField])) {\n      this.fields[mdField].splice(index, 1);\n      if (this.fields[mdField].length === 0) {\n        this.fieldKeys.splice(this.fieldKeys.indexOf(mdField), 1);\n        delete this.fields[mdField];\n      }\n    }\n  }\n\n  /**\n   * Returns if at least one value within the form contains a change\n   */\n  hasChanges(): boolean {\n    return Object.values(this.fields).some((values: DsoEditMetadataValue[]) => values.some((value: DsoEditMetadataValue) => value.hasChanges()));\n  }\n\n  /**\n   * Check if a metadata field contains changes within its order (place property of values)\n   * @param mdField\n   */\n  hasOrderChanges(mdField: string): boolean {\n    return this.fields[mdField].some((value: DsoEditMetadataValue) => value.originalValue.place !== value.newValue.place);\n  }\n\n  /**\n   * Discard all changes within the form and store their current values within re-instatable properties so they can be\n   * undone afterwards\n   */\n  discard(): void {\n    this.resetReinstatable();\n    // Discard changes from each value from each field\n    Object.entries(this.fields).forEach(([field, values]: [string, DsoEditMetadataValue[]]) => {\n      let removeFromIndex = -1;\n      values.forEach((value: DsoEditMetadataValue, index: number) => {\n        if (value.change === DsoEditMetadataChangeType.ADD) {\n          if (isEmpty(this.reinstatableNewValues[field])) {\n            this.reinstatableNewValues[field] = [];\n          }\n          this.reinstatableNewValues[field].push(value);\n          if (removeFromIndex === -1) {\n            removeFromIndex = index;\n          }\n        } else {\n          value.discardAndMarkReinstatable();\n        }\n      });\n      if (removeFromIndex > -1) {\n        this.fields[field].splice(removeFromIndex, this.fields[field].length - removeFromIndex);\n      }\n    });\n    // Delete new metadata fields\n    this.fieldKeys.forEach((field: string) => {\n      if (this.originalFieldKeys.indexOf(field) < 0) {\n        delete this.fields[field];\n      }\n    });\n    this.fieldKeys = [...this.originalFieldKeys];\n    this.sortFieldKeys();\n    // Reset the order of values within their fields to match their place property\n    this.fieldKeys.forEach((field: string) => {\n      this.setValuesForFieldSorted(field, this.fields[field]);\n    });\n  }\n\n  /**\n   * Reset the order of values within a metadata field to their original places\n   * Update the actual array to match the place properties\n   * @param mdField\n   */\n  resetOrder(mdField: string) {\n    this.fields[mdField].forEach((value: DsoEditMetadataValue) => {\n      value.newValue.place = value.originalValue.place;\n      value.confirmChanges();\n    });\n    this.setValuesForFieldSorted(mdField, this.fields[mdField]);\n  }\n\n  /**\n   * Sort fieldKeys alphabetically\n   * Should be called whenever a field is added to ensure the alphabetical order is kept\n   */\n  sortFieldKeys() {\n    this.fieldKeys.sort((a: string, b: string) => a.localeCompare(b));\n  }\n\n  /**\n   * Undo any previously discarded changes\n   */\n  reinstate(): void {\n    // Reinstate each value\n    Object.values(this.fields).forEach((values: DsoEditMetadataValue[]) => {\n      values.forEach((value: DsoEditMetadataValue) => {\n        value.reinstate();\n      });\n    });\n    // Re-add new values\n    Object.entries(this.reinstatableNewValues).forEach(([field, values]: [string, DsoEditMetadataValue[]]) => {\n      values.forEach((value: DsoEditMetadataValue) => {\n        this.addValueToField(value, field);\n      });\n    });\n    // Reset the order of values within their fields to match their place property\n    this.fieldKeys.forEach((field: string) => {\n      this.setValuesForFieldSorted(field, this.fields[field]);\n    });\n    this.reinstatableNewValues = {};\n  }\n\n  /**\n   * Returns if at least one value contains a re-instatable property, meaning a discard can be reversed\n   */\n  isReinstatable(): boolean {\n    return isNotEmpty(this.reinstatableNewValues) ||\n      Object.values(this.fields)\n        .some((values: DsoEditMetadataValue[]) => values\n          .some((value: DsoEditMetadataValue) => value.isReinstatable()));\n  }\n\n  /**\n   * Reset the state of the re-instatable properties and values\n   */\n  resetReinstatable(): void {\n    this.reinstatableNewValues = {};\n    Object.values(this.fields).forEach((values: DsoEditMetadataValue[]) => {\n      values.forEach((value: DsoEditMetadataValue) => {\n        value.resetReinstatable();\n      });\n    });\n  }\n\n  /**\n   * Set the values of a metadata field and sort them by their newValue's place property\n   * @param mdField\n   * @param values\n   */\n  private setValuesForFieldSorted(mdField: string, values: DsoEditMetadataValue[]) {\n    this.fields[mdField] = values.sort((a: DsoEditMetadataValue, b: DsoEditMetadataValue) => a.newValue.place - b.newValue.place);\n  }\n\n  /**\n   * Get the json PATCH operations for the current changes within this form\n   * For each metadata field, it'll return operations in the following order: replace, remove (from last to first place), add and move\n   * This order is important, as each operation is executed in succession of the previous one\n   */\n  getOperations(moveAnalyser: ArrayMoveChangeAnalyzer<number>): Operation[] {\n    const operations: Operation[] = [];\n    Object.entries(this.fields).forEach(([field, values]: [string, DsoEditMetadataValue[]]) => {\n      const replaceOperations: MetadataPatchReplaceOperation[] = [];\n      const removeOperations: MetadataPatchRemoveOperation[] = [];\n      const addOperations: MetadataPatchAddOperation[] = [];\n      [...values]\n        .sort((a: DsoEditMetadataValue, b: DsoEditMetadataValue) => a.originalValue.place - b.originalValue.place)\n        .forEach((value: DsoEditMetadataValue) => {\n          if (hasValue(value.change)) {\n            if (value.change === DsoEditMetadataChangeType.UPDATE) {\n              // Only changes to value or language are considered \"replace\" operations. Changes to place are considered \"move\", which is processed below.\n              if (value.originalValue.value !== value.newValue.value || value.originalValue.language !== value.newValue.language\n                || value.originalValue.authority !== value.newValue.authority  || value.originalValue.confidence !== value.newValue.confidence) {\n                replaceOperations.push(new MetadataPatchReplaceOperation(field, value.originalValue.place, {\n                  value: value.newValue.value,\n                  language: value.newValue.language,\n                  authority: value.newValue.authority,\n                  confidence: value.newValue.confidence,\n                }));\n              }\n            } else if (value.change === DsoEditMetadataChangeType.REMOVE) {\n              removeOperations.push(new MetadataPatchRemoveOperation(field, value.originalValue.place));\n            } else if (value.change === DsoEditMetadataChangeType.ADD) {\n              addOperations.push(new MetadataPatchAddOperation(field, {\n                value: value.newValue.value,\n                language: value.newValue.language,\n                authority: value.newValue.authority,\n                confidence: value.newValue.confidence,\n              }));\n            } else {\n              console.warn('Illegal metadata change state detected for', value);\n            }\n          }\n        });\n\n      operations.push(...replaceOperations\n        .map((operation: MetadataPatchReplaceOperation) => operation.toOperation()));\n      operations.push(...removeOperations\n        // Sort remove operations backwards first, because they get executed in order. This avoids one removal affecting the next.\n        .sort((a: MetadataPatchRemoveOperation, b: MetadataPatchRemoveOperation) => b.place - a.place)\n        .map((operation: MetadataPatchRemoveOperation) => operation.toOperation()));\n      operations.push(...addOperations\n        .map((operation: MetadataPatchAddOperation) => operation.toOperation()));\n    });\n    // Calculate and add the move operations that need to happen in order to move value from their old place to their new within the field\n    // This uses an ArrayMoveChangeAnalyzer\n    Object.entries(this.fields).forEach(([field, values]: [string, DsoEditMetadataValue[]]) => {\n      // Exclude values marked for removal, because operations are executed in order (remove first, then move)\n      const valuesWithoutRemoved = values.filter((value: DsoEditMetadataValue) => value.change !== DsoEditMetadataChangeType.REMOVE);\n      const moveOperations = moveAnalyser\n        .diff(\n          [...valuesWithoutRemoved]\n            .sort((a: DsoEditMetadataValue, b: DsoEditMetadataValue) => a.originalValue.place - b.originalValue.place)\n            .map((value: DsoEditMetadataValue) => value.originalValue.place),\n          [...valuesWithoutRemoved]\n            .sort((a: DsoEditMetadataValue, b: DsoEditMetadataValue) => a.newValue.place - b.newValue.place)\n            .map((value: DsoEditMetadataValue) => value.originalValue.place))\n        .map((operation: MoveOperation) => new MetadataPatchMoveOperation(field, +operation.from.substr(1), +operation.path.substr(1)).toOperation());\n      operations.push(...moveOperations);\n    });\n    return operations;\n  }\n}\n","import {\n  Component,\n  Input,\n} from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@Component({\n  selector: 'ds-dso-edit-metadata-headers',\n  styleUrls: ['./dso-edit-metadata-headers.component.scss', '../dso-edit-metadata-shared/dso-edit-metadata-cells.scss'],\n  templateUrl: './dso-edit-metadata-headers.component.html',\n  standalone: true,\n  imports: [TranslateModule],\n})\n/**\n * Component displaying the header table row for DSO edit metadata page\n */\nexport class DsoEditMetadataHeadersComponent {\n  /**\n   * Type of DSO we're displaying values for\n   * Determines i18n messages\n   */\n  @Input() dsoType: string;\n}\n","<div class=\"d-flex flex-row ds-field-row ds-header-row\">\n  <div class=\"lbl-cell\">{{ dsoType + '.edit.metadata.headers.field' | translate }}</div>\n  <div class=\"flex-grow-1\">\n    <div class=\"d-flex flex-row\">\n      <div class=\"flex-grow-1 ds-flex-cell ds-value-cell\"><b class=\"dont-break-out preserve-line-breaks\">{{ dsoType + '.edit.metadata.headers.value' | translate }}</b></div>\n      <div class=\"ds-flex-cell ds-lang-cell\"><b>{{ dsoType + '.edit.metadata.headers.language' | translate }}</b></div>\n      <div class=\"text-center ds-flex-cell ds-edit-cell\"><b>{{ dsoType + '.edit.metadata.headers.edit' | translate }}</b></div>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  Input,\n} from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@Component({\n  selector: 'ds-dso-edit-metadata-value-headers',\n  styleUrls: ['./dso-edit-metadata-value-headers.component.scss', '../dso-edit-metadata-shared/dso-edit-metadata-cells.scss'],\n  templateUrl: './dso-edit-metadata-value-headers.component.html',\n  standalone: true,\n  imports: [TranslateModule],\n})\n/**\n * Component displaying invisible headers for a list of metadata values using table roles for accessibility\n */\nexport class DsoEditMetadataValueHeadersComponent {\n  /**\n   * Type of DSO we're displaying values for\n   * Determines i18n messages\n   */\n  @Input() dsoType: string;\n}\n","<div role=\"row\" class=\"visually-hidden\">\n  <div role=\"columnheader\">{{ dsoType + '.edit.metadata.headers.value' | translate }}</div>\n  <div role=\"columnheader\">{{ dsoType + '.edit.metadata.headers.language' | translate }}</div>\n  <div role=\"columnheader\">{{ dsoType + '.edit.metadata.headers.edit' | translate }}</div>\n</div>\n","import {\n  CdkDrag,\n  CdkDragHandle,\n} from '@angular/cdk/drag-drop';\nimport {\n  AsyncPipe,\n  NgClass,\n  NgIf,\n} from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  FormsModule,\n  UntypedFormControl,\n  UntypedFormGroup,\n} from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  EMPTY,\n  Observable,\n  of as observableOf,\n} from 'rxjs';\nimport {\n  map,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs/operators';\nimport { RegistryService } from 'src/app/core/registry/registry.service';\nimport { VocabularyService } from 'src/app/core/submission/vocabularies/vocabulary.service';\nimport { NotificationsService } from 'src/app/shared/notifications/notifications.service';\n\nimport { DSONameService } from '../../../core/breadcrumbs/dso-name.service';\nimport { ItemDataService } from '../../../core/data/item-data.service';\nimport { RelationshipDataService } from '../../../core/data/relationship-data.service';\nimport { MetadataService } from '../../../core/metadata/metadata.service';\nimport { Collection } from '../../../core/shared/collection.model';\nimport { ConfidenceType } from '../../../core/shared/confidence-type';\nimport { DSpaceObject } from '../../../core/shared/dspace-object.model';\nimport { Item } from '../../../core/shared/item.model';\nimport { ItemMetadataRepresentation } from '../../../core/shared/metadata-representation/item/item-metadata-representation.model';\nimport {\n  MetadataRepresentation,\n  MetadataRepresentationType,\n} from '../../../core/shared/metadata-representation/metadata-representation.model';\nimport {\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteData,\n  getFirstSucceededRemoteDataPayload,\n  getRemoteDataPayload,\n  metadataFieldsToString,\n} from '../../../core/shared/operators';\nimport { Vocabulary } from '../../../core/submission/vocabularies/models/vocabulary.model';\nimport { VocabularyOptions } from '../../../core/submission/vocabularies/models/vocabulary-options.model';\nimport { getItemPageRoute } from '../../../item-page/item-page-routing-paths';\nimport { BtnDisabledDirective } from '../../../shared/btn-disabled.directive';\nimport { isNotEmpty } from '../../../shared/empty.util';\nimport { DsDynamicOneboxComponent } from '../../../shared/form/builder/ds-dynamic-form-ui/models/onebox/dynamic-onebox.component';\nimport {\n  DsDynamicOneboxModelConfig,\n  DynamicOneboxModel,\n} from '../../../shared/form/builder/ds-dynamic-form-ui/models/onebox/dynamic-onebox.model';\nimport { DsDynamicScrollableDropdownComponent } from '../../../shared/form/builder/ds-dynamic-form-ui/models/scrollable-dropdown/dynamic-scrollable-dropdown.component';\nimport {\n  DynamicScrollableDropdownModel,\n  DynamicScrollableDropdownModelConfig,\n} from '../../../shared/form/builder/ds-dynamic-form-ui/models/scrollable-dropdown/dynamic-scrollable-dropdown.model';\nimport { FormFieldMetadataValueObject } from '../../../shared/form/builder/models/form-field-metadata-value.model';\nimport { AuthorityConfidenceStateDirective } from '../../../shared/form/directives/authority-confidence-state.directive';\nimport { ThemedTypeBadgeComponent } from '../../../shared/object-collection/shared/badges/type-badge/themed-type-badge.component';\nimport { DebounceDirective } from '../../../shared/utils/debounce.directive';\nimport { followLink } from '../../../shared/utils/follow-link-config.model';\nimport { VarDirective } from '../../../shared/utils/var.directive';\nimport {\n  DsoEditMetadataChangeType,\n  DsoEditMetadataValue,\n} from '../dso-edit-metadata-form';\n\n@Component({\n  selector: 'ds-dso-edit-metadata-value',\n  styleUrls: ['./dso-edit-metadata-value.component.scss', '../dso-edit-metadata-shared/dso-edit-metadata-cells.scss'],\n  templateUrl: './dso-edit-metadata-value.component.html',\n  standalone: true,\n  imports: [VarDirective, CdkDrag, NgClass, NgIf, FormsModule, DebounceDirective, RouterLink, ThemedTypeBadgeComponent, NgbTooltipModule, CdkDragHandle, AsyncPipe, TranslateModule, DsDynamicScrollableDropdownComponent, DsDynamicOneboxComponent, AuthorityConfidenceStateDirective, BtnDisabledDirective],\n})\n/**\n * Component displaying a single editable row for a metadata value\n */\nexport class DsoEditMetadataValueComponent implements OnInit, OnChanges {\n  /**\n   * The parent {@link DSpaceObject} to display a metadata form for\n   * Also used to determine metadata-representations in case of virtual metadata\n   */\n  @Input() dso: DSpaceObject;\n\n  /**\n   * Editable metadata value to show\n   */\n  @Input() mdValue: DsoEditMetadataValue;\n\n  /**\n   * Type of DSO we're displaying values for\n   * Determines i18n messages\n   */\n  @Input() dsoType: string;\n\n  /**\n   * Observable to check if the form is being saved or not\n   * Will disable certain functionality while saving\n   */\n  @Input() saving$: Observable<boolean>;\n\n  /**\n   * Is this value the only one within its list?\n   * Will disable certain functionality like dragging (because dragging within a list of 1 is pointless)\n   */\n  @Input() isOnlyValue = false;\n\n  /**\n   * MetadataField to edit\n   */\n  @Input() mdField?: string;\n\n  /**\n   * Emits when the user clicked edit\n   */\n  @Output() edit: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Emits when the user clicked confirm\n   */\n  @Output() confirm: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /**\n   * Emits when the user clicked remove\n   */\n  @Output() remove: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Emits when the user clicked undo\n   */\n  @Output() undo: EventEmitter<any> = new EventEmitter<any>();\n\n  /**\n   * Emits true when the user starts dragging a value, false when the user stops dragging\n   */\n  @Output() dragging: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /**\n   * The DsoEditMetadataChangeType enumeration for access in the component's template\n   * @type {DsoEditMetadataChangeType}\n   */\n  public DsoEditMetadataChangeTypeEnum = DsoEditMetadataChangeType;\n\n  /**\n   * The ConfidenceType enumeration for access in the component's template\n   * @type {ConfidenceType}\n   */\n  public ConfidenceTypeEnum = ConfidenceType;\n\n  /**\n   * The item this metadata value represents in case it's virtual (if any, otherwise null)\n   */\n  mdRepresentation$: Observable<ItemMetadataRepresentation | null>;\n\n  /**\n   * The route to the item represented by this virtual metadata value (otherwise null)\n   */\n  mdRepresentationItemRoute$: Observable<string | null>;\n\n  /**\n   * The name of the item represented by this virtual metadata value (otherwise null)\n   */\n  mdRepresentationName$: Observable<string | null>;\n\n  /**\n   * Whether or not the authority field is currently being edited\n   */\n  public editingAuthority = false;\n\n\n  /**\n   * Whether or not the free-text editing is enabled when scrollable dropdown or hierarchical vocabulary is used\n   */\n  public enabledFreeTextEditing = false;\n\n  /**\n   * Field group used by authority field\n   * @type {UntypedFormGroup}\n   */\n  group = new UntypedFormGroup({ authorityField : new UntypedFormControl() });\n\n  /**\n   * Model to use for editing authorities values\n   */\n  private model$: BehaviorSubject<DynamicOneboxModel | DynamicScrollableDropdownModel> = new BehaviorSubject(null);\n\n  /**\n   * Observable with information about the authority vocabulary used\n   */\n  private vocabulary$: Observable<Vocabulary>;\n\n  /**\n   * Observables with information about the authority vocabulary type used\n   */\n  private isAuthorityControlled$: Observable<boolean>;\n  private isHierarchicalVocabulary$: Observable<boolean>;\n  private isScrollableVocabulary$: Observable<boolean>;\n  private isSuggesterVocabulary$: Observable<boolean>;\n\n  constructor(\n    protected relationshipService: RelationshipDataService,\n    protected dsoNameService: DSONameService,\n    protected vocabularyService: VocabularyService,\n    protected itemService: ItemDataService,\n    protected cdr: ChangeDetectorRef,\n    protected registryService: RegistryService,\n    protected notificationsService: NotificationsService,\n    protected translate: TranslateService,\n    protected metadataService: MetadataService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.initVirtualProperties();\n    this.initAuthorityProperties();\n  }\n\n  /**\n   * Initialise potential properties of a virtual metadata value\n   */\n  initVirtualProperties(): void {\n    this.mdRepresentation$ = this.metadataService.isVirtual(this.mdValue.newValue) ?\n      this.relationshipService.resolveMetadataRepresentation(this.mdValue.newValue, this.dso, 'Item')\n        .pipe(\n          map((mdRepresentation: MetadataRepresentation) =>\n            mdRepresentation.representationType === MetadataRepresentationType.Item ? mdRepresentation as ItemMetadataRepresentation : null,\n          ),\n        ) : EMPTY;\n    this.mdRepresentationItemRoute$ = this.mdRepresentation$.pipe(\n      map((mdRepresentation: ItemMetadataRepresentation) => mdRepresentation ? getItemPageRoute(mdRepresentation) : null),\n    );\n    this.mdRepresentationName$ = this.mdRepresentation$.pipe(\n      map((mdRepresentation: ItemMetadataRepresentation) => mdRepresentation ? this.dsoNameService.getName(mdRepresentation) : null),\n    );\n  }\n\n  /**\n   * Initialise potential properties of a authority controlled metadata field\n   */\n  initAuthorityProperties(): void {\n\n    if (isNotEmpty(this.mdField)) {\n\n      const owningCollection$: Observable<Collection> = this.itemService.findByHref(this.dso._links.self.href, true, true, followLink('owningCollection'))\n        .pipe(\n          getFirstSucceededRemoteData(),\n          getRemoteDataPayload(),\n          switchMap((item: Item) => item.owningCollection),\n          getFirstSucceededRemoteData(),\n          getRemoteDataPayload(),\n        );\n\n      this.vocabulary$ = owningCollection$.pipe(\n        switchMap((c: Collection) => this.vocabularyService\n          .getVocabularyByMetadataAndCollection(this.mdField, c.uuid)\n          .pipe(\n            getFirstSucceededRemoteDataPayload(),\n          )),\n      );\n    } else {\n      this.vocabulary$ = observableOf(undefined);\n    }\n\n    this.isAuthorityControlled$ = this.vocabulary$.pipe(\n      // Create the model used by the authority fields to ensure its existence when the field is initialized\n      tap((v: Vocabulary) => this.model$.next(this.createModel(v))),\n      map((result: Vocabulary) => isNotEmpty(result)),\n    );\n\n    this.isHierarchicalVocabulary$ = this.vocabulary$.pipe(\n      map((result: Vocabulary) => isNotEmpty(result) && result.hierarchical),\n    );\n\n    this.isScrollableVocabulary$ = this.vocabulary$.pipe(\n      map((result: Vocabulary) => isNotEmpty(result) && result.scrollable),\n    );\n\n    this.isSuggesterVocabulary$ = this.vocabulary$.pipe(\n      map((result: Vocabulary) => isNotEmpty(result) && !result.hierarchical && !result.scrollable),\n    );\n\n  }\n\n  /**\n   * Returns a {@link DynamicOneboxModel} or {@link DynamicScrollableDropdownModel} model based on the\n   * vocabulary used.\n   */\n  private createModel(vocabulary: Vocabulary): DynamicOneboxModel | DynamicScrollableDropdownModel {\n    if (isNotEmpty(vocabulary)) {\n      let formFieldValue;\n      if (isNotEmpty(this.mdValue.newValue.value)) {\n        formFieldValue = new FormFieldMetadataValueObject();\n        formFieldValue.value = this.mdValue.newValue.value;\n        formFieldValue.display = this.mdValue.newValue.value;\n        if (this.mdValue.newValue.authority) {\n          formFieldValue.authority = this.mdValue.newValue.authority;\n          formFieldValue.confidence = this.mdValue.newValue.confidence;\n        }\n      } else {\n        formFieldValue = this.mdValue.newValue.value;\n      }\n\n      const vocabularyOptions = vocabulary ? {\n        closed: false,\n        name: vocabulary.name,\n      } as VocabularyOptions : null;\n\n      if (!vocabulary.scrollable) {\n        const model: DsDynamicOneboxModelConfig = {\n          id: 'authorityField',\n          label: `${this.dsoType}.edit.metadata.edit.value`,\n          vocabularyOptions: vocabularyOptions,\n          metadataFields: [this.mdField],\n          value: formFieldValue,\n          repeatable: false,\n          submissionId: 'edit-metadata',\n          hasSelectableMetadata: false,\n        };\n        return new DynamicOneboxModel(model);\n      } else {\n        const model: DynamicScrollableDropdownModelConfig = {\n          id: 'authorityField',\n          label: `${this.dsoType}.edit.metadata.edit.value`,\n          placeholder: `${this.dsoType}.edit.metadata.edit.value`,\n          vocabularyOptions: vocabularyOptions,\n          metadataFields: [this.mdField],\n          value: formFieldValue,\n          repeatable: false,\n          submissionId: 'edit-metadata',\n          hasSelectableMetadata: false,\n          maxOptions: 10,\n        };\n        return new DynamicScrollableDropdownModel(model);\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Change callback for the component. Check if the mdField has changed to retrieve whether it is metadata\n   * that uses a controlled vocabulary and update the related properties\n   *\n   * @param {SimpleChanges} changes\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (isNotEmpty(changes.mdField) && !changes.mdField.firstChange) {\n      if (isNotEmpty(changes.mdField.currentValue) ) {\n        if (isNotEmpty(changes.mdField.previousValue) &&\n          changes.mdField.previousValue !== changes.mdField.currentValue) {\n          // Clear authority value in case it has been assigned with the previous metadataField used\n          this.mdValue.newValue.authority = null;\n          this.mdValue.newValue.confidence = ConfidenceType.CF_UNSET;\n        }\n\n        // Only ask if the current mdField have a period character to reduce request\n        if (changes.mdField.currentValue.includes('.')) {\n          this.validateMetadataField().subscribe((isValid: boolean) => {\n            if (isValid) {\n              this.initAuthorityProperties();\n              this.cdr.detectChanges();\n            }\n          });\n        }\n      }\n    }\n  }\n\n  /**\n   * Validate the metadata field to check if it exists on the server and return an observable boolean for success/error\n   */\n  validateMetadataField(): Observable<boolean> {\n    return this.registryService.queryMetadataFields(this.mdField, null, true, false, followLink('schema')).pipe(\n      getFirstCompletedRemoteData(),\n      switchMap((rd) => {\n        if (rd.hasSucceeded) {\n          return observableOf(rd).pipe(\n            metadataFieldsToString(),\n            take(1),\n            map((fields: string[]) => fields.indexOf(this.mdField) > -1),\n          );\n        } else {\n          this.notificationsService.error(this.translate.instant(`${this.dsoType}.edit.metadata.metadatafield.error`), rd.errorMessage);\n          return [false];\n        }\n      }),\n    );\n  }\n\n  /**\n   * Checks if this field use a authority vocabulary\n   */\n  isAuthorityControlled(): Observable<boolean> {\n    return this.isAuthorityControlled$;\n  }\n\n  /**\n   * Checks if configured vocabulary is Hierarchical or not\n   */\n  isHierarchicalVocabulary(): Observable<boolean> {\n    return this.isHierarchicalVocabulary$;\n  }\n\n  /**\n   * Checks if configured vocabulary is Scrollable or not\n   */\n  isScrollableVocabulary(): Observable<boolean> {\n    return this.isScrollableVocabulary$;\n  }\n\n  /**\n   * Checks if configured vocabulary is Suggester or not\n   * (a vocabulary not Scrollable and not Hierarchical that uses an autocomplete field)\n   */\n  isSuggesterVocabulary(): Observable<boolean> {\n    return this.isSuggesterVocabulary$;\n  }\n\n  /**\n   * Process the change of authority field value updating the authority key and confidence as necessary\n   */\n  onChangeAuthorityField(event): void {\n    if (event) {\n      this.mdValue.newValue.value = event.value;\n      if (event.authority) {\n        this.mdValue.newValue.authority = event.authority;\n        this.mdValue.newValue.confidence = ConfidenceType.CF_ACCEPTED;\n      } else {\n        this.mdValue.newValue.authority = null;\n        this.mdValue.newValue.confidence = ConfidenceType.CF_UNSET;\n      }\n      this.confirm.emit(false);\n    } else {\n      // The event is undefined when the user clears the selection in scrollable dropdown\n      this.mdValue.newValue.value = '';\n      this.mdValue.newValue.authority = null;\n      this.mdValue.newValue.confidence = ConfidenceType.CF_UNSET;\n      this.confirm.emit(false);\n    }\n  }\n\n  /**\n   * Returns the {@link DynamicOneboxModel} or {@link DynamicScrollableDropdownModel} model used\n   * for the authority field\n   */\n  getModel(): DynamicOneboxModel | DynamicScrollableDropdownModel {\n    return this.model$.value;\n  }\n\n  /**\n   * Change the status of the editingAuthority property\n   * @param status\n   */\n  onChangeEditingAuthorityStatus(status: boolean) {\n    this.editingAuthority = status;\n  }\n\n  /**\n   * Processes the change in authority value, updating the confidence as necessary.\n   * If the authority key is cleared, the confidence is set to {@link ConfidenceType.CF_NOVALUE}.\n   * If the authority key is edited and differs from the original, the confidence is set to {@link ConfidenceType.CF_ACCEPTED}.\n   */\n  onChangeAuthorityKey() {\n    if (this.mdValue.newValue.authority === '') {\n      this.mdValue.newValue.confidence = ConfidenceType.CF_NOVALUE;\n      this.confirm.emit(false);\n    } else if (this.mdValue.newValue.authority !== this.mdValue.originalValue.authority) {\n      this.mdValue.newValue.confidence = ConfidenceType.CF_ACCEPTED;\n      this.confirm.emit(false);\n    }\n  }\n\n  /**\n   * Toggles the free-text ediitng mode\n   */\n  toggleFreeTextEdition() {\n    if (this.enabledFreeTextEditing) {\n      if (this.getModel().value !== this.mdValue.newValue.value) {\n        // Reload the model to adapt it to the new possible value modified during free text editing\n        this.initAuthorityProperties();\n      }\n    }\n    this.enabledFreeTextEditing = !this.enabledFreeTextEditing;\n  }\n\n}\n","<div class=\"d-flex flex-row ds-value-row\" *ngVar=\"metadataService.isVirtual(mdValue.newValue) as isVirtual\" role=\"row\"\n     cdkDrag (cdkDragStarted)=\"dragging.emit(true)\" (cdkDragEnded)=\"dragging.emit(false)\"\n     [ngClass]=\"{ 'ds-warning': mdValue.reordered || mdValue.change === DsoEditMetadataChangeTypeEnum.UPDATE, 'ds-danger': mdValue.change === DsoEditMetadataChangeTypeEnum.REMOVE, 'ds-success': mdValue.change === DsoEditMetadataChangeTypeEnum.ADD, 'h-100': isOnlyValue }\">\n  <div class=\"flex-grow-1 ds-flex-cell ds-value-cell d-flex flex-column\" *ngVar=\"(mdRepresentation$ | async) as mdRepresentation\" role=\"cell\">\n    <div class=\"dont-break-out preserve-line-breaks\" *ngIf=\"!mdValue.editing && !mdRepresentation\">{{ mdValue.newValue.value }}</div>\n    <textarea class=\"form-control\" rows=\"5\" *ngIf=\"mdValue.editing && !mdRepresentation && ((isAuthorityControlled() | async) !== true || (enabledFreeTextEditing && (isSuggesterVocabulary() | async) !== true))\" [(ngModel)]=\"mdValue.newValue.value\"\n              [attr.aria-label]=\"(dsoType + '.edit.metadata.edit.value') | translate\"\n              [dsDebounce]=\"300\" (onDebounce)=\"confirm.emit(false)\"></textarea>\n    <ds-dynamic-scrollable-dropdown *ngIf=\"mdValue.editing && (isScrollableVocabulary() | async) && !enabledFreeTextEditing\"\n                                    [bindId]=\"mdField\"\n                                    [group]=\"group\"\n                                    [model]=\"getModel()\"\n                                    (change)=\"onChangeAuthorityField($event)\">\n    </ds-dynamic-scrollable-dropdown>\n    <ds-dynamic-onebox *ngIf=\"mdValue.editing && (((isHierarchicalVocabulary() | async)  && !enabledFreeTextEditing) || (isSuggesterVocabulary() | async))\"\n                      [group]=\"group\"\n                      [model]=\"getModel()\"\n                      (change)=\"onChangeAuthorityField($event)\">\n    </ds-dynamic-onebox>\n    <button class=\"btn btn-secondary mt-2\" *ngIf=\"mdValue.editing && ((isScrollableVocabulary() | async) || (isHierarchicalVocabulary() | async))\"\n        [title]=\"enabledFreeTextEditing ? dsoType + '.edit.metadata.edit.buttons.disable-free-text-editing' : dsoType + '.edit.metadata.edit.buttons.enable-free-text-editing' | translate\"\n        (click)=\"toggleFreeTextEdition()\">\n    <i class=\"fas fa-fw\" [ngClass]=\"enabledFreeTextEditing ? 'fa-lock' : 'fa-unlock'\"></i>\n    {{ (enabledFreeTextEditing ? dsoType + '.edit.metadata.edit.buttons.disable-free-text-editing' : dsoType + '.edit.metadata.edit.buttons.enable-free-text-editing') | translate }}\n    </button>\n    <div *ngIf=\"!isVirtual && !mdValue.editing && mdValue.newValue.authority && mdValue.newValue.confidence !== ConfidenceTypeEnum.CF_UNSET && mdValue.newValue.confidence !== ConfidenceTypeEnum.CF_NOVALUE\">\n      <span class=\"badge badge-light border\" >\n        <i dsAuthorityConfidenceState\n           class=\"fas fa-fw p-0\"\n           aria-hidden=\"true\"\n           [authorityValue]=\"mdValue.newValue\"\n           [iconMode]=\"true\"\n        ></i>\n        {{ dsoType + '.edit.metadata.authority.label' | translate }} {{ mdValue.newValue.authority }}\n      </span>\n    </div>\n    <div class=\"mt-2\" *ngIf=\" mdValue.editing && (isAuthorityControlled() | async) && (isSuggesterVocabulary() | async)\">\n      <div class=\"btn-group w-75\">\n        <i dsAuthorityConfidenceState\n          class=\"fas fa-fw p-0 mr-1 mt-auto mb-auto\"\n          aria-hidden=\"true\"\n          [authorityValue]=\"mdValue.newValue.confidence\"\n          [iconMode]=\"true\"\n      ></i>\n        <input class=\"form-control form-outline\" data-test=\"authority-input\" [(ngModel)]=\"mdValue.newValue.authority\" [disabled]=\"!editingAuthority\"\n              [attr.aria-label]=\"(dsoType + '.edit.metadata.edit.authority.key') | translate\"\n              (change)=\"onChangeAuthorityKey()\" />\n        <button class=\"btn btn-outline-secondary btn-sm ng-star-inserted\" id=\"metadata-confirm-btn\" *ngIf=\"!editingAuthority\"\n                [title]=\"dsoType + '.edit.metadata.edit.buttons.open-authority-edition' | translate\"\n                ngbTooltip=\"{{ dsoType + '.edit.metadata.edit.buttons.open-authority-edition' | translate }}\"\n                (click)=\"onChangeEditingAuthorityStatus(true)\">\n          <i class=\"fas fa-lock fa-fw\"></i>\n        </button>\n        <button class=\"btn btn-outline-success btn-sm ng-star-inserted\" id=\"metadata-confirm-btn\" *ngIf=\"editingAuthority\"\n                [title]=\"dsoType + '.edit.metadata.edit.buttons.close-authority-edition' | translate\"\n                ngbTooltip=\"{{ dsoType + '.edit.metadata.edit.buttons.close-authority-edition' | translate }}\"\n                (click)=\"onChangeEditingAuthorityStatus(false)\">\n          <i class=\"fas fa-lock-open fa-fw\"></i>\n        </button>\n      </div>\n    </div>\n    <div class=\"d-flex\" *ngIf=\"mdRepresentation\">\n      <a class=\"mr-2\" target=\"_blank\" [routerLink]=\"mdRepresentationItemRoute$ | async\">{{ mdRepresentationName$ | async }}</a>\n      <ds-type-badge [object]=\"mdRepresentation\"></ds-type-badge>\n    </div>\n  </div>\n  <div class=\"ds-flex-cell ds-lang-cell\" role=\"cell\">\n    <div class=\"dont-break-out preserve-line-breaks\" *ngIf=\"!mdValue.editing\">{{ mdValue.newValue.language }}</div>\n    <input class=\"form-control\" type=\"text\" *ngIf=\"mdValue.editing\" [(ngModel)]=\"mdValue.newValue.language\"\n           [attr.aria-label]=\"(dsoType + '.edit.metadata.edit.language') | translate\"\n           [dsDebounce]=\"300\" (onDebounce)=\"confirm.emit(false)\" />\n  </div>\n  <div class=\"text-center ds-flex-cell ds-edit-cell\" role=\"cell\">\n    <div class=\"btn-group\">\n      <div class=\"edit-field\">\n        <div class=\"btn-group edit-buttons\" [ngbTooltip]=\"isVirtual ? (dsoType + '.edit.metadata.edit.buttons.virtual' | translate) : null\">\n          <button class=\"btn btn-outline-primary btn-sm ng-star-inserted\" data-test=\"metadata-edit-btn\" *ngIf=\"!mdValue.editing\"\n                  [title]=\"dsoType + '.edit.metadata.edit.buttons.edit' | translate\"\n                  ngbTooltip=\"{{ dsoType + '.edit.metadata.edit.buttons.edit' | translate }}\"\n                  [dsBtnDisabled]=\"isVirtual || mdValue.change === DsoEditMetadataChangeTypeEnum.REMOVE || (saving$ | async)\" (click)=\"edit.emit()\">\n            <i class=\"fas fa-edit fa-fw\"></i>\n          </button>\n          <button class=\"btn btn-outline-success btn-sm ng-star-inserted\" data-test=\"metadata-confirm-btn\" *ngIf=\"mdValue.editing\"\n                  [title]=\"dsoType + '.edit.metadata.edit.buttons.confirm' | translate\"\n                  ngbTooltip=\"{{ dsoType + '.edit.metadata.edit.buttons.confirm' | translate }}\"\n                  [dsBtnDisabled]=\"isVirtual || (saving$ | async)\" (click)=\"confirm.emit(true)\">\n            <i class=\"fas fa-check fa-fw\"></i>\n          </button>\n          <button class=\"btn btn-outline-danger btn-sm\" data-test=\"metadata-remove-btn\"\n                  [title]=\"dsoType + '.edit.metadata.edit.buttons.remove' | translate\"\n                  ngbTooltip=\"{{ dsoType + '.edit.metadata.edit.buttons.remove' | translate }}\"\n                  [dsBtnDisabled]=\"isVirtual || (mdValue.change && mdValue.change !== DsoEditMetadataChangeTypeEnum.ADD) || mdValue.editing || (saving$ | async)\" (click)=\"remove.emit()\">\n            <i class=\"fas fa-trash-alt fa-fw\"></i>\n          </button>\n          <button class=\"btn btn-outline-warning btn-sm\" data-test=\"metadata-undo-btn\"\n                  [title]=\"dsoType + '.edit.metadata.edit.buttons.undo' | translate\"\n                  ngbTooltip=\"{{ dsoType + '.edit.metadata.edit.buttons.undo' | translate }}\"\n                  [dsBtnDisabled]=\"isVirtual || (!mdValue.change && mdValue.reordered) || (!mdValue.change && !mdValue.editing) || (saving$ | async)\" (click)=\"undo.emit()\">\n            <i class=\"fas fa-undo-alt fa-fw\"></i>\n          </button>\n          <button class=\"btn btn-outline-secondary ds-drag-handle btn-sm\" data-test=\"metadata-drag-btn\" *ngVar=\"(isOnlyValue || (saving$ | async)) as disabled\"\n                  cdkDragHandle [cdkDragHandleDisabled]=\"disabled\" [ngClass]=\"{'disabled': disabled}\" [dsBtnDisabled]=\"disabled\"\n                  [title]=\"dsoType + '.edit.metadata.edit.buttons.drag' | translate\"\n                  ngbTooltip=\"{{ dsoType + '.edit.metadata.edit.buttons.drag' | translate }}\">\n            <i class=\"fas fa-grip-vertical fa-fw\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  AsyncPipe,\n  NgFor,\n  NgIf,\n} from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Data,\n} from '@angular/router';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport {\n  BehaviorSubject,\n  combineLatest as observableCombineLatest,\n  Observable,\n  of,\n  Subscription,\n} from 'rxjs';\nimport {\n  map,\n  mergeMap,\n  tap,\n} from 'rxjs/operators';\n\nimport {\n  APP_DATA_SERVICES_MAP,\n  LazyDataServicesMap,\n} from '../../../config/app-config.interface';\nimport { ArrayMoveChangeAnalyzer } from '../../core/data/array-move-change-analyzer.service';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { UpdateDataService } from '../../core/data/update-data.service';\nimport { lazyDataService } from '../../core/lazy-data-service';\nimport { DSpaceObject } from '../../core/shared/dspace-object.model';\nimport { getFirstCompletedRemoteData } from '../../core/shared/operators';\nimport { ResourceType } from '../../core/shared/resource-type';\nimport { AlertComponent } from '../../shared/alert/alert.component';\nimport { AlertType } from '../../shared/alert/alert-type';\nimport { BtnDisabledDirective } from '../../shared/btn-disabled.directive';\nimport {\n  hasNoValue,\n  hasValue,\n  isNotEmpty,\n} from '../../shared/empty.util';\nimport { ThemedLoadingComponent } from '../../shared/loading/themed-loading.component';\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\nimport { DsoEditMetadataFieldValuesComponent } from './dso-edit-metadata-field-values/dso-edit-metadata-field-values.component';\nimport { DsoEditMetadataForm } from './dso-edit-metadata-form';\nimport { DsoEditMetadataHeadersComponent } from './dso-edit-metadata-headers/dso-edit-metadata-headers.component';\nimport { DsoEditMetadataValueComponent } from './dso-edit-metadata-value/dso-edit-metadata-value.component';\nimport { DsoEditMetadataValueHeadersComponent } from './dso-edit-metadata-value-headers/dso-edit-metadata-value-headers.component';\nimport { MetadataFieldSelectorComponent } from './metadata-field-selector/metadata-field-selector.component';\n\n@Component({\n  selector: 'ds-base-dso-edit-metadata',\n  styleUrls: ['./dso-edit-metadata.component.scss'],\n  templateUrl: './dso-edit-metadata.component.html',\n  standalone: true,\n  imports: [NgIf, DsoEditMetadataHeadersComponent, MetadataFieldSelectorComponent, DsoEditMetadataValueHeadersComponent, DsoEditMetadataValueComponent, NgFor, DsoEditMetadataFieldValuesComponent, AlertComponent, ThemedLoadingComponent, AsyncPipe, TranslateModule, BtnDisabledDirective],\n})\n/**\n * Component showing a table of all metadata on a DSpaceObject and options to modify them\n */\nexport class DsoEditMetadataComponent implements OnInit, OnDestroy {\n  /**\n   * DSpaceObject to edit metadata for\n   */\n  @Input() dso: DSpaceObject;\n\n  /**\n   * Reference to the component responsible for showing a metadata-field selector\n   * Used to validate its contents (existing metadata field) before adding a new metadata value\n   */\n  @ViewChild(MetadataFieldSelectorComponent) metadataFieldSelectorComponent: MetadataFieldSelectorComponent;\n\n  /**\n   * Resolved update data-service for the given DSpaceObject (depending on its type, e.g. ItemDataService for an Item)\n   * Used to send the PATCH request\n   */\n  @Input() updateDataService: UpdateDataService<DSpaceObject>;\n\n  /**\n   * Type of the DSpaceObject in String\n   * Used to resolve i18n messages\n   */\n  dsoType: string;\n\n  /**\n   * A dynamic form object containing all information about the metadata and the changes made to them, see {@link DsoEditMetadataForm}\n   */\n  form: DsoEditMetadataForm;\n\n  /**\n   * The metadata field entered by the user for a new metadata value\n   */\n  newMdField: string;\n\n  // Properties determined by the state of the dynamic form, updated by onValueSaved()\n  isReinstatable: boolean;\n  hasChanges: boolean;\n  isEmpty: boolean;\n\n  /**\n   * Whether or not the form is currently being submitted\n   */\n  saving$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Tracks for which metadata-field a drag operation is taking place\n   * Null when no drag is currently happening for any field\n   * This is a BehaviorSubject that is passed down to child components, to give them the power to alter the state\n   */\n  draggingMdField$: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n\n  /**\n   * Whether or not the metadata field is currently being validated\n   */\n  loadingFieldValidation$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Combination of saving$ and loadingFieldValidation$\n   * Emits true when any of the two emit true\n   */\n  savingOrLoadingFieldValidation$: Observable<boolean>;\n\n  /**\n   * The AlertType enumeration for access in the component's template\n   * @type {AlertType}\n   */\n  public AlertTypeEnum = AlertType;\n\n  /**\n   * Subscription for updating the current DSpaceObject\n   * Unsubscribed from in ngOnDestroy()\n   */\n  dsoUpdateSubscription: Subscription;\n\n  constructor(protected route: ActivatedRoute,\n              protected notificationsService: NotificationsService,\n              protected translateService: TranslateService,\n              protected parentInjector: Injector,\n              protected arrayMoveChangeAnalyser: ArrayMoveChangeAnalyzer<number>,\n              protected cdr: ChangeDetectorRef,\n              @Inject(APP_DATA_SERVICES_MAP) private dataServiceMap: LazyDataServicesMap) {\n  }\n\n  /**\n   * Read the route (or parent route)'s data to retrieve the current DSpaceObject\n   * After it's retrieved, initialise the data-service and form\n   */\n  ngOnInit(): void {\n    if (hasNoValue(this.dso)) {\n      this.dsoUpdateSubscription = observableCombineLatest([this.route.data, this.route.parent.data]).pipe(\n        map(([data, parentData]: [Data, Data]) => Object.assign({}, data, parentData)),\n        tap((data: any)  => this.initDSO(data.dso.payload)),\n        mergeMap(() => this.retrieveDataService()),\n      ).subscribe((dataService: UpdateDataService<DSpaceObject>) => {\n        this.initDataService(dataService);\n        this.initForm();\n      });\n    } else {\n      this.initDSOType(this.dso);\n      this.retrieveDataService().subscribe((dataService: UpdateDataService<DSpaceObject>) => {\n        this.initDataService(dataService);\n        this.initForm();\n      });\n    }\n    this.savingOrLoadingFieldValidation$ = observableCombineLatest([this.saving$, this.loadingFieldValidation$]).pipe(\n      map(([saving, loading]: [boolean, boolean]) => saving || loading),\n    );\n  }\n\n  /**\n   * Resolve the data-service for the current DSpaceObject and retrieve its instance\n   */\n  retrieveDataService(): Observable<UpdateDataService<DSpaceObject>> {\n    if (hasNoValue(this.updateDataService)) {\n      const lazyProvider$: Observable<UpdateDataService<DSpaceObject>> = lazyDataService(this.dataServiceMap, this.dsoType, this.parentInjector);\n      return lazyProvider$;\n    } else {\n      return of(this.updateDataService);\n    }\n  }\n\n  /**\n   * Initialise the current DSpaceObject\n   */\n  initDSO(object: DSpaceObject) {\n    this.dso = object;\n    this.initDSOType(object);\n  }\n\n  /**\n   * Initialise the current DSpaceObject's type\n   */\n  initDSOType(object: DSpaceObject) {\n    let type: ResourceType;\n    if (typeof object.type === 'string') {\n      type = new ResourceType(object.type);\n    } else {\n      type = object.type;\n    }\n    this.dsoType = type.value;\n  }\n\n  /**\n   * Initialise the data-service for the current DSpaceObject\n   */\n  initDataService(dataService: UpdateDataService<DSpaceObject>): void {\n    if (isNotEmpty(dataService)) {\n      this.updateDataService = dataService;\n    }\n  }\n\n  /**\n   * Initialise the dynamic form object by passing the DSpaceObject's metadata\n   * Call onValueSaved() to update the form's state properties\n   */\n  initForm(): void {\n    this.form = new DsoEditMetadataForm(this.dso.metadata);\n    this.onValueSaved();\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * Update the form's state properties\n   */\n  onValueSaved(): void {\n    this.hasChanges = this.form.hasChanges();\n    this.isReinstatable = this.form.isReinstatable();\n    this.isEmpty = Object.keys(this.form.fields).length === 0;\n  }\n\n  /**\n   * Submit the current changes to the form by retrieving json PATCH operations from the form and sending it to the\n   * DSpaceObject's data-service\n   * Display notificiations and reset the form afterwards if successful\n   */\n  submit(): void {\n    this.saving$.next(true);\n    this.updateDataService.patch(this.dso, this.form.getOperations(this.arrayMoveChangeAnalyser)).pipe(\n      getFirstCompletedRemoteData(),\n    ).subscribe((rd: RemoteData<DSpaceObject>) => {\n      this.saving$.next(false);\n      if (rd.hasFailed) {\n        this.notificationsService.error(this.translateService.instant(`${this.dsoType}.edit.metadata.notifications.error.title`), rd.errorMessage);\n      } else {\n        this.notificationsService.success(\n          this.translateService.instant(`${this.dsoType}.edit.metadata.notifications.saved.title`),\n          this.translateService.instant(`${this.dsoType}.edit.metadata.notifications.saved.content`),\n        );\n        this.dso = rd.payload;\n        this.initForm();\n      }\n    });\n  }\n\n  /**\n   * Confirm the newly added value\n   * @param saved Whether or not the value was manually saved (only then, add the value to its metadata field)\n   */\n  confirmNewValue(saved: boolean): void {\n    if (saved) {\n      this.setMetadataField();\n    }\n  }\n\n  /**\n   * Set the metadata field of the temporary added new metadata value\n   * This will move the new value to its respective parent metadata field\n   * Validate the metadata field first\n   */\n  setMetadataField(): void {\n    this.form.resetReinstatable();\n    this.loadingFieldValidation$.next(true);\n    this.metadataFieldSelectorComponent.validate().subscribe((valid: boolean) => {\n      this.loadingFieldValidation$.next(false);\n      if (valid) {\n        this.form.setMetadataField(this.newMdField);\n        this.onValueSaved();\n      }\n    });\n  }\n\n  /**\n   * Add a new temporary metadata value\n   */\n  add(): void {\n    this.newMdField = undefined;\n    this.form.add();\n  }\n\n  /**\n   * Discard all changes within the current form\n   */\n  discard(): void {\n    this.form.discard();\n    this.onValueSaved();\n  }\n\n  /**\n   * Restore any changes previously discarded from the form\n   */\n  reinstate(): void {\n    this.form.reinstate();\n    this.onValueSaved();\n  }\n\n  /**\n   * Unsubscribe from any open subscriptions\n   */\n  ngOnDestroy(): void {\n    if (hasValue(this.dsoUpdateSubscription)) {\n      this.dsoUpdateSubscription.unsubscribe();\n    }\n  }\n\n}\n","<div class=\"item-metadata\" *ngIf=\"form\">\n  <div class=\"button-row top d-flex my-2 space-children-mr ml-gap\">\n    <button class=\"mr-auto btn btn-success\" id=\"dso-add-btn\" [dsBtnDisabled]=\"form.newValue || (saving$ | async)\"\n            [attr.aria-label]=\"dsoType + '.edit.metadata.add-button' | translate\"\n            [title]=\"dsoType + '.edit.metadata.add-button' | translate\"\n            (click)=\"add()\"><i class=\"fas fa-plus\" aria-hidden=\"true\"></i>\n      <span class=\"d-none d-sm-inline\">&nbsp;{{ dsoType + '.edit.metadata.add-button' | translate }}</span>\n    </button>\n    <button class=\"btn btn-warning ml-1\" id=\"dso-reinstate-btn\" *ngIf=\"isReinstatable\" [dsBtnDisabled]=\"(saving$ | async)\"\n            [attr.aria-label]=\"dsoType + '.edit.metadata.reinstate-button' | translate\"\n            [title]=\"dsoType + '.edit.metadata.reinstate-button' | translate\"\n            (click)=\"reinstate()\"><i class=\"fas fa-undo-alt\" aria-hidden=\"true\"></i>\n      <span class=\"d-none d-sm-inline\">&nbsp;{{ dsoType + '.edit.metadata.reinstate-button' | translate }}</span>\n    </button>\n    <button class=\"btn btn-primary ml-1\" id=\"dso-save-btn\" [dsBtnDisabled]=\"!hasChanges || (saving$ | async)\"\n            [attr.aria-label]=\"dsoType + '.edit.metadata.save-button' | translate\"\n            [title]=\"dsoType + '.edit.metadata.save-button' | translate\"\n            (click)=\"submit()\"><i class=\"fas fa-save\" aria-hidden=\"true\"></i>\n      <span class=\"d-none d-sm-inline\">&nbsp;{{ dsoType + '.edit.metadata.save-button' | translate }}</span>\n    </button>\n    <button class=\"btn btn-danger ml-1\" id=\"dso-discard-btn\" *ngIf=\"!isReinstatable\"\n            [attr.aria-label]=\"dsoType + '.edit.metadata.discard-button' | translate\"\n            [title]=\"dsoType + '.edit.metadata.discard-button' | translate\"\n            [dsBtnDisabled]=\"!hasChanges || (saving$ | async)\"\n            (click)=\"discard()\"><i class=\"fas fa-times\" aria-hidden=\"true\"></i>\n      <span class=\"d-none d-sm-inline\">&nbsp;{{ dsoType + '.edit.metadata.discard-button' | translate }}</span>\n    </button>\n  </div>\n\n  <div role=\"table\" [attr.aria-label]=\"'item.edit.head' | translate\">\n    <ds-dso-edit-metadata-headers [dsoType]=\"dsoType\"></ds-dso-edit-metadata-headers>\n    <div class=\"d-flex flex-row ds-field-row\" role=\"row\" *ngIf=\"form.newValue\">\n      <div class=\"lbl-cell ds-success\" role=\"rowheader\">\n        <ds-metadata-field-selector [dsoType]=\"dsoType\"\n                                    [(mdField)]=\"newMdField\"\n                                    [autofocus]=\"true\">\n        </ds-metadata-field-selector>\n      </div>\n      <div class=\"flex-grow-1 ds-drop-list\" role=\"cell\">\n        <div role=\"table\">\n          <ds-dso-edit-metadata-value-headers role=\"presentation\" [dsoType]=\"dsoType\"></ds-dso-edit-metadata-value-headers>\n          <ds-dso-edit-metadata-value [dso]=\"dso\"\n                                      [mdValue]=\"form.newValue\"\n                                      [dsoType]=\"dsoType\"\n                                      [saving$]=\"savingOrLoadingFieldValidation$\"\n                                      [isOnlyValue]=\"true\"\n                                      [mdField]=\"newMdField\"\n                                      (confirm)=\"confirmNewValue($event)\"\n                                      (remove)=\"form.newValue = undefined\"\n                                      (undo)=\"form.newValue = undefined\">\n          </ds-dso-edit-metadata-value>\n        </div>\n      </div>\n    </div>\n    <div class=\"d-flex flex-row ds-field-row\" role=\"row\" *ngFor=\"let mdField of form.fieldKeys\">\n      <div class=\"lbl-cell\" role=\"rowheader\">\n        <span class=\"dont-break-out preserve-line-breaks\">{{ mdField }}</span>\n        <div class=\"btn btn-warning reset-order-button mt-2 w-100\" *ngIf=\"form.hasOrderChanges(mdField)\"\n             (click)=\"form.resetOrder(mdField); onValueSaved()\">\n          {{ dsoType + '.edit.metadata.reset-order-button' | translate }}\n        </div>\n      </div>\n      <ds-dso-edit-metadata-field-values class=\"flex-grow-1\" role=\"cell\"\n                                         [dso]=\"dso\"\n                                         [form]=\"form\"\n                                         [dsoType]=\"dsoType\"\n                                         [saving$]=\"saving$\"\n                                         [draggingMdField$]=\"draggingMdField$\"\n                                         [mdField]=\"mdField\"\n                                         (valueSaved)=\"onValueSaved()\">\n      </ds-dso-edit-metadata-field-values>\n    </div>\n  </div>\n\n  <div *ngIf=\"isEmpty && !form.newValue\">\n    <ds-alert [content]=\"dsoType + '.edit.metadata.empty'\" [type]=\"AlertTypeEnum.Info\"></ds-alert>\n  </div>\n  <div class=\"button-row bottom d-inline-block w-100\">\n    <div class=\"mt-2 float-right space-children-mr ml-gap\">\n      <button class=\"btn btn-warning\" *ngIf=\"isReinstatable\" [dsBtnDisabled]=\"(saving$ | async)\"\n              [attr.aria-label]=\"dsoType + '.edit.metadata.reinstate-button' | translate\"\n              [title]=\"dsoType + '.edit.metadata.reinstate-button' | translate\"\n              (click)=\"reinstate()\">\n        <i class=\"fas fa-undo-alt\" aria-hidden=\"true\"></i> {{ dsoType + '.edit.metadata.reinstate-button' | translate }}\n      </button>\n      <button class=\"btn btn-primary\" [dsBtnDisabled]=\"!hasChanges || (saving$ | async)\"\n              [attr.aria-label]=\"dsoType + '.edit.metadata.save-button' | translate\"\n              [title]=\"dsoType + '.edit.metadata.save-button' | translate\"\n              (click)=\"submit()\">\n        <i class=\"fas fa-save\" aria-hidden=\"true\"></i> {{ dsoType + '.edit.metadata.save-button' | translate }}\n      </button>\n      <button class=\"btn btn-danger\" *ngIf=\"!isReinstatable\"\n              [attr.aria-label]=\"dsoType + '.edit.metadata.discard-button' | translate\"\n              [title]=\"dsoType + '.edit.metadata.discard-button' | translate\"\n              [dsBtnDisabled]=\"!hasChanges || (saving$ | async)\"\n              (click)=\"discard()\">\n        <i class=\"fas fa-times\" aria-hidden=\"true\"></i> {{ dsoType + '.edit.metadata.discard-button' | translate }}\n      </button>\n    </div>\n  </div>\n</div>\n<ds-loading *ngIf=\"!form\"></ds-loading>\n","import {\n  AsyncPipe,\n  NgClass,\n  NgFor,\n  NgIf,\n} from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n  UntypedFormControl,\n} from '@angular/forms';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport {\n  BehaviorSubject,\n  combineLatest as observableCombineLatest,\n  Observable,\n  of,\n  Subscription,\n} from 'rxjs';\nimport {\n  debounceTime,\n  map,\n  startWith,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs/operators';\n\nimport {\n  SortDirection,\n  SortOptions,\n} from '../../../core/cache/models/sort-options.model';\nimport { RegistryService } from '../../../core/registry/registry.service';\nimport {\n  getAllSucceededRemoteData,\n  getFirstCompletedRemoteData,\n  metadataFieldsToString,\n} from '../../../core/shared/operators';\nimport { hasValue } from '../../../shared/empty.util';\nimport { ThemedLoadingComponent } from '../../../shared/loading/themed-loading.component';\nimport { NotificationsService } from '../../../shared/notifications/notifications.service';\nimport { ClickOutsideDirective } from '../../../shared/utils/click-outside.directive';\nimport { followLink } from '../../../shared/utils/follow-link-config.model';\n\n@Component({\n  selector: 'ds-metadata-field-selector',\n  styleUrls: ['./metadata-field-selector.component.scss'],\n  templateUrl: './metadata-field-selector.component.html',\n  standalone: true,\n  imports: [FormsModule, NgClass, ReactiveFormsModule, ClickOutsideDirective, NgIf, NgFor, AsyncPipe, TranslateModule, ThemedLoadingComponent, InfiniteScrollModule],\n})\n/**\n * Component displaying a searchable input for metadata-fields\n */\nexport class MetadataFieldSelectorComponent implements OnInit, OnDestroy, AfterViewInit {\n  /**\n   * Type of the DSpaceObject\n   * Used to resolve i18n messages\n   */\n  @Input() dsoType: string;\n\n  /**\n   * The currently entered metadata field\n   */\n  @Input() mdField: string;\n\n  /**\n   * If true, the input will be automatically focussed upon when the component is first loaded\n   */\n  @Input() autofocus = false;\n\n  /**\n   * Emit any changes made to the metadata field\n   * This will only emit after a debounce takes place to avoid constant emits when the user is typing\n   */\n  @Output() mdFieldChange = new EventEmitter<string>();\n\n  /**\n   * Reference to the metadata-field's input\n   */\n  @ViewChild('mdFieldInput', { static: true }) mdFieldInput: ElementRef;\n\n  /**\n   * List of available metadata field options to choose from, dependent on the current query the user entered\n   * Shows up in a dropdown below the input\n   */\n  mdFieldOptions$: BehaviorSubject<string[]> = new BehaviorSubject<string[]>([]);\n\n  /**\n   * FormControl for the input\n   */\n  public input: UntypedFormControl = new UntypedFormControl();\n\n  /**\n   * The current query to update mdFieldOptions$ for\n   * This is controlled by a debounce, to avoid too many requests\n   */\n  query$: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n\n  /**\n   * The amount of time to debounce the query for (in ms)\n   */\n  debounceTime = 300;\n\n  /**\n   * Whether or not the the user just selected a value\n   * This flag avoids the metadata field from updating twice, which would result in the dropdown opening again right after selecting a value\n   */\n  selectedValueLoading = false;\n\n  /**\n   * Whether or not to show the invalid feedback\n   * True when validate() is called and the mdField isn't present in the available metadata fields retrieved from the server\n   */\n  showInvalid = false;\n\n  /**\n   * Subscriptions to unsubscribe from on destroy\n   */\n  subs: Subscription[] = [];\n\n\n  /**\n   * The current page to load\n   * Dynamically goes up as the user scrolls down until it reaches the last page possible\n   */\n  currentPage$ = new BehaviorSubject(1);\n\n  /**\n   * Whether or not the list contains a next page to load\n   * This allows us to avoid next pages from trying to load when there are none\n   */\n  hasNextPage = false;\n\n  /**\n   * Whether or not new results are currently loading\n   */\n  loading = false;\n\n  /**\n   * Default page option for this feature\n   */\n  pageOptions = { elementsPerPage: 20, sort: new SortOptions('fieldName', SortDirection.ASC) };\n\n\n  constructor(protected registryService: RegistryService,\n              protected notificationsService: NotificationsService,\n              protected translate: TranslateService) {\n  }\n\n  /**\n   * Subscribe to any changes made to the input, with a debounce and fire a query, as well as emit the change from this component\n   * Update the mdFieldOptions$ depending on the query$ fired by querying the server\n   */\n  ngOnInit(): void {\n    this.subs.push(this.input.valueChanges.pipe(\n      debounceTime(this.debounceTime),\n      startWith(''),\n    ).subscribe((valueChange) => {\n      this.currentPage$.next(1);\n      if (!this.selectedValueLoading) {\n        this.query$.next(valueChange);\n      }\n      this.mdField = valueChange;\n      this.mdFieldChange.emit(this.mdField);\n    }));\n    this.subs.push(\n      observableCombineLatest(\n        this.query$,\n        this.currentPage$,\n      )\n        .pipe(\n          switchMap(([query, page]: [string, number]) => {\n            this.loading = true;\n            if (page === 1) {\n              this.mdFieldOptions$.next([]);\n            }\n            return this.search(query as string, page as number);\n          }),\n        ).subscribe((rd ) => {\n          if (!this.selectedValueLoading) {this.updateList(rd);}\n        }));\n  }\n\n  /**\n   * Focus the input if autofocus is enabled\n   */\n  ngAfterViewInit(): void {\n    if (this.autofocus) {\n      this.mdFieldInput.nativeElement.focus();\n    }\n  }\n\n  /**\n   * Validate the metadata field to check if it exists on the server and return an observable boolean for success/error\n   * Upon subscribing to the returned observable, the showInvalid flag is updated accordingly to show the feedback under the input\n   */\n  validate(): Observable<boolean> {\n    return this.registryService.queryMetadataFields(this.mdField, null, true, false, followLink('schema')).pipe(\n      getFirstCompletedRemoteData(),\n      switchMap((rd) => {\n        if (rd.hasSucceeded) {\n          return of(rd).pipe(\n            metadataFieldsToString(),\n            take(1),\n            map((fields: string[]) => fields.indexOf(this.mdField) > -1),\n            tap((exists: boolean) => this.showInvalid = !exists),\n          );\n        } else {\n          this.notificationsService.error(this.translate.instant(`${this.dsoType}.edit.metadata.metadatafield.error`), rd.errorMessage);\n          return [false];\n        }\n      }),\n    );\n  }\n\n  /**\n   * Select a metadata field from the dropdown options\n   * @param mdFieldOption\n   */\n  select(mdFieldOption: string): void {\n    this.selectedValueLoading = true;\n    this.input.setValue(mdFieldOption);\n  }\n\n\n  /**\n   * When the user reaches the bottom of the page (or almost) and there's a next page available, increase the current page\n   */\n  onScrollDown() {\n    if (this.hasNextPage && !this.loading) {\n      this.currentPage$.next(this.currentPage$.value + 1);\n    }\n  }\n\n  /**\n   * @Description It update the mdFieldOptions$ according the query result page\n   * */\n  updateList(list: string[]) {\n    this.loading = false;\n    this.hasNextPage = list.length > 0;\n    const currentEntries = this.mdFieldOptions$.getValue();\n    this.mdFieldOptions$.next([...currentEntries, ...list]);\n    this.selectedValueLoading = false;\n  }\n  /**\n   * Perform a search for the current query and page\n   * @param query Query to search objects for\n   * @param page  Page to retrieve\n   * @param useCache Whether or not to use the cache\n   */\n  search(query: string, page: number, useCache: boolean = true)  {\n    return this.registryService.queryMetadataFields(query,{\n      elementsPerPage: this.pageOptions.elementsPerPage, sort: this.pageOptions.sort,\n      currentPage: page }, useCache, false, followLink('schema'))\n      .pipe(\n        getAllSucceededRemoteData(),\n        metadataFieldsToString(),\n      );\n  }\n  /**\n   * Unsubscribe from any open subscriptions\n   */\n  ngOnDestroy(): void {\n    this.subs.filter((sub: Subscription) => hasValue(sub)).forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","<div class=\"w-100 position-relative\">\n  <input type=\"text\" #mdFieldInput\n         class=\"form-control\" [ngClass]=\"{ 'is-invalid': showInvalid }\"\n         [attr.aria-label]=\"(dsoType + '.edit.metadata.metadatafield') | translate\"\n         [value]=\"mdField\"\n         [formControl]=\"input\"\n         (focusin)=\"query$.next(mdField)\"\n         (dsClickOutside)=\"query$.next(null)\"\n         (click)=\"$event.stopPropagation();\"\n         (keyup)=\"this.selectedValueLoading = false\"\n  />\n  <div class=\"invalid-feedback show-feedback\" *ngIf=\"showInvalid\">{{ dsoType + '.edit.metadata.metadatafield.invalid' | translate }}</div>\n  <div id=\"scrollable-metadata-field-selector\" class=\"dropdown-menu scrollable-menu\" [ngClass]=\"{'show': (mdFieldOptions$ | async)?.length > 0}\">\n    <div  class=\"dropdown-list\">\n      <div\n        infiniteScroll\n        [infiniteScrollDistance]=\"1\"\n        [infiniteScrollThrottle]=\"0\"\n        [infiniteScrollContainer]=\"'#scrollable-metadata-field-selector'\"\n        [fromRoot]=\"true\"\n        (scrolled)=\"onScrollDown()\">\n        <ng-container *ngIf=\"mdFieldOptions$ | async\">\n          <button *ngFor=\"let listEntry of (mdFieldOptions$ | async)\"\n                  class=\"d-block dropdown-item\"\n                  dsHoverClass=\"ds-hover\"\n                  (click)=\"select(listEntry)\" #listEntryElement>\n            <span [innerHTML]=\"listEntry\"></span>\n          </button>\n        </ng-container>\n        <button *ngIf=\"loading\"\n                class=\"list-group-item list-group-item-action border-0 list-entry\">\n          <ds-loading [showMessage]=\"false\"></ds-loading>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  Input,\n} from '@angular/core';\n\nimport { UpdateDataService } from '../../core/data/update-data.service';\nimport { DSpaceObject } from '../../core/shared/dspace-object.model';\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { DsoEditMetadataComponent } from './dso-edit-metadata.component';\n\n@Component({\n  selector: 'ds-dso-edit-metadata',\n  styleUrls: [],\n  templateUrl: './../../shared/theme-support/themed.component.html',\n  standalone: true,\n  imports: [DsoEditMetadataComponent],\n})\nexport class ThemedDsoEditMetadataComponent extends ThemedComponent<DsoEditMetadataComponent> {\n\n  @Input() dso: DSpaceObject;\n\n  @Input() updateDataService: UpdateDataService<DSpaceObject>;\n\n  protected inAndOutputNames: (keyof DsoEditMetadataComponent & keyof this)[] = ['dso', 'updateDataService'];\n\n  protected getComponentName(): string {\n    return 'DsoEditMetadataComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/dso-shared/dso-edit-metadata/dso-edit-metadata.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./dso-edit-metadata.component`);\n  }\n\n\n}\n","<ng-template #vcr>\n</ng-template>\n<div #content>\n  <ng-content></ng-content>\n</div>\n","var map = {\n\t\"./custom/app/dso-shared/dso-edit-metadata/dso-edit-metadata.component\": [\n\t\t46296,\n\t\t\"src_themes_custom_app_dso-shared_dso-edit-metadata_dso-edit-metadata_component_ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 30207;\nmodule.exports = webpackAsyncContext;"],"names":["inject","hasNoValue","currentPathFromSnapshot","I18nBreadcrumbsService","i18nBreadcrumbResolver","route","state","breadcrumbService","key","data","breadcrumbKey","Error","url","fullPath","provider","of","observableOf","Breadcrumb","BREADCRUMB_MESSAGE_POSTFIX","getBreadcrumbs","factory","ɵfac","providedIn","moveItemInArray","hasValue","ArrayMoveChangeAnalyzer","diff","array1","array2","getMoves","map","move","Object","assign","op","from","path","moved","reduce","moves","item","index","last","lastIndexOf","unshift","MetadataPatchOperation","MetadataPatchAddOperation","operationType","constructor","field","value","toOperation","MetadataPatchMoveOperation","to","MetadataPatchRemoveOperation","place","MetadataPatchReplaceOperation","CdkDropList","AsyncPipe","NgFor","EventEmitter","BehaviorSubject","Observable","DSpaceObject","DsoEditMetadataChangeType","DsoEditMetadataForm","DsoEditMetadataValueComponent","DsoEditMetadataValueHeadersComponent","i0","ɵɵelementStart","ɵɵlistener","DsoEditMetadataFieldValuesComponent_ds_dso_edit_metadata_value_4_Template_ds_dso_edit_metadata_value_edit_0_listener","mdValue_r2","ɵɵrestoreView","_r1","$implicit","ɵɵresetView","editing","DsoEditMetadataFieldValuesComponent_ds_dso_edit_metadata_value_4_Template_ds_dso_edit_metadata_value_confirm_0_listener","$event","ctx_r2","ɵɵnextContext","confirmChanges","form","resetReinstatable","valueSaved","emit","DsoEditMetadataFieldValuesComponent_ds_dso_edit_metadata_value_4_Template_ds_dso_edit_metadata_value_remove_0_listener","ctx_r3","idx_r5","change","DsoEditMetadataChangeTypeEnum","ADD","remove","mdField","REMOVE","DsoEditMetadataFieldValuesComponent_ds_dso_edit_metadata_value_4_Template_ds_dso_edit_metadata_value_undo_0_listener","ctx_r5","discard","DsoEditMetadataFieldValuesComponent_ds_dso_edit_metadata_value_4_Template_ds_dso_edit_metadata_value_dragging_0_listener","draggingMdField$","next","ɵɵelementEnd","ɵɵproperty","dso","dsoType","saving$","fields","length","DsoEditMetadataFieldValuesComponent","drop","event","dragIndex","previousIndex","dropIndex","currentIndex","forEach","newValue","selectors","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","DsoEditMetadataFieldValuesComponent_Template","rf","ctx","DsoEditMetadataFieldValuesComponent_Template_div_cdkDropListDropped_0_listener","ɵɵelement","ɵɵtemplate","DsoEditMetadataFieldValuesComponent_ds_dso_edit_metadata_value_4_Template","ɵɵclassProp","ɵɵpipeBind1","ɵɵadvance","styles","MetadataValue","isEmpty","isNotEmpty","DsoEditMetadataValue","added","reordered","originalValue","finishEditing","UPDATE","language","authority","confidence","undefined","hasChanges","discardAndMarkReinstatable","reinstatableValue","reinstatableChange","keepPlace","reinstate","isReinstatable","metadata","originalFieldKeys","fieldKeys","reinstatableNewValues","entries","values","push","setValuesForFieldSorted","sortFieldKeys","add","setMetadataField","addValueToField","splice","indexOf","some","hasOrderChanges","removeFromIndex","resetOrder","sort","a","b","localeCompare","getOperations","moveAnalyser","operations","replaceOperations","removeOperations","addOperations","console","warn","operation","valuesWithoutRemoved","filter","moveOperations","substr","TranslateModule","DsoEditMetadataHeadersComponent","DsoEditMetadataHeadersComponent_Template","ɵɵtext","ɵɵtextInterpolate","i1","TranslatePipe","DsoEditMetadataValueHeadersComponent_Template","CdkDrag","CdkDragHandle","NgClass","NgIf","ChangeDetectorRef","SimpleChanges","FormsModule","UntypedFormControl","UntypedFormGroup","RouterLink","NgbTooltipModule","TranslateService","EMPTY","switchMap","take","tap","RegistryService","VocabularyService","NotificationsService","DSONameService","ItemDataService","RelationshipDataService","MetadataService","ConfidenceType","MetadataRepresentationType","getFirstCompletedRemoteData","getFirstSucceededRemoteData","getFirstSucceededRemoteDataPayload","getRemoteDataPayload","metadataFieldsToString","getItemPageRoute","BtnDisabledDirective","DsDynamicOneboxComponent","DynamicOneboxModel","DsDynamicScrollableDropdownComponent","DynamicScrollableDropdownModel","FormFieldMetadataValueObject","AuthorityConfidenceStateDirective","ThemedTypeBadgeComponent","DebounceDirective","followLink","VarDirective","ctx_r1","mdValue","ɵɵtwoWayListener","DsoEditMetadataValueComponent_div_0_div_1_textarea_2_Template_textarea_ngModelChange_0_listener","_r3","ɵɵtwoWayBindingSet","DsoEditMetadataValueComponent_div_0_div_1_textarea_2_Template_textarea_onDebounce_0_listener","confirm","ɵɵtwoWayProperty","DsoEditMetadataValueComponent_div_0_div_1_ds_dynamic_scrollable_dropdown_5_Template_ds_dynamic_scrollable_dropdown_change_0_listener","_r4","onChangeAuthorityField","group","getModel","DsoEditMetadataValueComponent_div_0_div_1_ds_dynamic_onebox_7_Template_ds_dynamic_onebox_change_0_listener","_r5","DsoEditMetadataValueComponent_div_0_div_1_button_10_Template_button_click_0_listener","_r6","toggleFreeTextEdition","enabledFreeTextEditing","ɵɵtextInterpolate1","ɵɵtextInterpolate2","DsoEditMetadataValueComponent_div_0_div_1_div_14_button_5_Template_button_click_0_listener","_r8","onChangeEditingAuthorityStatus","ɵɵpropertyInterpolate","DsoEditMetadataValueComponent_div_0_div_1_div_14_button_6_Template_button_click_0_listener","_r9","DsoEditMetadataValueComponent_div_0_div_1_div_14_Template_input_ngModelChange_3_listener","_r7","DsoEditMetadataValueComponent_div_0_div_1_div_14_Template_input_change_3_listener","onChangeAuthorityKey","DsoEditMetadataValueComponent_div_0_div_1_div_14_button_5_Template","DsoEditMetadataValueComponent_div_0_div_1_div_14_button_6_Template","editingAuthority","mdRepresentationItemRoute$","mdRepresentationName$","mdRepresentation_r10","DsoEditMetadataValueComponent_div_0_div_1_div_1_Template","DsoEditMetadataValueComponent_div_0_div_1_textarea_2_Template","DsoEditMetadataValueComponent_div_0_div_1_ds_dynamic_scrollable_dropdown_5_Template","DsoEditMetadataValueComponent_div_0_div_1_ds_dynamic_onebox_7_Template","DsoEditMetadataValueComponent_div_0_div_1_button_10_Template","DsoEditMetadataValueComponent_div_0_div_1_div_13_Template","DsoEditMetadataValueComponent_div_0_div_1_div_14_Template","DsoEditMetadataValueComponent_div_0_div_1_div_17_Template","isAuthorityControlled","isSuggesterVocabulary","isScrollableVocabulary","isHierarchicalVocabulary","isVirtual_r11","ConfidenceTypeEnum","CF_UNSET","CF_NOVALUE","DsoEditMetadataValueComponent_div_0_input_5_Template_input_ngModelChange_0_listener","_r12","DsoEditMetadataValueComponent_div_0_input_5_Template_input_onDebounce_0_listener","DsoEditMetadataValueComponent_div_0_button_11_Template_button_click_0_listener","_r13","edit","DsoEditMetadataValueComponent_div_0_button_12_Template_button_click_0_listener","_r14","disabled_r15","ɵɵpureFunction1","_c1","DsoEditMetadataValueComponent_div_0_Template_div_cdkDragStarted_0_listener","dragging","DsoEditMetadataValueComponent_div_0_Template_div_cdkDragEnded_0_listener","DsoEditMetadataValueComponent_div_0_div_1_Template","DsoEditMetadataValueComponent_div_0_div_4_Template","DsoEditMetadataValueComponent_div_0_input_5_Template","DsoEditMetadataValueComponent_div_0_button_11_Template","DsoEditMetadataValueComponent_div_0_button_12_Template","DsoEditMetadataValueComponent_div_0_Template_button_click_13_listener","DsoEditMetadataValueComponent_div_0_Template_button_click_18_listener","undo","DsoEditMetadataValueComponent_div_0_button_23_Template","ɵɵpureFunction4","_c0","isOnlyValue","mdRepresentation$","relationshipService","dsoNameService","vocabularyService","itemService","cdr","registryService","notificationsService","translate","metadataService","authorityField","model$","ngOnInit","initVirtualProperties","initAuthorityProperties","isVirtual","resolveMetadataRepresentation","pipe","mdRepresentation","representationType","Item","getName","owningCollection$","findByHref","_links","self","href","owningCollection","vocabulary$","c","getVocabularyByMetadataAndCollection","uuid","isAuthorityControlled$","v","createModel","result","isHierarchicalVocabulary$","hierarchical","isScrollableVocabulary$","scrollable","isSuggesterVocabulary$","vocabulary","formFieldValue","display","vocabularyOptions","closed","name","model","id","label","metadataFields","repeatable","submissionId","hasSelectableMetadata","placeholder","maxOptions","ngOnChanges","changes","firstChange","currentValue","previousValue","includes","validateMetadataField","subscribe","isValid","detectChanges","queryMetadataFields","rd","hasSucceeded","error","instant","errorMessage","CF_ACCEPTED","status","ɵɵdirectiveInject","i2","i3","i4","i5","i6","i7","i8","ɵɵNgOnChangesFeature","DsoEditMetadataValueComponent_Template","DsoEditMetadataValueComponent_div_0_Template","i9","DefaultValueAccessor","NgControlStatus","NgModel","i10","NgbTooltip","Injector","ActivatedRoute","combineLatest","observableCombineLatest","mergeMap","APP_DATA_SERVICES_MAP","lazyDataService","ResourceType","AlertComponent","AlertType","ThemedLoadingComponent","MetadataFieldSelectorComponent","DsoEditMetadataComponent_div_0_button_10_Template_button_click_0_listener","DsoEditMetadataComponent_div_0_button_19_Template_button_click_0_listener","DsoEditMetadataComponent_div_0_div_23_Template_ds_metadata_field_selector_mdFieldChange_2_listener","newMdField","DsoEditMetadataComponent_div_0_div_23_Template_ds_dso_edit_metadata_value_confirm_6_listener","confirmNewValue","DsoEditMetadataComponent_div_0_div_23_Template_ds_dso_edit_metadata_value_remove_6_listener","DsoEditMetadataComponent_div_0_div_23_Template_ds_dso_edit_metadata_value_undo_6_listener","savingOrLoadingFieldValidation$","DsoEditMetadataComponent_div_0_div_24_div_4_Template_div_click_0_listener","mdField_r8","onValueSaved","DsoEditMetadataComponent_div_0_div_24_div_4_Template","DsoEditMetadataComponent_div_0_div_24_Template_ds_dso_edit_metadata_field_values_valueSaved_5_listener","AlertTypeEnum","Info","DsoEditMetadataComponent_div_0_button_28_Template_button_click_0_listener","DsoEditMetadataComponent_div_0_button_36_Template_button_click_0_listener","_r10","DsoEditMetadataComponent_div_0_Template_button_click_2_listener","DsoEditMetadataComponent_div_0_button_10_Template","DsoEditMetadataComponent_div_0_Template_button_click_11_listener","submit","DsoEditMetadataComponent_div_0_button_19_Template","DsoEditMetadataComponent_div_0_div_23_Template","DsoEditMetadataComponent_div_0_div_24_Template","DsoEditMetadataComponent_div_0_div_25_Template","DsoEditMetadataComponent_div_0_button_28_Template","DsoEditMetadataComponent_div_0_Template_button_click_29_listener","DsoEditMetadataComponent_div_0_button_36_Template","DsoEditMetadataComponent","translateService","parentInjector","arrayMoveChangeAnalyser","dataServiceMap","loadingFieldValidation$","dsoUpdateSubscription","parent","parentData","initDSO","payload","retrieveDataService","dataService","initDataService","initForm","initDSOType","saving","loading","updateDataService","lazyProvider$","object","type","keys","patch","hasFailed","success","saved","metadataFieldSelectorComponent","validate","valid","ngOnDestroy","unsubscribe","viewQuery","DsoEditMetadataComponent_Query","DsoEditMetadataComponent_div_0_Template","DsoEditMetadataComponent_ds_loading_1_Template","ElementRef","ReactiveFormsModule","InfiniteScrollModule","debounceTime","startWith","SortDirection","SortOptions","getAllSucceededRemoteData","ClickOutsideDirective","MetadataFieldSelectorComponent_ng_container_9_button_1_Template_button_click_0_listener","listEntry_r4","select","ɵɵsanitizeHtml","ɵɵelementContainerStart","MetadataFieldSelectorComponent_ng_container_9_button_1_Template","mdFieldOptions$","autofocus","mdFieldChange","input","query$","selectedValueLoading","showInvalid","subs","currentPage$","hasNextPage","pageOptions","elementsPerPage","ASC","valueChanges","valueChange","query","page","search","updateList","ngAfterViewInit","mdFieldInput","nativeElement","focus","exists","mdFieldOption","setValue","onScrollDown","list","currentEntries","getValue","useCache","currentPage","sub","MetadataFieldSelectorComponent_Query","MetadataFieldSelectorComponent_Template_input_focusin_1_listener","MetadataFieldSelectorComponent_Template_input_dsClickOutside_1_listener","MetadataFieldSelectorComponent_Template_input_click_1_listener","stopPropagation","MetadataFieldSelectorComponent_Template_input_keyup_1_listener","MetadataFieldSelectorComponent_div_4_Template","MetadataFieldSelectorComponent_Template_div_scrolled_8_listener","MetadataFieldSelectorComponent_ng_container_9_Template","MetadataFieldSelectorComponent_button_11_Template","_c2","tmp_6_0","FormControlDirective","InfiniteScrollDirective","ThemedComponent","ThemedDsoEditMetadataComponent","inAndOutputNames","getComponentName","importThemedComponent","themeName","importUnthemedComponent","t","ɵɵInheritDefinitionFeature","ngContentSelectors","ThemedDsoEditMetadataComponent_Template","ThemedDsoEditMetadataComponent_ng_template_0_Template","ɵɵtemplateRefExtractor","ɵɵprojection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}