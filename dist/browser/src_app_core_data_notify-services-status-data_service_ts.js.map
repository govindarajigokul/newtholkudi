{"version":3,"file":"src_app_core_data_notify-services-status-data_service_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAKc;AAGuE;AAClB;AACC;AACO;AAE7B;AACK;;;;;;AAG7C,MAAOQ,+BAAgC,SAAQH,oFAA6C;EAEhGI,YACYC,cAA8B,EAC9BC,UAAkC,EAClCC,WAA+B,EAC/BC,UAA8B;IAExC,KAAK,CAAC,gBAAgB,EAAEH,cAAc,EAAEC,UAAU,EAAEC,WAAW,EAAEC,UAAU,CAAC;IALlE,KAAAH,cAAc,GAAdA,cAAc;IACd,KAAAC,UAAU,GAAVA,UAAU;IACV,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,UAAU,GAAVA,UAAU;EAGtB;EAEA;;;;;EAKAC,uBAAuBA,CAACC,QAAgB;IACtC,MAAMC,KAAK,GAAG,IAAI,CAACC,WAAW,EAAE,CAACC,IAAI,CACnClB,yCAAG,CAAEmB,GAAW,IAAKA,GAAG,GAAG,GAAG,GAAGJ,QAAQ,CAAE,CAC5C;IAEDC,KAAK,CAACE,IAAI,CAACjB,0CAAI,CAAC,CAAC,CAAC,CAAC,CAACmB,SAAS,CAAED,GAAW,IAAI;MAC5C,MAAME,OAAO,GAAG,IAAIf,uDAAU,CAAC,IAAI,CAACI,cAAc,CAACY,iBAAiB,EAAE,EAAEH,GAAG,CAAC;MAC5E,IAAI,CAACT,cAAc,CAACa,IAAI,CAACF,OAAO,EAAE,IAAI,CAAC;IACzC,CAAC,CAAC;IAEF,OAAO,IAAI,CAACV,UAAU,CAACa,aAAa,CAACR,KAAK,CAAC;EAC7C;;;uBA3BWR,+BAA+B,EAAAiB,sDAAA,CAAAE,4DAAA,GAAAF,sDAAA,CAAAG,6FAAA,GAAAH,sDAAA,CAAAI,2EAAA,GAAAJ,sDAAA,CAAAK,4EAAA;IAAA;EAAA;;;aAA/BtB,+BAA+B;MAAAuB,OAAA,EAA/BvB,+BAA+B,CAAAwB,IAAA;MAAAC,UAAA,EADlB;IAAM;EAAA","sources":["./src/app/core/data/notify-services-status-data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  map,\n  Observable,\n  take,\n} from 'rxjs';\n\nimport { NotifyRequestsStatus } from '../../item-page/simple/notify-requests-status/notify-requests-status.model';\nimport { RemoteDataBuildService } from '../cache/builders/remote-data-build.service';\nimport { ObjectCacheService } from '../cache/object-cache.service';\nimport { HALEndpointService } from '../shared/hal-endpoint.service';\nimport { IdentifiableDataService } from './base/identifiable-data.service';\nimport { RemoteData } from './remote-data';\nimport { GetRequest } from './request.models';\nimport { RequestService } from './request.service';\n\n@Injectable({ providedIn: 'root' })\nexport class NotifyRequestsStatusDataService extends IdentifiableDataService<NotifyRequestsStatus> {\n\n  constructor(\n    protected requestService: RequestService,\n    protected rdbService: RemoteDataBuildService,\n    protected objectCache: ObjectCacheService,\n    protected halService: HALEndpointService,\n  ) {\n    super('notifyrequests', requestService, rdbService, objectCache, halService);\n  }\n\n  /**\n   * Retrieves the status of notify requests for a specific item.\n   * @param itemUuid The UUID of the item.\n   * @returns An Observable that emits the remote data containing the notify requests status.\n   */\n  getNotifyRequestsStatus(itemUuid: string): Observable<RemoteData<NotifyRequestsStatus>> {\n    const href$ = this.getEndpoint().pipe(\n      map((url: string) => url + '/' + itemUuid ),\n    );\n\n    href$.pipe(take(1)).subscribe((url: string) => {\n      const request = new GetRequest(this.requestService.generateRequestId(), url);\n      this.requestService.send(request, true);\n    });\n\n    return this.rdbService.buildFromHref(href$);\n  }\n}\n"],"names":["map","take","RemoteDataBuildService","ObjectCacheService","HALEndpointService","IdentifiableDataService","GetRequest","RequestService","NotifyRequestsStatusDataService","constructor","requestService","rdbService","objectCache","halService","getNotifyRequestsStatus","itemUuid","href$","getEndpoint","pipe","url","subscribe","request","generateRequestId","send","buildFromHref","i0","ɵɵinject","i1","i2","i3","i4","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}