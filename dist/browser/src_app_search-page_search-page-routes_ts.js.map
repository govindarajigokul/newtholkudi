{"version":3,"file":"src_app_search-page_search-page-routes_ts.js","mappings":"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","sources":["./src/app/breadcrumbs/breadcrumb/breadcrumb.model.ts","./src/app/core/breadcrumbs/i18n-breadcrumb.resolver.ts","./src/app/core/breadcrumbs/i18n-breadcrumbs.service.ts","./src/app/search-page/configuration-search-page.guard.ts","./src/app/search-page/search-page-routes.ts","./src/app/search-page/search-page.component.ts","./src/app/search-page/search-page.component.html","./src/app/search-page/themed-search-page.component.ts","./src/app/shared/theme-support/themed.component.html","./src/themes/ lazy ^\\.\\/.*\\/app\\/search\\-page\\/search\\-page\\.component$ namespace object"],"sourcesContent":["/**\n * Class representing a single breadcrumb\n */\nexport class Breadcrumb {\n  constructor(\n    /**\n     * The display value of the breadcrumb\n     */\n    public text: string,\n    /**\n     * The optional url of the breadcrumb\n     */\n    public url?: string) {\n  }\n}\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { BreadcrumbConfig } from '../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { hasNoValue } from '../../shared/empty.util';\nimport { currentPathFromSnapshot } from '../../shared/utils/route.utils';\nimport { I18nBreadcrumbsService } from './i18n-breadcrumbs.service';\n\n/**\n * Method for resolving an I18n breadcrumb configuration object\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {I18nBreadcrumbsService} breadcrumbService\n * @returns BreadcrumbConfig object\n */\nexport const i18nBreadcrumbResolver: ResolveFn<BreadcrumbConfig<string>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  breadcrumbService: I18nBreadcrumbsService = inject(I18nBreadcrumbsService),\n): BreadcrumbConfig<string> => {\n  const key = route.data.breadcrumbKey;\n  if (hasNoValue(key)) {\n    throw new Error('You provided an i18nBreadcrumbResolver for url \\\"' + route.url + '\\\" but no breadcrumbKey in the route\\'s data');\n  }\n  const fullPath = currentPathFromSnapshot(route);\n  return { provider: breadcrumbService, key: key, url: fullPath };\n};\n","import { Injectable } from '@angular/core';\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs';\n\nimport { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport { BreadcrumbsProviderService } from './breadcrumbsProviderService';\n\n/**\n * The postfix for i18n breadcrumbs\n */\nexport const BREADCRUMB_MESSAGE_POSTFIX = '.breadcrumbs';\n\n/**\n * Service to calculate i18n breadcrumbs for a single part of the route\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class I18nBreadcrumbsService implements BreadcrumbsProviderService<string> {\n\n  /**\n   * Method to calculate the breadcrumbs\n   * @param key The key used to resolve the breadcrumb\n   * @param url The url to use as a link for this breadcrumb\n   */\n  getBreadcrumbs(key: string, url: string): Observable<Breadcrumb[]> {\n    return observableOf([new Breadcrumb(key + BREADCRUMB_MESSAGE_POSTFIX, url)]);\n  }\n}\n","import {\n  ActivatedRouteSnapshot,\n  CanActivateFn,\n  RouterStateSnapshot,\n} from '@angular/router';\n\n/**\n * Assemble the correct i18n key for the configuration search page's title depending on the current route's configuration parameter.\n * The format of the key will be \"{configuration}.search.title\" with:\n * - configuration: The current configuration stored in route.params\n */\nexport const configurationSearchPageGuard: CanActivateFn = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n): boolean => {\n  const configuration = route.params.configuration;\n\n  const newTitle = `${configuration}.search.title`;\n\n  route.data = { title: newTitle };\n  return true;\n};\n","import { Route } from '@angular/router';\n\nimport { i18nBreadcrumbResolver } from '../core/breadcrumbs/i18n-breadcrumb.resolver';\nimport { configurationSearchPageGuard } from './configuration-search-page.guard';\nimport { ThemedConfigurationSearchPageComponent } from './themed-configuration-search-page.component';\nimport { ThemedSearchPageComponent } from './themed-search-page.component';\n\nexport const ROUTES: Route[] = [{\n  path: '',\n  resolve: { breadcrumb: i18nBreadcrumbResolver }, data: { title: 'search.title', breadcrumbKey: 'search' },\n  children: [\n    { path: '', component: ThemedSearchPageComponent },\n    {\n      path: ':configuration',\n      component: ThemedConfigurationSearchPageComponent,\n      canActivate: [configurationSearchPageGuard],\n    },\n  ],\n}];\n","import { Component } from '@angular/core';\n\nimport { SearchConfigurationService } from '../core/shared/search/search-configuration.service';\nimport { SEARCH_CONFIG_SERVICE } from '../my-dspace-page/my-dspace-configuration.service';\nimport { ThemedSearchComponent } from '../shared/search/themed-search.component';\n\n@Component({\n  selector: 'ds-base-search-page',\n  templateUrl: './search-page.component.html',\n  providers: [\n    {\n      provide: SEARCH_CONFIG_SERVICE,\n      useClass: SearchConfigurationService,\n    },\n  ],\n  standalone: true,\n  imports: [ThemedSearchComponent],\n})\n/**\n * This component represents the whole search page\n * It renders search results depending on the current search options\n */\nexport class SearchPageComponent {\n}\n","<ds-search [showCsvExport]=\"true\" [trackStatistics]=\"true\"></ds-search>\n","import { Component } from '@angular/core';\n\nimport { ThemedComponent } from '../shared/theme-support/themed.component';\nimport { SearchPageComponent } from './search-page.component';\n\n/**\n * Themed wrapper for SearchPageComponent\n */\n@Component({\n  selector: 'ds-search-page',\n  styleUrls: [],\n  templateUrl: '../shared/theme-support/themed.component.html',\n  standalone: true,\n  imports: [SearchPageComponent],\n})\nexport class ThemedSearchPageComponent extends ThemedComponent<SearchPageComponent> {\n\n  protected getComponentName(): string {\n    return 'SearchPageComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../themes/${themeName}/app/search-page/search-page.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./search-page.component`);\n  }\n}\n","<ng-template #vcr>\n</ng-template>\n<div #content>\n  <ng-content></ng-content>\n</div>\n","var map = {\n\t\"./custom/app/search-page/search-page.component\": [\n\t\t76559,\n\t\t\"src_themes_custom_app_search-page_search-page_component_ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 12913;\nmodule.exports = webpackAsyncContext;"],"names":["Breadcrumb","constructor","text","url","inject","hasNoValue","currentPathFromSnapshot","I18nBreadcrumbsService","i18nBreadcrumbResolver","route","state","breadcrumbService","key","data","breadcrumbKey","Error","fullPath","provider","of","observableOf","BREADCRUMB_MESSAGE_POSTFIX","getBreadcrumbs","factory","ɵfac","providedIn","configurationSearchPageGuard","configuration","params","newTitle","title","ThemedConfigurationSearchPageComponent","ThemedSearchPageComponent","ROUTES","path","resolve","breadcrumb","children","component","canActivate","SearchConfigurationService","SEARCH_CONFIG_SERVICE","ThemedSearchComponent","SearchPageComponent","selectors","standalone","features","i0","ɵɵProvidersFeature","provide","useClass","ɵɵStandaloneFeature","decls","vars","consts","template","SearchPageComponent_Template","rf","ctx","ɵɵelement","ɵɵproperty","encapsulation","ThemedComponent","getComponentName","importThemedComponent","themeName","importUnthemedComponent","t","ɵɵInheritDefinitionFeature","ngContentSelectors","_c0","ThemedSearchPageComponent_Template","ɵɵtemplate","ThemedSearchPageComponent_ng_template_0_Template","ɵɵtemplateRefExtractor","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}