{"version":3,"file":"src_app_register-page_register-page-routes_ts.js","mappings":";;;;;;;;;;;;;;;;;AAAuC;AAEG;AAEyB;AACI;AAGvE;;;;AAIO,MAAMK,2BAA2B,GACtCF,gFAAqB,CACnB,MAAK;EACH,MAAMG,uBAAuB,GAAGN,qDAAM,CAACI,gFAAuB,CAAC;EAC/D,OAAOF,wCAAY,CAACI,uBAAuB,CAACC,gBAAgB,EAAE,CAAC;AACjE,CAAC,CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdsB;AAWD;AAIC;AACW;AAIP;AAEQ;AAG2B;AACE;AAMA;AACW;AACX;AAI7B;AAEiG;AAC3D;AACzB;AACsC;;;;;;;;;;;IC1BpEyB,6DAAA,WAA4D;IACxDA,qDAAA,GACJ;;IAAAA,2DAAA,EAAO;;;IADHA,wDAAA,EACJ;IADIA,iEAAA,MAAAA,0DAAA,4EACJ;;;;;IAJQA,6DAAA,cAC4C;IACpDA,yDAAA,IAAAQ,mDAAA,mBAA4D;IAGpDR,2DAAA,EAAM;;;;IAHPA,wDAAA,EAAmD;IAAnDA,yDAAA,SAAAU,MAAA,CAAAC,SAAA,CAAAC,MAAA,IAAAF,MAAA,CAAAC,SAAA,CAAAC,MAAA,CAAAC,QAAA,CAAmD;;;;;IAgB1Db,6DAAA,WAA0D;IACtDA,qDAAA,GACJ;;IAAAA,2DAAA,EAAO;;;IADHA,wDAAA,EACJ;IADIA,iEAAA,MAAAA,0DAAA,2EACJ;;;;;IAJQA,6DAAA,cAC4C;IACpDA,yDAAA,IAAAc,mDAAA,mBAA0D;IAGlDd,2DAAA,EAAM;;;;IAHPA,wDAAA,EAAiD;IAAjDA,yDAAA,SAAAU,MAAA,CAAAK,QAAA,CAAAH,MAAA,IAAAF,MAAA,CAAAK,QAAA,CAAAH,MAAA,CAAAC,QAAA,CAAiD;;;;;IAoB5Cb,6DAAA,iBAA6D;IAAAA,qDAAA,GAAc;IAAAA,2DAAA,EAAS;;;;IAA3CA,yDAAA,UAAAgB,OAAA,CAAAC,IAAA,CAAmB;IAACjB,wDAAA,EAAc;IAAdA,gEAAA,CAAAgB,OAAA,CAAAG,KAAA,CAAc;;;;;;IAxDvGnB,6DADJ,aAAsD,YACjC;IAAAA,qDAAA,GAAqD;;IAAAA,2DAAA,EAAK;IAEvEA,6DADJ,aAAuB,aACM;IAAAA,qDAAA,GAAoE;;IAAAA,2DAAA,EAAM;IAIvFA,6DAHZ,aAAuB,aACF,cACO,gBAEG;IAAAA,qDAAA,IAAmE;;IAAAA,2DAAA,EAAQ;IAC9FA,6DAAA,eAAiB;IAAAA,qDAAA,IAAgC;;IACzDA,2DADyD,EAAO,EAAM,EAChE;IACNA,6DAAA,gBAAqF;IAA7BA,yDAAA,sBAAAqB,gEAAA;MAAArB,4DAAA,CAAAuB,GAAA;MAAA,MAAAb,MAAA,GAAAV,4DAAA;MAAA,OAAAA,0DAAA,CAAYU,MAAA,CAAAgB,aAAA,EAAe;IAAA,EAAC;IAKpE1B,6DAHZ,eAAwB,cACH,cACO,iBACO;IAAAA,qDAAA,IAAwE;;IAAAA,2DAAA,EAAQ;IACvGA,wDAAA,iBAC+D;IAC/DA,yDAAA,KAAA4B,4CAAA,kBAC4C;IAOpD5B,2DAFI,EAAM,EAEJ;IAGEA,6DAFR,cAAiB,cACO,iBAEO;IAAAA,qDAAA,IAAuE;;IAAAA,2DAAA,EAAQ;IACtGA,wDAAA,iBAEiD;IACjDA,yDAAA,KAAA6B,4CAAA,kBAC4C;IAMpD7B,2DADI,EAAM,EACJ;IAGEA,6DAFR,cAAiB,cACO,iBAEW;IAAAA,qDAAA,IAAqE;;IAAAA,2DAAA,EAAQ;IACxGA,wDAAA,iBAA6E;IAErFA,2DADI,EAAM,EACJ;IAGEA,6DAFR,cAAiB,cACO,iBAEO;IAAAA,qDAAA,IAAqE;;IAAAA,2DAAA,EAAQ;IAEpGA,6DAAA,kBAAsE;IAClEA,wDAAA,kBAA8B;IAC9BA,yDAAA,KAAA8B,+CAAA,qBAA6D;IAOzF9B,2DANwB,EAAS,EACP,EACJ,EACJ,EACH,EACL,EACJ;IAGFA,6DADJ,cAAuB,cACM;IAAAA,qDAAA,IAA8D;;IAAAA,2DAAA,EAAM;IAGzFA,6DAFJ,cAAuB,yCAOlB;IADOA,yDADA,uBAAA+B,0FAAAC,MAAA;MAAAhC,4DAAA,CAAAuB,GAAA;MAAA,MAAAb,MAAA,GAAAV,4DAAA;MAAA,OAAAA,0DAAA,CAAaU,MAAA,CAAAuB,UAAA,CAAAD,MAAA,CAAkB;IAAA,EAAC,2BAAAE,8FAAAF,MAAA;MAAAhC,4DAAA,CAAAuB,GAAA;MAAA,MAAAb,MAAA,GAAAV,4DAAA;MAAA,OAAAA,0DAAA,CACfU,MAAA,CAAAyB,gBAAA,CAAAH,MAAA,CAAwB;IAAA,EAAC;IAG1DhC,2DAFS,EAAgC,EAC/B,EACJ;IAKEA,6DAFR,cAAiB,cACO,kBAIkB;IAA1BA,yDAAA,mBAAAoC,+DAAA;MAAApC,4DAAA,CAAAuB,GAAA;MAAA,MAAAb,MAAA,GAAAV,4DAAA;MAAA,OAAAA,0DAAA,CAASU,MAAA,CAAAgB,aAAA,EAAe;IAAA,EAAC;IAAC1B,qDAAA,IAAqD;;IAKnGA,2DALmG,EAAS,EAC9F,EACJ,EAGJ;;;;IAzFeA,wDAAA,GAAqD;IAArDA,gEAAA,CAAAA,0DAAA,+CAAqD;IAEzCA,wDAAA,GAAoE;IAApEA,gEAAA,CAAAA,0DAAA,8DAAoE;IAK9DA,wDAAA,GAAmE;IAAnEA,gEAAA,CAAAA,0DAAA,8DAAmE;IACrEA,wDAAA,GAAgC;IAAhCA,gEAAA,CAAAA,0DAAA,SAAAU,MAAA,CAAA2B,aAAA,EAAAC,KAAA,CAAgC;IAEnDtC,wDAAA,GAAsB;IAAtBA,yDAAA,cAAsB;IAACA,yDAAA,cAAAU,MAAA,CAAA8B,YAAA,CAA0B;IAKhBxC,wDAAA,GAAwE;IAAxEA,gEAAA,CAAAA,0DAAA,mEAAwE;IACxFA,wDAAA,GAAuH;IAAvHA,yDAAA,cAAAU,MAAA,CAAAC,SAAA,CAAA8B,OAAA,KAAA/B,MAAA,CAAAC,SAAA,CAAA+B,KAAA,IAAAhC,MAAA,CAAAC,SAAA,CAAAgC,OAAA,+CAAuH;IAExH3C,wDAAA,EAAiE;IAAjEA,yDAAA,SAAAU,MAAA,CAAAC,SAAA,CAAA8B,OAAA,KAAA/B,MAAA,CAAAC,SAAA,CAAA+B,KAAA,IAAAhC,MAAA,CAAAC,SAAA,CAAAgC,OAAA,EAAiE;IAYhD3C,wDAAA,GAAuE;IAAvEA,gEAAA,CAAAA,0DAAA,kEAAuE;IAEtFA,wDAAA,GAAoH;IAApHA,yDAAA,cAAAU,MAAA,CAAAK,QAAA,CAAA0B,OAAA,KAAA/B,MAAA,CAAAK,QAAA,CAAA2B,KAAA,IAAAhC,MAAA,CAAAK,QAAA,CAAA4B,OAAA,+CAAoH;IAEtH3C,wDAAA,EAA8D;IAA9DA,yDAAA,SAAAU,MAAA,CAAAK,QAAA,CAAA0B,OAAA,KAAA/B,MAAA,CAAAK,QAAA,CAAA2B,KAAA,IAAAhC,MAAA,CAAAK,QAAA,CAAA4B,OAAA,EAA8D;IAWzC3C,wDAAA,GAAqE;IAArEA,gEAAA,CAAAA,0DAAA,gEAAqE;IAOzEA,wDAAA,GAAqE;IAArEA,gEAAA,CAAAA,0DAAA,iEAAqE;IAGhFA,wDAAA,GAAY;IAAZA,yDAAA,aAAY;IACKA,wDAAA,EAAc;IAAdA,yDAAA,YAAAU,MAAA,CAAAkC,WAAA,CAAc;IAUtC5C,wDAAA,GAA8D;IAA9DA,gEAAA,CAAAA,0DAAA,yDAA8D;IAI3EA,wDAAA,GAA4B;IAC5BA,yDADA,6BAA4B,yDAC4B;IAWxDA,wDAAA,GAA2D;IAA3DA,yDAAA,kBAAAU,MAAA,CAAAmC,iBAAA,IAAAnC,MAAA,CAAA8B,YAAA,CAAAC,OAAA,CAA2D;IAEjCzC,wDAAA,EAAqD;IAArDA,gEAAA,CAAAA,0DAAA,gDAAqD;;;ADpCnG;;;AAkBM,MAAO8C,sBAAsB;EAiBjCC,YACUC,gBAAkC,EAClCC,kBAAsC,EACtCC,KAAuB,EACvBC,MAAc,EACdC,KAAqB,EACrBC,WAA+B,EAC/BC,oBAA0C,EAC1ChF,uBAAgD;IAPhD,KAAA0E,gBAAgB,GAAhBA,gBAAgB;IAChB,KAAAC,kBAAkB,GAAlBA,kBAAkB;IAClB,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,oBAAoB,GAApBA,oBAAoB;IACpB,KAAAhF,uBAAuB,GAAvBA,uBAAuB;IAnBjC,KAAAuE,iBAAiB,GAAG,IAAI;IAMxB;;;IAGA,KAAAU,oBAAoB,GAAG,sCAAsC;EAa7D;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACnB,aAAa,GAAG,IAAI,CAACe,KAAK,CAACK,IAAI,CAACC,IAAI,CACvCtE,oDAAG,CAAEqE,IAAI,IAAKA,IAAI,CAACE,YAAwC,CAAC,EAC5DhE,0FAAkC,EAAE,CACrC;IACD,IAAI,CAAC0C,aAAa,CAACuB,SAAS,CAAED,YAA0B,IAAI;MAC1D,IAAI,CAACrB,KAAK,GAAGqB,YAAY,CAACrB,KAAK;MAC/B,IAAI,CAACuB,KAAK,GAAGF,YAAY,CAACE,KAAK;IACjC,CAAC,CAAC;IACF,IAAI,CAACjB,WAAW,GAAGvD,kEAAW,CAACyE,SAAS,CAACC,MAAM,CAAEC,YAAY,IAAKA,YAAY,CAACC,MAAM,KAAK,IAAI,CAAC;IAE/F,IAAI,CAACzB,YAAY,GAAG,IAAI,CAACa,WAAW,CAACa,KAAK,CAAC;MACzCvD,SAAS,EAAE,IAAI9B,+DAAkB,CAAC,EAAE,EAAE;QACpCsF,UAAU,EAAE,CAACrF,uDAAU,CAAC+B,QAAQ;OACjC,CAAC;MACFE,QAAQ,EAAE,IAAIlC,+DAAkB,CAAC,EAAE,EAAE;QACnCsF,UAAU,EAAE,CAACrF,uDAAU,CAAC+B,QAAQ;OACjC,CAAC;MACFuD,YAAY,EAAE,IAAIvF,+DAAkB,CAAC,EAAE,CAAC;MACxCwF,QAAQ,EAAE,IAAIxF,+DAAkB,CAAC,EAAE;KACpC,CAAC;EAEJ;EAEA;;;;EAIAoD,UAAUA,CAACD,MAAe;IACxB,IAAI,CAACa,iBAAiB,GAAGb,MAAM,IAAIlC,2DAAO,CAAC,IAAI,CAACwE,QAAQ,CAAC;EAC3D;EAEA;;;;EAIAnC,gBAAgBA,CAACH,MAAc;IAC7B,IAAI,CAACsC,QAAQ,GAAGtC,MAAM;IACtB,IAAI,CAACa,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,IAAI/C,2DAAO,CAAC,IAAI,CAACwE,QAAQ,CAAC;EAC3E;EAEA,IAAI3D,SAASA,CAAA;IACX,OAAO,IAAI,CAAC6B,YAAY,CAAC+B,GAAG,CAAC,WAAW,CAAC;EAC3C;EAEA,IAAIxD,QAAQA,CAAA;IACV,OAAO,IAAI,CAACyB,YAAY,CAAC+B,GAAG,CAAC,UAAU,CAAC;EAC1C;EAEA,IAAIH,YAAYA,CAAA;IACd,OAAO,IAAI,CAAC5B,YAAY,CAAC+B,GAAG,CAAC,cAAc,CAAC;EAC9C;EAEA,IAAIF,QAAQA,CAAA;IACV,OAAO,IAAI,CAAC7B,YAAY,CAAC+B,GAAG,CAAC,UAAU,CAAC;EAC1C;EAEA;;;;EAIA7C,aAAaA,CAAA;IACX,IAAI,EAAE,IAAI,CAACc,YAAY,CAACC,OAAO,IAAI,IAAI,CAACI,iBAAiB,CAAC,EAAE;MAC1D,MAAM2B,MAAM,GAAG;QACbC,QAAQ,EAAE;UACR,mBAAmB,EAAE,CACnB;YACEC,KAAK,EAAE,IAAI,CAAC/D,SAAS,CAAC+D;WACvB,CACF;UACD,kBAAkB,EAAE,CAClB;YACEA,KAAK,EAAE,IAAI,CAAC3D,QAAQ,CAAC2D;WACtB,CACF;UACD,eAAe,EAAE,CACf;YACEA,KAAK,EAAE,IAAI,CAACN,YAAY,CAACM;WAC1B,CACF;UACD,kBAAkB,EAAE,CAClB;YACEA,KAAK,EAAE,IAAI,CAACL,QAAQ,CAACK;WACtB;SAEJ;QACDpC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBgC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBK,QAAQ,EAAE,IAAI;QACdC,kBAAkB,EAAE;OACrB;MAED;MACA,IAAI,IAAI,CAACtG,uBAAuB,CAACC,gBAAgB,EAAE,EAAE;QACnDiG,MAAM,CAACC,QAAQ,CAAClF,kHAAiC,CAAC,GAAG,CACnD;UACEmF,KAAK,EAAEG,MAAM,CAAC,IAAI;SACnB,CACF;QACD,IAAI,CAACvG,uBAAuB,CAACwG,oBAAoB,EAAE;MACrD;MAEA,MAAMC,OAAO,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAIxF,uEAAO,EAAE,EAAE+E,MAAM,CAAC;MACpD,IAAI,CAACvB,kBAAkB,CAACiC,qBAAqB,CAACH,OAAO,EAAE,IAAI,CAAClB,KAAK,CAAC,CAACH,IAAI,CACrEhE,mFAA2B,EAAE,CAC9B,CAACkE,SAAS,CAAEuB,EAAuB,IAAI;QACtC,IAAIA,EAAE,CAACC,YAAY,EAAE;UACnB,IAAI,CAAC9B,oBAAoB,CAAC+B,OAAO,CAAC,IAAI,CAACrC,gBAAgB,CAACuB,GAAG,CAAC,IAAI,CAAChB,oBAAoB,GAAG,cAAc,CAAC,EACrG,IAAI,CAACP,gBAAgB,CAACuB,GAAG,CAAC,IAAI,CAAChB,oBAAoB,GAAG,iBAAiB,CAAC,CAAC;UAC3E,IAAI,CAACL,KAAK,CAACoC,QAAQ,CAAC,IAAIhG,uEAAkB,CAAC,IAAI,CAACgD,KAAK,EAAE,IAAI,CAACgC,QAAQ,CAAC,CAAC;UACtE,IAAI,CAACnB,MAAM,CAACoC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC,MAAM;UACL,IAAI,CAACjC,oBAAoB,CAACkC,KAAK,CAAC,IAAI,CAACxC,gBAAgB,CAACuB,GAAG,CAAC,IAAI,CAAChB,oBAAoB,GAAG,YAAY,CAAC,EAAE4B,EAAE,CAACM,YAAY,CAAC;QACvH;MACF,CAAC,CAAC;IACJ;EACF;;;uBAlJW3C,sBAAsB,EAAA9C,gEAAA,CAAA2F,kEAAA,GAAA3F,gEAAA,CAAA4F,kFAAA,GAAA5F,gEAAA,CAAA6F,+CAAA,GAAA7F,gEAAA,CAAA8F,oDAAA,GAAA9F,gEAAA,CAAA8F,4DAAA,GAAA9F,gEAAA,CAAA+F,+DAAA,GAAA/F,gEAAA,CAAAgG,6FAAA,GAAAhG,gEAAA,CAAAiG,wGAAA;IAAA;EAAA;;;YAAtBnD,sBAAsB;MAAAoD,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAApG,kEAAA;MAAAsG,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCnEnC3G,yDAAA,IAAA6G,qCAAA,mBAAsD;;;;UAA9B7G,yDAAA,SAAAA,0DAAA,OAAA4G,GAAA,CAAAvE,aAAA,EAA4B;;;qBDyDhDzC,2IAAgC,EAChCV,iEAAe,EAAAyG,+DAAA,EACfjH,kDAAI,EACJF,uDAAS,EACTG,gEAAmB,EAAAoH,6DAAA,EAAAA,2DAAA,EAAAA,uEAAA,EAAAA,iEAAA,EAAAA,uEAAA,EAAAA,4DAAA,EAAAA,iEAAA,EAAAA,+DAAA,EAAAA,4DAAA,EACnBtH,qDAAO,EACPoB,gFAAoB;MAAA2H,MAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;;;AE7DsD;AACV;;;;AAEpE;;;AAUM,MAAOE,4BAA6B,SAAQD,mFAAuC;EAC7EE,gBAAgBA,CAAA;IACxB,OAAO,wBAAwB;EACjC;EAEUC,qBAAqBA,CAACC,SAAiB;IAC/C,OAAO,2BAAO,GAAiB,EAAEA,SAAS,CAAC,2DAA2D,CAAC;EACzG;EAEUC,uBAAuBA,CAAA;IAC/B,OAAO,6HAAoC;EAC7C;;;;;8KAXWJ,4BAA4B,IAAAK,CAAA,IAA5BL,4BAA4B;MAAA;IAAA;EAAA;;;YAA5BA,4BAA4B;MAAAxB,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAApG,wEAAA,EAAAA,iEAAA;MAAAiI,kBAAA,EAAAC,GAAA;MAAA5B,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAA0B,sCAAAxB,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;UCfzC3G,wDAAA,IAAAoI,mDAAA,gCAAApI,oEAAA,CAAkB;UAElBA,4DAAA,mBAAc;UACZA,0DAAA,GAAyB;UAC3BA,0DAAA,EAAM;;;;;;;;;;;;;;;;;;;;;;;;ACH8G;AAEpB;;AAWhG;;;AAGM,MAAOyI,sBAAsB;EAZnC1F,YAAA;IAaE,KAAA2F,WAAW,GAAGF,qGAAqB;;;;uBADxBC,sBAAsB;IAAA;EAAA;;;YAAtBA,sBAAsB;MAAAvC,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAApG,iEAAA;MAAAsG,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAkC,gCAAAhC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCjBnC3G,uDAAA,gCAEyB;;;UAD+BA,wDAAhD,gDAA+C,gBAAA4G,GAAA,CAAA8B,WAAA,CAA4B;;;qBDS/EH,8HAAgC;MAAAf,MAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;;;AER0C;AACV;;;;AAEpE;;;AAUM,MAAOoB,4BAA6B,SAAQnB,mFAAuC;EAC7EE,gBAAgBA,CAAA;IACxB,OAAO,wBAAwB;EACjC;EAEUC,qBAAqBA,CAACC,SAAiB;IAC/C,OAAO,2BAAO,GAAiB,EAAEA,SAAS,CAAC,2DAA2D,CAAC;EACzG;EAEUC,uBAAuBA,CAAA;IAC/B,OAAO,6HAAoC;EAC7C;;;;;8KAXWc,4BAA4B,IAAAb,CAAA,IAA5Ba,4BAA4B;MAAA;IAAA;EAAA;;;YAA5BA,4BAA4B;MAAA1C,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAApG,wEAAA,EAAAA,iEAAA;MAAAiI,kBAAA,EAAAC,GAAA;MAAA5B,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAoC,sCAAAlC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;UHfzC3G,wDAAA,IAAA8I,mDAAA,gCAAA9I,oEAAA,CAAkB;UAElBA,4DAAA,mBAAc;UACZA,0DAAA,GAAyB;UAC3BA,0DAAA,EAAM;;;;;;;;;;;;;;;;;;;;;;;;;AIFmG;AACT;AACA;AACvC;AAGlD,MAAMgJ,MAAM,GAAY,CAC7B;EACEC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAEN,yGAA4B;EACvCnF,IAAI,EAAE;IAAE0F,KAAK,EAAE;EAAsB;CACtC,EACD;EACEF,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAExB,yGAA4B;EACvC0B,WAAW,EAAE,CACXL,kEAAiB,EACjB1K,iHAA2B;CAE9B,CACF;;;;;;;;;;ACtBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA","sources":["./src/app/core/end-user-agreement/end-user-agreement-cookie.guard.ts","./src/app/register-page/create-profile/create-profile.component.ts","./src/app/register-page/create-profile/create-profile.component.html","./src/app/register-page/create-profile/themed-create-profile.component.ts","./src/app/shared/theme-support/themed.component.html","./src/app/register-page/register-email/register-email.component.ts","./src/app/register-page/register-email/register-email.component.html","./src/app/register-page/register-email/themed-register-email.component.ts","./src/app/register-page/register-page-routes.ts","./src/themes/ lazy ^\\.\\/.*\\/app\\/register\\-page\\/create\\-profile\\/create\\-profile\\.component$ namespace object","./src/themes/ lazy ^\\.\\/.*\\/app\\/register\\-page\\/register\\-email\\/register\\-email\\.component$ namespace object"],"sourcesContent":["import { inject } from '@angular/core';\nimport { CanActivateFn } from '@angular/router';\nimport { of as observableOf } from 'rxjs';\n\nimport { endUserAgreementGuard } from './end-user-agreement.guard';\nimport { EndUserAgreementService } from './end-user-agreement.service';\n\n\n/**\n * Guard for preventing unauthorized access to certain pages\n * requiring the end user agreement to have been accepted in a cookie\n */\nexport const endUserAgreementCookieGuard: CanActivateFn =\n  endUserAgreementGuard(\n    () => {\n      const endUserAgreementService = inject(EndUserAgreementService);\n      return observableOf(endUserAgreementService.isCookieAccepted());\n    },\n  );\n","import {\n  AsyncPipe,\n  NgForOf,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport {\n  ReactiveFormsModule,\n  UntypedFormBuilder,\n  UntypedFormControl,\n  UntypedFormGroup,\n  Validators,\n} from '@angular/forms';\nimport {\n  ActivatedRoute,\n  Router,\n} from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { LangConfig } from '../../../config/lang-config.interface';\nimport { environment } from '../../../environments/environment';\nimport { AuthenticateAction } from '../../core/auth/auth.actions';\nimport { CoreState } from '../../core/core-state.model';\nimport { RemoteData } from '../../core/data/remote-data';\nimport {\n  END_USER_AGREEMENT_METADATA_FIELD,\n  EndUserAgreementService,\n} from '../../core/end-user-agreement/end-user-agreement.service';\nimport { EPersonDataService } from '../../core/eperson/eperson-data.service';\nimport { EPerson } from '../../core/eperson/models/eperson.model';\nimport {\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteDataPayload,\n} from '../../core/shared/operators';\nimport { Registration } from '../../core/shared/registration.model';\nimport { ProfilePageSecurityFormComponent } from '../../profile-page/profile-page-security-form/profile-page-security-form.component';\nimport { BtnDisabledDirective } from '../../shared/btn-disabled.directive';\nimport { isEmpty } from '../../shared/empty.util';\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\n\n/**\n * Component that renders the create profile page to be used by a user registering through a token\n */\n@Component({\n  selector: 'ds-base-create-profile',\n  styleUrls: ['./create-profile.component.scss'],\n  templateUrl: './create-profile.component.html',\n  imports: [\n    ProfilePageSecurityFormComponent,\n    TranslateModule,\n    NgIf,\n    AsyncPipe,\n    ReactiveFormsModule,\n    NgForOf,\n    BtnDisabledDirective,\n  ],\n  standalone: true,\n})\nexport class CreateProfileComponent implements OnInit {\n  registration$: Observable<Registration>;\n\n  email: string;\n  token: string;\n\n  isInValidPassword = true;\n  password: string;\n\n  userInfoForm: UntypedFormGroup;\n  activeLangs: LangConfig[];\n\n  /**\n   * Prefix for the notification messages of this security form\n   */\n  NOTIFICATIONS_PREFIX = 'register-page.create-profile.submit.';\n\n  constructor(\n    private translateService: TranslateService,\n    private ePersonDataService: EPersonDataService,\n    private store: Store<CoreState>,\n    private router: Router,\n    private route: ActivatedRoute,\n    private formBuilder: UntypedFormBuilder,\n    private notificationsService: NotificationsService,\n    private endUserAgreementService: EndUserAgreementService,\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.registration$ = this.route.data.pipe(\n      map((data) => data.registration as RemoteData<Registration>),\n      getFirstSucceededRemoteDataPayload(),\n    );\n    this.registration$.subscribe((registration: Registration) => {\n      this.email = registration.email;\n      this.token = registration.token;\n    });\n    this.activeLangs = environment.languages.filter((MyLangConfig) => MyLangConfig.active === true);\n\n    this.userInfoForm = this.formBuilder.group({\n      firstName: new UntypedFormControl('', {\n        validators: [Validators.required],\n      }),\n      lastName: new UntypedFormControl('', {\n        validators: [Validators.required],\n      }),\n      contactPhone: new UntypedFormControl(''),\n      language: new UntypedFormControl(''),\n    });\n\n  }\n\n  /**\n   * Sets the validity of the password based on a value emitted from the form\n   * @param $event\n   */\n  setInValid($event: boolean) {\n    this.isInValidPassword = $event || isEmpty(this.password);\n  }\n\n  /**\n   * Sets the value of the password based on a value emitted from the form\n   * @param $event\n   */\n  setPasswordValue($event: string) {\n    this.password = $event;\n    this.isInValidPassword = this.isInValidPassword || isEmpty(this.password);\n  }\n\n  get firstName() {\n    return this.userInfoForm.get('firstName');\n  }\n\n  get lastName() {\n    return this.userInfoForm.get('lastName');\n  }\n\n  get contactPhone() {\n    return this.userInfoForm.get('contactPhone');\n  }\n\n  get language() {\n    return this.userInfoForm.get('language');\n  }\n\n  /**\n   * Submits the eperson to the service to be created.\n   * The submission will not be made when the form or the password is not valid.\n   */\n  submitEperson() {\n    if (!(this.userInfoForm.invalid || this.isInValidPassword)) {\n      const values = {\n        metadata: {\n          'eperson.firstname': [\n            {\n              value: this.firstName.value,\n            },\n          ],\n          'eperson.lastname': [\n            {\n              value: this.lastName.value,\n            },\n          ],\n          'eperson.phone': [\n            {\n              value: this.contactPhone.value,\n            },\n          ],\n          'eperson.language': [\n            {\n              value: this.language.value,\n            },\n          ],\n        },\n        email: this.email,\n        password: this.password,\n        canLogIn: true,\n        requireCertificate: false,\n      };\n\n      // If the End User Agreement cookie is accepted, add end-user agreement metadata to the user\n      if (this.endUserAgreementService.isCookieAccepted()) {\n        values.metadata[END_USER_AGREEMENT_METADATA_FIELD] = [\n          {\n            value: String(true),\n          },\n        ];\n        this.endUserAgreementService.removeCookieAccepted();\n      }\n\n      const eperson = Object.assign(new EPerson(), values);\n      this.ePersonDataService.createEPersonForToken(eperson, this.token).pipe(\n        getFirstCompletedRemoteData(),\n      ).subscribe((rd: RemoteData<EPerson>) => {\n        if (rd.hasSucceeded) {\n          this.notificationsService.success(this.translateService.get(this.NOTIFICATIONS_PREFIX + 'success.head'),\n            this.translateService.get(this.NOTIFICATIONS_PREFIX + 'success.content'));\n          this.store.dispatch(new AuthenticateAction(this.email, this.password));\n          this.router.navigate(['/home']);\n        } else {\n          this.notificationsService.error(this.translateService.get(this.NOTIFICATIONS_PREFIX + 'error.head'), rd.errorMessage);\n        }\n      });\n    }\n  }\n\n}\n","<div class=\"container\" *ngIf=\"(registration$ |async)\">\n    <h3 class=\"mb-4\">{{'register-page.create-profile.header' | translate}}</h3>\n    <div class=\"card mb-4\">\n        <div class=\"card-header\">{{'register-page.create-profile.identification.header' | translate}}</div>\n        <div class=\"card-body\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <label class=\"font-weight-bold mr-4\"\n                           for=\"email\">{{'register-page.create-profile.identification.email' | translate}}</label>\n                    <span id=\"email\">{{(registration$ |async).email}}</span></div>\n            </div>\n            <form [class]=\"'ng-invalid'\" [formGroup]=\"userInfoForm\" (ngSubmit)=\"submitEperson()\">\n\n                <div class=\"form-group\">\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <label for=\"firstName\">{{'register-page.create-profile.identification.first-name' | translate}}</label>\n                            <input [className]=\"(firstName.invalid) && (firstName.dirty || firstName.touched) ? 'form-control is-invalid' :'form-control'\"\n                                   type=\"text\" id=\"firstName\" formControlName=\"firstName\"/>\n                            <div *ngIf=\"firstName.invalid && (firstName.dirty || firstName.touched)\"\n                                 class=\"invalid-feedback show-feedback\">\n                    <span *ngIf=\"firstName.errors && firstName.errors.required\">\n                        {{ 'register-page.create-profile.identification.first-name.error' | translate }}\n                    </span>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <label\n                                    for=\"lastName\">{{'register-page.create-profile.identification.last-name' | translate}}</label>\n                            <input\n                                    [className]=\"(lastName.invalid) && (lastName.dirty || lastName.touched) ? 'form-control is-invalid' :'form-control'\"\n                                    id=\"lastName\" formControlName=\"lastName\">\n                            <div *ngIf=\"lastName.invalid && (lastName.dirty || lastName.touched)\"\n                                 class=\"invalid-feedback show-feedback\">\n                    <span *ngIf=\"lastName.errors && lastName.errors.required\">\n                        {{ 'register-page.create-profile.identification.last-name.error' | translate }}\n                    </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <label\n                                    for=\"contactPhone\">{{'register-page.create-profile.identification.contact' | translate}}</label>\n                            <input class=\"form-control\" id=\"contactPhone\" formControlName=\"contactPhone\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <label\n                                    for=\"language\">{{'register-page.create-profile.identification.language' |translate}}</label>\n\n                            <select id=\"language\" formControlName=\"language\" class=\"form-control\">\n                                <option [value]=\"''\"></option>\n                                <option *ngFor=\"let lang of activeLangs\" [value]=\"lang.code\">{{lang.label}}</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <div class=\"card mb-4\">\n        <div class=\"card-header\">{{'register-page.create-profile.security.header' | translate}}</div>\n        <div class=\"card-body\">\n\n            <ds-profile-page-security-form\n                    [passwordCanBeEmpty]=\"false\"\n                    [FORM_PREFIX]=\"'register-page.create-profile.security.'\"\n                    (isInvalid)=\"setInValid($event)\"\n                    (passwordValue)=\"setPasswordValue($event)\"\n            ></ds-profile-page-security-form>\n        </div>\n    </div>\n\n\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <button\n                    [dsBtnDisabled]=\"isInValidPassword || userInfoForm.invalid\"\n                    class=\"btn btn-default btn-primary\"\n                    (click)=\"submitEperson()\">{{'register-page.create-profile.submit' | translate}}</button>\n        </div>\n    </div>\n\n\n</div>\n","import { Component } from '@angular/core';\n\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { CreateProfileComponent } from './create-profile.component';\n\n/**\n * Themed wrapper for CreateProfileComponent\n */\n@Component({\n  selector: 'ds-create-profile',\n  styleUrls: [],\n  templateUrl: './../../shared/theme-support/themed.component.html',\n  standalone: true,\n  imports: [CreateProfileComponent],\n})\nexport class ThemedCreateProfileComponent extends ThemedComponent<CreateProfileComponent> {\n  protected getComponentName(): string {\n    return 'CreateProfileComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/register-page/create-profile/create-profile.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import(`./create-profile.component`);\n  }\n}\n","<ng-template #vcr>\n</ng-template>\n<div #content>\n  <ng-content></ng-content>\n</div>\n","import { Component } from '@angular/core';\nimport { ThemedRegisterEmailFormComponent } from 'src/app/register-email-form/themed-registry-email-form.component';\n\nimport { TYPE_REQUEST_REGISTER } from '../../register-email-form/register-email-form.component';\n\n@Component({\n  selector: 'ds-base-register-email',\n  styleUrls: ['./register-email.component.scss'],\n  templateUrl: './register-email.component.html',\n  imports: [\n    ThemedRegisterEmailFormComponent,\n  ],\n  standalone: true,\n})\n/**\n * Component responsible the email registration step when registering as a new user\n */\nexport class RegisterEmailComponent {\n  typeRequest = TYPE_REQUEST_REGISTER;\n}\n","<ds-register-email-form\n        [MESSAGE_PREFIX]=\"'register-page.registration'\" [typeRequest]=\"typeRequest\">\n</ds-register-email-form>\n","import { Component } from '@angular/core';\n\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { RegisterEmailComponent } from './register-email.component';\n\n/**\n * Themed wrapper for RegisterEmailComponent\n */\n@Component({\n  selector: 'ds-register-email',\n  styleUrls: [],\n  templateUrl: '../../shared/theme-support/themed.component.html',\n  standalone: true,\n  imports: [RegisterEmailComponent],\n})\nexport class ThemedRegisterEmailComponent extends ThemedComponent<RegisterEmailComponent> {\n  protected getComponentName(): string {\n    return 'RegisterEmailComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/register-page/register-email/register-email.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import('./register-email.component');\n  }\n}\n","import { Route } from '@angular/router';\n\nimport { endUserAgreementCookieGuard } from '../core/end-user-agreement/end-user-agreement-cookie.guard';\nimport { ThemedCreateProfileComponent } from './create-profile/themed-create-profile.component';\nimport { ThemedRegisterEmailComponent } from './register-email/themed-register-email.component';\nimport { registrationGuard } from './registration.guard';\n\n\nexport const ROUTES: Route[] = [\n  {\n    path: '',\n    component: ThemedRegisterEmailComponent,\n    data: { title: 'register-email.title' },\n  },\n  {\n    path: ':token',\n    component: ThemedCreateProfileComponent,\n    canActivate: [\n      registrationGuard,\n      endUserAgreementCookieGuard,\n    ],\n  },\n];\n","var map = {\n\t\"./custom/app/register-page/create-profile/create-profile.component\": [\n\t\t83697,\n\t\t\"src_themes_custom_app_register-page_create-profile_create-profile_component_ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 85748;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./custom/app/register-page/register-email/register-email.component\": [\n\t\t92433,\n\t\t\"src_themes_custom_app_register-page_register-email_register-email_component_ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 72200;\nmodule.exports = webpackAsyncContext;"],"names":["inject","of","observableOf","endUserAgreementGuard","EndUserAgreementService","endUserAgreementCookieGuard","endUserAgreementService","isCookieAccepted","AsyncPipe","NgForOf","NgIf","ReactiveFormsModule","UntypedFormBuilder","UntypedFormControl","Validators","ActivatedRoute","Router","Store","TranslateModule","TranslateService","map","environment","AuthenticateAction","END_USER_AGREEMENT_METADATA_FIELD","EPersonDataService","EPerson","getFirstCompletedRemoteData","getFirstSucceededRemoteDataPayload","ProfilePageSecurityFormComponent","BtnDisabledDirective","isEmpty","NotificationsService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵtemplate","CreateProfileComponent_div_0_div_25_span_1_Template","ɵɵproperty","ctx_r1","firstName","errors","required","CreateProfileComponent_div_0_div_32_span_1_Template","lastName","lang_r3","code","ɵɵtextInterpolate","label","ɵɵlistener","CreateProfileComponent_div_0_Template_form_ngSubmit_17_listener","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵresetView","submitEperson","ɵɵelement","CreateProfileComponent_div_0_div_25_Template","CreateProfileComponent_div_0_div_32_Template","CreateProfileComponent_div_0_option_46_Template","CreateProfileComponent_div_0_Template_ds_profile_page_security_form_isInvalid_52_listener","$event","setInValid","CreateProfileComponent_div_0_Template_ds_profile_page_security_form_passwordValue_52_listener","setPasswordValue","CreateProfileComponent_div_0_Template_button_click_55_listener","registration$","email","ɵɵclassMap","userInfoForm","invalid","dirty","touched","activeLangs","isInValidPassword","CreateProfileComponent","constructor","translateService","ePersonDataService","store","router","route","formBuilder","notificationsService","NOTIFICATIONS_PREFIX","ngOnInit","data","pipe","registration","subscribe","token","languages","filter","MyLangConfig","active","group","validators","contactPhone","language","password","get","values","metadata","value","canLogIn","requireCertificate","String","removeCookieAccepted","eperson","Object","assign","createEPersonForToken","rd","hasSucceeded","success","dispatch","navigate","error","errorMessage","ɵɵdirectiveInject","i1","i2","i3","i4","i5","i6","i7","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","CreateProfileComponent_Template","rf","ctx","CreateProfileComponent_div_0_Template","TranslatePipe","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles","ThemedComponent","ThemedCreateProfileComponent","getComponentName","importThemedComponent","themeName","importUnthemedComponent","t","ɵɵInheritDefinitionFeature","ngContentSelectors","_c0","ThemedCreateProfileComponent_Template","ThemedCreateProfileComponent_ng_template_0_Template","ɵɵtemplateRefExtractor","ɵɵprojection","ThemedRegisterEmailFormComponent","TYPE_REQUEST_REGISTER","RegisterEmailComponent","typeRequest","RegisterEmailComponent_Template","ThemedRegisterEmailComponent","ThemedRegisterEmailComponent_Template","ThemedRegisterEmailComponent_ng_template_0_Template","registrationGuard","ROUTES","path","component","title","canActivate"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}