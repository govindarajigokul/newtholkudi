{"version":3,"file":"src_app_health-page_health-page-routes_ts.js","mappings":"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","sources":["./src/app/breadcrumbs/breadcrumb/breadcrumb.model.ts","./src/app/core/breadcrumbs/i18n-breadcrumb.resolver.ts","./src/app/core/breadcrumbs/i18n-breadcrumbs.service.ts","./src/app/health-page/health-info/health-info-component/health-info-component.component.ts","./src/app/health-page/health-info/health-info-component/health-info-component.component.html","./src/app/health-page/health-info/health-info.component.ts","./src/app/health-page/health-info/health-info.component.html","./src/app/health-page/health-page-routes.ts","./src/app/health-page/health-page.component.ts","./src/app/health-page/health-page.component.html","./src/app/health-page/health-panel/health-component/health-component.component.ts","./src/app/health-page/health-panel/health-component/health-component.component.html","./src/app/health-page/health-panel/health-panel.component.ts","./src/app/health-page/health-panel/health-panel.component.html","./src/app/health-page/health-panel/health-status/health-status.component.ts","./src/app/health-page/health-panel/health-status/health-status.component.html","./src/app/health-page/health.service.ts","./src/app/health-page/models/health-component.model.ts"],"sourcesContent":["/**\n * Class representing a single breadcrumb\n */\nexport class Breadcrumb {\n  constructor(\n    /**\n     * The display value of the breadcrumb\n     */\n    public text: string,\n    /**\n     * The optional url of the breadcrumb\n     */\n    public url?: string) {\n  }\n}\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { BreadcrumbConfig } from '../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { hasNoValue } from '../../shared/empty.util';\nimport { currentPathFromSnapshot } from '../../shared/utils/route.utils';\nimport { I18nBreadcrumbsService } from './i18n-breadcrumbs.service';\n\n/**\n * Method for resolving an I18n breadcrumb configuration object\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {I18nBreadcrumbsService} breadcrumbService\n * @returns BreadcrumbConfig object\n */\nexport const i18nBreadcrumbResolver: ResolveFn<BreadcrumbConfig<string>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  breadcrumbService: I18nBreadcrumbsService = inject(I18nBreadcrumbsService),\n): BreadcrumbConfig<string> => {\n  const key = route.data.breadcrumbKey;\n  if (hasNoValue(key)) {\n    throw new Error('You provided an i18nBreadcrumbResolver for url \\\"' + route.url + '\\\" but no breadcrumbKey in the route\\'s data');\n  }\n  const fullPath = currentPathFromSnapshot(route);\n  return { provider: breadcrumbService, key: key, url: fullPath };\n};\n","import { Injectable } from '@angular/core';\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs';\n\nimport { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport { BreadcrumbsProviderService } from './breadcrumbsProviderService';\n\n/**\n * The postfix for i18n breadcrumbs\n */\nexport const BREADCRUMB_MESSAGE_POSTFIX = '.breadcrumbs';\n\n/**\n * Service to calculate i18n breadcrumbs for a single part of the route\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class I18nBreadcrumbsService implements BreadcrumbsProviderService<string> {\n\n  /**\n   * Method to calculate the breadcrumbs\n   * @param key The key used to resolve the breadcrumb\n   * @param url The url to use as a link for this breadcrumb\n   */\n  getBreadcrumbs(key: string, url: string): Observable<Breadcrumb[]> {\n    return observableOf([new Breadcrumb(key + BREADCRUMB_MESSAGE_POSTFIX, url)]);\n  }\n}\n","import {\n  NgFor,\n  NgIf,\n  TitleCasePipe,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n} from '@angular/core';\nimport { NgbCollapseModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ObjNgFor } from '../../../shared/utils/object-ngfor.pipe';\nimport { HealthComponentComponent } from '../../health-panel/health-component/health-component.component';\nimport { HealthInfoComponent } from '../../models/health-component.model';\n\n/**\n * Shows a health info object\n */\n@Component({\n  selector: 'ds-health-info-component',\n  templateUrl: './health-info-component.component.html',\n  styleUrls: ['./health-info-component.component.scss'],\n  standalone: true,\n  imports: [NgFor, NgIf, NgbCollapseModule, TitleCasePipe, ObjNgFor],\n})\nexport class HealthInfoComponentComponent extends HealthComponentComponent {\n\n  /**\n   * The HealthInfoComponent object to display\n   */\n  @Input() healthInfoComponent: HealthInfoComponent|string;\n\n  /**\n   * The HealthInfoComponent object name\n   */\n  @Input() healthInfoComponentName: string;\n\n  /**\n   * A boolean representing if div should start collapsed\n   */\n  @Input() isNested = false;\n\n  /**\n   * A boolean representing if div should start collapsed\n   */\n  public isCollapsed = false;\n\n  /**\n   * Check if the HealthInfoComponent is has only string property or contains object\n   *\n   * @param entry The HealthInfoComponent to check\n   * @return boolean\n   */\n  isPlainProperty(entry: HealthInfoComponent | string): boolean {\n    return typeof entry === 'string';\n  }\n\n}\n","<div *ngFor=\"let entry of healthInfoComponent | dsObjNgFor\" data-test=\"collapse\">\n  <div *ngIf=\"entry && !isPlainProperty(entry.value)\" class=\"mb-3 border-bottom\">\n    <div class=\"w-100 d-flex gap-3 justify-content-between collapse-toggle\" (click)=\"collapse.toggle()\">\n      <button type=\"button\" class=\"btn btn-link p-0\" (click)=\"$event.preventDefault()\" [attr.aria-expanded]=\"!collapse.collapsed\"\n              [attr.aria-controls]=\"'health-info-component-' + entry.key + '-content'\">\n        {{ entry.key | titlecase }}\n      </button>\n      <div class=\"d-flex my-auto\">\n        <span *ngIf=\"collapse.collapsed\" class=\"fas fa-chevron-down\"></span>\n        <span *ngIf=\"!collapse.collapsed\" class=\"fas fa-chevron-up\"></span>\n      </div>\n    </div>\n    <div #collapse=\"ngbCollapse\" [id]=\"'health-info-component-' + entry.key + '-content'\" [ngbCollapse]=\"isCollapsed\">\n      <div class=\"card border-0\">\n        <div class=\"card-body\">\n          <ds-health-info-component [healthInfoComponent]=\"entry.value\"\n                                    [healthInfoComponentName]=\"entry.key\"\n                                    [isNested]=\"true\"\n                                    data-test=\"info-component\"></ds-health-info-component>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"entry && isPlainProperty(entry.value)\">\n    <p data-test=\"property\"> <span class=\"font-weight-bold\">{{ getPropertyLabel(entry.key) | titlecase }}</span> : {{entry.value}}</p>\n  </ng-container>\n</div>\n","import {\n  NgFor,\n  NgIf,\n  TitleCasePipe,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { NgbAccordionModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { ObjNgFor } from '../../shared/utils/object-ngfor.pipe';\nimport { HealthStatusComponent } from '../health-panel/health-status/health-status.component';\nimport { HealthInfoResponse } from '../models/health-component.model';\nimport { HealthInfoComponentComponent } from './health-info-component/health-info-component.component';\n\n/**\n * A component to render a \"health-info component\" object.\n *\n * Note that the word \"component\" in \"health-info component\" doesn't refer to Angular use of the term\n * but rather to the components used in the response of the health endpoint of Spring's Actuator\n * API.\n */\n@Component({\n  selector: 'ds-health-info',\n  templateUrl: './health-info.component.html',\n  styleUrls: ['./health-info.component.scss'],\n  standalone: true,\n  imports: [NgIf, NgbAccordionModule, NgFor, HealthStatusComponent, HealthInfoComponentComponent, TitleCasePipe, ObjNgFor],\n})\nexport class HealthInfoComponent implements OnInit  {\n\n  @Input() healthInfoResponse: HealthInfoResponse;\n\n  /**\n   * The first active panel id\n   */\n  activeId: string;\n\n  constructor(private translate: TranslateService) {\n  }\n\n  ngOnInit(): void {\n    this.activeId = Object.keys(this.healthInfoResponse)[0];\n  }\n\n  /**\n   * Return translated label if exist for the given property\n   *\n   * @param panelKey\n   */\n  public getPanelLabel(panelKey: string): string {\n    const translationKey = `health-page.section-info.${panelKey}.title`;\n    const translation = this.translate.instant(translationKey);\n\n    return (translation === translationKey) ? panelKey : translation;\n  }\n}\n","<ng-container *ngIf=\"healthInfoResponse\">\n  <ngb-accordion #acc=\"ngbAccordion\" [activeIds]=\"activeId\">\n    <ngb-panel [id]=\"entry.key\" *ngFor=\"let entry of healthInfoResponse | dsObjNgFor\">\n      <ng-template ngbPanelHeader>\n        <div class=\"w-100 d-flex gap-3 justify-content-between collapse-toggle\" ngbPanelToggle (click)=\"acc.toggle(entry.key)\" data-test=\"info-component\">\n          <button type=\"button\" class=\"btn btn-link p-0\" (click)=\"$event.preventDefault()\" [attr.aria-expanded]=\"acc.isExpanded(entry.key)\"\n                  [attr.aria-controls]=\"'health-info-' + entry.key + '-content'\">\n            {{ getPanelLabel(entry.key) | titlecase }}\n          </button>\n          <div class=\"text-right d-flex gap-2\">\n            <ds-health-status [status]=\"entry.value?.status\"></ds-health-status>\n            <div class=\"d-flex my-auto\">\n              <span *ngIf=\"acc.isExpanded(entry.key)\" class=\"fas fa-chevron-up fa-fw\"></span>\n              <span *ngIf=\"!acc.isExpanded(entry.key)\" class=\"fas fa-chevron-down fa-fw\"></span>\n            </div>\n          </div>\n        </div>\n      </ng-template>\n      <ng-template ngbPanelContent>\n        <ds-health-info-component [healthInfoComponentName]=\"entry.key\" [healthInfoComponent]=\"entry.value\"\n                                  [id]=\"'health-info-' + entry.key + '-content'\">\n        </ds-health-info-component>\n      </ng-template>\n    </ngb-panel>\n  </ngb-accordion>\n</ng-container>\n","import { Route } from '@angular/router';\n\nimport { i18nBreadcrumbResolver } from '../core/breadcrumbs/i18n-breadcrumb.resolver';\nimport { siteAdministratorGuard } from '../core/data/feature-authorization/feature-authorization-guard/site-administrator.guard';\nimport { HealthPageComponent } from './health-page.component';\n\nexport const ROUTES: Route[] = [\n  {\n    path: '',\n    resolve: { breadcrumb: i18nBreadcrumbResolver },\n    data: {\n      breadcrumbKey: 'health',\n      title: 'health-page.title',\n    },\n    canActivate: [siteAdministratorGuard],\n    component: HealthPageComponent,\n  },\n];\n\n","import {\n  AsyncPipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport { NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { AlertComponent } from '../shared/alert/alert.component';\nimport { AlertType } from '../shared/alert/alert-type';\nimport { HealthService } from './health.service';\nimport { HealthInfoComponent } from './health-info/health-info.component';\nimport { HealthPanelComponent } from './health-panel/health-panel.component';\nimport {\n  HealthInfoResponse,\n  HealthResponse,\n} from './models/health-component.model';\n\n@Component({\n  selector: 'ds-health-page',\n  templateUrl: './health-page.component.html',\n  styleUrls: ['./health-page.component.scss'],\n  standalone: true,\n  imports: [NgIf, NgbNavModule, HealthPanelComponent, HealthInfoComponent, AlertComponent, AsyncPipe, TranslateModule],\n})\nexport class HealthPageComponent implements OnInit {\n\n  /**\n   * Health info endpoint response\n   */\n  healthInfoResponse: BehaviorSubject<HealthInfoResponse> = new BehaviorSubject<HealthInfoResponse>(null);\n\n  /**\n   * Health endpoint response\n   */\n  healthResponse: BehaviorSubject<HealthResponse> = new BehaviorSubject<HealthResponse>(null);\n\n  /**\n   * Represent if the response from health status endpoint is already retrieved or not\n   */\n  healthResponseInitialised: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Represent if the response from health info endpoint is already retrieved or not\n   */\n  healthInfoResponseInitialised: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  readonly AlertType = AlertType;\n\n  constructor(private healthDataService: HealthService) {\n  }\n\n  /**\n   * Retrieve responses from rest\n   */\n  ngOnInit(): void {\n    this.healthDataService.getHealth().pipe(take(1)).subscribe({\n      next: (data: any) => {\n        this.healthResponse.next(data.payload);\n        this.healthResponseInitialised.next(true);\n      },\n      error: () => {\n        this.healthResponse.next(null);\n        this.healthResponseInitialised.next(true);\n      },\n    });\n\n    this.healthDataService.getInfo().pipe(take(1)).subscribe({\n      next: (data: any) => {\n        this.healthInfoResponse.next(data.payload);\n        this.healthInfoResponseInitialised.next(true);\n      },\n      error: () => {\n        this.healthInfoResponse.next(null);\n        this.healthInfoResponseInitialised.next(true);\n      },\n    });\n\n  }\n}\n","<div class=\"container\" *ngIf=\"(healthResponseInitialised | async) && (healthInfoResponseInitialised | async)\">\n  <h1>{{'health-page.heading' | translate}}</h1>\n  <div *ngIf=\"(healthResponse | async) && (healthInfoResponse | async)\">\n    <ul ngbNav #nav=\"ngbNav\" [activeId]=\"'status'\" class=\"nav-tabs\">\n      <li [ngbNavItem]=\"'status'\" role=\"presentation\">\n        <a data-test=\"health-page.status-tab\" ngbNavLink>{{'health-page.status-tab' | translate}}</a>\n        <ng-template ngbNavContent>\n          <div id=\"status\">\n            <ds-health-panel [healthResponse]=\"(healthResponse | async)\"></ds-health-panel>\n          </div>\n        </ng-template>\n      </li>\n      <li [ngbNavItem]=\"'info'\" role=\"presentation\">\n        <a data-test=\"health-page.info-tab\" ngbNavLink>{{'health-page.info-tab' | translate}}</a>\n        <ng-template ngbNavContent>\n          <div id=\"info\">\n            <ds-health-info [healthInfoResponse]=\"(healthInfoResponse | async)\"></ds-health-info>\n          </div>\n        </ng-template>\n      </li>\n    </ul>\n    <div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\n  </div>\n  <ds-alert *ngIf=\"(healthResponse | async) === null || (healthInfoResponse | async) === null\" [type]=\"AlertType.Error\" [content]=\"'health-page.error.msg'\"></ds-alert>\n</div>\n\n\n","import {\n  NgFor,\n  NgIf,\n  TitleCasePipe,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n} from '@angular/core';\nimport { NgbCollapseModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { AlertComponent } from '../../../shared/alert/alert.component';\nimport { AlertType } from '../../../shared/alert/alert-type';\nimport { ObjNgFor } from '../../../shared/utils/object-ngfor.pipe';\nimport { HealthComponent } from '../../models/health-component.model';\n\n/**\n * A component to render a \"health component\" object.\n *\n * Note that the word \"component\" in \"health component\" doesn't refer to Angular use of the term\n * but rather to the components used in the response of the health endpoint of Spring's Actuator\n * API.\n */\n@Component({\n  selector: 'ds-health-component',\n  templateUrl: './health-component.component.html',\n  styleUrls: ['./health-component.component.scss'],\n  standalone: true,\n  imports: [NgIf, NgFor, NgbCollapseModule, AlertComponent, TitleCasePipe, ObjNgFor],\n})\nexport class HealthComponentComponent {\n\n  /**\n   * The HealthComponent object to display\n   */\n  @Input() healthComponent: HealthComponent;\n\n  /**\n   * The HealthComponent object name\n   */\n  @Input() healthComponentName: string;\n\n  public AlertTypeEnum = AlertType;\n\n  /**\n   * A boolean representing if div should start collapsed\n   */\n  public isCollapsed = false;\n\n  constructor(private translate: TranslateService) {\n  }\n\n  /**\n   * Return translated label if exist for the given property\n   *\n   * @param property\n   */\n  public getPropertyLabel(property: string): string {\n    const translationKey = `health-page.property.${property}`;\n    const translation = this.translate.instant(translationKey);\n\n    return (translation === translationKey) ? property : translation;\n  }\n}\n","<ng-container *ngIf=\"healthComponent?.components\">\n  <div *ngFor=\"let entry of healthComponent?.components | dsObjNgFor\" class=\"mb-3 border-bottom\" data-test=\"collapse\">\n    <div class=\"w-100 d-flex gap-3 justify-content-between collapse-toggle\" (click)=\"collapse.toggle()\">\n      <button type=\"button\" class=\"btn btn-link p-0\" (click)=\"$event.preventDefault()\" [attr.aria-expanded]=\"!collapse.collapsed\"\n              [attr.aria-controls]=\"'health-component-' + entry.key + 'content'\">\n        {{ entry.key | titlecase }}\n      </button>\n      <div class=\"d-flex my-auto\">\n        <span *ngIf=\"collapse.collapsed\" class=\"fas fa-chevron-down\"></span>\n        <span *ngIf=\"!collapse.collapsed\" class=\"fas fa-chevron-up\"></span>\n      </div>\n    </div>\n    <div #collapse=\"ngbCollapse\" [id]=\"'health-component-' + entry.key + 'content'\" [ngbCollapse]=\"isCollapsed\">\n      <div class=\"card border-0\">\n        <div class=\"card-body\">\n          <ds-health-component [healthComponent]=\"entry.value\"\n                               [healthComponentName]=\"entry.key\"></ds-health-component>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"healthComponent?.details\">\n  <div *ngFor=\"let item of healthComponent?.details | dsObjNgFor\" data-test=\"details\">\n    <p data-test=\"property\"><span class=\"font-weight-bold\">{{ getPropertyLabel(item.key) | titlecase }}</span> : {{item.value}}</p>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"!healthComponent?.details && !healthComponent?.components\">\n  <ds-alert [content]=\"'health-page.section.no-issues'\" [type]=\"AlertTypeEnum.Info\"></ds-alert>\n</ng-container>\n","import {\n  NgFor,\n  NgIf,\n  TitleCasePipe,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { NgbAccordionModule } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\n\nimport { ObjNgFor } from '../../shared/utils/object-ngfor.pipe';\nimport { HealthResponse } from '../models/health-component.model';\nimport { HealthComponentComponent } from './health-component/health-component.component';\nimport { HealthStatusComponent } from './health-status/health-status.component';\n\n/**\n * Show the health panel\n */\n@Component({\n  selector: 'ds-health-panel',\n  templateUrl: './health-panel.component.html',\n  styleUrls: ['./health-panel.component.scss'],\n  standalone: true,\n  imports: [HealthStatusComponent, NgbAccordionModule, NgFor, NgIf, HealthComponentComponent, TitleCasePipe, ObjNgFor, TranslateModule],\n})\nexport class HealthPanelComponent implements OnInit {\n\n  /**\n   * Health endpoint response\n   */\n  @Input() healthResponse: HealthResponse;\n\n  /**\n   * The first active panel id\n   */\n  activeId: string;\n\n  constructor(private translate: TranslateService) {\n  }\n\n  ngOnInit(): void {\n    this.activeId = Object.keys(this.healthResponse.components)[0];\n  }\n\n  /**\n   * Return translated label if exist for the given property\n   *\n   * @param panelKey\n   */\n  public getPanelLabel(panelKey: string): string {\n    const translationKey = `health-page.section.${panelKey}.title`;\n    const translation = this.translate.instant(translationKey);\n\n    return (translation === translationKey) ? panelKey : translation;\n  }\n}\n","<p class=\"h4\">\n  {{'health-page.status' | translate}}:\n  <ds-health-status [status]=\"healthResponse.status\" class=\"d-inline-flex\"></ds-health-status>\n</p>\n<ngb-accordion #acc=\"ngbAccordion\" [activeIds]=\"activeId\">\n  <ngb-panel [id]=\"entry.key\" *ngFor=\"let entry of healthResponse.components | dsObjNgFor\">\n    <ng-template ngbPanelHeader>\n      <div class=\"w-100 d-flex gap-3 justify-content-between collapse-toggle\" ngbPanelToggle (click)=\"acc.toggle(entry.key)\" data-test=\"component\">\n        <button type=\"button\" class=\"btn btn-link p-0\" (click)=\"$event.preventDefault()\" [attr.aria-expanded]=\"acc.isExpanded(entry.key)\"\n                [attr.aria-controls]=\"'health-panel-' + entry.key + '-content'\">\n          {{ getPanelLabel(entry.key) | titlecase }}\n        </button>\n        <div class=\"text-right d-flex gap-2\">\n          <ds-health-status [status]=\"entry.value?.status\"></ds-health-status>\n          <div class=\"d-flex my-auto\">\n            <span *ngIf=\"acc.isExpanded(entry.key)\" class=\"fas fa-chevron-up fa-fw\"></span>\n            <span *ngIf=\"!acc.isExpanded(entry.key)\" class=\"fas fa-chevron-down fa-fw\"></span>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template ngbPanelContent>\n      <ds-health-component [healthComponent]=\"entry.value\" [healthComponentName]=\"entry.key\"\n                           [id]=\"'health-panel-' + entry.key + '-content'\" role=\"presentation\">\n      </ds-health-component>\n    </ng-template>\n  </ngb-panel>\n</ngb-accordion>\n","import {\n  NgSwitch,\n  NgSwitchCase,\n} from '@angular/common';\nimport {\n  Component,\n  Input,\n} from '@angular/core';\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { HealthStatus } from '../../models/health-component.model';\n\n/**\n * Show a health status object\n */\n@Component({\n  selector: 'ds-health-status',\n  templateUrl: './health-status.component.html',\n  styleUrls: ['./health-status.component.scss'],\n  standalone: true,\n  imports: [NgSwitch, NgSwitchCase, NgbTooltipModule, TranslateModule],\n})\nexport class HealthStatusComponent {\n  /**\n   * The current status to show\n   */\n  @Input() status: HealthStatus;\n\n  /**\n   * Health Status\n   */\n  HealthStatus = HealthStatus;\n\n}\n","<ng-container [ngSwitch]=\"status\">\n  <i *ngSwitchCase=\"HealthStatus.UP\"\n     class=\"fa fa-check-circle text-success my-auto\"\n     ngbTooltip=\"{{'health-page.status.ok.info' | translate}}\" container=\"body\" ></i>\n  <i *ngSwitchCase=\"HealthStatus.UP_WITH_ISSUES\"\n     class=\"fa fa-exclamation-triangle text-warning my-auto\"\n     ngbTooltip=\"{{'health-page.status.warning.info' | translate}}\" container=\"body\"></i>\n  <i *ngSwitchCase=\"HealthStatus.DOWN\"\n     class=\"fa fa-times-circle text-danger my-auto\"\n     ngbTooltip=\"{{'health-page.status.error.info' | translate}}\" container=\"body\"></i>\n\n</ng-container>\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  map,\n  switchMap,\n} from 'rxjs/operators';\n\nimport { DspaceRestService } from '../core/dspace-rest/dspace-rest.service';\nimport { RawRestResponse } from '../core/dspace-rest/raw-rest-response.model';\nimport { HALEndpointService } from '../core/shared/hal-endpoint.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HealthService {\n  constructor(protected halService: HALEndpointService,\n        protected restService: DspaceRestService) {\n  }\n  /**\n     * @returns health data\n     */\n  getHealth(): Observable<RawRestResponse> {\n    return this.halService.getEndpoint('/actuator').pipe(\n      map((restURL: string) => restURL + '/health'),\n      switchMap((endpoint: string) => this.restService.get(endpoint)));\n  }\n\n  /**\n     * @returns information of server\n     */\n  getInfo(): Observable<RawRestResponse> {\n    return this.halService.getEndpoint('/actuator').pipe(\n      map((restURL: string) => restURL + '/info'),\n      switchMap((endpoint: string) => this.restService.get(endpoint)));\n  }\n}\n","/**\n * Interface for Health Status\n */\nexport enum HealthStatus {\n  UP = 'UP',\n  UP_WITH_ISSUES = 'UP_WITH_ISSUES',\n  DOWN = 'DOWN'\n}\n\n/**\n * Interface describing the Health endpoint response\n */\nexport interface HealthResponse {\n  status: HealthStatus;\n  components: {\n    [name: string]: HealthComponent;\n  };\n}\n\n/**\n * Interface describing a single component retrieved from the Health endpoint response\n */\nexport interface HealthComponent {\n  status: HealthStatus;\n  details?: {\n    [name: string]: number|string;\n  };\n  components?: {\n    [name: string]: HealthComponent;\n  };\n}\n\n/**\n * Interface describing the Health info endpoint response\n */\nexport interface HealthInfoResponse {\n  [name: string]: HealthInfoComponent|string;\n}\n\n/**\n * Interface describing a single component retrieved from the Health info endpoint response\n */\nexport interface HealthInfoComponent {\n  [property: string]: HealthInfoComponent|string;\n}\n\n\n\n"],"names":["Breadcrumb","constructor","text","url","inject","hasNoValue","currentPathFromSnapshot","I18nBreadcrumbsService","i18nBreadcrumbResolver","route","state","breadcrumbService","key","data","breadcrumbKey","Error","fullPath","provider","of","observableOf","BREADCRUMB_MESSAGE_POSTFIX","getBreadcrumbs","factory","ɵfac","providedIn","NgFor","NgIf","TitleCasePipe","NgbCollapseModule","ObjNgFor","HealthComponentComponent","i0","ɵɵelement","ɵɵelementStart","ɵɵlistener","HealthInfoComponentComponent_div_0_div_1_Template_div_click_1_listener","ɵɵrestoreView","_r1","collapse_r2","ɵɵreference","ɵɵresetView","toggle","HealthInfoComponentComponent_div_0_div_1_Template_button_click_2_listener","$event","preventDefault","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","HealthInfoComponentComponent_div_0_div_1_span_6_Template","HealthInfoComponentComponent_div_0_div_1_span_7_Template","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","entry_r3","ɵɵproperty","collapsed","ctx_r3","isCollapsed","value","ɵɵelementContainerStart","ɵɵtextInterpolate","getPropertyLabel","HealthInfoComponentComponent_div_0_div_1_Template","HealthInfoComponentComponent_div_0_ng_container_2_Template","isPlainProperty","HealthInfoComponentComponent","isNested","entry","t","selectors","inputs","healthInfoComponent","healthInfoComponentName","standalone","features","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","decls","vars","consts","template","HealthInfoComponentComponent_Template","rf","ctx","HealthInfoComponentComponent_div_0_Template","i1","NgbCollapse","styles","NgbAccordionModule","TranslateService","HealthStatusComponent","HealthInfoComponent_ng_container_0_ngb_panel_3_ng_template_1_Template_div_click_0_listener","entry_r2","ɵɵnextContext","$implicit","acc_r3","HealthInfoComponent_ng_container_0_ngb_panel_3_ng_template_1_Template_button_click_1_listener","HealthInfoComponent_ng_container_0_ngb_panel_3_ng_template_1_span_7_Template","HealthInfoComponent_ng_container_0_ngb_panel_3_ng_template_1_span_8_Template","getPanelLabel","status","isExpanded","HealthInfoComponent_ng_container_0_ngb_panel_3_ng_template_1_Template","HealthInfoComponent_ng_container_0_ngb_panel_3_ng_template_2_Template","HealthInfoComponent_ng_container_0_ngb_panel_3_Template","activeId","healthInfoResponse","HealthInfoComponent","translate","ngOnInit","Object","keys","panelKey","translationKey","translation","instant","ɵɵdirectiveInject","HealthInfoComponent_Template","HealthInfoComponent_ng_container_0_Template","i2","NgbAccordion","NgbPanel","NgbPanelContent","NgbPanelHeader","siteAdministratorGuard","HealthPageComponent","ROUTES","path","resolve","breadcrumb","title","canActivate","component","AsyncPipe","NgbNavModule","TranslateModule","BehaviorSubject","take","AlertComponent","AlertType","HealthService","HealthPanelComponent","ctx_r0","healthResponse","HealthPageComponent_div_0_div_4_ng_template_7_Template","HealthPageComponent_div_0_div_4_ng_template_12_Template","nav_r2","HealthPageComponent_div_0_div_4_Template","HealthPageComponent_div_0_ds_alert_7_Template","healthDataService","healthResponseInitialised","healthInfoResponseInitialised","getHealth","pipe","subscribe","next","payload","error","getInfo","HealthPageComponent_Template","HealthPageComponent_div_0_Template","NgbNavContent","NgbNav","NgbNavItem","NgbNavLink","NgbNavOutlet","i3","TranslatePipe","HealthComponentComponent_ng_container_0_div_1_Template_div_click_1_listener","HealthComponentComponent_ng_container_0_div_1_Template_button_click_2_listener","HealthComponentComponent_ng_container_0_div_1_span_6_Template","HealthComponentComponent_ng_container_0_div_1_span_7_Template","HealthComponentComponent_ng_container_0_div_1_Template","healthComponent","components","item_r5","HealthComponentComponent_ng_container_1_div_1_Template","details","AlertTypeEnum","Info","property","healthComponentName","HealthComponentComponent_Template","HealthComponentComponent_ng_container_0_Template","HealthComponentComponent_ng_container_1_Template","HealthComponentComponent_ng_container_2_Template","HealthPanelComponent_ngb_panel_6_ng_template_1_Template_div_click_0_listener","HealthPanelComponent_ngb_panel_6_ng_template_1_Template_button_click_1_listener","HealthPanelComponent_ngb_panel_6_ng_template_1_span_7_Template","HealthPanelComponent_ngb_panel_6_ng_template_1_span_8_Template","HealthPanelComponent_ngb_panel_6_ng_template_1_Template","HealthPanelComponent_ngb_panel_6_ng_template_2_Template","HealthPanelComponent_Template","HealthPanelComponent_ngb_panel_6_Template","NgSwitch","NgSwitchCase","NgbTooltipModule","HealthStatus","ɵɵpropertyInterpolate","HealthStatusComponent_Template","HealthStatusComponent_i_1_Template","HealthStatusComponent_i_2_Template","HealthStatusComponent_i_3_Template","UP","UP_WITH_ISSUES","DOWN","NgbTooltip","map","switchMap","DspaceRestService","HALEndpointService","halService","restService","getEndpoint","restURL","endpoint","get","ɵɵinject"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}