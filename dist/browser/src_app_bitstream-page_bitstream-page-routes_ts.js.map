{"version":3,"file":"src_app_bitstream-page_bitstream-page-routes_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;AAA4C;AAQnB;AAC6B;AAK9B;AAI+E;;;;;AAavG;;;AAGM,MAAOO,gCAAgC;EAO3C;;;;;EAKAC,YACUC,KAAqB;IAArB,KAAAA,KAAK,GAALA,KAAK;EAEf;EAEA;;;EAGAC,QAAQA,CAAA;IACN,IAAI,CAACC,MAAM,GAAG,IAAI,CAACF,KAAK,CAACG,IAAI,CAACC,IAAI,CAACT,qDAAK,EAAE,EAAEC,mDAAG,CAAEO,IAAI,IAAKA,IAAI,CAACE,SAAS,CAAC,CAAC;EAC5E;;;uBAtBWP,gCAAgC,EAAAQ,+DAAA,CAAAE,2DAAA;IAAA;EAAA;;;YAAhCV,gCAAgC;MAAAW,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAAL,iEAAA;MAAAO,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,0CAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UClC7CZ,4DAAA,aAAuB;UACrBA,uDAAA,8BAAyH;;UAGrHA,4DAFJ,aAA+B,aACL,WACwG;;UAC5HA,uDAAA,WAAiC;UAACA,oDAAA,GACpC;;UAGNA,0DAHM,EAAI,EACA,EACF,EACF;;;;;UARkBA,uDAAA,EAA4B;UAACA,wDAA7B,6BAA4B,kBAAAoB,OAAA,GAAApB,yDAAA,OAAAa,GAAA,CAAAjB,MAAA,oBAAAwB,OAAA,CAAAE,OAAA,kBAAAF,OAAA,CAAAE,OAAA,CAAAC,EAAA,CAA+C;UAG1FvB,uDAAA,GAAqE;UAArEA,wDAAA,eAAAA,6DAAA,KAAAyB,GAAA,GAAAC,OAAA,GAAA1B,yDAAA,OAAAa,GAAA,CAAAjB,MAAA,oBAAA8B,OAAA,CAAAJ,OAAA,kBAAAI,OAAA,CAAAJ,OAAA,CAAAC,EAAA,EAAqE;UACpCvB,uDAAA,GACpC;UADoCA,gEAAA,MAAAA,yDAAA,qCACpC;;;qBDkBFT,4GAAyB,EACzBN,sDAAS,EACTG,gEAAe,EAAAwC,8DAAA,EACfzC,uDAAU;MAAA2C,aAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEvBW;AAMF;AAIE;AAC6B;AAKxC;AAMU;AAEoC;AACD;AACc;AACmC;AAC/B;AAEK;AAEF;AACI;AACb;AAEV;AACM;AAIlC;;;;;;;;;;;;;;;AAWjC;;;AAGM,MAAOyB,8BAA8B;EAKzC9D,YACUC,KAAqB,EACnB8D,MAAc,EAChBC,oBAA8C,EAC9CC,IAAiB,EACjBC,WAAwB,EACxBC,mBAAwC,EACxCC,QAAkB,EACnBC,cAA8B,EAC7BC,sBAA8C,EAC9CC,eAAsC,EACfC,UAAkB;IAVzC,KAAAvE,KAAK,GAALA,KAAK;IACH,KAAA8D,MAAM,GAANA,MAAM;IACR,KAAAC,oBAAoB,GAApBA,oBAAoB;IACpB,KAAAC,IAAI,GAAJA,IAAI;IACJ,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,mBAAmB,GAAnBA,mBAAmB;IACnB,KAAAC,QAAQ,GAARA,QAAQ;IACT,KAAAC,cAAc,GAAdA,cAAc;IACb,KAAAC,sBAAsB,GAAtBA,sBAAsB;IACtB,KAAAC,eAAe,GAAfA,eAAe;IACQ,KAAAC,UAAU,GAAVA,UAAU;IAEzC,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAC,IAAIA,CAAA;IACF,IAAI,CAACN,QAAQ,CAACM,IAAI,EAAE;EACtB;EAEAxE,QAAQA,CAAA;IAEN,IAAI,CAACyE,YAAY,GAAG,IAAI,CAAC1E,KAAK,CAACG,IAAI,CAACC,IAAI,CACtCR,oDAAG,CAAEO,IAAI,IAAKA,IAAI,CAACE,SAAS,CAAC,CAAC;IAEhC,IAAI,CAACsE,UAAU,GAAG,IAAI,CAACD,YAAY,CAACtE,IAAI,CACtCoD,gFAAa,CAAC,IAAI,CAACM,MAAM,EAAE,IAAI,CAACE,IAAI,CAAC,EACrCN,6EAAoB,EAAE,CACvB;IAED,IAAI,CAACiB,UAAU,CAACvE,IAAI,CAClB0C,0DAAS,CAAEzC,SAAoB,IAAI;MACjC,MAAMuE,aAAa,GAAG,IAAI,CAACb,oBAAoB,CAACc,YAAY,CAACzB,kFAAS,CAAC0B,WAAW,EAAElB,+DAAU,CAACvD,SAAS,CAAC,GAAGA,SAAS,CAAC0E,IAAI,GAAGC,SAAS,CAAC;MACvI,MAAMC,WAAW,GAAG,IAAI,CAACjB,IAAI,CAACkB,eAAe,EAAE;MAC/C,OAAOxC,oDAAuB,CAAC,CAACkC,aAAa,EAAEK,WAAW,EAAErC,yCAAY,CAACvC,SAAS,CAAC,CAAC,CAAC;IACvF,CAAC,CAAC,EACFwC,uDAAM,CAAC,CAAC,CAACgC,YAAY,EAAEM,UAAU,EAAE9E,SAAS,CAAgC,KAAKsD,6DAAQ,CAACkB,YAAY,CAAC,IAAIlB,6DAAQ,CAACwB,UAAU,CAAC,CAAC,EAChIpC,qDAAI,CAAC,CAAC,CAAC,EACPD,0DAAS,CAAC,CAAC,CAAC+B,YAAY,EAAEM,UAAU,EAAE9E,SAAS,CAAgC,KAAI;MACjF,IAAIwE,YAAY,IAAIM,UAAU,EAAE;QAC9B,OAAO,IAAI,CAAClB,WAAW,CAACmB,wBAAwB,CAAC/E,SAAS,CAACgF,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC,CAACnF,IAAI,CAClFyC,uDAAM,CAAE2C,QAAQ,IAAK7B,6DAAQ,CAAC6B,QAAQ,CAAC,CAAC,EACxCzC,qDAAI,CAAC,CAAC,CAAC,EACPnD,oDAAG,CAAE4F,QAAQ,IAAI;UACf,OAAO,CAACX,YAAY,EAAEM,UAAU,EAAE9E,SAAS,EAAEmF,QAAQ,CAAC;QACxD,CAAC,CAAC,CAAC;MACP,CAAC,MAAM;QACL,OAAO,CAAC,CAACX,YAAY,EAAEM,UAAU,EAAE9E,SAAS,EAAE,EAAE,CAAC,CAAC;MACpD;IACF,CAAC,CAAC,CACH,CAACoF,SAAS,CAAC,CAAC,CAACZ,YAAY,EAAEM,UAAU,EAAE9E,SAAS,EAAEmF,QAAQ,CAAwC,KAAI;MACrG,IAAIX,YAAY,IAAIM,UAAU,IAAIvB,+DAAU,CAAC4B,QAAQ,CAAC,EAAE;QACtD,IAAI,CAACtB,mBAAmB,CAACwB,QAAQ,CAACF,QAAQ,CAAC;MAC7C,CAAC,MAAM,IAAIX,YAAY,IAAI,CAACM,UAAU,EAAE;QACtC,IAAI,CAACjB,mBAAmB,CAACwB,QAAQ,CAACrF,SAAS,CAACgF,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC;MAClE,CAAC,MAAM,IAAI,CAACV,YAAY,IAAIM,UAAU,EAAE;QACtC,IAAI,CAACrB,MAAM,CAAC6B,aAAa,CAAC3C,qEAAiB,EAAE,EAAE;UAAE4C,kBAAkB,EAAE;QAAI,CAAE,CAAC;MAC9E,CAAC,MAAM,IAAI,CAACf,YAAY,IAAI,CAACM,UAAU,EAAE;QACvC,IAAI,CAACnB,IAAI,CAAC6B,cAAc,CAAC,IAAI,CAAC/B,MAAM,CAACgC,GAAG,CAAC;QACzC,IAAI,CAAChC,MAAM,CAAC6B,aAAa,CAAC,OAAO,CAAC;MACpC;IACF,CAAC,CAAC;EACJ;EAEA;;;;;EAKQnB,aAAaA,CAAA;IACnB,IAAInC,kEAAgB,CAAC,IAAI,CAACkC,UAAU,CAAC,EAAE;MACrC,IAAI,CAACvE,KAAK,CAAC+F,MAAM,CAACN,SAAS,CAACM,MAAM,IAAG;QACnC,IAAI,CAAC1B,sBAAsB,CAAC2B,QAAQ,CAACD,MAAM,CAAClE,EAAE,CAAC,CAACzB,IAAI,CAAC2C,qDAAI,CAAC,CAAC,CAAC,CAAC,CAAC0C,SAAS,CAAEQ,gBAAmC,IAAI;UAC9G,IAAIC,KAAK,GAAG,EAAE;UAEdD,gBAAgB,CAACE,OAAO,CAAEC,IAAqB,IAAI;YACjDF,KAAK,GAAGA,KAAK,IAAItC,+DAAU,CAACsC,KAAK,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,GAAG,IAAIE,IAAI,CAACb,IAAI,YAAYa,IAAI,CAACC,GAAG,GAAG,IAAIzC,+DAAU,CAACwC,IAAI,CAACE,IAAI,CAAC,GAAG,YAAYF,IAAI,CAACE,IAAI,IAAI,GAAG,GAAG,CAAC;UACpJ,CAAC,CAAC;UAEF,IAAI,CAAChC,eAAe,CAACiC,SAAS,CAAC,MAAM,EAAEL,KAAK,CAAC;QAC/C,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF;;;uBAxFWrC,8BAA8B,EAAAvD,gEAAA,CAAAE,4DAAA,GAAAF,gEAAA,CAAAE,oDAAA,GAAAF,gEAAA,CAAA4B,iHAAA,GAAA5B,gEAAA,CAAAkG,gEAAA,GAAAlG,gEAAA,CAAAmG,kEAAA,GAAAnG,gEAAA,CAAAoG,qFAAA,GAAApG,gEAAA,CAAAqG,sDAAA,GAAArG,gEAAA,CAAAsG,8EAAA,GAAAtG,gEAAA,CAAAuG,uFAAA,GAAAvG,gEAAA,CAAAwG,yFAAA,GAAAxG,gEAAA,CAgB/BiC,uDAAW;IAAA;EAAA;;;YAhBVsB,8BAA8B;MAAApD,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAAL,kEAAA;MAAAO,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAA+F,wCAAA7F,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UC1DzCZ,6DADF,aAAuB,YACN;UAAAA,qDAAA,GAAsG;;;UAAAA,2DAAA,EAAK;UAExHA,6DADF,aAAkB,gBAC2C;UAAnDA,yDAAA,mBAAA2G,gEAAA;YAAA,OAAS9F,GAAA,CAAAsD,IAAA,EAAM;UAAA,EAAC;UACtBnE,wDAAA,WAAiC;UAACA,qDAAA,GACpC;;UAEJA,2DAFI,EAAS,EACL,EACF;;;UANWA,wDAAA,GAAsG;UAAtGA,gEAAA,CAAAA,0DAAA,kCAAAA,8DAAA,IAAAyB,GAAA,EAAAZ,GAAA,CAAAiD,cAAA,CAAAgD,OAAA,CAAA9G,0DAAA,OAAAa,GAAA,CAAAwD,UAAA,KAAsG;UAG/ErE,wDAAA,GACpC;UADoCA,iEAAA,MAAAA,0DAAA,4CACpC;;;qBD8CAf,uDAAS,EACTG,iEAAe,EAAA2H,+DAAA;MAAAjF,aAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;;;;AEnDuB;AAE+F;AAC/D;AACR;AAElE;;;;AAIO,MAAMoF,gCAAgC,GAC3CF,qJAAyB,CACvB,MAAMC,2EAAqB,EAC3B,MAAM3E,wCAAY,CAACQ,kFAAS,CAACqE,iBAAiB,CAAC,CAChD;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbmE;AAC0B;AACV;AAC8B;AACN;AACN;AACa;AACJ;AACJ;AAC3C;AACuB;AACqB;AACtB;AAExF,MAAMU,mBAAmB,GAAG,UAAU;AACtC,MAAMC,kCAAkC,GAAG,oBAAoB;AAE/D;;;AAGO,MAAMC,MAAM,GAAY,CAC7B;EACE;EACAC,IAAI,EAAE,kCAAkC;EACxCC,SAAS,EAAE1E,sHAA8B;EACzC2E,WAAW,EAAE,CAACN,kGAA+B;CAC9C,EACD;EACE;EACAI,IAAI,EAAE,wCAAwC;EAC9CC,SAAS,EAAE1E,sHAA8B;EACzC2E,WAAW,EAAE,CAACN,kGAA+B;CAC9C,EACD;EACE;EACAI,IAAI,EAAE,cAAc;EACpBC,SAAS,EAAE1E,sHAA8B;EACzC4E,OAAO,EAAE;IACPpI,SAAS,EAAEkH,2EAAqBA;;CAEnC,EACD;EACEe,IAAI,EAAEH,mBAAmB;EACzBI,SAAS,EAAEN,wHAAgC;EAC3CQ,OAAO,EAAE;IACPpI,SAAS,EAAEkH,2EAAqB;IAChCmB,UAAU,EAAEf,wGAA2BA;GACxC;EACDa,WAAW,EAAE,CAACd,8EAAkB;CACjC,EACD;EACEY,IAAI,EAAEF,kCAAkC;EACxCI,WAAW,EAAE,CAAChB,mGAAgC,CAAC;EAC/CmB,QAAQ,EAAE,CACR;IACEL,IAAI,EAAE,QAAQ;IACdG,OAAO,EAAE;MACPG,oBAAoB,EAAEZ,6HAA4BA;KACnD;IACDO,SAAS,EAAEV,4HAA6B;IACxC1H,IAAI,EAAE;MAAE0I,KAAK,EAAE,qCAAqC;MAAEC,eAAe,EAAE;IAAI;GAC5E,EACD;IACER,IAAI,EAAE,MAAM;IACZG,OAAO,EAAE;MACPC,UAAU,EAAEd,8FAAsB;MAClCmB,cAAc,EAAEhB,gHAAsBA;KACvC;IACDQ,SAAS,EAAET,sHAA2B;IACtC3H,IAAI,EAAE;MAAE6I,aAAa,EAAE,WAAW;MAAEH,KAAK,EAAE,mCAAmC;MAAEC,eAAe,EAAE;IAAI;GACtG,EACD;IACER,IAAI,EAAE,EAAE;IACRG,OAAO,EAAE;MACPpI,SAAS,EAAEkH,2EAAqB;MAChCmB,UAAU,EAAEf,wGAA2BA;KACxC;IACDY,SAAS,EAAEzI,0HAAgC;IAC3CK,IAAI,EAAE;MAAE0I,KAAK,EAAE,qCAAqC;MAAEC,eAAe,EAAE;IAAI;GAC5E;CAEJ,CACF;;;;;;;;;;;;;;;;;;;;ACpFsC;AAQoC;AAGJ;AAIrB;AAElD;;;;AAIO,MAAMO,8BAA8B,GAAkC,CAC3ED,kFAAU,CAAC,QAAQ,EAAE,EAAE,EAAEA,kFAAU,CAAC,kBAAkB,CAAC,EAAEA,kFAAU,CAAC,MAAM,CAAC,CAAC,EAC5EA,kFAAU,CAAC,QAAQ,CAAC,CACrB;AAED;;;;;;;;AAQO,MAAM7B,qBAAqB,GAAqCA,CACrEvH,KAA6B,EAC7BsJ,KAA0B,EAC1BC,gBAAA,GAAyCN,qDAAM,CAACC,mFAAoB,CAAC,KAChC;EACrC,OAAOK,gBAAgB,CAACC,QAAQ,CAACxJ,KAAK,CAAC+F,MAAM,CAAClE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,GAAGwH,8BAA8B,CAAC,CAC9FjJ,IAAI,CACH+I,mFAA2B,EAAE,CAC9B;AACL,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCwB;AAOF;AAME;AAOO;AAIH;AACY;AAO3B;AAOU;AAEiD;AAEK;AACa;AACP;AAGT;AACS;AACW;AAGnC;AAMvB;AACwC;AAM5C;AACmC;AAC6D;AAChB;AACM;AACoC;AAC1F;AACsB;AACC;AACvB;AACD;AACsB;;;;;;;;;;;;;;IClE9E7I,6DAAA,kBAOwC;IAA9BA,yDAFA,wBAAAiL,kGAAA;MAAAjL,4DAAA,CAAAmL,GAAA;MAAA,MAAAC,MAAA,GAAApL,4DAAA;MAAA,OAAAA,0DAAA,CAAcoL,MAAA,CAAAG,QAAA,EAAU;IAAA,EAAC,oBAAAC,8FAAA;MAAAxL,4DAAA,CAAAmL,GAAA;MAAA,MAAAC,MAAA,GAAApL,4DAAA;MAAA,OAAAA,0DAAA,CACfoL,MAAA,CAAAK,QAAA,EAAU;IAAA,EAAC,sBAAAC,gGAAAC,MAAA;MAAA3L,4DAAA,CAAAmL,GAAA;MAAA,MAAAC,MAAA,GAAApL,4DAAA;MAAA,OAAAA,0DAAA,CACToL,MAAA,CAAAQ,QAAA,CAAAD,MAAA,CAAgB;IAAA,EAAC;IAEnC3L,6DADF,cAAuC,YACyC;IAAAA,qDAAA,GAAoD;;IAEtIA,2DAFsI,EAAI,EAClI,EACE;;;;;IAPAA,yDAJiB,oCAAmC,cAAAoL,MAAA,CAAAS,SAAA,CAC7B,cAAAT,MAAA,CAAAU,SAAA,CACA,eAAAV,MAAA,CAAAW,UAAA,CACE,4BACE;IAK9B/L,wDAAA,GAA0E;IAA1EA,yDAAA,eAAAA,8DAAA,IAAAyB,GAAA,EAAAuK,cAAA,kBAAAA,cAAA,CAAA1K,OAAA,kBAAA0K,cAAA,CAAA1K,OAAA,CAAAC,EAAA,EAA0E;IAACvB,wDAAA,EAAoD;IAApDA,gEAAA,CAAAA,0DAAA,6CAAoD;;;;;IApBxIA,6DADF,aAAmD,aAC3B;IACpBA,wDAAA,sBAAgE;IAClEA,2DAAA,EAAM;IAKEA,6DAJR,aAAuB,aACE,aACJ,aACK,YACH;IAAAA,qDAAA,GAAiD;IAAAA,6DAAA,eAAyB;IAAAA,qDAAA,IAAkD;;IAGjJA,2DAHiJ,EAAO,EAAK,EACnJ,EACF,EACF;IACNA,yDAAA,KAAAkM,mEAAA,uBAOwC;IAM5ClM,2DADE,EAAM,EACF;;;;;IAvBYA,wDAAA,GAAkC;IAAlCA,yDAAA,cAAAgM,cAAA,kBAAAA,cAAA,CAAA1K,OAAA,CAAkC;IAM3BtB,wDAAA,GAAiD;IAAjDA,iEAAA,KAAAoL,MAAA,CAAAtH,cAAA,CAAAgD,OAAA,CAAAkF,cAAA,kBAAAA,cAAA,CAAA1K,OAAA,OAAiD;IAAyBtB,wDAAA,GAAkD;IAAlDA,iEAAA,MAAAA,0DAAA,QAAAgM,cAAA,kBAAAA,cAAA,CAAA1K,OAAA,kBAAA0K,cAAA,CAAA1K,OAAA,CAAA6K,SAAA,OAAkD;IAIvInM,wDAAA,GAAe;IAAfA,yDAAA,SAAAoL,MAAA,CAAAS,SAAA,CAAe;;;;;IAc7B7L,wDAAA,mBAAgG;;;;IAAvDA,oEAAA,YAAAA,0DAAA,0BAA2C;;;;;IACpFA,wDAAA,qBACuE;;;;IAA3DA,oEAAA,YAAAA,0DAAA,4BAA6C;;;;;IA9B7DA,sEAAA,GAA6D;IAC3DA,6DAAA,aAAuB;IA4BrBA,yDA3BA,IAAAsM,wDAAA,kBAAmD,IAAAC,6DAAA,sBA0BkC,IAAAC,+DAAA,wBAE3B;IAC5DxM,2DAAA,EAAM;;;;;IA7BcA,wDAAA,GAA+B;IAA/BA,yDAAA,SAAAgM,cAAA,kBAAAA,cAAA,CAAAS,YAAA,CAA+B;IA0BtCzM,wDAAA,EAA4B;IAA5BA,yDAAA,SAAAgM,cAAA,kBAAAA,cAAA,CAAAU,SAAA,CAA4B;IAC1B1M,wDAAA,EAA4C;IAA5CA,yDAAA,UAAAgM,cAAA,KAAAA,cAAA,kBAAAA,cAAA,CAAAW,SAAA,EAA4C;;;ADwE7D;;;AAGM,MAAOC,0BAA0B;EA4VrCnN,YAAoBC,KAAqB,EACrB8D,MAAc,EACdqJ,iBAAoC,EACpCC,WAA+B,EAC/BC,SAA2B,EAC3B9D,gBAAsC,EACvCnF,cAA8B,EAC7BkJ,oBAA0C,EAC1CC,sBAAkD,EAClDC,uBAAgD;IAThD,KAAAxN,KAAK,GAALA,KAAK;IACL,KAAA8D,MAAM,GAANA,MAAM;IACN,KAAAqJ,iBAAiB,GAAjBA,iBAAiB;IACjB,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,SAAS,GAATA,SAAS;IACT,KAAA9D,gBAAgB,GAAhBA,gBAAgB;IACjB,KAAAnF,cAAc,GAAdA,cAAc;IACb,KAAAkJ,oBAAoB,GAApBA,oBAAoB;IACpB,KAAAC,sBAAsB,GAAtBA,sBAAsB;IACtB,KAAAC,uBAAuB,GAAvBA,uBAAuB;IA9U3C;;;IAGA,KAAAC,UAAU,GAAG,sBAAsB;IAEnC;;;IAGA,KAAAC,gBAAgB,GAAG,QAAQ;IAE3B;;;IAGA,KAAAC,eAAe,GAAG,OAAO;IAEzB;;;IAGA,KAAAC,oBAAoB,GAAG,+BAA+B;IAEtD;;;IAGA,KAAAC,oBAAoB,GAAG,kBAAkB;IAEzC;;;IAGA,KAAAC,qBAAqB,GAAG,mBAAmB;IAE3C;;;IAGA,KAAAC,iBAAiB,GAAG,UAAU;IAE9B;;;IAGA,KAAAC,mBAAmB,GAAG,YAAY;IAElC;;;IAGA,KAAAC,cAAc,GAAG;MACfC,eAAe,EAAE,EAAE;MACnBC,WAAW,EAAE;KACd;IAED;;;IAGA,KAAAC,aAAa,GAAG,IAAItD,uHAAmB,CAAC;MACtCuD,qBAAqB,EAAE,KAAK;MAAEC,cAAc,EAAE,EAAE;MAAEC,UAAU,EAAE,KAAK;MAAEC,YAAY,EAAE,EAAE;MACrF3M,EAAE,EAAE,UAAU;MACd4M,IAAI,EAAE,UAAU;MAChBC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE;QACVD,QAAQ,EAAE;OACX;MACDE,aAAa,EAAE;QACbF,QAAQ,EAAE;;KAEb,CAAC;IAEF;;;IAGA,KAAAG,qBAAqB,GAAG,IAAIhE,uIAAwB,CAAC;MACnDhJ,EAAE,EAAE,kBAAkB;MACtB4M,IAAI,EAAE;KACP,CACA;IAED;;;IAGA,KAAAK,gBAAgB,GAAG,IAAI/D,6HAAsB,CAAC;MAC5CsD,qBAAqB,EAAE,KAAK;MAAEC,cAAc,EAAE,EAAE;MAAEC,UAAU,EAAE,KAAK;MAAEC,YAAY,EAAE,EAAE;MACrF3M,EAAE,EAAE,aAAa;MACjB4M,IAAI,EAAE,aAAa;MACnBM,IAAI,EAAE;KACP,CAAC;IAEF;;;IAGA,KAAAC,mBAAmB,GAAG,IAAIhE,iKAA8B,CAAC;MACvDnJ,EAAE,EAAE,gBAAgB;MACpB4M,IAAI,EAAE,gBAAgB;MACtBQ,UAAU,EAAE,kBAAkB;MAC9BV,UAAU,EAAE,KAAK;MACjBD,cAAc,EAAE,EAAE;MAClBE,YAAY,EAAE,EAAE;MAChBH,qBAAqB,EAAE,KAAK;MAC5Ba,YAAY,EAAE9E,yFAAgB;MAC9B+E,cAAc,EAAGC,MAAgC,IAAI;QACnD,IAAIA,MAAM,YAAajF,gFAAe,EAAE;UACtC,OAAOxG,6DAAQ,CAACyL,MAAM,CAAC,IAAIA,MAAM,CAACC,YAAY,KAAKhF,oGAA2B,CAACiF,OAAO,GAAG,IAAI,CAACjC,SAAS,CAACkC,OAAO,CAAC,IAAI,CAAC9B,UAAU,GAAG,wBAAwB,CAAC,GAAG2B,MAAM,CAACI,gBAAgB;QACvL,CAAC,MAAM;UACL,OAAOJ,MAAM;QACf;MACF;KACD,CAAC;IAEF;;;IAGA,KAAAK,cAAc,GAAG,IAAI5F,sEAAiB,CAAC;MACrChI,EAAE,EAAE,WAAW;MACf4M,IAAI,EAAE;KACP,CAAC;IAEF;;;IAGA,KAAAiB,cAAc,GAAG,IAAI5E,uHAAmB,CAAC;MACvCuD,qBAAqB,EAAE,KAAK;MAAEC,cAAc,EAAE,EAAE;MAAEC,UAAU,EAAE,KAAK;MAAEC,YAAY,EAAE,EAAE;MACrF3M,EAAE,EAAE,WAAW;MACf4M,IAAI,EAAE;KACP,EACD;MACEkB,IAAI,EAAE;QACJC,IAAI,EAAE;;KAET,CAAC;IACF,KAAAC,kBAAkB,GAAG,IAAIlG,0EAAqB,CAAC;MAC7C9H,EAAE,EAAE,oBAAoB;MACxBiO,KAAK,EAAE,CAAC,IAAI,CAACJ,cAAc;KAC5B,EAAE;MACDC,IAAI,EAAE;QACJC,IAAI,EAAE;;KAET,CAAC;IAEF,KAAAG,YAAY,GAAG,IAAIjF,uHAAmB,CAAC;MACrCuD,qBAAqB,EAAE,KAAK;MAAEC,cAAc,EAAE,EAAE;MAAEC,UAAU,EAAE,KAAK;MAAEC,YAAY,EAAE,EAAE;MACrF3M,EAAE,EAAE,SAAS;MACb4M,IAAI,EAAE;KACP,EAAE;MACDkB,IAAI,EAAE;QACJC,IAAI,EAAE;;KAET,CAAC;IACF,KAAAI,gBAAgB,GAAG,IAAIrG,0EAAqB,CAAC;MAC3C9H,EAAE,EAAE,kBAAkB;MACtBiO,KAAK,EAAE,CAAC,IAAI,CAACC,YAAY;KAC1B,EAAE;MACDJ,IAAI,EAAE;QACJC,IAAI,EAAE;;KAET,CAAC;IAEF,KAAAK,cAAc,GAAG,IAAInF,uHAAmB,CAAC;MACvCuD,qBAAqB,EAAE,KAAK;MAAEC,cAAc,EAAE,EAAE;MAAEC,UAAU,EAAE,KAAK;MAAEC,YAAY,EAAE,EAAE;MACrF3M,EAAE,EAAE,WAAW;MACf4M,IAAI,EAAE;KACP,EAAE;MACDkB,IAAI,EAAE;QACJC,IAAI,EAAE;;KAET,CAAC;IACF,KAAAM,kBAAkB,GAAG,IAAIvG,0EAAqB,CAAC;MAC7C9H,EAAE,EAAE,oBAAoB;MACxBiO,KAAK,EAAE,CAAC,IAAI,CAACG,cAAc;KAC5B,EAAE;MACDN,IAAI,EAAE;QACJC,IAAI,EAAE;;KAET,CAAC;IAEF,KAAAO,eAAe,GAAG,IAAIrF,uHAAmB,CAAC;MACxCuD,qBAAqB,EAAE,KAAK;MAAEC,cAAc,EAAE,EAAE;MAAEC,UAAU,EAAE,KAAK;MAAEC,YAAY,EAAE,EAAE;MACrF3M,EAAE,EAAE,YAAY;MAChB4M,IAAI,EAAE;KACP,EAAE;MACDkB,IAAI,EAAE;QACJC,IAAI,EAAE;;KAET,CAAC;IACF,KAAAQ,mBAAmB,GAAG,IAAIzG,0EAAqB,CAAC;MAC9C9H,EAAE,EAAE,qBAAqB;MACzBiO,KAAK,EAAE,CAAC,IAAI,CAACK,eAAe;KAC7B,EAAE;MACDR,IAAI,EAAE;QACJC,IAAI,EAAE;;KAET,CAAC;IAEF;;;IAGA,KAAAS,WAAW,GAAG,CAAC,IAAI,CAACxB,qBAAqB,EAAE,IAAI,CAACT,aAAa,EAAE,IAAI,CAACU,gBAAgB,EAAE,IAAI,CAACE,mBAAmB,EAC5G,IAAI,CAACS,cAAc,CAAC;IAEtB;;;;IAIA,KAAArD,SAAS,GAA8B,CACrC,IAAIzC,0EAAqB,CAAC;MACxB9H,EAAE,EAAE,0BAA0B;MAC9BiO,KAAK,EAAE,CACL,IAAI,CAACjB,qBAAqB,EAC1B,IAAI,CAACT,aAAa;KAErB,EAAE;MACDuB,IAAI,EAAE;QACJC,IAAI,EAAE;;KAET,CAAC,EACF,IAAIjG,0EAAqB,CAAC;MACxB9H,EAAE,EAAE,sBAAsB;MAC1BiO,KAAK,EAAE,CACL,IAAI,CAAChB,gBAAgB;KAExB,CAAC,EACF,IAAInF,0EAAqB,CAAC;MACxB9H,EAAE,EAAE,iBAAiB;MACrBiO,KAAK,EAAE,CACL,IAAI,CAACd,mBAAmB,EACxB,IAAI,CAACS,cAAc;KAEtB,CAAC,CACH;IAED;;;IAGA,KAAAa,mBAAmB,GAAG,6BAA6B;IAEnD;;;IAGA,KAAAjE,UAAU,GAAsB;MAC9BkE,QAAQ,EAAE;QACRZ,IAAI,EAAE;UACJC,IAAI,EAAE;;OAET;MACDY,gBAAgB,EAAE;QAChBb,IAAI,EAAE;UACJc,SAAS,EAAE;SACZ;QACDC,OAAO,EAAE;UACPD,SAAS,EAAE;;OAEd;MACDE,WAAW,EAAE;QACXhB,IAAI,EAAE;UACJC,IAAI,EAAE;;OAET;MACDgB,OAAO,EAAE;QACPjB,IAAI,EAAE;UACJC,IAAI,EAAE;;OAET;MACDiB,cAAc,EAAE;QACdlB,IAAI,EAAE;UACJC,IAAI,EAAE;;OAET;MACDkB,SAAS,EAAE;QACTnB,IAAI,EAAE;UACJC,IAAI,EAAE,IAAI,CAACU,mBAAmB,GAAG;;OAEpC;MACDS,wBAAwB,EAAE;QACxBpB,IAAI,EAAE;UACJC,IAAI,EAAE;;OAET;MACDoB,oBAAoB,EAAE;QACpBrB,IAAI,EAAE;UACJC,IAAI,EAAE;;OAET;MACDqB,eAAe,EAAE;QACftB,IAAI,EAAE;UACJC,IAAI,EAAE;;;KAGX;IAqBD;;;IAGA,KAAAsB,MAAM,GAAG,KAAK;IAEd;;;;IAIU,KAAAC,IAAI,GAAmB,EAAE;EAwBnC;EAEA;;;;;;EAMAlR,QAAQA,CAAA;IAEN,IAAI,CAACmR,MAAM,GAAG,IAAI,CAACpR,KAAK,CAACqR,QAAQ,CAACC,WAAW,CAACF,MAAM;IACpD,IAAI,CAACG,UAAU,GAAG,IAAI,CAACvR,KAAK,CAACqR,QAAQ,CAACC,WAAW,CAACC,UAAU;IAC5D,IAAI,CAAC7M,YAAY,GAAG,IAAI,CAAC1E,KAAK,CAACG,IAAI,CAACC,IAAI,CAACR,oDAAG,CAAEO,IAAS,IAAKA,IAAI,CAACE,SAAS,CAAC,CAAC;IAE5E,MAAMsE,UAAU,GAAG,IAAI,CAACD,YAAY,CAACtE,IAAI,CACvCmK,mFAA2B,EAAE,EAC7B7G,4EAAoB,EAAE,CACvB;IAED,MAAM8N,OAAO,GAAG7M,UAAU,CAACvE,IAAI,CAC7B0C,0DAAS,CAAEzC,SAAoB,IAAKA,SAAS,CAACoR,MAAM,CAAC,EACrDjH,0FAAkC,EAAE,CACrC;IAED,MAAMkH,iBAAiB,GAAGF,OAAO,CAACpR,IAAI,CACpCsK,qEAAgB,EAAE,EAClB5H,0DAAS,CAAE2O,MAAc,IAAK,IAAI,CAAClI,gBAAgB,CAACoI,UAAU,CAACF,MAAM,CAACpM,MAAM,CAACmL,gBAAgB,CAACjL,IAAI,CAAC,CAAC,EACpGiF,0FAAkC,EAAE,CACrC;IAED,MAAMoH,KAAK,GAAGJ,OAAO,CAACpR,IAAI,CACxB0C,0DAAS,CAAE2O,MAAc,IAAKA,MAAM,CAACI,IAAI,CAAC,EAC1CrH,0FAAkC,EAAE,CACrC;IACD,MAAMsH,OAAO,GAAGnN,UAAU,CAACvE,IAAI,CAC7B0C,0DAAS,CAACzC,SAAS,IAAIA,SAAS,CAAC+O,MAAM,CAAC,EACxC5E,0FAAkC,EAAE,CACrC;IAED,IAAI,CAAC2G,IAAI,CAACY,IAAI,CACZrP,oDAAuB,CACrBiC,UAAU,EACV6M,OAAO,EACPE,iBAAiB,EACjBE,KAAK,EACLE,OAAO,CACR,CAACrM,SAAS,CAAC,CAAC,CAACpF,SAAS,EAAEoR,MAAM,EAAEjB,gBAAgB,EAAEqB,IAAI,EAAEzC,MAAM,CAAC,KAAI;MAClE,IAAI,CAAC/O,SAAS,GAAGA,SAAsB;MACvC,IAAI,CAACoR,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACZ,cAAc,GAAGzB,MAAM;MAC5B;MACA;MACA,IAAI,CAAC4C,oBAAoB,GAAGrO,6DAAQ,CAAC6M,gBAAgB,CAAC,GAAGA,gBAAgB,CAACyB,IAAI,GAAG,IAAI;MACrF,IAAI,CAACb,MAAM,GAAGS,IAAI,CAACI,IAAI;MACvB,IAAI,CAACC,aAAa,CAAC,IAAI,CAAC7R,SAAS,CAAC;IACpC,CAAC,CAAC,EACFyR,OAAO,CAAC1R,IAAI,CAAC2C,qDAAI,CAAC,CAAC,CAAC,CAAC,CAAC0C,SAAS,CAC5B2J,MAAM,IAAK,IAAI,CAAC+C,cAAc,GAAG/C,MAAM,CACzC,CACF;IAED,IAAI,CAAC+B,IAAI,CAACY,IAAI,CACZ,IAAI,CAAC1E,SAAS,CAAC+E,YAAY,CACxB3M,SAAS,CAAC,MAAK;MACd,IAAI,CAAC4M,uBAAuB,EAAE;IAChC,CAAC,CAAC,CACL;EACH;EAEA;;;EAGAC,OAAOA,CAAA;IACL,IAAI,CAACnG,SAAS,GAAG,IAAI,CAACiB,WAAW,CAACmF,eAAe,CAAC,IAAI,CAACnG,SAAS,CAAC;IACjE,IAAI,CAACoG,UAAU,CAAC,IAAI,CAACnS,SAAS,CAAC;IAC/B,IAAI,CAACgS,uBAAuB,EAAE;EAChC;EAEA;;;;EAIAG,UAAUA,CAACnS,SAAoB;IAC7B,IAAI,CAAC8L,SAAS,CAACsG,UAAU,CAAC;MACxB1B,wBAAwB,EAAE;QACxBR,QAAQ,EAAElQ,SAAS,CAACoO,IAAI;QACxB+B,gBAAgB,EAAE,IAAI,CAACwB,oBAAoB,KAAK3R,SAAS,CAAC4R;OAC3D;MACDjB,oBAAoB,EAAE;QACpBL,WAAW,EAAEtQ,SAAS,CAACqS,kBAAkB,CAAC,gBAAgB;OAC3D;MACDzB,eAAe,EAAE;QACfJ,cAAc,EAAE,IAAI,CAACA,cAAc,CAACrB,gBAAgB;QACpDsB,SAAS,EAAEnN,6DAAQ,CAACtD,SAAS,CAACsS,aAAa,CAAC,WAAW,CAAC,CAAC,GAAGtS,SAAS,CAACsS,aAAa,CAAC,WAAW,CAAC,CAACC,KAAK,GAAG5N;;KAE5G,CAAC;IACF,IAAI,IAAI,CAACkM,MAAM,EAAE;MACf,IAAI,CAAC/E,SAAS,CAACsG,UAAU,CAAC;QACxB5C,kBAAkB,EAAE;UAClBgD,SAAS,EAAExS,SAAS,CAACqS,kBAAkB,CAAC,IAAI,CAAC1E,mBAAmB;SACjE;QACDgC,gBAAgB,EAAE;UAChB8C,OAAO,EAAEzS,SAAS,CAACqS,kBAAkB,CAAC,IAAI,CAAC3E,iBAAiB;SAC7D;QACDmC,kBAAkB,EAAE;UAClB6C,SAAS,EAAE1S,SAAS,CAACqS,kBAAkB,CAAC,IAAI,CAAC7E,oBAAoB;SAClE;QACDuC,mBAAmB,EAAE;UACnB4C,UAAU,EAAE3S,SAAS,CAACqS,kBAAkB,CAAC,IAAI,CAAC5E,qBAAqB;;OAEtE,CAAC;IACJ;IACA,IAAI,CAACmF,qBAAqB,EAAE;EAC9B;EAGA;;;;EAIAA,qBAAqBA,CAAA;IACnB,IAAI,IAAI,CAACC,eAAe,EAAE,EAAE;MAC1B,IAAI,CAAC7G,UAAU,CAACyE,SAAS,CAACnB,IAAI,CAACC,IAAI,GAAG,IAAI,CAACU,mBAAmB;IAChE,CAAC,MAAM;MACL,IAAI,CAACjE,UAAU,CAACyE,SAAS,CAACnB,IAAI,CAACC,IAAI,GAAG,IAAI,CAACU,mBAAmB,GAAG,YAAY;IAC/E;EACF;EAEA;;;;EAIA4C,eAAeA,CAAA;IACb,OAAOvP,6DAAQ,CAAC,IAAI,CAACkN,cAAc,CAAC,IAAK,IAAI,CAACA,cAAc,CAACxB,YAAY,KAAKhF,oGAA2B,CAACiF,OAAO;EACnH;EAEA;;;EAGQ+C,uBAAuBA,CAAA;IAC7B,IAAI,CAAChC,WAAW,CAAClK,OAAO,CACrBgN,UAAmC,IAAI;MACtC,IAAI,CAACC,sBAAsB,CAACD,UAAU,CAAC;IACzC,CAAC,CACF;EACH;EAEA;;;;EAIQC,sBAAsBA,CAACD,UAAU;IACvCA,UAAU,CAACE,KAAK,GAAG,IAAI,CAAChG,SAAS,CAACkC,OAAO,CAAC,IAAI,CAAC9B,UAAU,GAAG0F,UAAU,CAACtR,EAAE,GAAG,IAAI,CAAC6L,gBAAgB,CAAC;IAClG,IAAIyF,UAAU,CAACtR,EAAE,KAAK,IAAI,CAACgN,qBAAqB,CAAChN,EAAE,EAAE;MACnDsR,UAAU,CAACG,IAAI,GAAG,IAAI,CAACjG,SAAS,CAACkC,OAAO,CAAC,IAAI,CAAC9B,UAAU,GAAG0F,UAAU,CAACtR,EAAE,GAAG,IAAI,CAAC8L,eAAe,CAAC;IAClG;EACF;EAEA;;;;EAIAzB,QAAQA,CAACqH,KAAK;IACZ,MAAMC,KAAK,GAAGD,KAAK,CAACC,KAAK;IACzB,IAAIA,KAAK,CAAC3R,EAAE,KAAK,IAAI,CAACmN,mBAAmB,CAACnN,EAAE,EAAE;MAC5C,IAAI,CAACgP,cAAc,GAAG2C,KAAK,CAACZ,KAAK;MACjC,IAAI,CAACK,qBAAqB,EAAE;IAC9B;EACF;EAEA;;;EAGApH,QAAQA,CAAA;IACN,MAAM4H,aAAa,GAAG,IAAI,CAACtH,SAAS,CAACuH,WAAW,EAAE;IAClD,MAAMC,gBAAgB,GAAG,IAAI,CAACC,eAAe,CAACH,aAAa,CAAC;IAC5D,MAAMI,WAAW,GAAG,IAAI,CAAChD,cAAc,CAAChP,EAAE,KAAK,IAAI,CAACsQ,cAAc,CAACtQ,EAAE;IACrE,MAAMiS,SAAS,GAAGL,aAAa,CAAC1C,wBAAwB,CAACP,gBAAgB;IACzE,MAAMuD,UAAU,GAAG,IAAI,CAAC/B,oBAAoB,KAAK,IAAI,CAAC3R,SAAS,CAAC4R,IAAI;IAEpE,IAAItN,UAAU;IACd,IAAI6M,OAA2B;IAC/B,IAAIwC,gBAAgB,GAAG,KAAK;IAE5B,IAAID,UAAU,KAAKD,SAAS,EAAE;MAC5B,IAAIG,SAAyC;MAC7C,IAAIF,UAAU,EAAE;QACdE,SAAS,GAAG,IAAI,CAACzG,uBAAuB,CAAC0G,MAAM,CAAC,IAAI,CAACzC,MAAM,CAAC;MAC9D,CAAC,MAAM,IAAI9N,6DAAQ,CAAC,IAAI,CAACqO,oBAAoB,CAAC,EAAE;QAC9CiC,SAAS,GAAG,IAAI,CAACzG,uBAAuB,CAAC2G,GAAG,CAAC,IAAI,CAAC9T,SAAS,EAAE,IAAI,CAACoR,MAAM,CAAC;MAC3E,CAAC,MAAM;QACLwC,SAAS,GAAG,IAAI,CAACzG,uBAAuB,CAAC4G,MAAM,CAAC,IAAI,CAAC/T,SAAS,EAAE,IAAI,CAACoR,MAAM,CAAC;MAC9E;MAEA,MAAM4C,kBAAkB,GAAGJ,SAAS,CAAC7T,IAAI,CAAC+I,mFAA2B,EAAE,CAAC;MAExE,IAAI,CAACgI,IAAI,CAACY,IAAI,CAACsC,kBAAkB,CAACjU,IAAI,CACpCyC,uDAAM,CAAEyR,QAA4B,IAAKA,QAAQ,CAACtH,SAAS,CAAC,CAC7D,CAACvH,SAAS,CAAE6O,QAA4B,IAAI;QAC3C,IAAI,CAAChH,oBAAoB,CAACiH,KAAK,CAC7B,IAAI,CAAClH,SAAS,CAACkC,OAAO,CAAC,IAAI,CAAC3B,oBAAoB,GAAG,8BAA8B,CAAC,EAClF0G,QAAQ,CAACE,YAAY,CACtB;QACDR,gBAAgB,GAAG,IAAI;MACzB,CAAC,CAAC,CAAC;MAEHxC,OAAO,GAAG6C,kBAAkB,CAACjU,IAAI,CAC/BR,oDAAG,CAAE0U,QAA4B,IAAI;QACnC,IAAIA,QAAQ,CAACvH,YAAY,EAAE;UACzB,OAAOuH,QAAQ,CAAC1S,OAAO;QACzB,CAAC,MAAM;UACL,OAAO,IAAI,CAAC6P,MAAM;QACpB;MACF,CAAC,CAAC,CACH;MAED,IAAI,CAACN,IAAI,CAACY,IAAI,CAACP,OAAO,CAACpR,IAAI,CACzBsK,qEAAgB,EAAE,EAClB5H,0DAAS,CAAE2O,MAAc,IAAK,IAAI,CAAClI,gBAAgB,CAACoI,UAAU,CAACF,MAAM,CAACpM,MAAM,CAACmL,gBAAgB,CAACjL,IAAI,EAAE,KAAK,CAAC,CAAC,EAC3GiF,0FAAkC,EAAE,CACrC,CAAC/E,SAAS,CAAEpF,SAAoB,IAAI;QACnC,IAAI,CAAC2R,oBAAoB,GAAGrO,6DAAQ,CAACtD,SAAS,CAAC,GAAGA,SAAS,CAAC4R,IAAI,GAAG,IAAI;MACzE,CAAC,CAAC,CAAC;IAEL,CAAC,MAAM;MACLT,OAAO,GAAG5O,yCAAY,CAAC,IAAI,CAAC6O,MAAM,CAAC;IACrC;IACA,IAAIoC,WAAW,EAAE;MACflP,UAAU,GAAG,IAAI,CAAC4E,gBAAgB,CAACkL,YAAY,CAAC,IAAI,CAACpU,SAAS,EAAE,IAAI,CAACwQ,cAAc,CAAC,CAACzQ,IAAI,CACvF+I,mFAA2B,EAAE,EAC7BvJ,oDAAG,CAAE8U,cAAqC,IAAI;QAC5C,IAAI/Q,6DAAQ,CAAC+Q,cAAc,CAAC,IAAIA,cAAc,CAAC1H,SAAS,EAAE;UACxD,IAAI,CAACM,oBAAoB,CAACiH,KAAK,CAC7B,IAAI,CAAClH,SAAS,CAACkC,OAAO,CAAC,IAAI,CAAC3B,oBAAoB,GAAG,oBAAoB,CAAC,EACxE8G,cAAc,CAACF,YAAY,CAC5B;QACH,CAAC,MAAM;UACL,OAAOE,cAAc,CAAC9S,OAAO;QAC/B;MACF,CAAC,CAAC,CACH;IACH,CAAC,MAAM;MACL+C,UAAU,GAAG/B,yCAAY,CAAC,IAAI,CAACvC,SAAS,CAAC;IAC3C;IAEAoC,oDAAa,CAAC,CAAC+O,OAAO,EAAE7M,UAAU,CAAC,CAAC,CAACvE,IAAI,CACvC4J,oDAAG,CAAC,CAAC,CAACyH,MAAM,CAAC,KAAK,IAAI,CAACA,MAAM,GAAGA,MAAM,CAAC,EACvC3O,0DAAS,CAAC,MAAK;MACb,OAAO,IAAI,CAACyG,gBAAgB,CAACoL,MAAM,CAAChB,gBAAgB,CAAC,CAACvT,IAAI,CACxDoK,0FAAkC,EAAE,CACrC;IACH,CAAC,CAAC,CACH,CAAC/E,SAAS,CAAC,MAAK;MACf,IAAI,CAAC8D,gBAAgB,CAACqL,aAAa,EAAE;MACrC,IAAI,CAACtH,oBAAoB,CAACuH,OAAO,CAC/B,IAAI,CAACxH,SAAS,CAACkC,OAAO,CAAC,IAAI,CAAC3B,oBAAoB,GAAG,aAAa,CAAC,EACjE,IAAI,CAACP,SAAS,CAACkC,OAAO,CAAC,IAAI,CAAC3B,oBAAoB,GAAG,eAAe,CAAC,CACpE;MACD,IAAI,CAACoG,gBAAgB,EAAE;QACrB,IAAI,CAACc,4BAA4B,EAAE;MACrC;IACF,CAAC,CAAC;EACJ;EAEA;;;;EAIAlB,eAAeA,CAACmB,OAAO;IACrB,MAAMpB,gBAAgB,GAAG5J,uDAAS,CAAC,IAAI,CAAC1J,SAAS,CAAC;IAClD,MAAM2U,WAAW,GAAGrB,gBAAgB,CAACsB,QAAQ;IAC7C3K,iEAAQ,CAAC4K,aAAa,CAACF,WAAW,EAAE,UAAU,EAAED,OAAO,CAAChE,wBAAwB,CAACR,QAAQ,CAAC;IAC1F,IAAI5F,4DAAO,CAACoK,OAAO,CAAC/D,oBAAoB,CAACL,WAAW,CAAC,EAAE;MACrD,OAAOqE,WAAW,CAAC,gBAAgB,CAAC;IACtC,CAAC,MAAM;MACL1K,iEAAQ,CAAC4K,aAAa,CAACF,WAAW,EAAE,gBAAgB,EAAED,OAAO,CAAC/D,oBAAoB,CAACL,WAAW,CAAC;IACjG;IACA,IAAI,IAAI,CAACO,MAAM,EAAE;MACf;MACA;MACA;MACA,IAAIvG,4DAAO,CAACoK,OAAO,CAAClF,kBAAkB,CAACgD,SAAS,CAAC,EAAE;QAEjD,OAAOmC,WAAW,CAAC,IAAI,CAAChH,mBAAmB,CAAC;MAC9C,CAAC,MAAM;QACL1D,iEAAQ,CAAC4K,aAAa,CAACF,WAAW,EAAE,IAAI,CAAChH,mBAAmB,EAAE+G,OAAO,CAAClF,kBAAkB,CAACgD,SAAS,CAAC;MACrG;MACA,IAAIlI,4DAAO,CAACoK,OAAO,CAAC/E,gBAAgB,CAAC8C,OAAO,CAAC,EAAE;QAC7C,OAAOkC,WAAW,CAAC,IAAI,CAACjH,iBAAiB,CAAC;MAC5C,CAAC,MAAM;QACLzD,iEAAQ,CAAC4K,aAAa,CAACF,WAAW,EAAE,IAAI,CAACjH,iBAAiB,EAAEgH,OAAO,CAAC/E,gBAAgB,CAAC8C,OAAO,CAAC;MAC/F;MACA,IAAInI,4DAAO,CAACoK,OAAO,CAAC7E,kBAAkB,CAAC6C,SAAS,CAAC,EAAE;QACjD,OAAOiC,WAAW,CAAC,IAAI,CAACnH,oBAAoB,CAAC;MAC/C,CAAC,MAAM;QACLvD,iEAAQ,CAAC4K,aAAa,CAACF,WAAW,EAAE,IAAI,CAACnH,oBAAoB,EAAEkH,OAAO,CAAC7E,kBAAkB,CAAC6C,SAAS,CAAC;MACtG;MACA,IAAIpI,4DAAO,CAACoK,OAAO,CAAC3E,mBAAmB,CAAC4C,UAAU,CAAC,EAAE;QACnD,OAAOgC,WAAW,CAAC,IAAI,CAAClH,qBAAqB,CAAC;MAChD,CAAC,MAAM;QACLxD,iEAAQ,CAAC4K,aAAa,CAACF,WAAW,EAAE,IAAI,CAAClH,qBAAqB,EAAEiH,OAAO,CAAC3E,mBAAmB,CAAC4C,UAAU,CAAC;MACzG;IACF;IACA,IAAIpP,+DAAU,CAACmR,OAAO,CAAC9D,eAAe,CAACH,SAAS,CAAC,EAAE;MACjDxG,iEAAQ,CAAC4K,aAAa,CAACF,WAAW,EAAE,WAAW,EAAED,OAAO,CAAC9D,eAAe,CAACH,SAAS,CAAC;IACrF;IACA6C,gBAAgB,CAACsB,QAAQ,GAAGD,WAAW;IACvC,OAAOrB,gBAAgB;EACzB;EAEA;;;EAGA5H,QAAQA,CAAA;IACN,IAAI,CAAC+I,4BAA4B,EAAE;EACrC;EAEA;;;;EAIAA,4BAA4BA,CAAA;IAC1B,IAAI,CAAChR,MAAM,CAACqR,QAAQ,CAAC,CAAC1K,uFAAkB,CAAC,IAAI,CAAC8G,UAAU,EAAE,IAAI,CAACH,MAAM,CAAC,EAAE,YAAY,CAAC,CAAC;EACxF;EAEA;;;;;EAKAc,aAAaA,CAAC7R,SAAoB;IAEhC,MAAM+U,mBAAmB,GAAG,gCAAgC;IAC5D,MAAMC,aAAa,GAAG,WAAW;IAEjC,MAAMC,QAAQ,GAAG,IAAI,CAACjV,SAAS,CAAC+O,MAAM,CAAChP,IAAI,CACzCmK,mFAA2B,EAAE,EAC7B3K,oDAAG,CAAEwP,MAAmC,IAAKA,MAAM,CAACxN,OAAO,CAAC2T,QAAQ,CAACC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IAE3F,MAAMC,aAAa,GAAG,IAAI,CAACpV,SAAS,CAACoR,MAAM,CAACrR,IAAI,CAC9CmK,mFAA2B,EAAE,EAC7B3K,oDAAG,CAAE6R,MAA0B,IAC7B,IAAI,CAACrN,cAAc,CAACgD,OAAO,CAACqK,MAAM,CAAC7P,OAAO,CAAC,CAAC8T,KAAK,CAACN,mBAAmB,CAAC,IAAI,IAAI,CAAC,CAAC;IAEpF,MAAMO,UAAU,GAAG,IAAI,CAACtV,SAAS,CAACoR,MAAM,CAACrR,IAAI,CAC3CmK,mFAA2B,EAAE,EAC7B3K,oDAAG,CAAE6R,MAA0B,IAAKA,MAAM,CAAC7P,OAAO,CAACiQ,IAAI,CAACzR,IAAI,CAC1DmK,mFAA2B,EAAE,EAC7B3K,oDAAG,CAAEiS,IAAsB,IACxBA,IAAI,CAACjQ,OAAO,CAAC8Q,kBAAkB,CAAC,qBAAqB,CAAC,IACrDb,IAAI,CAACjQ,OAAO,CAAC8Q,kBAAkB,CAAC,qBAAqB,CAAC,CAACgD,KAAK,CAACL,aAAa,CAAC,KAAK,IAAK,CACxF,CAAC,CAAC,CAAC;IAER,MAAMO,OAAO,GAAGnT,oDAAa,CAC3B6S,QAAQ,EACRG,aAAa,EACbE,UAAU,CACX,CAAClQ,SAAS,CAAC,CAAC,CAACoQ,OAAO,EAAEC,YAAY,EAAEC,SAAS,CAAC,KAAI;MACjD,IAAIF,OAAO,IAAIC,YAAY,IAAIC,SAAS,EAAE;QACxC,IAAI,CAAC7E,MAAM,GAAG,IAAI;QAClB,IAAI,CAACb,WAAW,CAAC0B,IAAI,CAAC,IAAI,CAACrC,cAAc,CAAC;QAC1C,IAAI,CAACtD,SAAS,CAAC2F,IAAI,CAAC,IAAI,CAAClC,kBAAkB,CAAC;QAC5C,IAAI,CAACQ,WAAW,CAAC0B,IAAI,CAAC,IAAI,CAAChC,YAAY,CAAC;QACxC,IAAI,CAAC3D,SAAS,CAAC2F,IAAI,CAAC,IAAI,CAAC/B,gBAAgB,CAAC;QAC1C,IAAI,CAACK,WAAW,CAAC0B,IAAI,CAAC,IAAI,CAAC9B,cAAc,CAAC;QAC1C,IAAI,CAAC7D,SAAS,CAAC2F,IAAI,CAAC,IAAI,CAAC7B,kBAAkB,CAAC;QAC5C,IAAI,CAACG,WAAW,CAAC0B,IAAI,CAAC,IAAI,CAAC5B,eAAe,CAAC;QAC3C,IAAI,CAAC/D,SAAS,CAAC2F,IAAI,CAAC,IAAI,CAAC3B,mBAAmB,CAAC;MAC/C;MACA,IAAI,CAACkC,OAAO,EAAE;MACd,IAAI,CAACnF,iBAAiB,CAAC6I,aAAa,EAAE;IACxC,CAAC,CAAC;IAEF,IAAI,CAAC7E,IAAI,CAACY,IAAI,CAAC6D,OAAO,CAAC;EAEzB;EAEA;;;EAGAK,WAAWA,CAAA;IACT,IAAI,CAAC9E,IAAI,CACNtO,MAAM,CAAEqT,YAAY,IAAKvS,6DAAQ,CAACuS,YAAY,CAAC,CAAC,CAChD/P,OAAO,CAAE+P,YAAY,IAAKA,YAAY,CAACC,WAAW,EAAE,CAAC;EAC1D;EAEAC,4BAA4BA,CAAA;IAC1B,OAAO,MAAM,IAAI,CAAC7I,sBAAiE;EACrF;;;uBA3uBWL,0BAA0B,EAAA5M,gEAAA,CAAAE,4DAAA,GAAAF,gEAAA,CAAAE,oDAAA,GAAAF,gEAAA,CAAAA,6DAAA,GAAAA,gEAAA,CAAA4B,uEAAA,GAAA5B,gEAAA,CAAAkG,kEAAA,GAAAlG,gEAAA,CAAAmG,mFAAA,GAAAnG,gEAAA,CAAAoG,8EAAA,GAAApG,gEAAA,CAAAqG,8FAAA,GAAArG,gEAAA,CAAAsG,gGAAA,GAAAtG,gEAAA,CAAAuG,yFAAA;IAAA;EAAA;;;YAA1BqG,0BAA0B;MAAAzM,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAAL,kEAAA;MAAAO,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAqV,oCAAAnV,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCxGvCZ,yDAAA,IAAAgW,kDAAA,0BAA6D;;;;UAA9ChW,yDAAA,UAAAA,0DAAA,OAAAa,GAAA,CAAAuD,YAAA,EAA8B;;;qBDwFzCuG,uEAAa,EACbxB,kDAAI,EACJ4B,sEAAY,EACZC,4FAAwB,EACxB/L,uDAAS,EACTE,wDAAU,EACVmL,0EAAc,EACdM,6FAAsB,EACtBxL,iEAAe,EAAA8G,+DAAA,EACf4E,uEAAY;MAAAmL,MAAA;MAAAC,eAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;;;AE/F8D;AACD;;;;AASvE,MAAOvO,gCAAiC,SAAQwO,mFAA2C;EACrFC,gBAAgBA,CAAA;IACxB,OAAO,4BAA4B;EACrC;EAEUC,qBAAqBA,CAACC,SAAiB;IAC/C,OAAO,2BAAO,GAAiB,EAAEA,SAAS,CAAC,sEAAsE,CAAC;EACpH;EAEUC,uBAAuBA,CAAA;IAC/B,OAAO,kIAAyC;EAClD;;;;;sLAXW5O,gCAAgC,IAAA6O,CAAA,IAAhC7O,gCAAgC;MAAA;IAAA;EAAA;;;YAAhCA,gCAAgC;MAAAxH,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAAL,wEAAA,EAAAA,iEAAA;MAAA0W,kBAAA,EAAAjV,GAAA;MAAAlB,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAiW,0CAAA/V,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;UCZ7CZ,wDAAA,IAAA4W,uDAAA,gCAAA5W,oEAAA,CAAkB;UAElBA,4DAAA,mBAAc;UACZA,0DAAA,GAAyB;UAC3BA,0DAAA,EAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJiC;AAOd;AAEY;AAEsB;AACgB;AAEE;AAEN;AACrB;AAElD;;;;;;;;AAQO,MAAM4H,+BAA+B,GAAkBA,CAC5DlI,KAA6B,EAC7BsJ,KAA0B,EAC1BiO,oBAAA,GAA6CtO,qDAAM,CAACC,mFAAoB,CAAC,EACzEsO,yBAAA,GAAiDvO,qDAAM,CAAC3F,qFAAmB,CAAC,EAC5EQ,MAAA,GAAiBmF,qDAAM,CAACzG,mDAAM,CAAC,KACA;EAC/B,MAAMiV,MAAM,GAAGzX,KAAK,CAAC+F,MAAM,CAAC0R,MAAM;EAClC,MAAMC,MAAM,GAAG1X,KAAK,CAAC+F,MAAM,CAAC2R,MAAM;EAClC,MAAMC,QAAQ,GAAG3X,KAAK,CAAC+F,MAAM,CAAC4R,QAAQ;EACtC,IAAIC,UAAU,GAAG5X,KAAK,CAAC+F,MAAM,CAAC8R,WAAW;EACzC,IAAIP,8DAAU,CAACM,UAAU,CAAC,EAAE;IAC1BA,UAAU,GAAG5X,KAAK,CAACsR,WAAW,CAACsG,UAAU;EAC3C;EACA,OAAOL,oBAAoB,CAACO,gBAAgB,CAC1C,GAAGL,MAAM,IAAIC,MAAM,EAAE,EACrBE,UAAU,EACVD,QAAQ,CACT,CAACvX,IAAI,CACJ+I,mFAA2B,EAAE,EAC7BvJ,mDAAG,CAAEmY,EAAyB,IAAI;IAChC,IAAIA,EAAE,CAAChL,YAAY,IAAI,CAACgL,EAAE,CAACC,YAAY,EAAE;MACvCR,yBAAyB,CAAC9R,QAAQ,CAAC,IAAIuS,GAAG,CAAC,eAAeF,EAAE,CAACnW,OAAO,CAACqQ,IAAI,WAAW,EAAEuF,yBAAyB,CAACU,gBAAgB,EAAE,CAAC,CAAC3S,IAAI,EAAE,GAAG,CAAC;MAC9I,OAAO,KAAK;IACd,CAAC,MAAM;MACL,OAAOzB,MAAM,CAACqU,aAAa,CAAC,CAACd,mEAAmB,CAAC,CAAC;IACpD;EACF,CAAC,CAAC,CACH;AACH,CAAC;;;;;;;;;;;;;;;ACxDD;;;AAGM,MAAOe,UAAU;EACrBrY;EACE;;;EAGOsY,IAAY;EACnB;;;EAGOvS,GAAY;IAJZ,KAAAuS,IAAI,GAAJA,IAAI;IAIJ,KAAAvS,GAAG,GAAHA,GAAG;EACZ;;;;;;;;;;;;;;;;;;;;;ACbqC;AAQuD;AAGxB;AAGQ;AACZ;AAElE;;;AAGO,MAAM6B,2BAA2B,GAA2CA,CACjF3H,KAA6B,EAC7BsJ,KAA0B,EAC1BkP,iBAAA,GAAiDvP,qDAAM,CAACqP,uFAA2B,CAAC,EACpFG,WAAA,GAAoCxP,qDAAM,CAACC,8EAAoB,CAAC,KACrB;EAC3C,MAAMwP,aAAa,GAAqCrP,mGAAkE;EAC1H,OAAOkP,+EAAqB,CAC1BvY,KAAK,EACLsJ,KAAK,EACLkP,iBAAiB,EACjBC,WAAW,EACX,GAAGC,aAAa,CAC0B;AAC9C,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9Ba;AAIU;AAE8B;AACwC;AACnB;AAI1C;AAC4B;AACS;AAUzC;AACqC;AACd;;;;;AAEpD;;;AAMM,MAAOJ,2BAA4B,SAAQO,2EAAqB;EACpE9Y,YACYwJ,gBAAsC,EACtCuP,WAAwB,EACxB1U,cAA8B;IAExC,KAAK,CAAC0U,WAAW,EAAE1U,cAAc,CAAC;IAJxB,KAAAmF,gBAAgB,GAAhBA,gBAAgB;IAChB,KAAAuP,WAAW,GAAXA,WAAW;IACX,KAAA1U,cAAc,GAAdA,cAAc;EAG1B;EAEA;;;;;;EAMA2U,cAAcA,CAACC,GAAoC,EAAElT,GAAW;IAC9D,MAAMuN,KAAK,GAAG,IAAI,CAACjP,cAAc,CAACgD,OAAO,CAAC4R,GAAG,CAAC;IAC9C,MAAMC,KAAK,GAAG,IAAIb,gFAAU,CAAC/E,KAAK,EAAEvN,GAAG,CAAC;IAExC,OAAO,IAAI,CAACoT,aAAa,CAACF,GAAG,CAAC/G,IAAI,CAAC,CAAC7R,IAAI,CACtC0C,yDAAS,CAAEqW,QAAqD,IAAI;MAClE,IAAIvV,8DAAU,CAACuV,QAAQ,CAAC,IAAIxV,4DAAQ,CAACwV,QAAQ,CAACvX,OAAO,CAAC,EAAE;QACtD,MAAMwX,MAAM,GAAGD,QAAQ,CAACvX,OAAO;QAC/B,OAAO,KAAK,CAACmX,cAAc,CAACK,MAAM,EAAET,+DAAW,CAACS,MAAM,CAAC,CAAC;MAC1D;MACA,OAAOxW,yCAAY,CAAC,EAAE,CAAC;IAEzB,CAAC,CAAC,EACFhD,oDAAG,CAAEyZ,WAAyB,IAAK,CAAC,GAAGA,WAAW,EAAEJ,KAAK,CAAC,CAAC,CAC5D;EACH;EAEAC,aAAaA,CAACjH,IAAY;IACxB,OAAO,IAAI,CAAC1I,gBAAgB,CAACC,QAAQ,CAACyI,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG5I,mGAA8B,CAAC,CAACjJ,IAAI,CAC7F+I,8EAA2B,EAAE,EAC7BzF,uEAAoB,EAAE,EACtBZ,yDAAS,CAAEzC,SAAoB,IAAI;MACjC,IAAIsD,4DAAQ,CAACtD,SAAS,CAAC,EAAE;QACvB,OAAOA,SAAS,CAACoR,MAAM,CAACrR,IAAI,CAC1B+I,8EAA2B,EAAE,EAC7BzF,uEAAoB,EAAE,EACtBZ,yDAAS,CAAE2O,MAAc,IAAI;UAC3B,IAAI9N,4DAAQ,CAAC8N,MAAM,CAAC,EAAE;YACpB,OAAOA,MAAM,CAACI,IAAI,CAACzR,IAAI,CACrB+I,8EAA2B,EAAE,CAC9B;UACH,CAAC,MAAM;YACL,OAAOvG,yCAAY,CAACoC,SAAS,CAAC;UAChC;QACF,CAAC,CAAC,CACH;MACH,CAAC,MAAM;QACL,OAAOpC,yCAAY,CAACoC,SAAS,CAAC;MAChC;IACF,CAAC,CAAC,CACH;EACH;;;uBAxDWsT,2BAA2B,EAAAhY,uDAAA,CAAAE,8EAAA,GAAAF,uDAAA,CAAA4B,qEAAA,GAAA5B,uDAAA,CAAAkG,6DAAA;IAAA;EAAA;;;aAA3B8R,2BAA2B;MAAAiB,OAAA,EAA3BjB,2BAA2B,CAAAkB,IAAA;MAAAC,UAAA,EAF1B;IAAM;EAAA;;;;;;;;;;;;;;;;;;;;;AC/BiB;AAEiB;AAEH;AAOtB;AAG7B;;;;;;;;;AASO,MAAMlB,qBAAqB,GAAgQA,CAChSvY,KAA6B,EAC7BsJ,KAA0B,EAC1BkP,iBAAwC,EACxCC,WAAkD,EAClD,GAAGC,aAA+C,KACJ;EAC9C,OAAOgB,2BAA2B,CAAC1Z,KAAK,EAAEsJ,KAAK,EAAEtJ,KAAK,CAAC+F,MAAM,CAAClE,EAAE,EAAE2W,iBAAiB,EAAEC,WAAW,EAAE,GAAGC,aAAa,CAAC;AACrH,CAAC;AAED;;;;;;;;;;;AAWO,MAAMgB,2BAA2B,GAA8QA,CACpT1Z,KAA6B,EAC7BsJ,KAA0B,EAC1B2I,IAAY,EACZuG,iBAAwC,EACxCC,WAAkD,EAClD,GAAGC,aAA+C,KACJ;EAC9C,OAAOD,WAAW,CAACjP,QAAQ,CAACyI,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,GAAGyG,aAAa,CAAC,CAACtY,IAAI,CACnE+I,8EAA2B,EAAE,EAC7BzF,uEAAoB,EAAE,EACtB9D,mDAAG,CAAE+Z,MAAoB,IAAI;IAC3B,IAAIhW,4DAAQ,CAACgW,MAAM,CAAC,EAAE;MACpB,OAAO;QAAEC,QAAQ,EAAEpB,iBAAiB;QAAEQ,GAAG,EAAEW,MAAM;QAAE7T,GAAG,EAAE6S,+DAAW,CAACgB,MAAM;MAAC,CAAE;IAC/E,CAAC,MAAM;MACL,OAAO3U,SAAS;IAClB;EACF,CAAC,CAAC,CACH;AACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AChEa;AAKU;AAE8B;AACqB;AACxB;AACsB;AACZ;AAKT;;;;AAEpD;;;AAMM,MAAO6T,qBAAqB;EAChC9Y,YACY+Y,WAAwB,EACxB1U,cAA8B;IAD9B,KAAA0U,WAAW,GAAXA,WAAW;IACX,KAAA1U,cAAc,GAAdA,cAAc;EAG1B;EAEA;;;;;;EAMA2U,cAAcA,CAACC,GAAoC,EAAElT,GAAW;IAC9D,MAAMuN,KAAK,GAAG,IAAI,CAACjP,cAAc,CAACgD,OAAO,CAAC4R,GAAG,CAAC;IAC9C,MAAMC,KAAK,GAAG,IAAIb,gFAAU,CAAC/E,KAAK,EAAEvN,GAAG,CAAC;IACxC,MAAMgU,YAAY,GAAGd,GAAG,CAACe,gBAAgB,EAAE;IAC3C,OAAO,IAAI,CAACjB,WAAW,CAACkB,WAAW,CAAChB,GAAG,EAAE5P,kFAAU,CAAC0Q,YAAY,CAAC,CAAC,CAACA,YAAY,CAAC,CAAC1Z,IAAI,CACnFyZ,oDAAI,CAAEV,QAAqD,IAAKA,QAAQ,CAACpM,YAAY,IAAIoM,QAAQ,CAACc,UAAU,KAAK,GAAG,CAAC,EACrHnX,yDAAS,CAAEqW,QAAqD,IAAI;MAClE,IAAIxV,4DAAQ,CAACwV,QAAQ,CAAC,IAAIxV,4DAAQ,CAACwV,QAAQ,CAACvX,OAAO,CAAC,EAAE;QACpD,MAAMwX,MAAM,GAAGD,QAAQ,CAACvX,OAAO;QAC/B,OAAO,IAAI,CAACmX,cAAc,CAACK,MAAM,EAAET,+DAAW,CAACS,MAAM,CAAC,CAAC;MACzD;MACA,OAAOxW,wCAAY,CAAC,EAAE,CAAC;IAEzB,CAAC,CAAC,EACFhD,mDAAG,CAAEyZ,WAAyB,IAAK,CAAC,GAAGA,WAAW,EAAEJ,KAAK,CAAC,CAAC,CAC5D;EACH;;;uBA9BWJ,qBAAqB,EAAAvY,uDAAA,CAAAE,qEAAA,GAAAF,uDAAA,CAAA4B,6DAAA;IAAA;EAAA;;;aAArB2W,qBAAqB;MAAAU,OAAA,EAArBV,qBAAqB,CAAAW,IAAA;MAAAC,UAAA,EAFpB;IAAM;EAAA;;;;;;;;;;;;;;;;;;;;AC1BmB;AAQc;AACoB;AACL;AAEpE;;;;;;;AAOO,MAAM7R,sBAAsB,GAAwCA,CACzE5H,KAA6B,EAC7BsJ,KAA0B,EAC1BkP,iBAAA,GAA4CvP,qDAAM,CAACkR,6EAAsB,CAAC,KAC9C;EAC5B,MAAMnB,GAAG,GAAGhZ,KAAK,CAACG,IAAI,CAAC6I,aAAa;EACpC,IAAIsO,8DAAU,CAAC0B,GAAG,CAAC,EAAE;IACnB,MAAM,IAAIoB,KAAK,CAAC,mDAAmD,GAAGpa,KAAK,CAAC8F,GAAG,GAAG,8CAA8C,CAAC;EACnI;EACA,MAAMuU,QAAQ,GAAGH,kFAAuB,CAACla,KAAK,CAAC;EAC/C,OAAO;IAAE4Z,QAAQ,EAAEpB,iBAAiB;IAAEQ,GAAG,EAAEA,GAAG;IAAElT,GAAG,EAAEuU;EAAQ,CAAE;AACjE,CAAC;;;;;;;;;;;;;;;;;;;AC1Ba;AAE6D;;AAG3E;;;AAGO,MAAMC,0BAA0B,GAAG,cAAc;AAExD;;;AAMM,MAAOH,sBAAsB;EAEjC;;;;;EAKApB,cAAcA,CAACC,GAAW,EAAElT,GAAW;IACrC,OAAOlD,wCAAY,CAAC,CAAC,IAAIwV,gFAAU,CAACY,GAAG,GAAGsB,0BAA0B,EAAExU,GAAG,CAAC,CAAC,CAAC;EAC9E;;;uBATWqU,sBAAsB;IAAA;EAAA;;;aAAtBA,sBAAsB;MAAAZ,OAAA,EAAtBY,sBAAsB,CAAAX,IAAA;MAAAC,UAAA,EAFrB;IAAM;EAAA;;;;;;;;;;;;;;;;;;ACXiB;AAKmC;AAGxE;;;;AAIO,MAAMnS,yBAAyB,GAAGA,CACvCkT,YAA4C,EAC5CC,YAAuC,KACrBF,qFAAuB,CACvCC,YAAY,EACZ,CAACxa,KAA6B,EAAEsJ,KAA0B,KAA8BmR,YAAY,CAACza,KAAK,EAAEsJ,KAAK,CAAC,CAAClJ,IAAI,CACrHR,mDAAG,CAAE8a,SAAoB,IAAK,CAACA,SAAS,CAAC,CAAC,CAC3C,CAAC;;;;;;;;;;;;;;;;;;;;;ACnB+B;AAKE;AAEsC;AAOjC;AAK5C;;;;AAIO,MAAMG,iBAAiB,GAAI7a,KAA6B,IAA4B;EACzF,IAAI8a,cAAc,GAAG9a,KAAK;EAC1B,OAAOsX,8DAAU,CAACwD,cAAc,CAAC/U,MAAM,CAAClE,EAAE,CAAC,IAAI8B,4DAAQ,CAACmX,cAAc,CAAC1B,MAAM,CAAC,EAAE;IAC9E0B,cAAc,GAAGA,cAAc,CAAC1B,MAAM;EACxC;EACA,OAAO0B,cAAc;AACvB,CAAC;AAIM,MAAMC,sBAAsB,GAA+CtS,OAAiC,IAAwB;EACzI,OAAO,CAACzI,KAA6B,EAAEsJ,KAA0B,KAAwB;IACvF,MAAM0R,iBAAiB,GAAGH,iBAAiB,CAAC7a,KAAK,CAAC;IAClD,OAAQyI,OAAO,CAACuS,iBAAiB,EAAE1R,KAAK,CAA+B,CAAClJ,IAAI,CAC1Eua,mFAAgC,EAAE,EAClC/a,mDAAG,CAAEqb,GAAG,IAAKA,GAAG,CAAClW,IAAI,CAAC,CACvB;EACH,CAAC;AACH,CAAC;AAED;;;;AAIO,MAAMwV,uBAAuB,GAAGA,CACrCC,YAA4C,EAC5CU,aAAsC,EACtCC,YAAA,GAAkCJ,sBAAsB,EACxDK,cAAmC,KACjBR,gGAA6B,CAAC,CAAC5a,KAA6B,EAAEsJ,KAA0B,KAA8B4R,aAAa,CAAClb,KAAK,EAAEsJ,KAAK,CAAC,EAAE6R,YAAY,CAACX,YAAY,EAAE,CAAC,EAAEY,cAAc,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DjK;AAKrC;AAE0E;AACH;AAClB;AAKC;AAEJ;AACN;AAMhC;AACyB;;;;;;;;AAK7C,MAAOlR,uBAAuB;EAElCnK,YACYgc,cAA8B,EAC9BC,UAAkC,EAClCC,WAA+B,EAC/BC,UAA8B,EAC9B5O,oBAA0C,EAC1C6O,iBAAoC;IALpC,KAAAJ,cAAc,GAAdA,cAAc;IACd,KAAAC,UAAU,GAAVA,UAAU;IACV,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,UAAU,GAAVA,UAAU;IACV,KAAA5O,oBAAoB,GAApBA,oBAAoB;IACpB,KAAA6O,iBAAiB,GAAjBA,iBAAiB;EAE7B;EAEA;;;;;EAKUC,cAAcA,CAAA;IACtB,MAAMC,OAAO,GAAgBC,MAAM,CAAClI,MAAM,CAAC,EAAE,CAAC;IAC9C,IAAImI,OAAO,GAAG,IAAIlB,6DAAW,EAAE;IAC/BkB,OAAO,GAAGA,OAAO,CAACC,MAAM,CAAC,cAAc,EAAE,eAAe,CAAC;IACzDH,OAAO,CAACE,OAAO,GAAGA,OAAO;IACzB,OAAOF,OAAO;EAChB;EAEA;;;;;;;;;EASUI,oBAAoBA,CAC5BC,WAAyE,EACzEC,WAAmB,EACnBC,wBAAiC;IAEjC,MAAMC,SAAS,GAAG,IAAI,CAACd,cAAc,CAACe,iBAAiB,EAAE;IACzD,MAAMC,OAAO,GAAG,IAAIL,WAAW,CAC7BG,SAAS,EACTF,WAAW,EACXC,wBAAwB,EACxB,IAAI,CAACR,cAAc,EAAE,CACtB;IAED,IAAI,CAACL,cAAc,CAACiB,IAAI,CAACD,OAAO,CAAC;IAEjC,OAAO,IAAI,CAACf,UAAU,CAACiB,oBAAoB,CAACJ,SAAS,CAAC;EACxD;EAEA;;;;;;EAMAzI,MAAMA,CAAC5D,gBAA2B,EAAEiB,MAAc;IAChD,OAAO,IAAI,CAACgL,oBAAoB,CAC9Bb,wDAAW,EACXnK,MAAM,CAACpM,MAAM,CAACmL,gBAAgB,CAACjL,IAAI,EACnCiL,gBAAgB,CAACzL,IAAI,CACY;EACrC;EAEA;;;;;;EAMAoP,GAAGA,CAAC3D,gBAA2B,EAAEiB,MAAc;IAC7C,OAAO,IAAI,CAACgL,oBAAoB,CAC9BZ,uDAAU,EACVpK,MAAM,CAACpM,MAAM,CAACmL,gBAAgB,CAACjL,IAAI,EACnCiL,gBAAgB,CAACzL,IAAI,CACY;EACrC;EAEA;;;;;EAKAmP,MAAMA,CAACzC,MAAc;IACnB,OAAO,IAAI,CAACgL,oBAAoB,CAC9Bd,0DAAa,EACblK,MAAM,CAACpM,MAAM,CAACmL,gBAAgB,CAACjL,IAAI,CACpC,CAACnF,IAAI,CACJqb,4EAAyB,EAAE,EAC3B3Y,+CAAS,CAAEiV,EAAyB,IAAI;MACtC,OAAO,IAAI,CAACoE,iBAAiB,CAACxK,UAAU,CAACF,MAAM,CAAC1M,IAAI,EAAEgT,EAAE,CAAC/K,SAAS,CAAC;IACrE,CAAC,CAAC,CACH;EACH;;;uBA/FW9C,uBAAuB,EAAA5J,uDAAA,CAAAE,4DAAA,GAAAF,uDAAA,CAAA4B,6FAAA,GAAA5B,uDAAA,CAAAkG,2EAAA,GAAAlG,uDAAA,CAAAmG,4EAAA,GAAAnG,uDAAA,CAAAoG,6FAAA,GAAApG,uDAAA,CAAAqG,mEAAA;IAAA;EAAA;;;aAAvBuD,uBAAuB;MAAAqP,OAAA,EAAvBrP,uBAAuB,CAAAsP,IAAA;MAAAC,UAAA,EAFtB;IAAM;EAAA;;;;;;;;;;;;;;;;;;;;;;ACpBN;AAIU;AAKsB;AACyB;;;AAIvE;;;AAMM,MAAOpW,sBAAsB;EAEjCtD,YAA0Csd,SAAoB,EAAUC,WAA8B;IAA5D,KAAAD,SAAS,GAATA,SAAS;IAAqB,KAAAC,WAAW,GAAXA,WAAW;EACnF;EAEA;;;;;EAKAtX,QAAQA,CAACiM,IAAY;IACnB,MAAMsL,OAAO,GAAG,GAAG,IAAI,CAACF,SAAS,CAACG,IAAI,CAACD,OAAO,EAAE;IAEhD,OAAO,IAAI,CAACD,WAAW,CAACG,GAAG,CAAC,GAAGF,OAAO,sBAAsBtL,IAAI,EAAE,CAAC,CAAC7R,IAAI,CACtE8c,0DAAU,CAAEQ,GAAY,IAAI;MAC1B,OAAO9a,wCAAY,CAAC,EAAE,CAAC;IACzB,CAAC,CAAC,EACFhD,mDAAG,CAAE+d,GAAoB,IAAKA,GAAG,CAAC1D,UAAU,KAAK,GAAG,GAAG0D,GAAG,CAAC/b,OAA4B,GAAG,EAAE,CAAC,CAC9F;EACH;;;uBAnBWyB,sBAAsB,EAAA/C,sDAAA,CAEb6c,oEAAU,GAAA7c,sDAAA,CAAAE,+EAAA;IAAA;EAAA;;;aAFnB6C,sBAAsB;MAAAkW,OAAA,EAAtBlW,sBAAsB,CAAAmW,IAAA;MAAAC,UAAA,EAFrB;IAAM;EAAA;;;;;;;;;;;ACzBpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA","sources":["./src/app/bitstream-page/bitstream-authorizations/bitstream-authorizations.component.ts","./src/app/bitstream-page/bitstream-authorizations/bitstream-authorizations.component.html","./src/app/bitstream-page/bitstream-download-page/bitstream-download-page.component.ts","./src/app/bitstream-page/bitstream-download-page/bitstream-download-page.component.html","./src/app/bitstream-page/bitstream-page-authorizations.guard.ts","./src/app/bitstream-page/bitstream-page-routes.ts","./src/app/bitstream-page/bitstream-page.resolver.ts","./src/app/bitstream-page/edit-bitstream-page/edit-bitstream-page.component.ts","./src/app/bitstream-page/edit-bitstream-page/edit-bitstream-page.component.html","./src/app/bitstream-page/edit-bitstream-page/themed-edit-bitstream-page.component.ts","./src/app/shared/theme-support/themed.component.html","./src/app/bitstream-page/legacy-bitstream-url-redirect.guard.ts","./src/app/breadcrumbs/breadcrumb/breadcrumb.model.ts","./src/app/core/breadcrumbs/bitstream-breadcrumb.resolver.ts","./src/app/core/breadcrumbs/bitstream-breadcrumbs.service.ts","./src/app/core/breadcrumbs/dso-breadcrumb.resolver.ts","./src/app/core/breadcrumbs/dso-breadcrumbs.service.ts","./src/app/core/breadcrumbs/i18n-breadcrumb.resolver.ts","./src/app/core/breadcrumbs/i18n-breadcrumbs.service.ts","./src/app/core/data/feature-authorization/feature-authorization-guard/dso-page-single-feature.guard.ts","./src/app/core/data/feature-authorization/feature-authorization-guard/dso-page-some-feature.guard.ts","./src/app/core/data/primary-bitstream.service.ts","./src/app/core/data/signposting-data.service.ts","./src/themes/ lazy ^\\.\\/.*\\/app\\/bitstream\\-page\\/edit\\-bitstream\\-page\\/edit\\-bitstream\\-page\\.component$ namespace object"],"sourcesContent":["import { AsyncPipe } from '@angular/common';\nimport {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  RouterLink,\n} from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport {\n  first,\n  map,\n} from 'rxjs/operators';\n\nimport { RemoteData } from '../../core/data/remote-data';\nimport { DSpaceObject } from '../../core/shared/dspace-object.model';\nimport { ResourcePoliciesComponent } from '../../shared/resource-policies/resource-policies.component';\n\n@Component({\n  selector: 'ds-bitstream-authorizations',\n  templateUrl: './bitstream-authorizations.component.html',\n  imports: [\n    ResourcePoliciesComponent,\n    AsyncPipe,\n    TranslateModule,\n    RouterLink,\n  ],\n  standalone: true,\n})\n/**\n * Component that handles the Bitstream Authorizations\n */\nexport class BitstreamAuthorizationsComponent<TDomain extends DSpaceObject> implements OnInit {\n\n  /**\n   * The initial DSO object\n   */\n  public dsoRD$: Observable<RemoteData<TDomain>>;\n\n  /**\n   * Initialize instance variables\n   *\n   * @param {ActivatedRoute} route\n   */\n  constructor(\n    private route: ActivatedRoute,\n  ) {\n  }\n\n  /**\n   * Initialize the component, setting up the collection\n   */\n  ngOnInit(): void {\n    this.dsoRD$ = this.route.data.pipe(first(), map((data) => data.bitstream));\n  }\n}\n","<div class=\"container\">\n  <ds-resource-policies [resourceType]=\"'bitstream'\" [resourceUUID]=\"(dsoRD$ | async)?.payload?.id\"></ds-resource-policies>\n  <div class=\"button-row bottom\">\n    <div class=\"text-right\">\n      <a [routerLink]=\"['/bitstreams', (dsoRD$ | async)?.payload?.id, 'edit']\" role=\"button\" class=\"btn btn-outline-secondary mr-1\">\n        <i class=\"fas fa-arrow-left\"></i> {{'bitstream.edit.return' | translate}}\n      </a>\n    </div>\n  </div>\n</div>\n","import {\n  AsyncPipe,\n  isPlatformServer,\n  Location,\n} from '@angular/common';\nimport {\n  Component,\n  Inject,\n  OnInit,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router,\n} from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  combineLatest as observableCombineLatest,\n  Observable,\n  of as observableOf,\n} from 'rxjs';\nimport {\n  filter,\n  map,\n  switchMap,\n  take,\n} from 'rxjs/operators';\n\nimport { getForbiddenRoute } from '../../app-routing-paths';\nimport { AuthService } from '../../core/auth/auth.service';\nimport { DSONameService } from '../../core/breadcrumbs/dso-name.service';\nimport { AuthorizationDataService } from '../../core/data/feature-authorization/authorization-data.service';\nimport { FeatureID } from '../../core/data/feature-authorization/feature-id';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { SignpostingDataService } from '../../core/data/signposting-data.service';\nimport { SignpostingLink } from '../../core/data/signposting-links.model';\nimport { HardRedirectService } from '../../core/services/hard-redirect.service';\nimport { ServerResponseService } from '../../core/services/server-response.service';\nimport { redirectOn4xx } from '../../core/shared/authorized.operators';\nimport { Bitstream } from '../../core/shared/bitstream.model';\nimport { FileService } from '../../core/shared/file.service';\nimport { getRemoteDataPayload } from '../../core/shared/operators';\nimport {\n  hasValue,\n  isNotEmpty,\n} from '../../shared/empty.util';\n\n@Component({\n  selector: 'ds-bitstream-download-page',\n  templateUrl: './bitstream-download-page.component.html',\n  imports: [\n    AsyncPipe,\n    TranslateModule,\n  ],\n  standalone: true,\n})\n/**\n * Page component for downloading a bitstream\n */\nexport class BitstreamDownloadPageComponent implements OnInit {\n\n  bitstream$: Observable<Bitstream>;\n  bitstreamRD$: Observable<RemoteData<Bitstream>>;\n\n  constructor(\n    private route: ActivatedRoute,\n    protected router: Router,\n    private authorizationService: AuthorizationDataService,\n    private auth: AuthService,\n    private fileService: FileService,\n    private hardRedirectService: HardRedirectService,\n    private location: Location,\n    public dsoNameService: DSONameService,\n    private signpostingDataService: SignpostingDataService,\n    private responseService: ServerResponseService,\n    @Inject(PLATFORM_ID) protected platformId: string,\n  ) {\n    this.initPageLinks();\n  }\n\n  back(): void {\n    this.location.back();\n  }\n\n  ngOnInit(): void {\n\n    this.bitstreamRD$ = this.route.data.pipe(\n      map((data) => data.bitstream));\n\n    this.bitstream$ = this.bitstreamRD$.pipe(\n      redirectOn4xx(this.router, this.auth),\n      getRemoteDataPayload(),\n    );\n\n    this.bitstream$.pipe(\n      switchMap((bitstream: Bitstream) => {\n        const isAuthorized$ = this.authorizationService.isAuthorized(FeatureID.CanDownload, isNotEmpty(bitstream) ? bitstream.self : undefined);\n        const isLoggedIn$ = this.auth.isAuthenticated();\n        return observableCombineLatest([isAuthorized$, isLoggedIn$, observableOf(bitstream)]);\n      }),\n      filter(([isAuthorized, isLoggedIn, bitstream]: [boolean, boolean, Bitstream]) => hasValue(isAuthorized) && hasValue(isLoggedIn)),\n      take(1),\n      switchMap(([isAuthorized, isLoggedIn, bitstream]: [boolean, boolean, Bitstream]) => {\n        if (isAuthorized && isLoggedIn) {\n          return this.fileService.retrieveFileDownloadLink(bitstream._links.content.href).pipe(\n            filter((fileLink) => hasValue(fileLink)),\n            take(1),\n            map((fileLink) => {\n              return [isAuthorized, isLoggedIn, bitstream, fileLink];\n            }));\n        } else {\n          return [[isAuthorized, isLoggedIn, bitstream, '']];\n        }\n      }),\n    ).subscribe(([isAuthorized, isLoggedIn, bitstream, fileLink]: [boolean, boolean, Bitstream, string]) => {\n      if (isAuthorized && isLoggedIn && isNotEmpty(fileLink)) {\n        this.hardRedirectService.redirect(fileLink);\n      } else if (isAuthorized && !isLoggedIn) {\n        this.hardRedirectService.redirect(bitstream._links.content.href);\n      } else if (!isAuthorized && isLoggedIn) {\n        this.router.navigateByUrl(getForbiddenRoute(), { skipLocationChange: true });\n      } else if (!isAuthorized && !isLoggedIn) {\n        this.auth.setRedirectUrl(this.router.url);\n        this.router.navigateByUrl('login');\n      }\n    });\n  }\n\n  /**\n   * Create page links if any are retrieved by signposting endpoint\n   *\n   * @private\n   */\n  private initPageLinks(): void {\n    if (isPlatformServer(this.platformId)) {\n      this.route.params.subscribe(params => {\n        this.signpostingDataService.getLinks(params.id).pipe(take(1)).subscribe((signpostingLinks: SignpostingLink[]) => {\n          let links = '';\n\n          signpostingLinks.forEach((link: SignpostingLink) => {\n            links = links + (isNotEmpty(links) ? ', ' : '') + `<${link.href}> ; rel=\"${link.rel}\"` + (isNotEmpty(link.type) ? ` ; type=\"${link.type}\" ` : ' ');\n          });\n\n          this.responseService.setHeader('Link', links);\n        });\n      });\n    }\n  }\n}\n","<div class=\"container\">\n  <h1 class=\"h2\">{{'bitstream.download.page' | translate:{ bitstream: dsoNameService.getName((bitstream$ | async)) } }}</h1>\n  <div class=\"pt-3\">\n    <button (click)=\"back()\" class=\"btn btn-outline-secondary\">\n      <i class=\"fas fa-arrow-left\"></i> {{'bitstream.download.page.back' | translate}}\n    </button>\n  </div>\n</div>\n","import { CanActivateFn } from '@angular/router';\nimport { of as observableOf } from 'rxjs';\n\nimport { dsoPageSingleFeatureGuard } from '../core/data/feature-authorization/feature-authorization-guard/dso-page-single-feature.guard';\nimport { FeatureID } from '../core/data/feature-authorization/feature-id';\nimport { bitstreamPageResolver } from './bitstream-page.resolver';\n\n/**\n * Guard for preventing unauthorized access to certain {@link Bitstream} pages requiring specific authorizations.\n * Checks authorization rights for managing policies.\n */\nexport const bitstreamPageAuthorizationsGuard: CanActivateFn =\n  dsoPageSingleFeatureGuard(\n    () => bitstreamPageResolver,\n    () => observableOf(FeatureID.CanManagePolicies),\n  );\n","import { Route } from '@angular/router';\n\nimport { authenticatedGuard } from '../core/auth/authenticated.guard';\nimport { bitstreamBreadcrumbResolver } from '../core/breadcrumbs/bitstream-breadcrumb.resolver';\nimport { i18nBreadcrumbResolver } from '../core/breadcrumbs/i18n-breadcrumb.resolver';\nimport { ResourcePolicyCreateComponent } from '../shared/resource-policies/create/resource-policy-create.component';\nimport { ResourcePolicyEditComponent } from '../shared/resource-policies/edit/resource-policy-edit.component';\nimport { resourcePolicyResolver } from '../shared/resource-policies/resolvers/resource-policy.resolver';\nimport { resourcePolicyTargetResolver } from '../shared/resource-policies/resolvers/resource-policy-target.resolver';\nimport { BitstreamAuthorizationsComponent } from './bitstream-authorizations/bitstream-authorizations.component';\nimport { BitstreamDownloadPageComponent } from './bitstream-download-page/bitstream-download-page.component';\nimport { bitstreamPageResolver } from './bitstream-page.resolver';\nimport { bitstreamPageAuthorizationsGuard } from './bitstream-page-authorizations.guard';\nimport { ThemedEditBitstreamPageComponent } from './edit-bitstream-page/themed-edit-bitstream-page.component';\nimport { legacyBitstreamURLRedirectGuard } from './legacy-bitstream-url-redirect.guard';\n\nconst EDIT_BITSTREAM_PATH = ':id/edit';\nconst EDIT_BITSTREAM_AUTHORIZATIONS_PATH = ':id/authorizations';\n\n/**\n * Routing module to help navigate Bitstream pages\n */\nexport const ROUTES: Route[] = [\n  {\n    // Resolve XMLUI bitstream download URLs\n    path: 'handle/:prefix/:suffix/:filename',\n    component: BitstreamDownloadPageComponent,\n    canActivate: [legacyBitstreamURLRedirectGuard],\n  },\n  {\n    // Resolve JSPUI bitstream download URLs\n    path: ':prefix/:suffix/:sequence_id/:filename',\n    component: BitstreamDownloadPageComponent,\n    canActivate: [legacyBitstreamURLRedirectGuard],\n  },\n  {\n    // Resolve angular bitstream download URLs\n    path: ':id/download',\n    component: BitstreamDownloadPageComponent,\n    resolve: {\n      bitstream: bitstreamPageResolver,\n    },\n  },\n  {\n    path: EDIT_BITSTREAM_PATH,\n    component: ThemedEditBitstreamPageComponent,\n    resolve: {\n      bitstream: bitstreamPageResolver,\n      breadcrumb: bitstreamBreadcrumbResolver,\n    },\n    canActivate: [authenticatedGuard],\n  },\n  {\n    path: EDIT_BITSTREAM_AUTHORIZATIONS_PATH,\n    canActivate: [bitstreamPageAuthorizationsGuard],\n    children: [\n      {\n        path: 'create',\n        resolve: {\n          resourcePolicyTarget: resourcePolicyTargetResolver,\n        },\n        component: ResourcePolicyCreateComponent,\n        data: { title: 'resource-policies.create.page.title', showBreadcrumbs: true },\n      },\n      {\n        path: 'edit',\n        resolve: {\n          breadcrumb: i18nBreadcrumbResolver,\n          resourcePolicy: resourcePolicyResolver,\n        },\n        component: ResourcePolicyEditComponent,\n        data: { breadcrumbKey: 'item.edit', title: 'resource-policies.edit.page.title', showBreadcrumbs: true },\n      },\n      {\n        path: '',\n        resolve: {\n          bitstream: bitstreamPageResolver,\n          breadcrumb: bitstreamBreadcrumbResolver,\n        },\n        component: BitstreamAuthorizationsComponent,\n        data: { title: 'bitstream.edit.authorizations.title', showBreadcrumbs: true },\n      },\n    ],\n  },\n];\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { BitstreamDataService } from '../core/data/bitstream-data.service';\nimport { RemoteData } from '../core/data/remote-data';\nimport { Bitstream } from '../core/shared/bitstream.model';\nimport { getFirstCompletedRemoteData } from '../core/shared/operators';\nimport {\n  followLink,\n  FollowLinkConfig,\n} from '../shared/utils/follow-link-config.model';\n\n/**\n * The self links defined in this list are expected to be requested somewhere in the near future\n * Requesting them as embeds will limit the number of requests\n */\nexport const BITSTREAM_PAGE_LINKS_TO_FOLLOW: FollowLinkConfig<Bitstream>[] = [\n  followLink('bundle', {}, followLink('primaryBitstream'), followLink('item')),\n  followLink('format'),\n];\n\n/**\n * Method for resolving a bitstream based on the parameters in the current route\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {BitstreamDataService} bitstreamService\n * @returns Observable<<RemoteData<Item>> Emits the found bitstream based on the parameters in the current route,\n * or an error if something went wrong\n */\nexport const bitstreamPageResolver: ResolveFn<RemoteData<Bitstream>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  bitstreamService: BitstreamDataService = inject(BitstreamDataService),\n): Observable<RemoteData<Bitstream>> => {\n  return bitstreamService.findById(route.params.id, true, false, ...BITSTREAM_PAGE_LINKS_TO_FOLLOW)\n    .pipe(\n      getFirstCompletedRemoteData(),\n    );\n};\n","import {\n  AsyncPipe,\n  NgIf,\n} from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { UntypedFormGroup } from '@angular/forms';\nimport {\n  ActivatedRoute,\n  Router,\n  RouterLink,\n} from '@angular/router';\nimport {\n  DynamicFormControlModel,\n  DynamicFormGroupModel,\n  DynamicFormLayout,\n  DynamicFormService,\n  DynamicInputModel,\n} from '@ng-dynamic-forms/core';\nimport {\n  TranslateModule,\n  TranslateService,\n} from '@ngx-translate/core';\nimport cloneDeep from 'lodash/cloneDeep';\nimport {\n  combineLatest,\n  combineLatest as observableCombineLatest,\n  Observable,\n  of as observableOf,\n  Subscription,\n} from 'rxjs';\nimport {\n  filter,\n  map,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs/operators';\n\nimport { DSONameService } from '../../core/breadcrumbs/dso-name.service';\nimport { FindAllDataImpl } from '../../core/data/base/find-all-data';\nimport { BitstreamDataService } from '../../core/data/bitstream-data.service';\nimport { BitstreamFormatDataService } from '../../core/data/bitstream-format-data.service';\nimport { PrimaryBitstreamService } from '../../core/data/primary-bitstream.service';\nimport { RemoteData } from '../../core/data/remote-data';\nimport { Bitstream } from '../../core/shared/bitstream.model';\nimport { BitstreamFormat } from '../../core/shared/bitstream-format.model';\nimport { BITSTREAM_FORMAT } from '../../core/shared/bitstream-format.resource-type';\nimport { BitstreamFormatSupportLevel } from '../../core/shared/bitstream-format-support-level';\nimport { Bundle } from '../../core/shared/bundle.model';\nimport { Item } from '../../core/shared/item.model';\nimport { Metadata } from '../../core/shared/metadata.utils';\nimport {\n  getFirstCompletedRemoteData,\n  getFirstSucceededRemoteData,\n  getFirstSucceededRemoteDataPayload,\n  getRemoteDataPayload,\n} from '../../core/shared/operators';\nimport { getEntityEditRoute } from '../../item-page/item-page-routing-paths';\nimport {\n  hasValue,\n  hasValueOperator,\n  isEmpty,\n  isNotEmpty,\n} from '../../shared/empty.util';\nimport { ErrorComponent } from '../../shared/error/error.component';\nimport { DynamicCustomSwitchModel } from '../../shared/form/builder/ds-dynamic-form-ui/models/custom-switch/custom-switch.model';\nimport { DsDynamicInputModel } from '../../shared/form/builder/ds-dynamic-form-ui/models/ds-dynamic-input.model';\nimport { DsDynamicTextAreaModel } from '../../shared/form/builder/ds-dynamic-form-ui/models/ds-dynamic-textarea.model';\nimport { DynamicScrollableDropdownModel } from '../../shared/form/builder/ds-dynamic-form-ui/models/scrollable-dropdown/dynamic-scrollable-dropdown.model';\nimport { FormComponent } from '../../shared/form/form.component';\nimport { ThemedLoadingComponent } from '../../shared/loading/themed-loading.component';\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\nimport { FileSizePipe } from '../../shared/utils/file-size-pipe';\nimport { VarDirective } from '../../shared/utils/var.directive';\nimport { ThemedThumbnailComponent } from '../../thumbnail/themed-thumbnail.component';\n\n@Component({\n  selector: 'ds-base-edit-bitstream-page',\n  styleUrls: ['./edit-bitstream-page.component.scss'],\n  templateUrl: './edit-bitstream-page.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    FormComponent,\n    NgIf,\n    VarDirective,\n    ThemedThumbnailComponent,\n    AsyncPipe,\n    RouterLink,\n    ErrorComponent,\n    ThemedLoadingComponent,\n    TranslateModule,\n    FileSizePipe,\n  ],\n  standalone: true,\n})\n/**\n * Page component for editing a bitstream\n */\nexport class EditBitstreamPageComponent implements OnInit, OnDestroy {\n\n  /**\n   * The bitstream's remote data observable\n   * Tracks changes and updates the view\n   */\n  bitstreamRD$: Observable<RemoteData<Bitstream>>;\n\n  /**\n   * The UUID of the primary bitstream for this bundle\n   */\n  primaryBitstreamUUID: string;\n\n  /**\n   * The bitstream to edit\n   */\n  bitstream: Bitstream;\n\n  /**\n   * The originally selected format\n   */\n  originalFormat: BitstreamFormat;\n\n  /**\n   * @type {string} Key prefix used to generate form messages\n   */\n  KEY_PREFIX = 'bitstream.edit.form.';\n\n  /**\n   * @type {string} Key suffix used to generate form labels\n   */\n  LABEL_KEY_SUFFIX = '.label';\n\n  /**\n   * @type {string} Key suffix used to generate form labels\n   */\n  HINT_KEY_SUFFIX = '.hint';\n\n  /**\n   * @type {string} Key prefix used to generate notification messages\n   */\n  NOTIFICATIONS_PREFIX = 'bitstream.edit.notifications.';\n\n  /**\n   * IIIF image width metadata key\n   */\n  IMAGE_WIDTH_METADATA = 'iiif.image.width';\n\n  /**\n   * IIIF image height metadata key\n   */\n  IMAGE_HEIGHT_METADATA = 'iiif.image.height';\n\n  /**\n   * IIIF table of contents metadata key\n   */\n  IIIF_TOC_METADATA = 'iiif.toc';\n\n  /**\n   * IIIF label metadata key\n   */\n  IIIF_LABEL_METADATA = 'iiif.label';\n\n  /**\n   * Options for fetching all bitstream formats\n   */\n  findAllOptions = {\n    elementsPerPage: 20,\n    currentPage: 1,\n  };\n\n  /**\n   * The Dynamic Input Model for the file's name\n   */\n  fileNameModel = new DsDynamicInputModel({\n    hasSelectableMetadata: false, metadataFields: [], repeatable: false, submissionId: '',\n    id: 'fileName',\n    name: 'fileName',\n    required: true,\n    validators: {\n      required: null,\n    },\n    errorMessages: {\n      required: 'You must provide a file name for the bitstream',\n    },\n  });\n\n  /**\n   * The Dynamic Switch Model for the file's name\n   */\n  primaryBitstreamModel = new DynamicCustomSwitchModel({\n    id: 'primaryBitstream',\n    name: 'primaryBitstream',\n  },\n  );\n\n  /**\n   * The Dynamic TextArea Model for the file's description\n   */\n  descriptionModel = new DsDynamicTextAreaModel({\n    hasSelectableMetadata: false, metadataFields: [], repeatable: false, submissionId: '',\n    id: 'description',\n    name: 'description',\n    rows: 10,\n  });\n\n  /**\n   * The Dynamic Input Model for the selected format\n   */\n  selectedFormatModel = new DynamicScrollableDropdownModel({\n    id: 'selectedFormat',\n    name: 'selectedFormat',\n    displayKey: 'shortDescription',\n    repeatable: false,\n    metadataFields: [],\n    submissionId: '',\n    hasSelectableMetadata: false,\n    resourceType: BITSTREAM_FORMAT,\n    formatFunction: (format: BitstreamFormat | string) => {\n      if (format instanceof  BitstreamFormat) {\n        return hasValue(format) && format.supportLevel === BitstreamFormatSupportLevel.Unknown ? this.translate.instant(this.KEY_PREFIX + 'selectedFormat.unknown') : format.shortDescription;\n      } else {\n        return format;\n      }\n    },\n  });\n\n  /**\n   * The Dynamic Input Model for supplying more format information\n   */\n  newFormatModel = new DynamicInputModel({\n    id: 'newFormat',\n    name: 'newFormat',\n  });\n\n  /**\n   * The Dynamic Input Model for the iiif label\n   */\n  iiifLabelModel = new DsDynamicInputModel({\n    hasSelectableMetadata: false, metadataFields: [], repeatable: false, submissionId: '',\n    id: 'iiifLabel',\n    name: 'iiifLabel',\n  },\n  {\n    grid: {\n      host: 'col col-lg-6 d-inline-block',\n    },\n  });\n  iiifLabelContainer = new DynamicFormGroupModel({\n    id: 'iiifLabelContainer',\n    group: [this.iiifLabelModel],\n  }, {\n    grid: {\n      host: 'form-row',\n    },\n  });\n\n  iiifTocModel = new DsDynamicInputModel({\n    hasSelectableMetadata: false, metadataFields: [], repeatable: false, submissionId: '',\n    id: 'iiifToc',\n    name: 'iiifToc',\n  }, {\n    grid: {\n      host: 'col col-lg-6 d-inline-block',\n    },\n  });\n  iiifTocContainer = new DynamicFormGroupModel({\n    id: 'iiifTocContainer',\n    group: [this.iiifTocModel],\n  }, {\n    grid: {\n      host: 'form-row',\n    },\n  });\n\n  iiifWidthModel = new DsDynamicInputModel({\n    hasSelectableMetadata: false, metadataFields: [], repeatable: false, submissionId: '',\n    id: 'iiifWidth',\n    name: 'iiifWidth',\n  }, {\n    grid: {\n      host: 'col col-lg-6 d-inline-block',\n    },\n  });\n  iiifWidthContainer = new DynamicFormGroupModel({\n    id: 'iiifWidthContainer',\n    group: [this.iiifWidthModel],\n  }, {\n    grid: {\n      host: 'form-row',\n    },\n  });\n\n  iiifHeightModel = new DsDynamicInputModel({\n    hasSelectableMetadata: false, metadataFields: [], repeatable: false, submissionId: '',\n    id: 'iiifHeight',\n    name: 'iiifHeight',\n  }, {\n    grid: {\n      host: 'col col-lg-6 d-inline-block',\n    },\n  });\n  iiifHeightContainer = new DynamicFormGroupModel({\n    id: 'iiifHeightContainer',\n    group: [this.iiifHeightModel],\n  }, {\n    grid: {\n      host: 'form-row',\n    },\n  });\n\n  /**\n   * All input models in a simple array for easier iterations\n   */\n  inputModels = [this.primaryBitstreamModel, this.fileNameModel, this.descriptionModel, this.selectedFormatModel,\n    this.newFormatModel];\n\n  /**\n   * The dynamic form fields used for editing the information of a bitstream\n   * @type {(DynamicInputModel | DynamicTextAreaModel)[]}\n   */\n  formModel: DynamicFormControlModel[] = [\n    new DynamicFormGroupModel({\n      id: 'fileNamePrimaryContainer',\n      group: [\n        this.primaryBitstreamModel,\n        this.fileNameModel,\n      ],\n    }, {\n      grid: {\n        host: 'form-row',\n      },\n    }),\n    new DynamicFormGroupModel({\n      id: 'descriptionContainer',\n      group: [\n        this.descriptionModel,\n      ],\n    }),\n    new DynamicFormGroupModel({\n      id: 'formatContainer',\n      group: [\n        this.selectedFormatModel,\n        this.newFormatModel,\n      ],\n    }),\n  ];\n\n  /**\n   * The base layout of the \"Other Format\" input\n   */\n  newFormatBaseLayout = 'col col-sm-6 d-inline-block';\n\n  /**\n   * Layout used for structuring the form inputs\n   */\n  formLayout: DynamicFormLayout = {\n    fileName: {\n      grid: {\n        host: 'col col-sm-8 d-inline-block',\n      },\n    },\n    primaryBitstream: {\n      grid: {\n        container: 'col-12',\n      },\n      element: {\n        container: 'text-right',\n      },\n    },\n    description: {\n      grid: {\n        host: 'col-12 d-inline-block',\n      },\n    },\n    embargo: {\n      grid: {\n        host: 'col-12 d-inline-block',\n      },\n    },\n    selectedFormat: {\n      grid: {\n        host: 'col col-sm-6 d-inline-block',\n      },\n    },\n    newFormat: {\n      grid: {\n        host: this.newFormatBaseLayout + ' invisible',\n      },\n    },\n    fileNamePrimaryContainer: {\n      grid: {\n        host: 'row position-relative',\n      },\n    },\n    descriptionContainer: {\n      grid: {\n        host: 'row',\n      },\n    },\n    formatContainer: {\n      grid: {\n        host: 'row',\n      },\n    },\n  };\n\n  /**\n   * The form group of this form\n   */\n  formGroup: UntypedFormGroup;\n\n  /**\n   * The ID of the item the bitstream originates from\n   * Taken from the current query parameters when present\n   * This will determine the route of the item edit page to return to\n   */\n  itemId: string;\n\n  /**\n   * The entity type of the item the bitstream originates from\n   * Taken from the current query parameters when present\n   * This will determine the route of the item edit page to return to\n   */\n  entityType: string;\n\n  /**\n   * Set to true when the parent item supports IIIF.\n   */\n  isIIIF = false;\n\n  /**\n   * Array to track all subscriptions and unsubscribe them onDestroy\n   * @type {Array}\n   */\n  protected subs: Subscription[] = [];\n\n  /**\n   * The parent bundle containing the Bitstream\n   * @private\n   */\n  private bundle: Bundle;\n  /**\n   * The currently selected format\n   * @private\n   */\n  private selectedFormat: BitstreamFormat;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private changeDetectorRef: ChangeDetectorRef,\n              private formService: DynamicFormService,\n              private translate: TranslateService,\n              private bitstreamService: BitstreamDataService,\n              public dsoNameService: DSONameService,\n              private notificationsService: NotificationsService,\n              private bitstreamFormatService: BitstreamFormatDataService,\n              private primaryBitstreamService: PrimaryBitstreamService,\n  ) {\n  }\n\n  /**\n   * Initialize the component\n   * - Create a FormGroup using the FormModel defined earlier\n   * - Subscribe on the route data to fetch the bitstream to edit and update the form values\n   * - Translate the form labels and hints\n   */\n  ngOnInit(): void {\n\n    this.itemId = this.route.snapshot.queryParams.itemId;\n    this.entityType = this.route.snapshot.queryParams.entityType;\n    this.bitstreamRD$ = this.route.data.pipe(map((data: any) => data.bitstream));\n\n    const bitstream$ = this.bitstreamRD$.pipe(\n      getFirstSucceededRemoteData(),\n      getRemoteDataPayload(),\n    );\n\n    const bundle$ = bitstream$.pipe(\n      switchMap((bitstream: Bitstream) => bitstream.bundle),\n      getFirstSucceededRemoteDataPayload(),\n    );\n\n    const primaryBitstream$ = bundle$.pipe(\n      hasValueOperator(),\n      switchMap((bundle: Bundle) => this.bitstreamService.findByHref(bundle._links.primaryBitstream.href)),\n      getFirstSucceededRemoteDataPayload(),\n    );\n\n    const item$ = bundle$.pipe(\n      switchMap((bundle: Bundle) => bundle.item),\n      getFirstSucceededRemoteDataPayload(),\n    );\n    const format$ = bitstream$.pipe(\n      switchMap(bitstream => bitstream.format),\n      getFirstSucceededRemoteDataPayload(),\n    );\n\n    this.subs.push(\n      observableCombineLatest(\n        bitstream$,\n        bundle$,\n        primaryBitstream$,\n        item$,\n        format$,\n      ).subscribe(([bitstream, bundle, primaryBitstream, item, format]) => {\n        this.bitstream = bitstream as Bitstream;\n        this.bundle = bundle;\n        this.selectedFormat = format;\n        // hasValue(primaryBitstream) because if there's no primaryBitstream on the bundle it will\n        // be a success response, but empty\n        this.primaryBitstreamUUID = hasValue(primaryBitstream) ? primaryBitstream.uuid : null;\n        this.itemId = item.uuid;\n        this.setIiifStatus(this.bitstream);\n      }),\n      format$.pipe(take(1)).subscribe(\n        (format) => this.originalFormat = format,\n      ),\n    );\n\n    this.subs.push(\n      this.translate.onLangChange\n        .subscribe(() => {\n          this.updateFieldTranslations();\n        }),\n    );\n  }\n\n  /**\n   * Initializes the form.\n   */\n  setForm() {\n    this.formGroup = this.formService.createFormGroup(this.formModel);\n    this.updateForm(this.bitstream);\n    this.updateFieldTranslations();\n  }\n\n  /**\n   * Update the current form values with bitstream properties\n   * @param bitstream\n   */\n  updateForm(bitstream: Bitstream) {\n    this.formGroup.patchValue({\n      fileNamePrimaryContainer: {\n        fileName: bitstream.name,\n        primaryBitstream: this.primaryBitstreamUUID === bitstream.uuid,\n      },\n      descriptionContainer: {\n        description: bitstream.firstMetadataValue('dc.description'),\n      },\n      formatContainer: {\n        selectedFormat: this.selectedFormat.shortDescription,\n        newFormat: hasValue(bitstream.firstMetadata('dc.format')) ? bitstream.firstMetadata('dc.format').value : undefined,\n      },\n    });\n    if (this.isIIIF) {\n      this.formGroup.patchValue({\n        iiifLabelContainer: {\n          iiifLabel: bitstream.firstMetadataValue(this.IIIF_LABEL_METADATA),\n        },\n        iiifTocContainer: {\n          iiifToc: bitstream.firstMetadataValue(this.IIIF_TOC_METADATA),\n        },\n        iiifWidthContainer: {\n          iiifWidth: bitstream.firstMetadataValue(this.IMAGE_WIDTH_METADATA),\n        },\n        iiifHeightContainer: {\n          iiifHeight: bitstream.firstMetadataValue(this.IMAGE_HEIGHT_METADATA),\n        },\n      });\n    }\n    this.updateNewFormatLayout();\n  }\n\n\n  /**\n   * Update the layout of the \"Other Format\" input depending on the selected format\n   * @param selectedId\n   */\n  updateNewFormatLayout() {\n    if (this.isUnknownFormat()) {\n      this.formLayout.newFormat.grid.host = this.newFormatBaseLayout;\n    } else {\n      this.formLayout.newFormat.grid.host = this.newFormatBaseLayout + ' invisible';\n    }\n  }\n\n  /**\n   * Is the provided format (id) part of the list of unknown formats?\n   * @param id\n   */\n  isUnknownFormat(): boolean {\n    return hasValue(this.selectedFormat) &&  this.selectedFormat.supportLevel === BitstreamFormatSupportLevel.Unknown;\n  }\n\n  /**\n   * Used to update translations of labels and hints on init and on language change\n   */\n  private updateFieldTranslations() {\n    this.inputModels.forEach(\n      (fieldModel: DynamicFormControlModel) => {\n        this.updateFieldTranslation(fieldModel);\n      },\n    );\n  }\n\n  /**\n   * Update the translations of a DynamicFormControlModel\n   * @param fieldModel\n   */\n  private updateFieldTranslation(fieldModel) {\n    fieldModel.label = this.translate.instant(this.KEY_PREFIX + fieldModel.id + this.LABEL_KEY_SUFFIX);\n    if (fieldModel.id !== this.primaryBitstreamModel.id) {\n      fieldModel.hint = this.translate.instant(this.KEY_PREFIX + fieldModel.id + this.HINT_KEY_SUFFIX);\n    }\n  }\n\n  /**\n   * Fired whenever the form receives an update and changes the layout of the \"Other Format\" input, depending on the selected format\n   * @param event\n   */\n  onChange(event) {\n    const model = event.model;\n    if (model.id === this.selectedFormatModel.id) {\n      this.selectedFormat = model.value;\n      this.updateNewFormatLayout();\n    }\n  }\n\n  /**\n   * Check for changes against the bitstream and send update requests to the REST API\n   */\n  onSubmit() {\n    const updatedValues = this.formGroup.getRawValue();\n    const updatedBitstream = this.formToBitstream(updatedValues);\n    const isNewFormat = this.selectedFormat.id !== this.originalFormat.id;\n    const isPrimary = updatedValues.fileNamePrimaryContainer.primaryBitstream;\n    const wasPrimary = this.primaryBitstreamUUID === this.bitstream.uuid;\n\n    let bitstream$;\n    let bundle$: Observable<Bundle>;\n    let errorWhileSaving = false;\n\n    if (wasPrimary !== isPrimary) {\n      let bundleRd$: Observable<RemoteData<Bundle>>;\n      if (wasPrimary) {\n        bundleRd$ = this.primaryBitstreamService.delete(this.bundle);\n      } else if (hasValue(this.primaryBitstreamUUID)) {\n        bundleRd$ = this.primaryBitstreamService.put(this.bitstream, this.bundle);\n      } else {\n        bundleRd$ = this.primaryBitstreamService.create(this.bitstream, this.bundle);\n      }\n\n      const completedBundleRd$ = bundleRd$.pipe(getFirstCompletedRemoteData());\n\n      this.subs.push(completedBundleRd$.pipe(\n        filter((bundleRd: RemoteData<Bundle>) => bundleRd.hasFailed),\n      ).subscribe((bundleRd: RemoteData<Bundle>) => {\n        this.notificationsService.error(\n          this.translate.instant(this.NOTIFICATIONS_PREFIX + 'error.primaryBitstream.title'),\n          bundleRd.errorMessage,\n        );\n        errorWhileSaving = true;\n      }));\n\n      bundle$ = completedBundleRd$.pipe(\n        map((bundleRd: RemoteData<Bundle>) => {\n          if (bundleRd.hasSucceeded) {\n            return bundleRd.payload;\n          } else {\n            return this.bundle;\n          }\n        }),\n      );\n\n      this.subs.push(bundle$.pipe(\n        hasValueOperator(),\n        switchMap((bundle: Bundle) => this.bitstreamService.findByHref(bundle._links.primaryBitstream.href, false)),\n        getFirstSucceededRemoteDataPayload(),\n      ).subscribe((bitstream: Bitstream) => {\n        this.primaryBitstreamUUID = hasValue(bitstream) ? bitstream.uuid : null;\n      }));\n\n    } else {\n      bundle$ = observableOf(this.bundle);\n    }\n    if (isNewFormat) {\n      bitstream$ = this.bitstreamService.updateFormat(this.bitstream, this.selectedFormat).pipe(\n        getFirstCompletedRemoteData(),\n        map((formatResponse: RemoteData<Bitstream>) => {\n          if (hasValue(formatResponse) && formatResponse.hasFailed) {\n            this.notificationsService.error(\n              this.translate.instant(this.NOTIFICATIONS_PREFIX + 'error.format.title'),\n              formatResponse.errorMessage,\n            );\n          } else {\n            return formatResponse.payload;\n          }\n        }),\n      );\n    } else {\n      bitstream$ = observableOf(this.bitstream);\n    }\n\n    combineLatest([bundle$, bitstream$]).pipe(\n      tap(([bundle]) => this.bundle = bundle),\n      switchMap(() => {\n        return this.bitstreamService.update(updatedBitstream).pipe(\n          getFirstSucceededRemoteDataPayload(),\n        );\n      }),\n    ).subscribe(() => {\n      this.bitstreamService.commitUpdates();\n      this.notificationsService.success(\n        this.translate.instant(this.NOTIFICATIONS_PREFIX + 'saved.title'),\n        this.translate.instant(this.NOTIFICATIONS_PREFIX + 'saved.content'),\n      );\n      if (!errorWhileSaving) {\n        this.navigateToItemEditBitstreams();\n      }\n    });\n  }\n\n  /**\n   * Parse form data to an updated bitstream object\n   * @param rawForm   Raw form data\n   */\n  formToBitstream(rawForm): Bitstream {\n    const updatedBitstream = cloneDeep(this.bitstream);\n    const newMetadata = updatedBitstream.metadata;\n    Metadata.setFirstValue(newMetadata, 'dc.title', rawForm.fileNamePrimaryContainer.fileName);\n    if (isEmpty(rawForm.descriptionContainer.description)) {\n      delete newMetadata['dc.description'];\n    } else {\n      Metadata.setFirstValue(newMetadata, 'dc.description', rawForm.descriptionContainer.description);\n    }\n    if (this.isIIIF) {\n      // It's helpful to remove these metadata elements entirely when the form value is empty.\n      // This avoids potential issues on the REST side and makes it possible to do things like\n      // remove an existing \"table of contents\" entry.\n      if (isEmpty(rawForm.iiifLabelContainer.iiifLabel)) {\n\n        delete newMetadata[this.IIIF_LABEL_METADATA];\n      } else {\n        Metadata.setFirstValue(newMetadata, this.IIIF_LABEL_METADATA, rawForm.iiifLabelContainer.iiifLabel);\n      }\n      if (isEmpty(rawForm.iiifTocContainer.iiifToc)) {\n        delete newMetadata[this.IIIF_TOC_METADATA];\n      } else {\n        Metadata.setFirstValue(newMetadata, this.IIIF_TOC_METADATA, rawForm.iiifTocContainer.iiifToc);\n      }\n      if (isEmpty(rawForm.iiifWidthContainer.iiifWidth)) {\n        delete newMetadata[this.IMAGE_WIDTH_METADATA];\n      } else {\n        Metadata.setFirstValue(newMetadata, this.IMAGE_WIDTH_METADATA, rawForm.iiifWidthContainer.iiifWidth);\n      }\n      if (isEmpty(rawForm.iiifHeightContainer.iiifHeight)) {\n        delete newMetadata[this.IMAGE_HEIGHT_METADATA];\n      } else {\n        Metadata.setFirstValue(newMetadata, this.IMAGE_HEIGHT_METADATA, rawForm.iiifHeightContainer.iiifHeight);\n      }\n    }\n    if (isNotEmpty(rawForm.formatContainer.newFormat)) {\n      Metadata.setFirstValue(newMetadata, 'dc.format', rawForm.formatContainer.newFormat);\n    }\n    updatedBitstream.metadata = newMetadata;\n    return updatedBitstream;\n  }\n\n  /**\n   * Cancel the form and return to the previous page\n   */\n  onCancel() {\n    this.navigateToItemEditBitstreams();\n  }\n\n  /**\n   * When the item ID is present, navigate back to the item's edit bitstreams page,\n   * otherwise retrieve the item ID based on the owning bundle's link\n   */\n  navigateToItemEditBitstreams() {\n    this.router.navigate([getEntityEditRoute(this.entityType, this.itemId), 'bitstreams']);\n  }\n\n  /**\n   * Verifies that the parent item is iiif-enabled. Checks bitstream mimetype to be\n   * sure it's an image, excluding bitstreams in the THUMBNAIL or OTHERCONTENT bundles.\n   * @param bitstream\n   */\n  setIiifStatus(bitstream: Bitstream) {\n\n    const regexExcludeBundles = /OTHERCONTENT|THUMBNAIL|LICENSE/;\n    const regexIIIFItem = /true|yes/i;\n\n    const isImage$ = this.bitstream.format.pipe(\n      getFirstSucceededRemoteData(),\n      map((format: RemoteData<BitstreamFormat>) => format.payload.mimetype.includes('image/')));\n\n    const isIIIFBundle$ = this.bitstream.bundle.pipe(\n      getFirstSucceededRemoteData(),\n      map((bundle: RemoteData<Bundle>) =>\n        this.dsoNameService.getName(bundle.payload).match(regexExcludeBundles) == null));\n\n    const isEnabled$ = this.bitstream.bundle.pipe(\n      getFirstSucceededRemoteData(),\n      map((bundle: RemoteData<Bundle>) => bundle.payload.item.pipe(\n        getFirstSucceededRemoteData(),\n        map((item: RemoteData<Item>) =>\n          (item.payload.firstMetadataValue('dspace.iiif.enabled') &&\n            item.payload.firstMetadataValue('dspace.iiif.enabled').match(regexIIIFItem) !== null),\n        ))));\n\n    const iiifSub = combineLatest(\n      isImage$,\n      isIIIFBundle$,\n      isEnabled$,\n    ).subscribe(([isImage, isIIIFBundle, isEnabled]) => {\n      if (isImage && isIIIFBundle && isEnabled) {\n        this.isIIIF = true;\n        this.inputModels.push(this.iiifLabelModel);\n        this.formModel.push(this.iiifLabelContainer);\n        this.inputModels.push(this.iiifTocModel);\n        this.formModel.push(this.iiifTocContainer);\n        this.inputModels.push(this.iiifWidthModel);\n        this.formModel.push(this.iiifWidthContainer);\n        this.inputModels.push(this.iiifHeightModel);\n        this.formModel.push(this.iiifHeightContainer);\n      }\n      this.setForm();\n      this.changeDetectorRef.detectChanges();\n    });\n\n    this.subs.push(iiifSub);\n\n  }\n\n  /**\n   * Unsubscribe from open subscriptions\n   */\n  ngOnDestroy(): void {\n    this.subs\n      .filter((subscription) => hasValue(subscription))\n      .forEach((subscription) => subscription.unsubscribe());\n  }\n\n  findAllFormatsServiceFactory() {\n    return () => this.bitstreamFormatService as any as FindAllDataImpl<BitstreamFormat>;\n  }\n}\n","<ng-container *ngVar=\"(bitstreamRD$ | async) as bitstreamRD\">\n  <div class=\"container\">\n    <div class=\"row\" *ngIf=\"bitstreamRD?.hasSucceeded\">\n      <div class=\"col-md-2\">\n        <ds-thumbnail [thumbnail]=\"bitstreamRD?.payload\"></ds-thumbnail>\n      </div>\n      <div class=\"col-md-10\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <h1 class=\"h2\">{{dsoNameService.getName(bitstreamRD?.payload)}} <span class=\"text-muted\">({{bitstreamRD?.payload?.sizeBytes | dsFileSize}})</span></h1>\n            </div>\n          </div>\n        </div>\n        <ds-form *ngIf=\"formGroup\" [formId]=\"'edit-bitstream-form-id'\"\n                  [formGroup]=\"formGroup\"\n                  [formModel]=\"formModel\"\n                  [formLayout]=\"formLayout\"\n                  [submitLabel]=\"'form.save'\"\n                  (submitForm)=\"onSubmit()\"\n                  (cancel)=\"onCancel()\"\n                  (dfChange)=\"onChange($event)\">\n          <div additional class=\"container py-3\">\n            <a [routerLink]=\"['/bitstreams', bitstreamRD?.payload?.id, 'authorizations']\">{{'bitstream.edit.authorizations.link' | translate}}</a>\n          </div>\n        </ds-form>\n      </div>\n    </div>\n    <ds-error *ngIf=\"bitstreamRD?.hasFailed\" message=\"{{'error.bitstream' | translate}}\"></ds-error>\n    <ds-loading *ngIf=\"!bitstreamRD || bitstreamRD?.isLoading\"\n                message=\"{{'loading.bitstream' | translate}}\"></ds-loading>\n  </div>\n</ng-container>\n","import { Component } from '@angular/core';\n\nimport { ThemedComponent } from '../../shared/theme-support/themed.component';\nimport { EditBitstreamPageComponent } from './edit-bitstream-page.component';\n\n@Component({\n  selector: 'ds-edit-bitstream-page',\n  styleUrls: [],\n  templateUrl: '../../shared/theme-support/themed.component.html',\n  standalone: true,\n  imports: [EditBitstreamPageComponent],\n})\nexport class ThemedEditBitstreamPageComponent extends ThemedComponent<EditBitstreamPageComponent> {\n  protected getComponentName(): string {\n    return 'EditBitstreamPageComponent';\n  }\n\n  protected importThemedComponent(themeName: string): Promise<any> {\n    return import(`../../../themes/${themeName}/app/bitstream-page/edit-bitstream-page/edit-bitstream-page.component`);\n  }\n\n  protected importUnthemedComponent(): Promise<any> {\n    return import('./edit-bitstream-page.component');\n  }\n}\n","<ng-template #vcr>\n</ng-template>\n<div #content>\n  <ng-content></ng-content>\n</div>\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivateFn,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { PAGE_NOT_FOUND_PATH } from '../app-routing-paths';\nimport { BitstreamDataService } from '../core/data/bitstream-data.service';\nimport { RemoteData } from '../core/data/remote-data';\nimport { HardRedirectService } from '../core/services/hard-redirect.service';\nimport { Bitstream } from '../core/shared/bitstream.model';\nimport { getFirstCompletedRemoteData } from '../core/shared/operators';\nimport { hasNoValue } from '../shared/empty.util';\n\n/**\n * Redirects to a bitstream based on the handle of the item, and the sequence id or the filename of the\n * bitstream. In production mode the status code will also be set the status code to 301 marking it as a permanent URL\n * redirect for bots to the regular bitstream download Page.\n *\n * @returns Either a {@link UrlTree} to the 404 page when the url isn't a valid format or false in order to make the\n * user wait until the {@link HardRedirectService#redirect} was performed\n */\nexport const legacyBitstreamURLRedirectGuard: CanActivateFn = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  bitstreamDataService: BitstreamDataService = inject(BitstreamDataService),\n  serverHardRedirectService: HardRedirectService = inject(HardRedirectService),\n  router: Router = inject(Router),\n): Observable<UrlTree | false> => {\n  const prefix = route.params.prefix;\n  const suffix = route.params.suffix;\n  const filename = route.params.filename;\n  let sequenceId = route.params.sequence_id;\n  if (hasNoValue(sequenceId)) {\n    sequenceId = route.queryParams.sequenceId;\n  }\n  return bitstreamDataService.findByItemHandle(\n    `${prefix}/${suffix}`,\n    sequenceId,\n    filename,\n  ).pipe(\n    getFirstCompletedRemoteData(),\n    map((rd: RemoteData<Bitstream>) => {\n      if (rd.hasSucceeded && !rd.hasNoContent) {\n        serverHardRedirectService.redirect(new URL(`/bitstreams/${rd.payload.uuid}/download`, serverHardRedirectService.getCurrentOrigin()).href, 301);\n        return false;\n      } else {\n        return router.createUrlTree([PAGE_NOT_FOUND_PATH]);\n      }\n    }),\n  );\n};\n","/**\n * Class representing a single breadcrumb\n */\nexport class Breadcrumb {\n  constructor(\n    /**\n     * The display value of the breadcrumb\n     */\n    public text: string,\n    /**\n     * The optional url of the breadcrumb\n     */\n    public url?: string) {\n  }\n}\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { BITSTREAM_PAGE_LINKS_TO_FOLLOW } from '../../bitstream-page/bitstream-page.resolver';\nimport { BreadcrumbConfig } from '../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { FollowLinkConfig } from '../../shared/utils/follow-link-config.model';\nimport { BitstreamDataService } from '../data/bitstream-data.service';\nimport { Bitstream } from '../shared/bitstream.model';\nimport { DSpaceObject } from '../shared/dspace-object.model';\nimport { BitstreamBreadcrumbsService } from './bitstream-breadcrumbs.service';\nimport { DSOBreadcrumbResolver } from './dso-breadcrumb.resolver';\n\n/**\n * The resolve function that resolves the BreadcrumbConfig object for an Item\n */\nexport const bitstreamBreadcrumbResolver: ResolveFn<BreadcrumbConfig<Bitstream>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  breadcrumbService: BitstreamBreadcrumbsService = inject(BitstreamBreadcrumbsService),\n  dataService: BitstreamDataService = inject(BitstreamDataService),\n): Observable<BreadcrumbConfig<Bitstream>> => {\n  const linksToFollow: FollowLinkConfig<DSpaceObject>[] = BITSTREAM_PAGE_LINKS_TO_FOLLOW as FollowLinkConfig<DSpaceObject>[];\n  return DSOBreadcrumbResolver(\n    route,\n    state,\n    breadcrumbService,\n    dataService,\n    ...linksToFollow,\n  ) as Observable<BreadcrumbConfig<Bitstream>>;\n};\n\n","import { Injectable } from '@angular/core';\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs';\nimport {\n  map,\n  switchMap,\n} from 'rxjs/operators';\n\nimport { getDSORoute } from '../../app-routing-paths';\nimport { BITSTREAM_PAGE_LINKS_TO_FOLLOW } from '../../bitstream-page/bitstream-page.resolver';\nimport { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport {\n  hasValue,\n  isNotEmpty,\n} from '../../shared/empty.util';\nimport { LinkService } from '../cache/builders/link.service';\nimport { BitstreamDataService } from '../data/bitstream-data.service';\nimport { RemoteData } from '../data/remote-data';\nimport { Bitstream } from '../shared/bitstream.model';\nimport { Bundle } from '../shared/bundle.model';\nimport { ChildHALResource } from '../shared/child-hal-resource.model';\nimport { DSpaceObject } from '../shared/dspace-object.model';\nimport { Item } from '../shared/item.model';\nimport {\n  getFirstCompletedRemoteData,\n  getRemoteDataPayload,\n} from '../shared/operators';\nimport { DSOBreadcrumbsService } from './dso-breadcrumbs.service';\nimport { DSONameService } from './dso-name.service';\n\n/**\n * Service to calculate DSpaceObject breadcrumbs for a single part of the route\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class BitstreamBreadcrumbsService extends DSOBreadcrumbsService {\n  constructor(\n    protected bitstreamService: BitstreamDataService,\n    protected linkService: LinkService,\n    protected dsoNameService: DSONameService,\n  ) {\n    super(linkService, dsoNameService);\n  }\n\n  /**\n   * Method to recursively calculate the breadcrumbs\n   * This method returns the name and url of the key and all its parent DSOs recursively, top down\n   * @param key The key (a DSpaceObject) used to resolve the breadcrumb\n   * @param url The url to use as a link for this breadcrumb\n   */\n  getBreadcrumbs(key: ChildHALResource & DSpaceObject, url: string): Observable<Breadcrumb[]> {\n    const label = this.dsoNameService.getName(key);\n    const crumb = new Breadcrumb(label, url);\n\n    return this.getOwningItem(key.uuid).pipe(\n      switchMap((parentRD: RemoteData<ChildHALResource & DSpaceObject>) => {\n        if (isNotEmpty(parentRD) && hasValue(parentRD.payload)) {\n          const parent = parentRD.payload;\n          return super.getBreadcrumbs(parent, getDSORoute(parent));\n        }\n        return observableOf([]);\n\n      }),\n      map((breadcrumbs: Breadcrumb[]) => [...breadcrumbs, crumb]),\n    );\n  }\n\n  getOwningItem(uuid: string): Observable<RemoteData<Item>> {\n    return this.bitstreamService.findById(uuid, true, true, ...BITSTREAM_PAGE_LINKS_TO_FOLLOW).pipe(\n      getFirstCompletedRemoteData(),\n      getRemoteDataPayload(),\n      switchMap((bitstream: Bitstream) => {\n        if (hasValue(bitstream)) {\n          return bitstream.bundle.pipe(\n            getFirstCompletedRemoteData(),\n            getRemoteDataPayload(),\n            switchMap((bundle: Bundle) => {\n              if (hasValue(bundle)) {\n                return bundle.item.pipe(\n                  getFirstCompletedRemoteData(),\n                );\n              } else {\n                return observableOf(undefined);\n              }\n            }),\n          );\n        } else {\n          return observableOf(undefined);\n        }\n      }),\n    );\n  }\n}\n","import {\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { getDSORoute } from '../../app-routing-paths';\nimport { BreadcrumbConfig } from '../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { hasValue } from '../../shared/empty.util';\nimport { FollowLinkConfig } from '../../shared/utils/follow-link-config.model';\nimport { IdentifiableDataService } from '../data/base/identifiable-data.service';\nimport { DSpaceObject } from '../shared/dspace-object.model';\nimport {\n  getFirstCompletedRemoteData,\n  getRemoteDataPayload,\n} from '../shared/operators';\nimport { DSOBreadcrumbsService } from './dso-breadcrumbs.service';\n\n/**\n * Method for resolving a breadcrumb config object\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {DSOBreadcrumbsService} breadcrumbService\n * @param {IdentifiableDataService} dataService\n * @param linksToFollow\n * @returns BreadcrumbConfig object\n */\nexport const DSOBreadcrumbResolver: (route: ActivatedRouteSnapshot, state: RouterStateSnapshot, breadcrumbService: DSOBreadcrumbsService, dataService: IdentifiableDataService<DSpaceObject>, ...linksToFollow: FollowLinkConfig<DSpaceObject>[]) => Observable<BreadcrumbConfig<DSpaceObject>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  breadcrumbService: DSOBreadcrumbsService,\n  dataService: IdentifiableDataService<DSpaceObject>,\n  ...linksToFollow: FollowLinkConfig<DSpaceObject>[]\n): Observable<BreadcrumbConfig<DSpaceObject>> => {\n  return DSOBreadcrumbResolverByUuid(route, state, route.params.id, breadcrumbService, dataService, ...linksToFollow);\n};\n\n/**\n * Method for resolving a breadcrumb config object with the given UUID\n *\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {String} uuid The uuid of the DSO object\n * @param {DSOBreadcrumbsService} breadcrumbService\n * @param {IdentifiableDataService} dataService\n * @param linksToFollow\n * @returns BreadcrumbConfig object\n */\nexport const DSOBreadcrumbResolverByUuid: (route: ActivatedRouteSnapshot, state: RouterStateSnapshot, uuid: string, breadcrumbService: DSOBreadcrumbsService, dataService: IdentifiableDataService<DSpaceObject>, ...linksToFollow: FollowLinkConfig<DSpaceObject>[]) => Observable<BreadcrumbConfig<DSpaceObject>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  uuid: string,\n  breadcrumbService: DSOBreadcrumbsService,\n  dataService: IdentifiableDataService<DSpaceObject>,\n  ...linksToFollow: FollowLinkConfig<DSpaceObject>[]\n): Observable<BreadcrumbConfig<DSpaceObject>> => {\n  return dataService.findById(uuid, true, false, ...linksToFollow).pipe(\n    getFirstCompletedRemoteData(),\n    getRemoteDataPayload(),\n    map((object: DSpaceObject) => {\n      if (hasValue(object)) {\n        return { provider: breadcrumbService, key: object, url: getDSORoute(object) };\n      } else {\n        return undefined;\n      }\n    }),\n  );\n};\n","import { Injectable } from '@angular/core';\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs';\nimport {\n  find,\n  map,\n  switchMap,\n} from 'rxjs/operators';\n\nimport { getDSORoute } from '../../app-routing-paths';\nimport { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport { hasValue } from '../../shared/empty.util';\nimport { followLink } from '../../shared/utils/follow-link-config.model';\nimport { LinkService } from '../cache/builders/link.service';\nimport { RemoteData } from '../data/remote-data';\nimport { ChildHALResource } from '../shared/child-hal-resource.model';\nimport { DSpaceObject } from '../shared/dspace-object.model';\nimport { BreadcrumbsProviderService } from './breadcrumbsProviderService';\nimport { DSONameService } from './dso-name.service';\n\n/**\n * Service to calculate DSpaceObject breadcrumbs for a single part of the route\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DSOBreadcrumbsService implements BreadcrumbsProviderService<ChildHALResource & DSpaceObject> {\n  constructor(\n    protected linkService: LinkService,\n    protected dsoNameService: DSONameService,\n  ) {\n\n  }\n\n  /**\n   * Method to recursively calculate the breadcrumbs\n   * This method returns the name and url of the key and all its parent DSOs recursively, top down\n   * @param key The key (a DSpaceObject) used to resolve the breadcrumb\n   * @param url The url to use as a link for this breadcrumb\n   */\n  getBreadcrumbs(key: ChildHALResource & DSpaceObject, url: string): Observable<Breadcrumb[]> {\n    const label = this.dsoNameService.getName(key);\n    const crumb = new Breadcrumb(label, url);\n    const propertyName = key.getParentLinkKey();\n    return this.linkService.resolveLink(key, followLink(propertyName))[propertyName].pipe(\n      find((parentRD: RemoteData<ChildHALResource & DSpaceObject>) => parentRD.hasSucceeded || parentRD.statusCode === 204),\n      switchMap((parentRD: RemoteData<ChildHALResource & DSpaceObject>) => {\n        if (hasValue(parentRD) && hasValue(parentRD.payload)) {\n          const parent = parentRD.payload;\n          return this.getBreadcrumbs(parent, getDSORoute(parent));\n        }\n        return observableOf([]);\n\n      }),\n      map((breadcrumbs: Breadcrumb[]) => [...breadcrumbs, crumb]),\n    );\n  }\n}\n","import { inject } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\n\nimport { BreadcrumbConfig } from '../../breadcrumbs/breadcrumb/breadcrumb-config.model';\nimport { hasNoValue } from '../../shared/empty.util';\nimport { currentPathFromSnapshot } from '../../shared/utils/route.utils';\nimport { I18nBreadcrumbsService } from './i18n-breadcrumbs.service';\n\n/**\n * Method for resolving an I18n breadcrumb configuration object\n * @param {ActivatedRouteSnapshot} route The current ActivatedRouteSnapshot\n * @param {RouterStateSnapshot} state The current RouterStateSnapshot\n * @param {I18nBreadcrumbsService} breadcrumbService\n * @returns BreadcrumbConfig object\n */\nexport const i18nBreadcrumbResolver: ResolveFn<BreadcrumbConfig<string>> = (\n  route: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot,\n  breadcrumbService: I18nBreadcrumbsService = inject(I18nBreadcrumbsService),\n): BreadcrumbConfig<string> => {\n  const key = route.data.breadcrumbKey;\n  if (hasNoValue(key)) {\n    throw new Error('You provided an i18nBreadcrumbResolver for url \\\"' + route.url + '\\\" but no breadcrumbKey in the route\\'s data');\n  }\n  const fullPath = currentPathFromSnapshot(route);\n  return { provider: breadcrumbService, key: key, url: fullPath };\n};\n","import { Injectable } from '@angular/core';\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs';\n\nimport { Breadcrumb } from '../../breadcrumbs/breadcrumb/breadcrumb.model';\nimport { BreadcrumbsProviderService } from './breadcrumbsProviderService';\n\n/**\n * The postfix for i18n breadcrumbs\n */\nexport const BREADCRUMB_MESSAGE_POSTFIX = '.breadcrumbs';\n\n/**\n * Service to calculate i18n breadcrumbs for a single part of the route\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class I18nBreadcrumbsService implements BreadcrumbsProviderService<string> {\n\n  /**\n   * Method to calculate the breadcrumbs\n   * @param key The key used to resolve the breadcrumb\n   * @param url The url to use as a link for this breadcrumb\n   */\n  getBreadcrumbs(key: string, url: string): Observable<Breadcrumb[]> {\n    return observableOf([new Breadcrumb(key + BREADCRUMB_MESSAGE_POSTFIX, url)]);\n  }\n}\n","import {\n  ActivatedRouteSnapshot,\n  CanActivateFn,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DSpaceObject } from '../../../shared/dspace-object.model';\nimport { RemoteData } from '../../remote-data';\nimport { FeatureID } from '../feature-id';\nimport { dsoPageSomeFeatureGuard } from './dso-page-some-feature.guard';\nimport { SingleFeatureGuardParamFn } from './single-feature-authorization.guard';\n\n/**\n * Abstract Guard for preventing unauthorized access to {@link DSpaceObject} pages that require rights for a specific feature\n * This guard utilizes a resolver to retrieve the relevant object to check authorizations for\n */\nexport const dsoPageSingleFeatureGuard = <T extends DSpaceObject> (\n  getResolveFn: () => ResolveFn<RemoteData<T>>,\n  getFeatureID: SingleFeatureGuardParamFn,\n): CanActivateFn => dsoPageSomeFeatureGuard(\n    getResolveFn,\n    (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<FeatureID[]> => getFeatureID(route, state).pipe(\n      map((featureID: FeatureID) => [featureID]),\n    ));\n","import {\n  ActivatedRouteSnapshot,\n  CanActivateFn,\n  ResolveFn,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n  hasNoValue,\n  hasValue,\n} from '../../../../shared/empty.util';\nimport { DSpaceObject } from '../../../shared/dspace-object.model';\nimport { getAllSucceededRemoteDataPayload } from '../../../shared/operators';\nimport { RemoteData } from '../../remote-data';\nimport { FeatureID } from '../feature-id';\nimport {\n  someFeatureAuthorizationGuard,\n  SomeFeatureGuardParamFn,\n  StringGuardParamFn,\n} from './some-feature-authorization.guard';\n\nexport declare type DSOGetObjectURlFn = <T extends DSpaceObject>(resolve: ResolveFn<RemoteData<T>>) => StringGuardParamFn;\n\n\n/**\n * Method to resolve resolve (parent) route that contains the UUID of the DSO\n * @param route The current route\n */\nexport const getRouteWithDSOId = (route: ActivatedRouteSnapshot): ActivatedRouteSnapshot => {\n  let routeWithDSOId = route;\n  while (hasNoValue(routeWithDSOId.params.id) && hasValue(routeWithDSOId.parent)) {\n    routeWithDSOId = routeWithDSOId.parent;\n  }\n  return routeWithDSOId;\n};\n\n\n\nexport const defaultDSOGetObjectUrl: DSOGetObjectURlFn = <T extends DSpaceObject>(resolve: ResolveFn<RemoteData<T>>): StringGuardParamFn => {\n  return (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<string> => {\n    const routeWithObjectID = getRouteWithDSOId(route);\n    return (resolve(routeWithObjectID, state) as Observable<RemoteData<T>>).pipe(\n      getAllSucceededRemoteDataPayload(),\n      map((dso) => dso.self),\n    );\n  };\n};\n\n/**\n * Guard for preventing unauthorized access to {@link DSpaceObject} pages that require rights for any specific feature in a list\n * This guard utilizes a resolver to retrieve the relevant object to check authorizations for\n */\nexport const dsoPageSomeFeatureGuard = <T extends DSpaceObject>(\n  getResolveFn: () => ResolveFn<RemoteData<T>>,\n  getFeatureIDs: SomeFeatureGuardParamFn,\n  getObjectUrl: DSOGetObjectURlFn = defaultDSOGetObjectUrl,\n  getEPersonUuid?: StringGuardParamFn,\n): CanActivateFn => someFeatureAuthorizationGuard((route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<FeatureID[]> => getFeatureIDs(route, state), getObjectUrl(getResolveFn()), getEPersonUuid);\n","import { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  Observable,\n  switchMap,\n} from 'rxjs';\n\nimport { NotificationsService } from '../../shared/notifications/notifications.service';\nimport { RemoteDataBuildService } from '../cache/builders/remote-data-build.service';\nimport { ObjectCacheService } from '../cache/object-cache.service';\nimport { HttpOptions } from '../dspace-rest/dspace-rest.service';\nimport { Bitstream } from '../shared/bitstream.model';\nimport { Bundle } from '../shared/bundle.model';\nimport { GenericConstructor } from '../shared/generic-constructor';\nimport { HALEndpointService } from '../shared/hal-endpoint.service';\nimport { NoContent } from '../shared/NoContent.model';\nimport { getAllCompletedRemoteData } from '../shared/operators';\nimport { BundleDataService } from './bundle-data.service';\nimport { RemoteData } from './remote-data';\nimport {\n  DeleteRequest,\n  PostRequest,\n  PutRequest,\n} from './request.models';\nimport { RequestService } from './request.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PrimaryBitstreamService {\n\n  constructor(\n    protected requestService: RequestService,\n    protected rdbService: RemoteDataBuildService,\n    protected objectCache: ObjectCacheService,\n    protected halService: HALEndpointService,\n    protected notificationsService: NotificationsService,\n    protected bundleDataService: BundleDataService,\n  ) {\n  }\n\n  /**\n   * Returns the type of HttpOptions object needed from primary bitstream requests.\n   * i.e. with a Content-Type header set to `text/uri-list`\n   * @protected\n   */\n  protected getHttpOptions(): HttpOptions {\n    const options: HttpOptions = Object.create({});\n    let headers = new HttpHeaders();\n    headers = headers.append('Content-Type', 'text/uri-list');\n    options.headers = headers;\n    return options;\n  }\n\n  /**\n   * Send a request of the given type to the endpointURL with an optional primaryBitstreamSelfLink\n   * as payload, and return the resulting Observable<RemoteData>\n   *\n   * @param requestType               The type of request: PostRequest, PutRequest, or DeleteRequest\n   * @param endpointURL               The endpoint URL\n   * @param primaryBitstreamSelfLink\n   * @protected\n   */\n  protected createAndSendRequest(\n    requestType: GenericConstructor<PostRequest | PutRequest | DeleteRequest>,\n    endpointURL: string,\n    primaryBitstreamSelfLink?: string,\n  ): Observable<RemoteData<Bundle | NoContent>> {\n    const requestId = this.requestService.generateRequestId();\n    const request = new requestType(\n      requestId,\n      endpointURL,\n      primaryBitstreamSelfLink,\n      this.getHttpOptions(),\n    );\n\n    this.requestService.send(request);\n\n    return this.rdbService.buildFromRequestUUID(requestId);\n  }\n\n  /**\n   * Create a new primaryBitstream\n   *\n   * @param primaryBitstream  The object to create\n   * @param bundle            The bundle to create it on\n   */\n  create(primaryBitstream: Bitstream, bundle: Bundle): Observable<RemoteData<Bundle>> {\n    return this.createAndSendRequest(\n      PostRequest,\n      bundle._links.primaryBitstream.href,\n      primaryBitstream.self,\n    ) as Observable<RemoteData<Bundle>>;\n  }\n\n  /**\n   * Update an existing primaryBitstream\n   *\n   * @param primaryBitstream  The object to update\n   * @param bundle            The bundle to update it on\n   */\n  put(primaryBitstream: Bitstream, bundle: Bundle): Observable<RemoteData<Bundle>> {\n    return this.createAndSendRequest(\n      PutRequest,\n      bundle._links.primaryBitstream.href,\n      primaryBitstream.self,\n    ) as Observable<RemoteData<Bundle>>;\n  }\n\n  /**\n   * Delete an existing primaryBitstream\n   *\n   * @param bundle The bundle to delete it from\n   */\n  delete(bundle: Bundle): Observable<RemoteData<Bundle>> {\n    return this.createAndSendRequest(\n      DeleteRequest,\n      bundle._links.primaryBitstream.href,\n    ).pipe(\n      getAllCompletedRemoteData(),\n      switchMap((rd: RemoteData<NoContent>) => {\n        return this.bundleDataService.findByHref(bundle.self, rd.hasFailed);\n      }),\n    );\n  }\n\n}\n","import {\n  Inject,\n  Injectable,\n} from '@angular/core';\nimport {\n  Observable,\n  of as observableOf,\n} from 'rxjs';\nimport {\n  catchError,\n  map,\n} from 'rxjs/operators';\n\nimport {\n  APP_CONFIG,\n  AppConfig,\n} from '../../../config/app-config.interface';\nimport { DspaceRestService } from '../dspace-rest/dspace-rest.service';\nimport { RawRestResponse } from '../dspace-rest/raw-rest-response.model';\nimport { SignpostingLink } from './signposting-links.model';\n\n/**\n * Service responsible for handling requests related to the Signposting endpoint\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class SignpostingDataService {\n\n  constructor(@Inject(APP_CONFIG) protected appConfig: AppConfig, private restService: DspaceRestService) {\n  }\n\n  /**\n   * Retrieve the list of signposting links related to the given resource's id\n   *\n   * @param uuid\n   */\n  getLinks(uuid: string): Observable<SignpostingLink[]> {\n    const baseUrl = `${this.appConfig.rest.baseUrl}`;\n\n    return this.restService.get(`${baseUrl}/signposting/links/${uuid}`).pipe(\n      catchError((err: unknown) => {\n        return observableOf([]);\n      }),\n      map((res: RawRestResponse) => res.statusCode === 200 ? res.payload as SignpostingLink[] : []),\n    );\n  }\n\n}\n","var map = {\n\t\"./custom/app/bitstream-page/edit-bitstream-page/edit-bitstream-page.component\": [\n\t\t84957,\n\t\t\"src_themes_custom_app_bitstream-page_edit-bitstream-page_edit-bitstream-page_component_ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 90789;\nmodule.exports = webpackAsyncContext;"],"names":["AsyncPipe","ActivatedRoute","RouterLink","TranslateModule","first","map","ResourcePoliciesComponent","BitstreamAuthorizationsComponent","constructor","route","ngOnInit","dsoRD$","data","pipe","bitstream","i0","ɵɵdirectiveInject","i1","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","BitstreamAuthorizationsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","tmp_1_0","ɵɵpipeBind1","payload","id","ɵɵpureFunction1","_c0","tmp_2_0","ɵɵtextInterpolate1","i2","TranslatePipe","encapsulation","isPlatformServer","Location","PLATFORM_ID","Router","combineLatest","observableCombineLatest","of","observableOf","filter","switchMap","take","getForbiddenRoute","AuthService","DSONameService","AuthorizationDataService","FeatureID","SignpostingDataService","HardRedirectService","ServerResponseService","redirectOn4xx","FileService","getRemoteDataPayload","hasValue","isNotEmpty","BitstreamDownloadPageComponent","router","authorizationService","auth","fileService","hardRedirectService","location","dsoNameService","signpostingDataService","responseService","platformId","initPageLinks","back","bitstreamRD$","bitstream$","isAuthorized$","isAuthorized","CanDownload","self","undefined","isLoggedIn$","isAuthenticated","isLoggedIn","retrieveFileDownloadLink","_links","content","href","fileLink","subscribe","redirect","navigateByUrl","skipLocationChange","setRedirectUrl","url","params","getLinks","signpostingLinks","links","forEach","link","rel","type","setHeader","i3","i4","i5","i6","i7","i8","i9","BitstreamDownloadPageComponent_Template","ɵɵlistener","BitstreamDownloadPageComponent_Template_button_click_6_listener","ɵɵtextInterpolate","ɵɵpipeBind2","getName","i10","dsoPageSingleFeatureGuard","bitstreamPageResolver","bitstreamPageAuthorizationsGuard","CanManagePolicies","authenticatedGuard","bitstreamBreadcrumbResolver","i18nBreadcrumbResolver","ResourcePolicyCreateComponent","ResourcePolicyEditComponent","resourcePolicyResolver","resourcePolicyTargetResolver","ThemedEditBitstreamPageComponent","legacyBitstreamURLRedirectGuard","EDIT_BITSTREAM_PATH","EDIT_BITSTREAM_AUTHORIZATIONS_PATH","ROUTES","path","component","canActivate","resolve","breadcrumb","children","resourcePolicyTarget","title","showBreadcrumbs","resourcePolicy","breadcrumbKey","inject","BitstreamDataService","getFirstCompletedRemoteData","followLink","BITSTREAM_PAGE_LINKS_TO_FOLLOW","state","bitstreamService","findById","NgIf","ChangeDetectorRef","DynamicFormGroupModel","DynamicFormService","DynamicInputModel","TranslateService","cloneDeep","tap","BitstreamFormatDataService","PrimaryBitstreamService","BitstreamFormat","BITSTREAM_FORMAT","BitstreamFormatSupportLevel","Metadata","getFirstSucceededRemoteData","getFirstSucceededRemoteDataPayload","getEntityEditRoute","hasValueOperator","isEmpty","ErrorComponent","DynamicCustomSwitchModel","DsDynamicInputModel","DsDynamicTextAreaModel","DynamicScrollableDropdownModel","FormComponent","ThemedLoadingComponent","NotificationsService","FileSizePipe","VarDirective","ThemedThumbnailComponent","EditBitstreamPageComponent_ng_container_0_div_2_ds_form_12_Template_ds_form_submitForm_0_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","onSubmit","EditBitstreamPageComponent_ng_container_0_div_2_ds_form_12_Template_ds_form_cancel_0_listener","onCancel","EditBitstreamPageComponent_ng_container_0_div_2_ds_form_12_Template_ds_form_dfChange_0_listener","$event","onChange","formGroup","formModel","formLayout","bitstreamRD_r3","ɵɵtemplate","EditBitstreamPageComponent_ng_container_0_div_2_ds_form_12_Template","sizeBytes","ɵɵpropertyInterpolate","ɵɵelementContainerStart","EditBitstreamPageComponent_ng_container_0_div_2_Template","EditBitstreamPageComponent_ng_container_0_ds_error_3_Template","EditBitstreamPageComponent_ng_container_0_ds_loading_4_Template","hasSucceeded","hasFailed","isLoading","EditBitstreamPageComponent","changeDetectorRef","formService","translate","notificationsService","bitstreamFormatService","primaryBitstreamService","KEY_PREFIX","LABEL_KEY_SUFFIX","HINT_KEY_SUFFIX","NOTIFICATIONS_PREFIX","IMAGE_WIDTH_METADATA","IMAGE_HEIGHT_METADATA","IIIF_TOC_METADATA","IIIF_LABEL_METADATA","findAllOptions","elementsPerPage","currentPage","fileNameModel","hasSelectableMetadata","metadataFields","repeatable","submissionId","name","required","validators","errorMessages","primaryBitstreamModel","descriptionModel","rows","selectedFormatModel","displayKey","resourceType","formatFunction","format","supportLevel","Unknown","instant","shortDescription","newFormatModel","iiifLabelModel","grid","host","iiifLabelContainer","group","iiifTocModel","iiifTocContainer","iiifWidthModel","iiifWidthContainer","iiifHeightModel","iiifHeightContainer","inputModels","newFormatBaseLayout","fileName","primaryBitstream","container","element","description","embargo","selectedFormat","newFormat","fileNamePrimaryContainer","descriptionContainer","formatContainer","isIIIF","subs","itemId","snapshot","queryParams","entityType","bundle$","bundle","primaryBitstream$","findByHref","item$","item","format$","push","primaryBitstreamUUID","uuid","setIiifStatus","originalFormat","onLangChange","updateFieldTranslations","setForm","createFormGroup","updateForm","patchValue","firstMetadataValue","firstMetadata","value","iiifLabel","iiifToc","iiifWidth","iiifHeight","updateNewFormatLayout","isUnknownFormat","fieldModel","updateFieldTranslation","label","hint","event","model","updatedValues","getRawValue","updatedBitstream","formToBitstream","isNewFormat","isPrimary","wasPrimary","errorWhileSaving","bundleRd$","delete","put","create","completedBundleRd$","bundleRd","error","errorMessage","updateFormat","formatResponse","update","commitUpdates","success","navigateToItemEditBitstreams","rawForm","newMetadata","metadata","setFirstValue","navigate","regexExcludeBundles","regexIIIFItem","isImage$","mimetype","includes","isIIIFBundle$","match","isEnabled$","iiifSub","isImage","isIIIFBundle","isEnabled","detectChanges","ngOnDestroy","subscription","unsubscribe","findAllFormatsServiceFactory","EditBitstreamPageComponent_Template","EditBitstreamPageComponent_ng_container_0_Template","styles","changeDetection","ThemedComponent","getComponentName","importThemedComponent","themeName","importUnthemedComponent","t","ɵɵInheritDefinitionFeature","ngContentSelectors","ThemedEditBitstreamPageComponent_Template","ThemedEditBitstreamPageComponent_ng_template_0_Template","ɵɵtemplateRefExtractor","ɵɵprojection","PAGE_NOT_FOUND_PATH","hasNoValue","bitstreamDataService","serverHardRedirectService","prefix","suffix","filename","sequenceId","sequence_id","findByItemHandle","rd","hasNoContent","URL","getCurrentOrigin","createUrlTree","Breadcrumb","text","BitstreamBreadcrumbsService","DSOBreadcrumbResolver","breadcrumbService","dataService","linksToFollow","getDSORoute","LinkService","DSOBreadcrumbsService","linkService","getBreadcrumbs","key","crumb","getOwningItem","parentRD","parent","breadcrumbs","ɵɵinject","factory","ɵfac","providedIn","DSOBreadcrumbResolverByUuid","object","provider","find","propertyName","getParentLinkKey","resolveLink","statusCode","currentPathFromSnapshot","I18nBreadcrumbsService","Error","fullPath","BREADCRUMB_MESSAGE_POSTFIX","dsoPageSomeFeatureGuard","getResolveFn","getFeatureID","featureID","getAllSucceededRemoteDataPayload","someFeatureAuthorizationGuard","getRouteWithDSOId","routeWithDSOId","defaultDSOGetObjectUrl","routeWithObjectID","dso","getFeatureIDs","getObjectUrl","getEPersonUuid","HttpHeaders","RemoteDataBuildService","ObjectCacheService","HALEndpointService","getAllCompletedRemoteData","BundleDataService","DeleteRequest","PostRequest","PutRequest","RequestService","requestService","rdbService","objectCache","halService","bundleDataService","getHttpOptions","options","Object","headers","append","createAndSendRequest","requestType","endpointURL","primaryBitstreamSelfLink","requestId","generateRequestId","request","send","buildFromRequestUUID","catchError","APP_CONFIG","DspaceRestService","appConfig","restService","baseUrl","rest","get","err","res"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}